{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "OfficeGuy API",
    "version" : "v4-oas3"
  },
  "servers" : [ {
    "url" : "https://www.myofficeguy.com"
  } ],
  "paths" : {
    "/api/accounting/customers/create/" : {
      "post" : {
        "tags" : [ "Accounting (Customers)" ],
        "summary" : "Create customer or find existing customer according to SearchMode",
        "operationId" : "AccountingCustomersCreate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Customers_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "CompanyNumber" : "514000123",
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : null,
                  "Name" : "Danny Dean",
                  "Phone" : "050-1234567",
                  "EmailAddress" : "danny@dean.com",
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "L6QWTYzfRmB2V8stL0194GW2yzhbzVXVkJ7Or21GwINYZIjCee"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Customers_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "CompanyNumber" : "514000123",
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : null,
                  "Name" : "Danny Dean",
                  "Phone" : "050-1234567",
                  "EmailAddress" : "danny@dean.com",
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "L6QWTYzfRmB2V8stL0194GW2yzhbzVXVkJ7Or21GwINYZIjCee"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Customers_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "CompanyNumber" : "514000123",
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : null,
                  "Name" : "Danny Dean",
                  "Phone" : "050-1234567",
                  "EmailAddress" : "danny@dean.com",
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "L6QWTYzfRmB2V8stL0194GW2yzhbzVXVkJ7Or21GwINYZIjCee"
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Customers_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "CompanyNumber" : "514000123",
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : null,
                  "Name" : "Danny Dean",
                  "Phone" : "050-1234567",
                  "EmailAddress" : "danny@dean.com",
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "L6QWTYzfRmB2V8stL0194GW2yzhbzVXVkJ7Or21GwINYZIjCee"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Customers_Create_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Customers_Create_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Customers_Create_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/customers/update/" : {
      "post" : {
        "tags" : [ "Accounting (Customers)" ],
        "summary" : "Create customer or find existing customer according to SearchMode",
        "operationId" : "AccountingCustomersUpdate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Customers_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "CompanyNumber" : "514000123",
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : null,
                  "Name" : "Danny Dean",
                  "Phone" : "050-1234567",
                  "EmailAddress" : "danny@dean.com",
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "Vvru04aOXTqNfvFgIC0T2JzlCmtxSgGUxKzceqI3oTUXQYcRJs"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Customers_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "CompanyNumber" : "514000123",
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : null,
                  "Name" : "Danny Dean",
                  "Phone" : "050-1234567",
                  "EmailAddress" : "danny@dean.com",
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "Vvru04aOXTqNfvFgIC0T2JzlCmtxSgGUxKzceqI3oTUXQYcRJs"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Customers_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "CompanyNumber" : "514000123",
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : null,
                  "Name" : "Danny Dean",
                  "Phone" : "050-1234567",
                  "EmailAddress" : "danny@dean.com",
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "Vvru04aOXTqNfvFgIC0T2JzlCmtxSgGUxKzceqI3oTUXQYcRJs"
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Customers_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "CompanyNumber" : "514000123",
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : null,
                  "Name" : "Danny Dean",
                  "Phone" : "050-1234567",
                  "EmailAddress" : "danny@dean.com",
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "Vvru04aOXTqNfvFgIC0T2JzlCmtxSgGUxKzceqI3oTUXQYcRJs"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Customers_Update_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Customers_Update_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Customers_Update_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/documents/send/" : {
      "post" : {
        "tags" : [ "Accounting (Documents)" ],
        "summary" : "Send document by email",
        "description" : "Documents can be located either using DocumentID (EntityID), or a combination of DocumentType and DocumentNumber.",
        "operationId" : "AccountingDocumentsSend",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Send_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/documents/getpdf/" : {
      "post" : {
        "tags" : [ "Accounting (Documents)" ],
        "summary" : "Get document PDF",
        "description" : "Documents can be located either using DocumentID, or a combination of DocumentType and DocumentNumber.",
        "operationId" : "AccountingDocumentsGetPDF",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_GetPDF_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_GetPDF_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_GetPDF_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_GetPDF_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/accounting/documents/getdetails/" : {
      "post" : {
        "tags" : [ "Accounting (Documents)" ],
        "summary" : "Get document details",
        "description" : "Documents can be located either using DocumentID, or a combination of DocumentType and DocumentNumber.",
        "operationId" : "AccountingDocumentsGetDetails",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_GetDetails_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_GetDetails_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_GetDetails_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_GetDetails_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_GetDetails_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_GetDetails_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_GetDetails_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/documents/create/" : {
      "post" : {
        "tags" : [ "Accounting (Documents)" ],
        "summary" : "Create document",
        "description" : "Creates an invoice, receipt, donation receipt, price quotation or any other accounting document.",
        "operationId" : "AccountingDocumentsCreate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "IsDraft" : null,
                  "Date" : null,
                  "Customer" : {
                    "CompanyNumber" : null,
                    "ExternalIdentifier" : null,
                    "NoVAT" : null,
                    "SearchMode" : 0,
                    "Name" : "Danny Dean",
                    "Phone" : null,
                    "EmailAddress" : "danny@dean.com",
                    "City" : null,
                    "Address" : null,
                    "ZipCode" : null,
                    "ID" : null,
                    "Folder" : null
                  },
                  "SendByEmail" : {
                    "EmailAddress" : "danny@dean.com",
                    "Original" : true,
                    "SendAsPaymentRequest" : false
                  },
                  "Language" : null,
                  "Currency" : null,
                  "Type" : 1,
                  "Description" : null
                },
                "Items" : [ {
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "TotalPrice" : 100,
                  "DocumentCurrency_UnitPrice" : null,
                  "DocumentCurrency_TotalPrice" : null,
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : 0
                  },
                  "Description" : null
                } ],
                "Payments" : [ {
                  "Amount" : 100,
                  "DocumentCurrency_Amount" : null,
                  "Details_General" : null,
                  "Details_Cash" : null,
                  "Details_BankTransfer" : null,
                  "Details_Cheque" : null,
                  "Details_CreditCard" : {
                    "CardBrand" : null,
                    "Last4Digits" : "1234"
                  },
                  "Details_Other" : null,
                  "Details_Digital" : null,
                  "Details_TaxWithholding" : null
                } ],
                "VATIncluded" : true,
                "VATRate" : null,
                "OriginalDocumentID" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "zXCAcCv5hEAdwrDLPKvc2StxfYoRKd9SeZgjInhngY84tBWdK5"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "IsDraft" : null,
                  "Date" : null,
                  "Customer" : {
                    "CompanyNumber" : null,
                    "ExternalIdentifier" : null,
                    "NoVAT" : null,
                    "SearchMode" : 0,
                    "Name" : "Danny Dean",
                    "Phone" : null,
                    "EmailAddress" : "danny@dean.com",
                    "City" : null,
                    "Address" : null,
                    "ZipCode" : null,
                    "ID" : null,
                    "Folder" : null
                  },
                  "SendByEmail" : {
                    "EmailAddress" : "danny@dean.com",
                    "Original" : true,
                    "SendAsPaymentRequest" : false
                  },
                  "Language" : null,
                  "Currency" : null,
                  "Type" : 1,
                  "Description" : null
                },
                "Items" : [ {
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "TotalPrice" : 100,
                  "DocumentCurrency_UnitPrice" : null,
                  "DocumentCurrency_TotalPrice" : null,
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : 0
                  },
                  "Description" : null
                } ],
                "Payments" : [ {
                  "Amount" : 100,
                  "DocumentCurrency_Amount" : null,
                  "Details_General" : null,
                  "Details_Cash" : null,
                  "Details_BankTransfer" : null,
                  "Details_Cheque" : null,
                  "Details_CreditCard" : {
                    "CardBrand" : null,
                    "Last4Digits" : "1234"
                  },
                  "Details_Other" : null,
                  "Details_Digital" : null,
                  "Details_TaxWithholding" : null
                } ],
                "VATIncluded" : true,
                "VATRate" : null,
                "OriginalDocumentID" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "zXCAcCv5hEAdwrDLPKvc2StxfYoRKd9SeZgjInhngY84tBWdK5"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "IsDraft" : null,
                  "Date" : null,
                  "Customer" : {
                    "CompanyNumber" : null,
                    "ExternalIdentifier" : null,
                    "NoVAT" : null,
                    "SearchMode" : 0,
                    "Name" : "Danny Dean",
                    "Phone" : null,
                    "EmailAddress" : "danny@dean.com",
                    "City" : null,
                    "Address" : null,
                    "ZipCode" : null,
                    "ID" : null,
                    "Folder" : null
                  },
                  "SendByEmail" : {
                    "EmailAddress" : "danny@dean.com",
                    "Original" : true,
                    "SendAsPaymentRequest" : false
                  },
                  "Language" : null,
                  "Currency" : null,
                  "Type" : 1,
                  "Description" : null
                },
                "Items" : [ {
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "TotalPrice" : 100,
                  "DocumentCurrency_UnitPrice" : null,
                  "DocumentCurrency_TotalPrice" : null,
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : 0
                  },
                  "Description" : null
                } ],
                "Payments" : [ {
                  "Amount" : 100,
                  "DocumentCurrency_Amount" : null,
                  "Details_General" : null,
                  "Details_Cash" : null,
                  "Details_BankTransfer" : null,
                  "Details_Cheque" : null,
                  "Details_CreditCard" : {
                    "CardBrand" : null,
                    "Last4Digits" : "1234"
                  },
                  "Details_Other" : null,
                  "Details_Digital" : null,
                  "Details_TaxWithholding" : null
                } ],
                "VATIncluded" : true,
                "VATRate" : null,
                "OriginalDocumentID" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "zXCAcCv5hEAdwrDLPKvc2StxfYoRKd9SeZgjInhngY84tBWdK5"
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Details" : {
                  "IsDraft" : null,
                  "Date" : null,
                  "Customer" : {
                    "CompanyNumber" : null,
                    "ExternalIdentifier" : null,
                    "NoVAT" : null,
                    "SearchMode" : 0,
                    "Name" : "Danny Dean",
                    "Phone" : null,
                    "EmailAddress" : "danny@dean.com",
                    "City" : null,
                    "Address" : null,
                    "ZipCode" : null,
                    "ID" : null,
                    "Folder" : null
                  },
                  "SendByEmail" : {
                    "EmailAddress" : "danny@dean.com",
                    "Original" : true,
                    "SendAsPaymentRequest" : false
                  },
                  "Language" : null,
                  "Currency" : null,
                  "Type" : 1,
                  "Description" : null
                },
                "Items" : [ {
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "TotalPrice" : 100,
                  "DocumentCurrency_UnitPrice" : null,
                  "DocumentCurrency_TotalPrice" : null,
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : 0
                  },
                  "Description" : null
                } ],
                "Payments" : [ {
                  "Amount" : 100,
                  "DocumentCurrency_Amount" : null,
                  "Details_General" : null,
                  "Details_Cash" : null,
                  "Details_BankTransfer" : null,
                  "Details_Cheque" : null,
                  "Details_CreditCard" : {
                    "CardBrand" : null,
                    "Last4Digits" : "1234"
                  },
                  "Details_Other" : null,
                  "Details_Digital" : null,
                  "Details_TaxWithholding" : null
                } ],
                "VATIncluded" : true,
                "VATRate" : null,
                "OriginalDocumentID" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "zXCAcCv5hEAdwrDLPKvc2StxfYoRKd9SeZgjInhngY84tBWdK5"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_Create_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_Create_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_Create_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/documents/addexpense/" : {
      "post" : {
        "tags" : [ "Accounting (Documents)" ],
        "summary" : "Add expense",
        "operationId" : "AccountingDocumentsAddExpense",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_AddExpense_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_AddExpense_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_AddExpense_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_AddExpense_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_AddExpense_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_AddExpense_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_AddExpense_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/documents/cancel/" : {
      "post" : {
        "tags" : [ "Accounting (Documents)" ],
        "summary" : "Cancel document (Also known as storno).",
        "description" : "Please note cancelling documents is allowed within the same calendar day of the document creation date.",
        "operationId" : "AccountingDocumentsCancel",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Cancel_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Cancel_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Cancel_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_Cancel_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_Cancel_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_Cancel_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_Cancel_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/documents/movetobooks/" : {
      "post" : {
        "tags" : [ "Accounting (Documents)" ],
        "summary" : "Move document to books (Finalize a draft document).",
        "operationId" : "AccountingDocumentsMoveToBooks",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_MoveToBooks_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_MoveToBooks_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_MoveToBooks_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_Documents_MoveToBooks_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_MoveToBooks_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_MoveToBooks_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_Documents_MoveToBooks_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/general/verifybankaccount/" : {
      "post" : {
        "tags" : [ "Accounting (General)" ],
        "summary" : "Verify bank account details",
        "operationId" : "AccountingGeneralVerifyBankAccount",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_VerifyBankAccount_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_VerifyBankAccount_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_VerifyBankAccount_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_VerifyBankAccount_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_VerifyBankAccount_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_VerifyBankAccount_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_VerifyBankAccount_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/general/getvatrate/" : {
      "post" : {
        "tags" : [ "Accounting (General)" ],
        "summary" : "Get VAT rate by date",
        "operationId" : "AccountingGeneralGetVATRate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_GetVATRate_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_GetVATRate_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_GetVATRate_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_GetVATRate_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_GetVATRate_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_GetVATRate_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_GetVATRate_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/general/getexchangerate/" : {
      "post" : {
        "tags" : [ "Accounting (General)" ],
        "summary" : "Get foreign currency exchange rate",
        "operationId" : "AccountingGeneralGetExchangeRate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_GetExchangeRate_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_GetExchangeRate_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_GetExchangeRate_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_GetExchangeRate_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_GetExchangeRate_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_GetExchangeRate_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_GetExchangeRate_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/general/updatesettings/" : {
      "post" : {
        "tags" : [ "Accounting (General)" ],
        "summary" : "Update accounting application settings",
        "operationId" : "AccountingGeneralUpdateSettings",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_UpdateSettings_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_UpdateSettings_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_UpdateSettings_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_UpdateSettings_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_UpdateSettings_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_UpdateSettings_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_UpdateSettings_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/general/setnextdocumentnumber/" : {
      "post" : {
        "tags" : [ "Accounting (General)" ],
        "summary" : "Sets the next document number for a document type.",
        "operationId" : "AccountingGeneralSetNextDocumentNumber",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_SetNextDocumentNumber_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_SetNextDocumentNumber_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_SetNextDocumentNumber_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_General_SetNextDocumentNumber_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_SetNextDocumentNumber_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_SetNextDocumentNumber_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_General_SetNextDocumentNumber_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounting/incomeitems/create/" : {
      "post" : {
        "tags" : [ "Accounting (IncomeItems)" ],
        "summary" : "Create income item",
        "operationId" : "AccountingIncomeItemsCreate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_IncomeItems_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "IncomeItem" : {
                  "ID" : null,
                  "Name" : "My Item",
                  "Price" : 500,
                  "Currency" : null,
                  "Cost" : 200,
                  "ExternalIdentifier" : null,
                  "SearchMode" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "8IVgqWdEU4OTl34hzMAT2cc8wUJp4U1B7FUrxxj954IdPCm4zB"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_IncomeItems_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "IncomeItem" : {
                  "ID" : null,
                  "Name" : "My Item",
                  "Price" : 500,
                  "Currency" : null,
                  "Cost" : 200,
                  "ExternalIdentifier" : null,
                  "SearchMode" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "8IVgqWdEU4OTl34hzMAT2cc8wUJp4U1B7FUrxxj954IdPCm4zB"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_IncomeItems_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "IncomeItem" : {
                  "ID" : null,
                  "Name" : "My Item",
                  "Price" : 500,
                  "Currency" : null,
                  "Cost" : 200,
                  "ExternalIdentifier" : null,
                  "SearchMode" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "8IVgqWdEU4OTl34hzMAT2cc8wUJp4U1B7FUrxxj954IdPCm4zB"
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Accounting_IncomeItems_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "IncomeItem" : {
                  "ID" : null,
                  "Name" : "My Item",
                  "Price" : 500,
                  "Currency" : null,
                  "Cost" : 200,
                  "ExternalIdentifier" : null,
                  "SearchMode" : null
                },
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "8IVgqWdEU4OTl34hzMAT2cc8wUJp4U1B7FUrxxj954IdPCm4zB"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_IncomeItems_Create_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_IncomeItems_Create_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Accounting_IncomeItems_Create_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/billing/load/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Billing)" ],
        "summary" : "Load billing transactions",
        "operationId" : "CreditGuyBillingLoad",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_Load_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_Load_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_Load_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_Load_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Billing_Load_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Billing_Load_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Billing_Load_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/billing/process/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Billing)" ],
        "summary" : "Process loaded billing transactions.",
        "description" : "Please note, once process has started, it can't be stopped, and no additional transactions can be loaded.",
        "operationId" : "CreditGuyBillingProcess",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_Process_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_Process_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_Process_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_Process_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Billing_Process_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Billing_Process_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Billing_Process_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/billing/getstatus/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Billing)" ],
        "summary" : "Get billing process status",
        "operationId" : "CreditGuyBillingGetStatus",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_GetStatus_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_GetStatus_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_GetStatus_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Billing_GetStatus_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Billing_GetStatus_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Billing_GetStatus_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Billing_GetStatus_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/gateway/transaction/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Gateway)" ],
        "summary" : "Credit card transaction",
        "description" : "This method should be used in rare occasions.\r\nFor common use scenarios, refer to \"Payments -> Charge customer\" method.",
        "operationId" : "CreditGuyGatewayTransaction",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_Transaction_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_Transaction_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_Transaction_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_Transaction_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_Transaction_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_Transaction_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_Transaction_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/gateway/gettransaction/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Gateway)" ],
        "summary" : "Get existing transaction details",
        "operationId" : "CreditGuyGatewayGetTransaction",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_GetTransaction_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_GetTransaction_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_GetTransaction_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_GetTransaction_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_GetTransaction_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_GetTransaction_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_GetTransaction_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/gateway/beginredirect/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Gateway)" ],
        "summary" : "Begin redirect for transaction",
        "operationId" : "CreditGuyGatewayBeginRedirect",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_BeginRedirect_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_BeginRedirect_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_BeginRedirect_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_BeginRedirect_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_BeginRedirect_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_BeginRedirect_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_BeginRedirect_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/gateway/getreferencenumbers/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Gateway)" ],
        "summary" : "Get reference numbers for existing transactions",
        "operationId" : "CreditGuyGatewayGetReferenceNumbers",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_GetReferenceNumbers_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_GetReferenceNumbers_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_GetReferenceNumbers_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Gateway_GetReferenceNumbers_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_GetReferenceNumbers_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_GetReferenceNumbers_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Gateway_GetReferenceNumbers_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/vault/tokenize/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Vault)" ],
        "summary" : "Tokenize card (card number->token)",
        "operationId" : "CreditGuyVaultTokenize",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Vault_Tokenize_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Vault_Tokenize_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Vault_Tokenize_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Vault_Tokenize_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Vault_Tokenize_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Vault_Tokenize_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Vault_Tokenize_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/vault/tokenizesingleuse/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Vault)" ],
        "summary" : "Tokenize payment details (Card Number, Expiration, CVV, CitizenID) for single usage.",
        "description" : "Used primarily by the Payments JavaScript API.",
        "operationId" : "CreditGuyVaultTokenizeSingleUse",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "CardNumber", "ExpirationMonth", "ExpirationYear" ],
                "type" : "object",
                "properties" : {
                  "CardNumber" : {
                    "type" : "string"
                  },
                  "ExpirationMonth" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "ExpirationYear" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "CVV" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "CitizenID" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "Credentials.CompanyID" : {
                    "type" : "integer",
                    "format" : "int64"
                  },
                  "Credentials.APIPublicKey" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "ResponseLanguage" : {
                    "type" : "string",
                    "nullable" : true,
                    "deprecated" : true
                  }
                }
              },
              "encoding" : {
                "CardNumber" : {
                  "style" : "form"
                },
                "ExpirationMonth" : {
                  "style" : "form"
                },
                "ExpirationYear" : {
                  "style" : "form"
                },
                "CVV" : {
                  "style" : "form"
                },
                "CitizenID" : {
                  "style" : "form"
                },
                "Credentials.CompanyID" : {
                  "style" : "form"
                },
                "Credentials.APIPublicKey" : {
                  "style" : "form"
                },
                "ResponseLanguage" : {
                  "style" : "form"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Vault_TokenizeSingleUse_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Vault_TokenizeSingleUse_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Vault_TokenizeSingleUse_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/creditguy/vault/tokenizesingleusejson/" : {
      "post" : {
        "tags" : [ "Credit card terminal (Vault)" ],
        "summary" : "Tokenize payment details (Card Number, Expiration, CVV, CitizenID) for single usage.",
        "description" : "Used primarily by the Payments JavaScript API.",
        "operationId" : "CreditGuyVaultTokenizeSingleUseJSON",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Vault_TokenizeSingleUse_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Vault_TokenizeSingleUse_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Vault_TokenizeSingleUse_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CreditGuy_Vault_TokenizeSingleUse_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Vault_TokenizeSingleUse_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Vault_TokenizeSingleUse_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CreditGuy_Vault_TokenizeSingleUse_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/data/createentity/" : {
      "post" : {
        "tags" : [ "CRM (Data)" ],
        "summary" : "Create entity",
        "operationId" : "CRMDataCreateEntity",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_CreateEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_CreateEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_CreateEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_CreateEntity_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_CreateEntity_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_CreateEntity_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_CreateEntity_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/data/updateentity/" : {
      "post" : {
        "tags" : [ "CRM (Data)" ],
        "summary" : "Update entity",
        "operationId" : "CRMDataUpdateEntity",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_UpdateEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_UpdateEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_UpdateEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_UpdateEntity_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_UpdateEntity_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_UpdateEntity_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_UpdateEntity_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/data/archiveentity/" : {
      "post" : {
        "tags" : [ "CRM (Data)" ],
        "summary" : "Archive entity",
        "operationId" : "CRMDataArchiveEntity",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_ArchiveEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_ArchiveEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_ArchiveEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_ArchiveEntity_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/data/deleteentity/" : {
      "post" : {
        "tags" : [ "CRM (Data)" ],
        "summary" : "Delete entity",
        "operationId" : "CRMDataDeleteEntity",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_DeleteEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_DeleteEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_DeleteEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_DeleteEntity_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/data/listentities/" : {
      "post" : {
        "tags" : [ "CRM (Data)" ],
        "summary" : "List entities",
        "operationId" : "CRMDataListEntities",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_ListEntities_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_ListEntities_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_ListEntities_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_ListEntities_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_ListEntities_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_ListEntities_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_ListEntities_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/data/getentity/" : {
      "post" : {
        "tags" : [ "CRM (Data)" ],
        "summary" : "Get entity",
        "operationId" : "CRMDataGetEntity",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntity_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntity_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_GetEntity_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_GetEntity_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Data_GetEntity_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/data/countentityusage/" : {
      "post" : {
        "tags" : [ "CRM (Data)" ],
        "summary" : "Count entity usage",
        "operationId" : "CRMDataCountEntityUsage",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_CountEntityUsage_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_CountEntityUsage_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_CountEntityUsage_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_CountEntityUsage_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_System.Int64"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_System.Int64"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_System.Int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/data/getentityprinthtml/" : {
      "post" : {
        "tags" : [ "CRM (Data)" ],
        "summary" : "Get entity HTML contents for print",
        "operationId" : "CRMDataGetEntityPrintHTML",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntityPrintHTML_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntityPrintHTML_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntityPrintHTML_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntityPrintHTML_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/crm/data/getentitieshtml/" : {
      "post" : {
        "tags" : [ "CRM (Data)" ],
        "summary" : "Get entities HTML contents for print",
        "operationId" : "CRMDataGetEntitiesHTML",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntitiesHTML_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntitiesHTML_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntitiesHTML_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Data_GetEntitiesHTML_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/crm/schema/getfolder/" : {
      "post" : {
        "tags" : [ "CRM (Schema)" ],
        "summary" : "Get folder details",
        "operationId" : "CRMSchemaGetFolder",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Schema_GetFolder_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Schema_GetFolder_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Schema_GetFolder_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Schema_GetFolder_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Schema_GetFolder_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Schema_GetFolder_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Schema_GetFolder_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/schema/listfolders/" : {
      "post" : {
        "tags" : [ "CRM (Schema)" ],
        "summary" : "List folders",
        "operationId" : "CRMSchemaListFolders",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Schema_ListFolders_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Schema_ListFolders_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Schema_ListFolders_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Schema_ListFolders_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Schema_ListFolders_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Schema_ListFolders_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Schema_ListFolders_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/views/listviews/" : {
      "post" : {
        "tags" : [ "CRM (Views)" ],
        "summary" : "List views",
        "operationId" : "CRMViewsListViews",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Views_ListViews_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Views_ListViews_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Views_ListViews_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CRM_Views_ListViews_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Views_ListViews_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Views_ListViews_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CRM_Views_ListViews_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/customerservice/tickets/create/" : {
      "post" : {
        "tags" : [ "Customer service (Tickets)" ],
        "operationId" : "CustomerServiceTicketsCreate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerService_Tickets_Create_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerService_Tickets_Create_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerService_Tickets_Create_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerService_Tickets_Create_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CustomerService_Tickets_Create_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CustomerService_Tickets_Create_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_CustomerService_Tickets_Create_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/emailsubscriptions/mailinglists/list/" : {
      "post" : {
        "tags" : [ "Email subscriptions (MailingLists)" ],
        "operationId" : "EmailSubscriptionsMailingListsList",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_List_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_List_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_List_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_List_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_EmailSubscriptions_MailingLists_List_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_EmailSubscriptions_MailingLists_List_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_EmailSubscriptions_MailingLists_List_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/emailsubscriptions/mailinglists/add/" : {
      "post" : {
        "tags" : [ "Email subscriptions (MailingLists)" ],
        "operationId" : "EmailSubscriptionsMailingListsAdd",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_Add_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_Add_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_Add_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_Add_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_EmailSubscriptions_MailingLists_Add_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_EmailSubscriptions_MailingLists_Add_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_EmailSubscriptions_MailingLists_Add_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/accountinghashexport/export/send/" : {
      "post" : {
        "tags" : [ "Hash export (Export)" ],
        "summary" : "Sends hash export by mail",
        "operationId" : "AccountingHashExportExportSend",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AccountingHashExport_Export_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AccountingHashExport_Export_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AccountingHashExport_Export_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AccountingHashExport_Export_Send_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_AccountingHashExport_Export_Send_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_AccountingHashExport_Export_Send_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_AccountingHashExport_Export_Send_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/letterbyclick/letterbyclick/senddocument/" : {
      "post" : {
        "tags" : [ "Letter by Click (LetterByClick)" ],
        "summary" : "Send mail through Beeri's Letter by Click service.",
        "description" : "Contact us before using this API, as it's currently experimental.",
        "operationId" : "LetterByClickLetterByClickSendDocument",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LetterByClick_LetterByClick_SendDocument_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LetterByClick_LetterByClick_SendDocument_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LetterByClick_LetterByClick_SendDocument_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LetterByClick_LetterByClick_SendDocument_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_LetterByClick_LetterByClick_SendDocument_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_LetterByClick_LetterByClick_SendDocument_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_LetterByClick_LetterByClick_SendDocument_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/letterbyclick/letterbyclick/gettrackingcode/" : {
      "post" : {
        "tags" : [ "Letter by Click (LetterByClick)" ],
        "summary" : "Get tracking code from Beeri's Letter by Click service.\r\nPlease note tracking codes are available ~30 minutes after sending the document using the API.",
        "description" : "Contact us before using this API, as it's currently experimental.",
        "operationId" : "LetterByClickLetterByClickGetTrackingCode",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LetterByClick_LetterByClick_GetTrackingCode_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LetterByClick_LetterByClick_GetTrackingCode_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LetterByClick_LetterByClick_GetTrackingCode_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LetterByClick_LetterByClick_GetTrackingCode_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_LetterByClick_LetterByClick_GetTrackingCode_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_LetterByClick_LetterByClick_GetTrackingCode_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_LetterByClick_LetterByClick_GetTrackingCode_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/fax/fax/send/" : {
      "post" : {
        "tags" : [ "Outgoing faxes (Fax)" ],
        "operationId" : "FaxFaxSend",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Fax_Fax_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Fax_Fax_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Fax_Fax_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Fax_Fax_Send_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Fax_Fax_Send_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Fax_Fax_Send_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Fax_Fax_Send_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/generalbilling/openupayterminal/" : {
      "post" : {
        "tags" : [ "Payments (GeneralBilling)" ],
        "summary" : "Open an instant credit card terminal using UPay.",
        "description" : "Please note all parameters set on the request, are automatically requested from UPay, yet should be manually approved by contacting UPay.",
        "operationId" : "BillingGeneralBillingOpenUPayTerminal",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_General_OpenUPayTerminal_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_General_OpenUPayTerminal_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_General_OpenUPayTerminal_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_General_OpenUPayTerminal_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_General_OpenUPayTerminal_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_General_OpenUPayTerminal_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_General_OpenUPayTerminal_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/generalbilling/setupaycredentials/" : {
      "post" : {
        "tags" : [ "Payments (GeneralBilling)" ],
        "summary" : "Setup existing UPay account credentials",
        "description" : "Please note when using existing UPay credentials, customer terms will remain as they were before using OfficeGuy",
        "operationId" : "BillingGeneralBillingSetUPayCredentials",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_General_SetUPayCredentials_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_General_SetUPayCredentials_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_General_SetUPayCredentials_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_General_SetUPayCredentials_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_General_SetUPayCredentials_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_General_SetUPayCredentials_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_General_SetUPayCredentials_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/paymentmethods/getforcustomer/" : {
      "post" : {
        "tags" : [ "Payments (PaymentMethods)" ],
        "summary" : "Get payment details",
        "operationId" : "BillingPaymentMethodsGetForCustomer",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_GetForCustomer_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_GetForCustomer_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_GetForCustomer_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_GetForCustomer_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_PaymentMethods_GetForCustomer_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_PaymentMethods_GetForCustomer_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_PaymentMethods_GetForCustomer_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/paymentmethods/setforcustomer/" : {
      "post" : {
        "tags" : [ "Payments (PaymentMethods)" ],
        "summary" : "Set payment details",
        "operationId" : "BillingPaymentMethodsSetForCustomer",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_SetForCustomer_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_SetForCustomer_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_SetForCustomer_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_SetForCustomer_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_PaymentMethods_SetForCustomer_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_PaymentMethods_SetForCustomer_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_PaymentMethods_SetForCustomer_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/paymentmethods/remove/" : {
      "post" : {
        "tags" : [ "Payments (PaymentMethods)" ],
        "summary" : "Remove payment details from existing customer",
        "operationId" : "BillingPaymentMethodsRemove",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_Remove_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_Remove_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_Remove_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_PaymentMethods_Remove_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_PaymentMethods_Remove_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_PaymentMethods_Remove_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_PaymentMethods_Remove_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/payments/charge/" : {
      "post" : {
        "tags" : [ "Payments (Payments)" ],
        "summary" : "Charge customer",
        "operationId" : "BillingPaymentsCharge",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_Charge_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "PaymentMethod" : {
                  "ID" : null,
                  "CustomerID" : null,
                  "CreditCard_Number" : "130002070",
                  "CreditCard_LastDigits" : null,
                  "CreditCard_ExpirationMonth" : 12,
                  "CreditCard_ExpirationYear" : 2020,
                  "CreditCard_CVV" : "123",
                  "CreditCard_Track2" : null,
                  "CreditCard_CitizenID" : "123456789",
                  "CreditCard_CardMask" : null,
                  "CreditCard_Token" : null,
                  "Type" : 1
                },
                "SingleUseToken" : null,
                "CreditCardAuthNumber" : null,
                "Items" : [ {
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Description" : null
                } ],
                "Payments_Count" : null,
                "Payments_FirstAmount" : null,
                "Payments_NonFirstAmount" : null,
                "UpdateCustomerByEmail" : null,
                "UpdateCustomerByEmail_AttachDocument" : null,
                "UpdateCustomerByEmail_Language" : null,
                "SendDocumentByEmail" : true,
                "SendDocumentByEmail_Language" : null,
                "DocumentLanguage" : null,
                "DocumentDescription" : null,
                "VATIncluded" : true,
                "VATRate" : null,
                "AuthoriseOnly" : null,
                "DraftDocument" : null,
                "DocumentType" : null,
                "SupportCredit" : null,
                "MerchantNumber" : null,
                "SendCopyToOrganization" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "BASq2WfMjMDoA02CMVYCk1d0NyKyjkhFpsIrjHCyCbDMwHtHbC"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_Charge_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "PaymentMethod" : {
                  "ID" : null,
                  "CustomerID" : null,
                  "CreditCard_Number" : "130002070",
                  "CreditCard_LastDigits" : null,
                  "CreditCard_ExpirationMonth" : 12,
                  "CreditCard_ExpirationYear" : 2020,
                  "CreditCard_CVV" : "123",
                  "CreditCard_Track2" : null,
                  "CreditCard_CitizenID" : "123456789",
                  "CreditCard_CardMask" : null,
                  "CreditCard_Token" : null,
                  "Type" : 1
                },
                "SingleUseToken" : null,
                "CreditCardAuthNumber" : null,
                "Items" : [ {
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Description" : null
                } ],
                "Payments_Count" : null,
                "Payments_FirstAmount" : null,
                "Payments_NonFirstAmount" : null,
                "UpdateCustomerByEmail" : null,
                "UpdateCustomerByEmail_AttachDocument" : null,
                "UpdateCustomerByEmail_Language" : null,
                "SendDocumentByEmail" : true,
                "SendDocumentByEmail_Language" : null,
                "DocumentLanguage" : null,
                "DocumentDescription" : null,
                "VATIncluded" : true,
                "VATRate" : null,
                "AuthoriseOnly" : null,
                "DraftDocument" : null,
                "DocumentType" : null,
                "SupportCredit" : null,
                "MerchantNumber" : null,
                "SendCopyToOrganization" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "BASq2WfMjMDoA02CMVYCk1d0NyKyjkhFpsIrjHCyCbDMwHtHbC"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_Charge_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "PaymentMethod" : {
                  "ID" : null,
                  "CustomerID" : null,
                  "CreditCard_Number" : "130002070",
                  "CreditCard_LastDigits" : null,
                  "CreditCard_ExpirationMonth" : 12,
                  "CreditCard_ExpirationYear" : 2020,
                  "CreditCard_CVV" : "123",
                  "CreditCard_Track2" : null,
                  "CreditCard_CitizenID" : "123456789",
                  "CreditCard_CardMask" : null,
                  "CreditCard_Token" : null,
                  "Type" : 1
                },
                "SingleUseToken" : null,
                "CreditCardAuthNumber" : null,
                "Items" : [ {
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Description" : null
                } ],
                "Payments_Count" : null,
                "Payments_FirstAmount" : null,
                "Payments_NonFirstAmount" : null,
                "UpdateCustomerByEmail" : null,
                "UpdateCustomerByEmail_AttachDocument" : null,
                "UpdateCustomerByEmail_Language" : null,
                "SendDocumentByEmail" : true,
                "SendDocumentByEmail_Language" : null,
                "DocumentLanguage" : null,
                "DocumentDescription" : null,
                "VATIncluded" : true,
                "VATRate" : null,
                "AuthoriseOnly" : null,
                "DraftDocument" : null,
                "DocumentType" : null,
                "SupportCredit" : null,
                "MerchantNumber" : null,
                "SendCopyToOrganization" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "BASq2WfMjMDoA02CMVYCk1d0NyKyjkhFpsIrjHCyCbDMwHtHbC"
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_Charge_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "PaymentMethod" : {
                  "ID" : null,
                  "CustomerID" : null,
                  "CreditCard_Number" : "130002070",
                  "CreditCard_LastDigits" : null,
                  "CreditCard_ExpirationMonth" : 12,
                  "CreditCard_ExpirationYear" : 2020,
                  "CreditCard_CVV" : "123",
                  "CreditCard_Track2" : null,
                  "CreditCard_CitizenID" : "123456789",
                  "CreditCard_CardMask" : null,
                  "CreditCard_Token" : null,
                  "Type" : 1
                },
                "SingleUseToken" : null,
                "CreditCardAuthNumber" : null,
                "Items" : [ {
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Description" : null
                } ],
                "Payments_Count" : null,
                "Payments_FirstAmount" : null,
                "Payments_NonFirstAmount" : null,
                "UpdateCustomerByEmail" : null,
                "UpdateCustomerByEmail_AttachDocument" : null,
                "UpdateCustomerByEmail_Language" : null,
                "SendDocumentByEmail" : true,
                "SendDocumentByEmail_Language" : null,
                "DocumentLanguage" : null,
                "DocumentDescription" : null,
                "VATIncluded" : true,
                "VATRate" : null,
                "AuthoriseOnly" : null,
                "DraftDocument" : null,
                "DocumentType" : null,
                "SupportCredit" : null,
                "MerchantNumber" : null,
                "SendCopyToOrganization" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "BASq2WfMjMDoA02CMVYCk1d0NyKyjkhFpsIrjHCyCbDMwHtHbC"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_Charge_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_Charge_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_Charge_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/payments/get/" : {
      "post" : {
        "tags" : [ "Payments (Payments)" ],
        "summary" : "Get payment details",
        "description" : "Remarks goes here",
        "operationId" : "BillingPaymentsGet",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_Get_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_Get_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_Get_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_Get_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_Get_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_Get_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_Get_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/payments/list/" : {
      "post" : {
        "tags" : [ "Payments (Payments)" ],
        "summary" : "List payments",
        "operationId" : "BillingPaymentsList",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_List_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_List_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_List_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_List_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_List_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_List_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_List_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/payments/beginredirect/" : {
      "post" : {
        "tags" : [ "Payments (Payments)" ],
        "summary" : "Begin redirect for transaction",
        "operationId" : "BillingPaymentsBeginRedirect",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_BeginRedirect_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Items" : [ {
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Description" : null
                } ],
                "VATIncluded" : true,
                "DocumentType" : null,
                "RedirectURL" : "https://www.google.com",
                "ExternalIdentifier" : null,
                "MaximumPayments" : null,
                "SendUpdateByEmailAddress" : null,
                "ExpirationHours" : null,
                "Theme" : null,
                "Language" : null,
                "Header" : null,
                "UpdateOrganizationOnSuccess" : null,
                "UpdateOrganizationOnFailure" : null,
                "UpdateCustomerOnSuccess" : null,
                "DocumentDescription" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "qHWmRAXRS4BgczfxzHhAT5Ia08nG3642NXtQi2R8KHo8nWyDhy"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_BeginRedirect_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Items" : [ {
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Description" : null
                } ],
                "VATIncluded" : true,
                "DocumentType" : null,
                "RedirectURL" : "https://www.google.com",
                "ExternalIdentifier" : null,
                "MaximumPayments" : null,
                "SendUpdateByEmailAddress" : null,
                "ExpirationHours" : null,
                "Theme" : null,
                "Language" : null,
                "Header" : null,
                "UpdateOrganizationOnSuccess" : null,
                "UpdateOrganizationOnFailure" : null,
                "UpdateCustomerOnSuccess" : null,
                "DocumentDescription" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "qHWmRAXRS4BgczfxzHhAT5Ia08nG3642NXtQi2R8KHo8nWyDhy"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_BeginRedirect_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Items" : [ {
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Description" : null
                } ],
                "VATIncluded" : true,
                "DocumentType" : null,
                "RedirectURL" : "https://www.google.com",
                "ExternalIdentifier" : null,
                "MaximumPayments" : null,
                "SendUpdateByEmailAddress" : null,
                "ExpirationHours" : null,
                "Theme" : null,
                "Language" : null,
                "Header" : null,
                "UpdateOrganizationOnSuccess" : null,
                "UpdateOrganizationOnFailure" : null,
                "UpdateCustomerOnSuccess" : null,
                "DocumentDescription" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "qHWmRAXRS4BgczfxzHhAT5Ia08nG3642NXtQi2R8KHo8nWyDhy"
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Payments_BeginRedirect_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "Items" : [ {
                  "Item" : {
                    "ID" : null,
                    "Name" : "My Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 2,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Description" : null
                } ],
                "VATIncluded" : true,
                "DocumentType" : null,
                "RedirectURL" : "https://www.google.com",
                "ExternalIdentifier" : null,
                "MaximumPayments" : null,
                "SendUpdateByEmailAddress" : null,
                "ExpirationHours" : null,
                "Theme" : null,
                "Language" : null,
                "Header" : null,
                "UpdateOrganizationOnSuccess" : null,
                "UpdateOrganizationOnFailure" : null,
                "UpdateCustomerOnSuccess" : null,
                "DocumentDescription" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "qHWmRAXRS4BgczfxzHhAT5Ia08nG3642NXtQi2R8KHo8nWyDhy"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_BeginRedirect_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_BeginRedirect_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Payments_BeginRedirect_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/recurring/listforcustomer/" : {
      "post" : {
        "tags" : [ "Payments (Recurring)" ],
        "summary" : "List customer recurring items",
        "operationId" : "BillingRecurringListForCustomer",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_ListForCustomer_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_ListForCustomer_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_ListForCustomer_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_ListForCustomer_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_ListForCustomer_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_ListForCustomer_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_ListForCustomer_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/recurring/cancel/" : {
      "post" : {
        "tags" : [ "Payments (Recurring)" ],
        "summary" : "Cancel customer item",
        "operationId" : "BillingRecurringCancel",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Cancel_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Cancel_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Cancel_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Cancel_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_Cancel_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_Cancel_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_Cancel_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/recurring/charge/" : {
      "post" : {
        "tags" : [ "Payments (Recurring)" ],
        "summary" : "Charge customer and create recurring payment",
        "operationId" : "BillingRecurringCharge",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Charge_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "PaymentMethod" : {
                  "ID" : null,
                  "CustomerID" : null,
                  "CreditCard_Number" : "130002070",
                  "CreditCard_LastDigits" : null,
                  "CreditCard_ExpirationMonth" : 12,
                  "CreditCard_ExpirationYear" : 2020,
                  "CreditCard_CVV" : "123",
                  "CreditCard_Track2" : null,
                  "CreditCard_CitizenID" : "123456789",
                  "CreditCard_CardMask" : null,
                  "CreditCard_Token" : null,
                  "Type" : 1
                },
                "SingleUseToken" : null,
                "Items" : [ {
                  "Item" : {
                    "Duration_Days" : null,
                    "Duration_Months" : 1,
                    "ID" : null,
                    "Name" : "Monthly Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 1,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Date_Start" : null,
                  "Description" : null,
                  "Duration_Days" : null,
                  "Duration_Months" : null,
                  "Recurrence" : 12
                } ],
                "UpdateCustomerByEmail" : null,
                "UpdateCustomerByEmail_AttachDocument" : null,
                "AuthoriseOnly" : null,
                "DocumentType" : null,
                "SendCopyToOrganization" : null,
                "VATIncluded" : true,
                "AttributionOffset" : null,
                "CreditCardPayments_Count" : null,
                "MerchantNumber" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "IbZRjkywmIMGOMz8J56EFwqZqCGAmUAaY4oTSvo9SmG8l3tS9e"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Charge_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "PaymentMethod" : {
                  "ID" : null,
                  "CustomerID" : null,
                  "CreditCard_Number" : "130002070",
                  "CreditCard_LastDigits" : null,
                  "CreditCard_ExpirationMonth" : 12,
                  "CreditCard_ExpirationYear" : 2020,
                  "CreditCard_CVV" : "123",
                  "CreditCard_Track2" : null,
                  "CreditCard_CitizenID" : "123456789",
                  "CreditCard_CardMask" : null,
                  "CreditCard_Token" : null,
                  "Type" : 1
                },
                "SingleUseToken" : null,
                "Items" : [ {
                  "Item" : {
                    "Duration_Days" : null,
                    "Duration_Months" : 1,
                    "ID" : null,
                    "Name" : "Monthly Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 1,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Date_Start" : null,
                  "Description" : null,
                  "Duration_Days" : null,
                  "Duration_Months" : null,
                  "Recurrence" : 12
                } ],
                "UpdateCustomerByEmail" : null,
                "UpdateCustomerByEmail_AttachDocument" : null,
                "AuthoriseOnly" : null,
                "DocumentType" : null,
                "SendCopyToOrganization" : null,
                "VATIncluded" : true,
                "AttributionOffset" : null,
                "CreditCardPayments_Count" : null,
                "MerchantNumber" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "IbZRjkywmIMGOMz8J56EFwqZqCGAmUAaY4oTSvo9SmG8l3tS9e"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Charge_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "PaymentMethod" : {
                  "ID" : null,
                  "CustomerID" : null,
                  "CreditCard_Number" : "130002070",
                  "CreditCard_LastDigits" : null,
                  "CreditCard_ExpirationMonth" : 12,
                  "CreditCard_ExpirationYear" : 2020,
                  "CreditCard_CVV" : "123",
                  "CreditCard_Track2" : null,
                  "CreditCard_CitizenID" : "123456789",
                  "CreditCard_CardMask" : null,
                  "CreditCard_Token" : null,
                  "Type" : 1
                },
                "SingleUseToken" : null,
                "Items" : [ {
                  "Item" : {
                    "Duration_Days" : null,
                    "Duration_Months" : 1,
                    "ID" : null,
                    "Name" : "Monthly Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 1,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Date_Start" : null,
                  "Description" : null,
                  "Duration_Days" : null,
                  "Duration_Months" : null,
                  "Recurrence" : 12
                } ],
                "UpdateCustomerByEmail" : null,
                "UpdateCustomerByEmail_AttachDocument" : null,
                "AuthoriseOnly" : null,
                "DocumentType" : null,
                "SendCopyToOrganization" : null,
                "VATIncluded" : true,
                "AttributionOffset" : null,
                "CreditCardPayments_Count" : null,
                "MerchantNumber" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "IbZRjkywmIMGOMz8J56EFwqZqCGAmUAaY4oTSvo9SmG8l3tS9e"
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Charge_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Customer" : {
                  "CompanyNumber" : null,
                  "ExternalIdentifier" : null,
                  "NoVAT" : null,
                  "SearchMode" : 0,
                  "Name" : "Danny Dean",
                  "Phone" : null,
                  "EmailAddress" : null,
                  "City" : null,
                  "Address" : null,
                  "ZipCode" : null,
                  "ID" : null,
                  "Folder" : null
                },
                "PaymentMethod" : {
                  "ID" : null,
                  "CustomerID" : null,
                  "CreditCard_Number" : "130002070",
                  "CreditCard_LastDigits" : null,
                  "CreditCard_ExpirationMonth" : 12,
                  "CreditCard_ExpirationYear" : 2020,
                  "CreditCard_CVV" : "123",
                  "CreditCard_Track2" : null,
                  "CreditCard_CitizenID" : "123456789",
                  "CreditCard_CardMask" : null,
                  "CreditCard_Token" : null,
                  "Type" : 1
                },
                "SingleUseToken" : null,
                "Items" : [ {
                  "Item" : {
                    "Duration_Days" : null,
                    "Duration_Months" : 1,
                    "ID" : null,
                    "Name" : "Monthly Product",
                    "Price" : null,
                    "Currency" : null,
                    "Cost" : null,
                    "ExternalIdentifier" : null,
                    "SearchMode" : null
                  },
                  "Quantity" : 1,
                  "UnitPrice" : 50,
                  "Currency" : null,
                  "Date_Start" : null,
                  "Description" : null,
                  "Duration_Days" : null,
                  "Duration_Months" : null,
                  "Recurrence" : 12
                } ],
                "UpdateCustomerByEmail" : null,
                "UpdateCustomerByEmail_AttachDocument" : null,
                "AuthoriseOnly" : null,
                "DocumentType" : null,
                "SendCopyToOrganization" : null,
                "VATIncluded" : true,
                "AttributionOffset" : null,
                "CreditCardPayments_Count" : null,
                "MerchantNumber" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "IbZRjkywmIMGOMz8J56EFwqZqCGAmUAaY4oTSvo9SmG8l3tS9e"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_Charge_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_Charge_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_Charge_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/recurring/update/" : {
      "post" : {
        "tags" : [ "Payments (Recurring)" ],
        "summary" : "Update customer recurring item",
        "operationId" : "BillingRecurringUpdate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Update_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Update_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Update_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_Update_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_Update_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_Update_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_Update_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing/recurring/updatesettings/" : {
      "post" : {
        "tags" : [ "Payments (Recurring)" ],
        "summary" : "Update recurring billing application settings",
        "operationId" : "BillingRecurringUpdateSettings",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_UpdateSettings_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_UpdateSettings_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_UpdateSettings_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Billing_Recurring_UpdateSettings_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_UpdateSettings_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_UpdateSettings_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Billing_Recurring_UpdateSettings_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/sms/mailinglists/list/" : {
      "post" : {
        "tags" : [ "SMS subscriptions (MailingLists)" ],
        "summary" : "List mailing lists",
        "operationId" : "SMSMailingListsList",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_MailingLists_List_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_MailingLists_List_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_MailingLists_List_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_MailingLists_List_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_MailingList_List_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_MailingList_List_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_MailingList_List_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/sms/mailinglists/add/" : {
      "post" : {
        "tags" : [ "SMS subscriptions (MailingLists)" ],
        "summary" : "Add recipient to a mailing list",
        "operationId" : "SMSMailingListsAdd",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_MailingLists_Add_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_MailingLists_Add_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_MailingLists_Add_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_MailingLists_Add_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_MailingLists_Add_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_MailingLists_Add_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_MailingLists_Add_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/sms/sms/send/" : {
      "post" : {
        "tags" : [ "SMS subscriptions (SMS)" ],
        "summary" : "Sends a single SMS message",
        "description" : "When possible, SendMultiple should be used",
        "operationId" : "SMSSMSSend",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_Send_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_Send_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_SMS_Send_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_SMS_Send_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_SMS_Send_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/sms/sms/sendmultiple/" : {
      "post" : {
        "tags" : [ "SMS subscriptions (SMS)" ],
        "summary" : "Sends multiple SMS messages",
        "operationId" : "SMSSMSSendMultiple",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_SendMultiple_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_SendMultiple_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_SendMultiple_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_SendMultiple_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_SMS_SendMultiple_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_SMS_SendMultiple_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_SMS_SendMultiple_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/sms/sms/listsenders/" : {
      "post" : {
        "tags" : [ "SMS subscriptions (SMS)" ],
        "summary" : "List verified sender numbers",
        "operationId" : "SMSSMSListSenders",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_ListSenders_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_ListSenders_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_ListSenders_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SMS_SMS_ListSenders_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_SMS_ListSenders_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_SMS_ListSenders_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_SMS_SMS_ListSenders_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/stock/stock/list/" : {
      "post" : {
        "tags" : [ "Stock management (Stock)" ],
        "summary" : "List stock levels",
        "operationId" : "StockStockList",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Stock_Stock_List_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Stock_Stock_List_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Stock_Stock_List_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Stock_Stock_List_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Stock_Stock_List_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Stock_Stock_List_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Stock_Stock_List_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/triggers/triggers/subscribe/" : {
      "post" : {
        "tags" : [ "Triggers (Triggers)" ],
        "summary" : "Subscribe a trigger",
        "operationId" : "TriggersTriggersSubscribe",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Triggers_Triggers_Subscribe_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Triggers_Triggers_Subscribe_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Triggers_Triggers_Subscribe_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Triggers_Triggers_Subscribe_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Triggers_Triggers_Subscribe_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Triggers_Triggers_Subscribe_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Triggers_Triggers_Subscribe_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/triggers/triggers/unsubscribe/" : {
      "post" : {
        "tags" : [ "Triggers (Triggers)" ],
        "summary" : "Unsubscribe a trigger",
        "operationId" : "TriggersTriggersUnsubscribe",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Triggers_Triggers_Unsubscribe_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Triggers_Triggers_Unsubscribe_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Triggers_Triggers_Unsubscribe_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Triggers_Triggers_Unsubscribe_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Triggers_Triggers_Unsubscribe_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Triggers_Triggers_Unsubscribe_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Triggers_Triggers_Unsubscribe_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/companies/create/" : {
      "post" : {
        "tags" : [ "Website (Companies)" ],
        "summary" : "Create new organization",
        "description" : "Created organization payment method, will be set to the calling organization payment method.\r\nThis method requires an active payment method.",
        "operationId" : "WebsiteCompaniesCreate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Company" : {
                  "Name" : "My Brand Ltd.",
                  "EmailAddress" : "contact@mybrand.com",
                  "Country" : "Israel",
                  "Address" : "City Center, Jerusalem",
                  "Phone" : "02-1234567",
                  "Fax" : "02-1234568",
                  "Title" : "We provide branding solution",
                  "CorporateNumber" : "514123456",
                  "English_Name" : null,
                  "English_Address" : null,
                  "English_Country" : null,
                  "English_Phone" : null,
                  "English_Fax" : null,
                  "English_Title" : null,
                  "CompanyType" : 0,
                  "Logo" : null,
                  "Website" : "https://www.mybrand.com"
                },
                "User" : null,
                "Applications" : null,
                "ApplicationAdditions" : null,
                "HideFromCompaniesList" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "Ct7TjLl0aWUn9H8mhJYVfNHwmSghomJo17HGS5KSiSLHfedy0z"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Company" : {
                  "Name" : "My Brand Ltd.",
                  "EmailAddress" : "contact@mybrand.com",
                  "Country" : "Israel",
                  "Address" : "City Center, Jerusalem",
                  "Phone" : "02-1234567",
                  "Fax" : "02-1234568",
                  "Title" : "We provide branding solution",
                  "CorporateNumber" : "514123456",
                  "English_Name" : null,
                  "English_Address" : null,
                  "English_Country" : null,
                  "English_Phone" : null,
                  "English_Fax" : null,
                  "English_Title" : null,
                  "CompanyType" : 0,
                  "Logo" : null,
                  "Website" : "https://www.mybrand.com"
                },
                "User" : null,
                "Applications" : null,
                "ApplicationAdditions" : null,
                "HideFromCompaniesList" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "Ct7TjLl0aWUn9H8mhJYVfNHwmSghomJo17HGS5KSiSLHfedy0z"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Company" : {
                  "Name" : "My Brand Ltd.",
                  "EmailAddress" : "contact@mybrand.com",
                  "Country" : "Israel",
                  "Address" : "City Center, Jerusalem",
                  "Phone" : "02-1234567",
                  "Fax" : "02-1234568",
                  "Title" : "We provide branding solution",
                  "CorporateNumber" : "514123456",
                  "English_Name" : null,
                  "English_Address" : null,
                  "English_Country" : null,
                  "English_Phone" : null,
                  "English_Fax" : null,
                  "English_Title" : null,
                  "CompanyType" : 0,
                  "Logo" : null,
                  "Website" : "https://www.mybrand.com"
                },
                "User" : null,
                "Applications" : null,
                "ApplicationAdditions" : null,
                "HideFromCompaniesList" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "Ct7TjLl0aWUn9H8mhJYVfNHwmSghomJo17HGS5KSiSLHfedy0z"
                }
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_Create_Request"
                } ],
                "nullable" : true
              },
              "example" : {
                "Company" : {
                  "Name" : "My Brand Ltd.",
                  "EmailAddress" : "contact@mybrand.com",
                  "Country" : "Israel",
                  "Address" : "City Center, Jerusalem",
                  "Phone" : "02-1234567",
                  "Fax" : "02-1234568",
                  "Title" : "We provide branding solution",
                  "CorporateNumber" : "514123456",
                  "English_Name" : null,
                  "English_Address" : null,
                  "English_Country" : null,
                  "English_Phone" : null,
                  "English_Fax" : null,
                  "English_Title" : null,
                  "CompanyType" : 0,
                  "Logo" : null,
                  "Website" : "https://www.mybrand.com"
                },
                "User" : null,
                "Applications" : null,
                "ApplicationAdditions" : null,
                "HideFromCompaniesList" : null,
                "Credentials" : {
                  "CompanyID" : 12345678,
                  "APIKey" : "Ct7TjLl0aWUn9H8mhJYVfNHwmSghomJo17HGS5KSiSLHfedy0z"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_Create_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_Create_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_Create_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/companies/update/" : {
      "post" : {
        "tags" : [ "Website (Companies)" ],
        "summary" : "Update organization details",
        "operationId" : "WebsiteCompaniesUpdate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_Update_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_Update_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_Update_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_Update_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_Update_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_Update_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_Update_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/companies/getdetails/" : {
      "post" : {
        "tags" : [ "Website (Companies)" ],
        "operationId" : "WebsiteCompaniesGetDetails",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_GetDetails_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_GetDetails_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_GetDetails_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_GetDetails_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_GetDetails_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_GetDetails_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_GetDetails_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/companies/listquotas/" : {
      "post" : {
        "tags" : [ "Website (Companies)" ],
        "operationId" : "WebsiteCompaniesListQuotas",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_ListQuotas_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_ListQuotas_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_ListQuotas_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_ListQuotas_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_ListQuotas_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_ListQuotas_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_ListQuotas_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/companies/installapplications/" : {
      "post" : {
        "tags" : [ "Website (Companies)" ],
        "summary" : "Install applications",
        "description" : "Please note this method requires an active payment method.",
        "operationId" : "WebsiteCompaniesInstallApplications",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_InstallApplications_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_InstallApplications_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_InstallApplications_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_InstallApplications_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_InstallApplications_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_InstallApplications_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_InstallApplications_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/companies/installadditions/" : {
      "post" : {
        "tags" : [ "Website (Companies)" ],
        "summary" : "Install additions",
        "description" : "Please note this method requires an active payment method.",
        "operationId" : "WebsiteCompaniesInstallAdditions",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_InstallAdditions_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_InstallAdditions_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_InstallAdditions_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_InstallAdditions_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_InstallAdditions_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_InstallAdditions_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_InstallAdditions_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/companies/removeadditions/" : {
      "post" : {
        "tags" : [ "Website (Companies)" ],
        "summary" : "Removes additions",
        "operationId" : "WebsiteCompaniesRemoveAdditions",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_RemoveAdditions_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_RemoveAdditions_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_RemoveAdditions_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Companies_RemoveAdditions_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_RemoveAdditions_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_RemoveAdditions_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Companies_RemoveAdditions_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/permissions/set/" : {
      "post" : {
        "tags" : [ "Website (Permissions)" ],
        "summary" : "Grant user permission",
        "operationId" : "WebsitePermissionsSet",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Permissions_Set_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Permissions_Set_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Permissions_Set_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Permissions_Set_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/permissions/remove/" : {
      "post" : {
        "tags" : [ "Website (Permissions)" ],
        "summary" : "Remove user permission",
        "operationId" : "WebsitePermissionsRemove",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Permissions_Remove_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Permissions_Remove_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Permissions_Remove_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Permissions_Remove_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Core_APIEmptyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/users/create/" : {
      "post" : {
        "tags" : [ "Website (Users)" ],
        "summary" : "Create user and grant permissions to the current organization",
        "operationId" : "WebsiteUsersCreate",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Users_Create_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Users_Create_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Users_Create_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Users_Create_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Users_Create_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Users_Create_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Users_Create_Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/website/users/loginredirect/" : {
      "post" : {
        "tags" : [ "Website (Users)" ],
        "summary" : "Login using redirect, without exposing the user credentials.",
        "description" : "Please note, this doesn't validate the user credentials, and will allow creating tokens for incorrect credentials",
        "operationId" : "WebsiteUsersLoginRedirect",
        "parameters" : [ {
          "name" : "Content-Language",
          "in" : "header",
          "description" : "Sets the content response language. Defaults to Hebrew (he).",
          "schema" : {
            "$ref" : "#/components/schemas/ContentLanguage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Users_LoginRedirect_Request"
                } ],
                "nullable" : true
              }
            },
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Users_LoginRedirect_Request"
                } ],
                "nullable" : true
              }
            },
            "text/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Users_LoginRedirect_Request"
                } ],
                "nullable" : true
              }
            },
            "application/*+json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Website_Users_LoginRedirect_Request"
                } ],
                "nullable" : true
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Users_LoginRedirect_Response"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Users_LoginRedirect_Response"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response_Website_Users_LoginRedirect_Response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Accounting_Typed_CustomerSearchMode" : {
        "enum" : [ "Automatic", "None", "ExternalIdentifier", "Name", "CompanyNumber", "Phone", "EmailAddress" ],
        "type" : "string",
        "description" : "Customer searching mode"
      },
      "Accounting_Typed_Customer" : {
        "type" : "object",
        "properties" : {
          "CompanyNumber" : {
            "type" : "string",
            "description" : "Customer registered company number (VAT number)<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "ExternalIdentifier" : {
            "type" : "string",
            "description" : "Customer external identifier.<div><i>External identifier from calling application.\r\nOptional field</i></div>",
            "nullable" : true
          },
          "NoVAT" : {
            "type" : "boolean",
            "description" : "NoVAT indication<div><i>Set to true for VAT exempt customers\r\nDefaults to False</i></div>",
            "nullable" : true
          },
          "SearchMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_CustomerSearchMode"
            } ],
            "description" : "Customer searching mode<div><i>Defaults to None</i></div>",
            "nullable" : true
          },
          "Name" : {
            "type" : "string",
            "description" : "Customer full name (or company name)<div><i>Required for creating new customer\r\n(Leave empty to search by other fields)</i></div>",
            "nullable" : true
          },
          "Phone" : {
            "type" : "string",
            "description" : "Customer phone number<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "EmailAddress" : {
            "type" : "string",
            "description" : "Customer email address<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "City" : {
            "type" : "string",
            "description" : "Customer city<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "Address" : {
            "type" : "string",
            "description" : "Customer address<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "ZipCode" : {
            "type" : "string",
            "description" : "Customer ZipCode<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "ID" : {
            "type" : "integer",
            "description" : "OfficeGuy identifier<div><i>Leave empty to create a new entity or search by other fields when applicable</i></div>",
            "format" : "int64",
            "nullable" : true
          },
          "Folder" : {
            "type" : "string",
            "description" : "Folder identifier.<div><i>Can be either application folder name, or FolderID.</i></div>",
            "nullable" : true
          },
          "Properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : false
            },
            "description" : "Entity fields",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Core_APICredentials" : {
        "required" : [ "APIKey", "CompanyID" ],
        "type" : "object",
        "properties" : {
          "CompanyID" : {
            "type" : "integer",
            "description" : "Company identifier",
            "format" : "int64"
          },
          "APIKey" : {
            "type" : "string",
            "description" : "API key secret"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Customers_Create_Request" : {
        "required" : [ "Credentials", "Details" ],
        "type" : "object",
        "properties" : {
          "Details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer details"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Customers_Create_Response" : {
        "type" : "object",
        "properties" : {
          "CustomerID" : {
            "type" : "integer",
            "description" : "Customer number",
            "format" : "int64"
          },
          "CustomerHistoryURL" : {
            "type" : "string",
            "description" : "Link to the customer details page (דף מידע ללקוח/ה)",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Teva.Common.ResponseStatus" : {
        "enum" : [ "Success", "BusinessError", "TechnicalError" ],
        "type" : "string"
      },
      "Response_Accounting_Customers_Create_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Customers_Create_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ContentLanguage" : {
        "enum" : [ "he", "en", "es", "ar" ],
        "type" : "string"
      },
      "Accounting_Customers_Update_Response" : {
        "type" : "object",
        "properties" : {
          "CustomerID" : {
            "type" : "integer",
            "description" : "Customer number",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_Accounting_Customers_Update_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Customers_Update_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_DocumentType" : {
        "enum" : [ "Invoice", "InvoiceAndReceipt", "Receipt", "ProformaInvoice", "DonationReceipt", "CreditInvoice", "CreditInvoiceAndReceipt", "CreditReceipt", "Order", "DeliveryNote", "GoodsReturnNote", "PurchasingOrder", "PriceQuotation", "PaymentRequest", "CreditDonationReceipt" ],
        "type" : "string"
      },
      "Accounting_Typed_Language" : {
        "enum" : [ "Hebrew", "English", "Arabic", "Spanish" ],
        "type" : "string"
      },
      "Accounting_Documents_Send_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "description" : "Document identifier",
            "format" : "int64",
            "nullable" : true
          },
          "DocumentType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentType"
            } ],
            "description" : "Document type",
            "nullable" : true
          },
          "DocumentNumber" : {
            "type" : "integer",
            "description" : "Document number",
            "format" : "int64",
            "nullable" : true
          },
          "EmailAddress" : {
            "type" : "string",
            "description" : "Email address<div><i>Defaults to the customer email address</i></div>",
            "nullable" : true
          },
          "SenderUserID" : {
            "type" : "integer",
            "description" : "Sender user ID<div><i>Defaults to the company owner</i></div>",
            "format" : "int64",
            "nullable" : true
          },
          "Original" : {
            "type" : "boolean",
            "description" : "Send original document if possible<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "Language" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Language"
            } ],
            "description" : "Email language<div><i>Defaults to the company language</i></div>",
            "nullable" : true
          },
          "PersonalMessage" : {
            "type" : "string",
            "description" : "Personal message",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Core_APIEmptyResponse" : {
        "type" : "object",
        "properties" : {
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_GetPDF_Request" : {
        "required" : [ "Credentials", "Original" ],
        "type" : "object",
        "properties" : {
          "DocumentID" : {
            "type" : "integer",
            "description" : "Document identifier",
            "format" : "int64",
            "nullable" : true
          },
          "DocumentType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentType"
            } ],
            "description" : "Document type",
            "nullable" : true
          },
          "DocumentNumber" : {
            "type" : "integer",
            "description" : "Document number",
            "format" : "int64",
            "nullable" : true
          },
          "Original" : {
            "type" : "boolean",
            "description" : "Send original document if possible"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_GetDetails_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "DocumentID" : {
            "type" : "integer",
            "description" : "Document identifier",
            "format" : "int64",
            "nullable" : true
          },
          "DocumentType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentType"
            } ],
            "description" : "Document type",
            "nullable" : true
          },
          "DocumentNumber" : {
            "type" : "integer",
            "description" : "Document number",
            "format" : "int64",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_DocumentSendByEmail" : {
        "type" : "object",
        "properties" : {
          "EmailAddress" : {
            "type" : "string",
            "description" : "Recipient email address<div><i>Defaults to the customer email address</i></div>",
            "nullable" : true
          },
          "Original" : {
            "type" : "boolean",
            "description" : "Send original document / copy?"
          },
          "SendAsPaymentRequest" : {
            "type" : "boolean",
            "description" : "Send document as a payment request"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_DocumentCurrency" : {
        "enum" : [ "ILS", "USD", "EUR", "CAD", "CHF", "GBP", "AUD" ],
        "type" : "string"
      },
      "Accounting_Typed_DocumentDetails" : {
        "required" : [ "Customer", "Type" ],
        "type" : "object",
        "properties" : {
          "IsDraft" : {
            "type" : "boolean",
            "description" : "Save document as draft<div><i>Leave empty for final document</i></div>",
            "nullable" : true
          },
          "Date" : {
            "type" : "string",
            "description" : "Document date<div><i>Defaults to the current date</i></div>",
            "format" : "date-time",
            "nullable" : true
          },
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer"
          },
          "SendByEmail" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentSendByEmail"
            } ],
            "description" : "Send document by email after creation",
            "nullable" : true
          },
          "Language" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Language"
            } ],
            "description" : "Document language<div><i>Defaults to the company language</i></div>",
            "nullable" : true
          },
          "Currency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentCurrency"
            } ],
            "description" : "Document currency<div><i>Defaults to the company currency</i></div>",
            "nullable" : true
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentType"
            } ],
            "description" : "Document type"
          },
          "Description" : {
            "type" : "string",
            "description" : "Document description. The description is shown in the printed document.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_IncomeItemSearchMode" : {
        "enum" : [ "Automatic", "None", "ExternalIdentifier", "Name" ],
        "type" : "string"
      },
      "Accounting_Typed_IncomeItem" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "description" : "OfficeGuy identifier",
            "format" : "int64",
            "nullable" : true
          },
          "Name" : {
            "type" : "string",
            "description" : "Item name",
            "nullable" : true
          },
          "Price" : {
            "type" : "number",
            "description" : "Item price (for single unit)",
            "format" : "double",
            "nullable" : true
          },
          "Currency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentCurrency"
            } ],
            "description" : "Price currency<div><i>Leave empty for company default</i></div>",
            "nullable" : true
          },
          "Cost" : {
            "type" : "number",
            "description" : "Item cost (for single unit)",
            "format" : "double",
            "nullable" : true
          },
          "ExternalIdentifier" : {
            "type" : "string",
            "description" : "Customer external identifier",
            "nullable" : true
          },
          "SearchMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_IncomeItemSearchMode"
            } ],
            "nullable" : true
          },
          "Properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : false
            },
            "description" : "Entity fields",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_DocumentItem" : {
        "type" : "object",
        "properties" : {
          "Quantity" : {
            "type" : "number",
            "description" : "Quantity<div><i>Defaults to 1</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "UnitPrice" : {
            "type" : "number",
            "description" : "Unit price in ILS<div><i>Single unit price.\r\nLeave this empty for non-ILS documents and automatic exchange rate.</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "TotalPrice" : {
            "type" : "number",
            "description" : "Total price in ILS<div><i>Leave this empty to auto calculate on ILS documents: Total price - Unit price * Quantity.\r\nLeave this empty for non-ILS documents and automatic exchange rate.</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "DocumentCurrency_UnitPrice" : {
            "type" : "number",
            "description" : "Unit price in document currency<div><i>Single unit price in the document currency.\r\nLeave this empty for ILS documents / automatic exchange rate.</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "DocumentCurrency_TotalPrice" : {
            "type" : "number",
            "description" : "Total price in document currency<div><i>Leave this empty to auto calculate: Total price - Unit price * Quantity.\r\nLeave this empty for ILS documents / automatic exchange rate.</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "Item" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_IncomeItem"
            } ],
            "description" : "Item details",
            "nullable" : true
          },
          "Description" : {
            "type" : "string",
            "description" : "Document description. The description is shown in the printed document.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_Payment_General" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Accounting_Typed_Payment_Cash" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Accounting_Typed_Payment_BankTransfer" : {
        "type" : "object",
        "properties" : {
          "BankNumber" : {
            "type" : "integer",
            "description" : "Israeli bank number<div><i>For instance, 12 indicates Bank Hapoalim.</i></div>",
            "format" : "int64",
            "nullable" : true
          },
          "BranchNumber" : {
            "type" : "integer",
            "description" : "Israeli bank branch number",
            "format" : "int64",
            "nullable" : true
          },
          "AccountNumber" : {
            "type" : "string",
            "description" : "Bank account number",
            "nullable" : true
          },
          "Reference" : {
            "type" : "string",
            "description" : "Bank reference number",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_Payment_Cheque" : {
        "required" : [ "AccountNumber", "BankNumber", "BranchNumber", "ChequeNumber" ],
        "type" : "object",
        "properties" : {
          "BankNumber" : {
            "type" : "integer",
            "description" : "Israeli bank number<div><i>For instance, 12 indicates Bank Hapoalim.</i></div>",
            "format" : "int64"
          },
          "BranchNumber" : {
            "type" : "integer",
            "description" : "Israeli bank branch number",
            "format" : "int64"
          },
          "AccountNumber" : {
            "type" : "string",
            "description" : "Bank account number"
          },
          "ChequeNumber" : {
            "type" : "string",
            "description" : "Cheque number"
          },
          "DueDate" : {
            "type" : "string",
            "description" : "Due date",
            "format" : "date-time",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_Payment_CreditCard" : {
        "required" : [ "Last4Digits" ],
        "type" : "object",
        "properties" : {
          "CardBrand" : {
            "type" : "string",
            "description" : "Credit card brand",
            "nullable" : true
          },
          "Last4Digits" : {
            "type" : "string",
            "description" : "Last 4 credit card digits"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_Payment_Other" : {
        "type" : "object",
        "properties" : {
          "Type" : {
            "type" : "string",
            "description" : "Payment type",
            "nullable" : true
          },
          "Description" : {
            "type" : "string",
            "description" : "Payment description",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_Payment_Digital" : {
        "type" : "object",
        "properties" : {
          "Type" : {
            "type" : "string",
            "description" : "Digital payment type",
            "nullable" : true
          },
          "Description" : {
            "type" : "string",
            "description" : "Digital payment description",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_Payment_TaxWithholding" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Accounting_Typed_DocumentPayment" : {
        "type" : "object",
        "properties" : {
          "Amount" : {
            "type" : "number",
            "description" : "Received payment amount<div><i>Leave this empty for non-ILS documents and automatic exchange rate</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "DocumentCurrency_Amount" : {
            "type" : "number",
            "description" : "Received payment amount<div><i>Leave this empty for ILS documents / automatic exchange rate</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "Details_General" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Payment_General"
            } ],
            "description" : "General details<div><i>Provide when payment method isn't detailed</i></div>",
            "nullable" : true
          },
          "Details_Cash" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Payment_Cash"
            } ],
            "description" : "Cash details<div><i>Provide when payment was made using cash</i></div>",
            "nullable" : true
          },
          "Details_BankTransfer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Payment_BankTransfer"
            } ],
            "description" : "Bank transfer details<div><i>Provide when payment was made using bank transfer</i></div>",
            "nullable" : true
          },
          "Details_Cheque" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Payment_Cheque"
            } ],
            "description" : "Cheque details<div><i>Provide when payment was made using cheque</i></div>",
            "nullable" : true
          },
          "Details_CreditCard" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Payment_CreditCard"
            } ],
            "description" : "Credit card details<div><i>Provide when payment was made using external credit card</i></div>",
            "nullable" : true
          },
          "Details_Other" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Payment_Other"
            } ],
            "description" : "Other details<div><i>Provide when payment was made using custom payment method</i></div>",
            "nullable" : true
          },
          "Details_Digital" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Payment_Digital"
            } ],
            "description" : "Digital details<div><i>Provide when payment was made using digital payment method</i></div>",
            "nullable" : true
          },
          "Details_TaxWithholding" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Payment_TaxWithholding"
            } ],
            "description" : "Tax Withholding details<div><i>Provide when taxwithholding</i></div>",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_GetDetails_Response" : {
        "type" : "object",
        "properties" : {
          "Document" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentDetails"
            } ],
            "nullable" : true
          },
          "Items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentItem"
            },
            "nullable" : true
          },
          "Payments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentPayment"
            },
            "nullable" : true
          },
          "DocumentDownloadURL" : {
            "type" : "string",
            "description" : "Document download URL<div><i>Produced document will be original on first visit, or certified copy on additional visits.</i></div>",
            "nullable" : true
          },
          "DocumentID" : {
            "type" : "integer",
            "description" : "OfficeGuy Document identifier<div><i>DocumentID is an internal identifier (also known as Card Number on OfficeGuy). Keep this for further API calls.</i></div>",
            "format" : "int64"
          },
          "DocumentNumber" : {
            "type" : "integer",
            "description" : "Document number<div><i>For instance, for Invoice #1000, the DocumentNumber will be 1000.</i></div>",
            "format" : "int64",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Accounting_Documents_GetDetails_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Documents_GetDetails_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_Create_Request" : {
        "required" : [ "Credentials", "Details" ],
        "type" : "object",
        "properties" : {
          "Details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentDetails"
            } ],
            "description" : "General document details"
          },
          "Items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentItem"
            },
            "description" : "Document items<div><i>Can be used in Invoice, Invoice/Receipt, Proforma invoice etc.</i></div>",
            "nullable" : true
          },
          "Payments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentPayment"
            },
            "description" : "Document payments (Can be used in invoice+receipt/receipt)<div><i>Please note each payment should contain a single details object (Cash/BankTransfer/Cheque/CreditCard/Other), multiple payments are handled through the payments array.</i></div>",
            "nullable" : true
          },
          "VATIncluded" : {
            "type" : "boolean",
            "description" : "Is VAT included in the prices?<div><i>Leave empty for false.\r\nRelevant for items only.</i></div>",
            "nullable" : true
          },
          "VATRate" : {
            "type" : "number",
            "description" : "Document VAT Rate<div><i>Leave empty for company default.\r\nRelevant for items only.</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "OriginalDocumentID" : {
            "type" : "integer",
            "description" : "Original document identifier.<div><i>This allows keeping a relationship between an original and a created document (such as credits for debit invoices)</i></div>",
            "format" : "int64",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_Create_Response" : {
        "type" : "object",
        "properties" : {
          "DocumentID" : {
            "type" : "integer",
            "description" : "Document ID",
            "format" : "int64"
          },
          "DocumentNumber" : {
            "type" : "integer",
            "description" : "Document number",
            "format" : "int64",
            "nullable" : true
          },
          "CustomerID" : {
            "type" : "integer",
            "description" : "Customer number",
            "format" : "int64"
          },
          "DocumentDownloadURL" : {
            "type" : "string",
            "description" : "Document download URL<div><i>Produced document will be original (on first fetching), or certified copy.</i></div>",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Accounting_Documents_Create_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Documents_Create_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_ExpenseItemSearchMode" : {
        "enum" : [ "Automatic", "None", "ExternalIdentifier", "Name" ],
        "type" : "string"
      },
      "Accounting_Typed_ExpenseItem" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "description" : "OfficeGuy identifier",
            "format" : "int64",
            "nullable" : true
          },
          "Name" : {
            "type" : "string",
            "description" : "Expense item name",
            "nullable" : true
          },
          "ExternalIdentifier" : {
            "type" : "string",
            "description" : "Expense item external identifier",
            "nullable" : true
          },
          "SearchMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_ExpenseItemSearchMode"
            } ],
            "nullable" : true
          },
          "Properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : false
            },
            "description" : "Entity fields",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Typed_DocumentExpenseItem" : {
        "type" : "object",
        "properties" : {
          "Item" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_ExpenseItem"
            } ],
            "description" : "Expense item",
            "nullable" : true
          },
          "Amount" : {
            "type" : "number",
            "description" : "Amount in ILS",
            "format" : "double",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_AddExpense_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "ExpenseNumber" : {
            "type" : "string",
            "description" : "Expense invoice number",
            "nullable" : true
          },
          "ExpenseFile" : {
            "type" : "string",
            "description" : "Expense file contents",
            "format" : "byte",
            "nullable" : true
          },
          "Supplier" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Expense supplier",
            "nullable" : true
          },
          "Date" : {
            "type" : "string",
            "description" : "Expense date",
            "format" : "date-time",
            "nullable" : true
          },
          "Lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentExpenseItem"
            },
            "description" : "Expense items and amounts",
            "nullable" : true
          },
          "Payments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentPayment"
            },
            "description" : "Document payments<div><i>Please note each payment should contain a single details object (Cash/BankTransfer/Cheque/CreditCard/Other), multiple payments are handled through the payments array.</i></div>",
            "nullable" : true
          },
          "Description" : {
            "type" : "string",
            "description" : "Expense description/remarks",
            "nullable" : true
          },
          "IsDraft" : {
            "type" : "boolean",
            "description" : "Save document as draft<div><i>Leave empty for Draft document</i></div>",
            "nullable" : true
          },
          "VATRate" : {
            "type" : "number",
            "description" : "Document VAT Rate<div><i>Leave empty for company default</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_AddExpense_Response" : {
        "type" : "object",
        "properties" : {
          "DocumentID" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_Accounting_Documents_AddExpense_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Documents_AddExpense_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_Cancel_Request" : {
        "required" : [ "Credentials", "Description", "DocumentID" ],
        "type" : "object",
        "properties" : {
          "DocumentID" : {
            "type" : "integer",
            "description" : "Cancelled document identifier",
            "format" : "int64"
          },
          "Description" : {
            "type" : "string",
            "description" : "Cancel description (reason)"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_Cancel_Response" : {
        "type" : "object",
        "properties" : {
          "DocumentID" : {
            "type" : "integer",
            "description" : "Cancel document identifier",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_Accounting_Documents_Cancel_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Documents_Cancel_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_MoveToBooks_Request" : {
        "required" : [ "Credentials", "DocumentID" ],
        "type" : "object",
        "properties" : {
          "DocumentID" : {
            "type" : "integer",
            "description" : "Document identifier",
            "format" : "int64"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_Documents_MoveToBooks_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Accounting_Documents_MoveToBooks_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Documents_MoveToBooks_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_General_VerifyBankAccount_Request" : {
        "required" : [ "AccountNumber", "BankCode", "BranchCode", "Credentials" ],
        "type" : "object",
        "properties" : {
          "BankCode" : {
            "type" : "integer",
            "description" : "Bank code",
            "format" : "int32"
          },
          "BranchCode" : {
            "type" : "integer",
            "description" : "Branch code",
            "format" : "int32"
          },
          "AccountNumber" : {
            "type" : "integer",
            "description" : "Account number",
            "format" : "int32"
          },
          "VerifyBranchNumber" : {
            "type" : "boolean",
            "description" : "Verifies if the branch exists",
            "nullable" : true
          },
          "VerifyLimitedAccount" : {
            "type" : "boolean",
            "description" : "Verifies if the account is limited in addition",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_General_VerifyBankAccount_Response" : {
        "type" : "object",
        "properties" : {
          "Result" : {
            "type" : "boolean",
            "description" : "Result status:\r\nTrue = Valid bank account\r\nFalse = Invalid bank account\r\nNull = Unsupported bank",
            "nullable" : true
          },
          "IsLimitedAccount" : {
            "type" : "boolean",
            "description" : "Limited bank account status:\r\nTrue = Bank account is limited\r\nFalse = Bank account is not limited\r\nNull = Bank account wasn't verified",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Accounting_General_VerifyBankAccount_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_General_VerifyBankAccount_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_General_GetVATRate_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "Date" : {
            "type" : "string",
            "description" : "Defaults to current date",
            "format" : "date-time",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_General_GetVATRate_Response" : {
        "type" : "object",
        "properties" : {
          "Rate" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "additionalProperties" : false
      },
      "Response_Accounting_General_GetVATRate_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_General_GetVATRate_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_General_GetExchangeRate_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "Date" : {
            "type" : "string",
            "description" : "Defaults to current date",
            "format" : "date-time",
            "nullable" : true
          },
          "Currency_From" : {
            "type" : "string",
            "description" : "Original currency<div><i>Defaults to USD</i></div>",
            "nullable" : true
          },
          "Currency_To" : {
            "type" : "string",
            "description" : "Target currency<div><i>Defaults to ILS</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_General_GetExchangeRate_Response" : {
        "type" : "object",
        "properties" : {
          "Rate" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "additionalProperties" : false
      },
      "Response_Accounting_General_GetExchangeRate_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_General_GetExchangeRate_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "OfficeGuy.Apps.Accounting.Typed.DocumentsTheme" : {
        "enum" : [ "Material", "White", "Orange", "Green", "Purple" ],
        "type" : "string"
      },
      "Accounting_General_UpdateSettings_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "DocumentsEmailAddressSpecified" : {
            "type" : "boolean",
            "description" : "Indicates if the DocumentsEmailAddress should be updated"
          },
          "DocumentsEmailAddress" : {
            "type" : "string",
            "description" : "Email address display on all documents<div><i>By default, the company email address will be displayed</i></div>",
            "nullable" : true
          },
          "AccountantEmailSpecified" : {
            "type" : "boolean",
            "description" : "Indicates if the AccountantEmail should be updated"
          },
          "AccountantEmail" : {
            "type" : "string",
            "description" : "Email address for sending all monthly documents each month",
            "nullable" : true
          },
          "IncomeTaxCreditForDonation" : {
            "type" : "boolean",
            "description" : "Indicates whether the NPO is 46a donations approved, and should be presented on donation receipts",
            "nullable" : true
          },
          "EnableCustomDocumentDates" : {
            "type" : "boolean",
            "description" : "Indicates documents can be created in any custom date.<div><i>By default, documents can only be created in a sequence order.</i></div>",
            "nullable" : true
          },
          "DocumentsTheme" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Apps.Accounting.Typed.DocumentsTheme"
            } ],
            "description" : "Choose documents printing theme.<div><i>By default, documents are created using the Material theme.</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_General_UpdateSettings_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Accounting_General_UpdateSettings_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_General_UpdateSettings_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_General_SetNextDocumentNumber_Request" : {
        "required" : [ "Credentials", "NextDocumentNumber", "Type" ],
        "type" : "object",
        "properties" : {
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentType"
            } ],
            "description" : "Document type"
          },
          "NextDocumentNumber" : {
            "type" : "integer",
            "description" : "Next document number to set.<div><i>Note that the document number has to be higher than the last issued document number.\r\nBy default, all documents numbers are set to 1000.</i></div>",
            "format" : "int64"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_General_SetNextDocumentNumber_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Accounting_General_SetNextDocumentNumber_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_General_SetNextDocumentNumber_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Accounting_IncomeItems_Create_Request" : {
        "required" : [ "Credentials", "IncomeItem" ],
        "type" : "object",
        "properties" : {
          "IncomeItem" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_IncomeItem"
            } ]
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Accounting_IncomeItems_Create_Response" : {
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_Accounting_IncomeItems_Create_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_IncomeItems_Create_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Typed_Currency" : {
        "enum" : [ "ILS", "USD", "EURO" ],
        "type" : "string"
      },
      "CreditGuy_Billing_Load_Request_Load_Request_Transaction" : {
        "required" : [ "Amount", "ExpirationMonth", "ExpirationYear" ],
        "type" : "object",
        "properties" : {
          "FormatPreservingToken" : {
            "type" : "string",
            "nullable" : true
          },
          "CardToken" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : true
          },
          "ExpirationMonth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ExpirationYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Amount" : {
            "type" : "number",
            "format" : "double"
          },
          "PaymentsNonFirstCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "PaymentsFirstAmount" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "PaymentsNonFirstAmount" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "AuthNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "CitizenID" : {
            "type" : "string",
            "nullable" : true
          },
          "Currency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Typed_Currency"
            } ],
            "nullable" : true
          },
          "UniqueIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "MerchantNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomData_1" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomData_2" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomData_3" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomData_4" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomData_5" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Billing_Load_Request" : {
        "required" : [ "BillingIdentifier", "Credentials", "Transactions" ],
        "type" : "object",
        "properties" : {
          "BillingIdentifier" : {
            "type" : "string",
            "description" : "Unique billing process identifier"
          },
          "Transactions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreditGuy_Billing_Load_Request_Load_Request_Transaction"
            },
            "description" : "Billing transactions to be loaded."
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Billing_Load_Response" : {
        "type" : "object",
        "properties" : {
          "TransactionIDs" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Loaded transactions identifiers",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CreditGuy_Billing_Load_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Billing_Load_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Billing_Process_Request" : {
        "required" : [ "BillingIdentifier", "Credentials" ],
        "type" : "object",
        "properties" : {
          "BillingIdentifier" : {
            "type" : "string",
            "description" : "Unique billing process identifier"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Billing_Process_Response_Process_Response_Status" : {
        "enum" : [ "Started", "Processing", "Processed" ],
        "type" : "string"
      },
      "CreditGuy_Billing_Process_Response" : {
        "type" : "object",
        "properties" : {
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Billing_Process_Response_Process_Response_Status"
            } ],
            "description" : "Process status"
          }
        },
        "additionalProperties" : false
      },
      "Response_CreditGuy_Billing_Process_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Billing_Process_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Billing_GetStatus_Request" : {
        "required" : [ "BillingIdentifier", "Credentials" ],
        "type" : "object",
        "properties" : {
          "BillingIdentifier" : {
            "type" : "string",
            "description" : "Unique billing process identifier"
          },
          "ListTransactions" : {
            "type" : "boolean",
            "description" : "Include detailed list per transaction<div><i>Defaults to false</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "OfficeGuy.Apps.CreditGuy.Typed.TransactionStatus" : {
        "enum" : [ "Transmit_Valid", "Deposit_Valid", "Deposit_NotNeeded", "Transmit_Invalid", "Deposit_Invalid", "Billing_Pending" ],
        "type" : "string"
      },
      "CreditGuy_Billing_GetStatus_Response_GetStatus_Response_Transaction" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "CheckoutIndex" : {
            "type" : "string",
            "nullable" : true
          },
          "CheckoutRecordIndex" : {
            "type" : "string",
            "nullable" : true
          },
          "ReferenceNumber" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "AuthNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "UniqueIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Apps.CreditGuy.Typed.TransactionStatus"
            } ]
          },
          "ResultCode" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Billing_GetStatus_Response" : {
        "type" : "object",
        "properties" : {
          "Transmit_Pending" : {
            "type" : "integer",
            "description" : "Transactions pending transmit",
            "format" : "int64"
          },
          "Transmit_Failed" : {
            "type" : "integer",
            "description" : "Transactions failed on Shva",
            "format" : "int64"
          },
          "Deposit_Pending" : {
            "type" : "integer",
            "description" : "Transactions successfully deposited on Shva",
            "format" : "int64"
          },
          "Deposit_Failed" : {
            "type" : "integer",
            "description" : "Transactions failed while depositing on Shva",
            "format" : "int64"
          },
          "Deposit_Finished" : {
            "type" : "integer",
            "description" : "Transactions deposited successfully on Shva",
            "format" : "int64"
          },
          "Finished" : {
            "type" : "boolean",
            "description" : "Indication whether the billing process has finished"
          },
          "Transactions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreditGuy_Billing_GetStatus_Response_GetStatus_Response_Transaction"
            },
            "description" : "Detailed list of transactions (Returned when ListTransactions = true)",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CreditGuy_Billing_GetStatus_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Billing_GetStatus_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "OfficeGuy.Apps.CreditGuy.Typed.ParamJ" : {
        "enum" : [ "CheckDetails", "Charge", "AuthorizeOnly" ],
        "type" : "string"
      },
      "OfficeGuy.Apps.CreditGuy.Typed.TransactionType" : {
        "enum" : [ "Debit", "StandingOrder", "Credit", "CreditEMV" ],
        "type" : "string"
      },
      "CreditGuy_Gateway_Transaction_Request" : {
        "required" : [ "Credentials", "ParamJ" ],
        "type" : "object",
        "properties" : {
          "ParamJ" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Apps.CreditGuy.Typed.ParamJ"
            } ],
            "description" : "Transaction type"
          },
          "CardNumber" : {
            "type" : "string",
            "description" : "Full card number<div><i>Leave this empty when using FormatPreservingToken/CardToken/SingleUseToken</i></div>",
            "nullable" : true
          },
          "FormatPreservingToken" : {
            "type" : "string",
            "description" : "Format preserving card number<div><i>Leave this empty when using CardNumber/CardToken/SingleUseToken</i></div>",
            "nullable" : true
          },
          "CardToken" : {
            "type" : "string",
            "description" : "Card token<div><i>Leave this empty when using CardNumber/FormatPreservingToken/SingleUseToken</i></div>",
            "format" : "uuid",
            "nullable" : true
          },
          "SingleUseToken" : {
            "type" : "string",
            "description" : "Single use token, for all payment details (CardNumber, Expiration, CVV, CitizenID).<div><i>Used primarily by the Payments JavaScript API.\r\n(Leave this empty when using CardNumber/FormatPreservingToken/CardToken)</i></div>",
            "nullable" : true
          },
          "ExpirationMonth" : {
            "type" : "integer",
            "description" : "Card expiration month (1-12)<div><i>Leave this empty when using SingleUseToken</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "ExpirationYear" : {
            "type" : "integer",
            "description" : "Card expiration year (4 digits)<div><i>Leave this empty when using SingleUseToken</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "Amount" : {
            "type" : "number",
            "description" : "Transaction amount<div><i>Leave this empty when using ParamJ = CheckDetails</i></div>",
            "format" : "double"
          },
          "PaymentsNonFirstCount" : {
            "type" : "integer",
            "description" : "Non-first payments count<div><i>Leave this empty for non-payments transaction</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "PaymentsFirstAmount" : {
            "type" : "number",
            "description" : "First payment amount<div><i>Leave this empty for non-payments transaction</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "PaymentsNonFirstAmount" : {
            "type" : "number",
            "description" : "Non-first payment amount<div><i>Leave this empty for non-payments transaction</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "AuthNumber" : {
            "type" : "string",
            "description" : "Transaction authorization number",
            "nullable" : true
          },
          "CVV" : {
            "type" : "string",
            "description" : "Card CVV/CVV2",
            "nullable" : true
          },
          "Track2" : {
            "type" : "string",
            "description" : "Card Track2",
            "nullable" : true
          },
          "CitizenID" : {
            "type" : "string",
            "description" : "Israel Citizen ID / Passport Number",
            "nullable" : true
          },
          "Currency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Typed_Currency"
            } ],
            "description" : "Transaction currency<div><i>Defaults to ILS</i></div>",
            "nullable" : true
          },
          "Language" : {
            "type" : "string",
            "description" : "Transaction language<div><i>Leave this empty to use the company default language</i></div>",
            "nullable" : true
          },
          "UniqueIdentifier" : {
            "type" : "string",
            "description" : "Unique transaction identifier.<div><i>This parameter can be used for preventing duplicate transactions</i></div>",
            "nullable" : true
          },
          "MerchantNumber" : {
            "type" : "string",
            "description" : "Shva merchant number (Terminal number).<div><i>This parameter should only be used when multiple merchants are defined in the company.</i></div>",
            "nullable" : true
          },
          "TransactionType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Apps.CreditGuy.Typed.TransactionType"
            } ],
            "description" : "Transaction type. This allows crediting or cancelling existing transaction.<div><i>Defaults to Debit</i></div>",
            "nullable" : true
          },
          "CustomData_1" : {
            "type" : "string",
            "description" : "Custom user supplied data<div><i>Supports up to 100 chars in each field</i></div>",
            "nullable" : true
          },
          "CustomData_2" : {
            "type" : "string",
            "description" : "Custom user supplied data<div><i>Supports up to 100 chars in each field</i></div>",
            "nullable" : true
          },
          "CustomData_3" : {
            "type" : "string",
            "description" : "Custom user supplied data<div><i>Supports up to 100 chars in each field</i></div>",
            "nullable" : true
          },
          "CustomData_4" : {
            "type" : "string",
            "description" : "Custom user supplied data<div><i>Supports up to 100 chars in each field</i></div>",
            "nullable" : true
          },
          "CustomData_5" : {
            "type" : "string",
            "description" : "Custom user supplied data<div><i>Supports up to 100 chars in each field</i></div>",
            "nullable" : true
          },
          "MultiSupplierNumber" : {
            "type" : "string",
            "description" : "Multi supplier number.",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Gateway_Transaction_Response" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean",
            "description" : "Is valid transaction"
          },
          "ResultCode" : {
            "type" : "string",
            "description" : "Shva result code (000 is valid)",
            "nullable" : true
          },
          "ResultDescription" : {
            "type" : "string",
            "description" : "Shva result description",
            "nullable" : true
          },
          "TransactionID" : {
            "type" : "integer",
            "description" : "CreditGuy transaction identifier",
            "format" : "int64"
          },
          "FileNumber" : {
            "type" : "string",
            "description" : "Shva file number",
            "nullable" : true
          },
          "CheckoutIndex" : {
            "type" : "string",
            "description" : "Shva checkout index",
            "nullable" : true
          },
          "CheckoutRecordIndex" : {
            "type" : "string",
            "description" : "Shva checkout record index",
            "nullable" : true
          },
          "Acquirer" : {
            "type" : "integer",
            "description" : "Card acquirer",
            "format" : "int64",
            "nullable" : true
          },
          "Brand" : {
            "type" : "integer",
            "description" : "Card brand",
            "format" : "int64",
            "nullable" : true
          },
          "Issuer" : {
            "type" : "integer",
            "description" : "Card issuer",
            "format" : "int64",
            "nullable" : true
          },
          "AuthNumber" : {
            "type" : "string",
            "description" : "Charge authorization number",
            "nullable" : true
          },
          "CardToken" : {
            "type" : "string",
            "description" : "Card token, this field may be stored on non-pci compliant systems",
            "format" : "uuid",
            "nullable" : true
          },
          "ExpirationMonth" : {
            "type" : "integer",
            "description" : "Card expiration month (1-12), this field may be stored on non-pci compliant systems",
            "format" : "int32",
            "nullable" : true
          },
          "ExpirationYear" : {
            "type" : "integer",
            "description" : "Card expiration year (4 digits), this field may be stored on non-pci compliant systems",
            "format" : "int32",
            "nullable" : true
          },
          "CitizenID" : {
            "type" : "string",
            "description" : "Israel Citizen ID / Passport Number, this field may be stored on non pci-compliant systems",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CreditGuy_Gateway_Transaction_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Gateway_Transaction_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Core_APIPublicCredentials" : {
        "type" : "object",
        "properties" : {
          "CompanyID" : {
            "type" : "integer",
            "description" : "Company identifier",
            "format" : "int64"
          },
          "APIPublicKey" : {
            "type" : "string",
            "description" : "API public key",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Gateway_GetTransaction_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "description" : "Transaction ID",
            "format" : "int64",
            "nullable" : true
          },
          "UniqueIdentifier" : {
            "type" : "string",
            "description" : "Unique transaction identifer",
            "nullable" : true
          },
          "IncludeFirstDigits" : {
            "type" : "boolean",
            "description" : "Indicates whether to fetch the first 2/6 digits of the card number as well.\r\nDefaults to False",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APIPublicCredentials"
            } ],
            "description" : "Company API public credentials"
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Gateway_GetTransaction_Response" : {
        "type" : "object",
        "properties" : {
          "Code" : {
            "type" : "string",
            "description" : "Shva result code",
            "nullable" : true
          },
          "Description" : {
            "type" : "string",
            "description" : "Shva result description",
            "nullable" : true
          },
          "MerchantNumber" : {
            "type" : "string",
            "description" : "Shva merchant number (Terminal number)",
            "nullable" : true
          },
          "AuthNumber" : {
            "type" : "string",
            "description" : "Charge authorization number",
            "nullable" : true
          },
          "Acquirer" : {
            "type" : "integer",
            "description" : "Card acquirer",
            "format" : "int64",
            "nullable" : true
          },
          "Brand" : {
            "type" : "integer",
            "description" : "Card brand",
            "format" : "int64",
            "nullable" : true
          },
          "Issuer" : {
            "type" : "integer",
            "description" : "Card issuer",
            "format" : "int64",
            "nullable" : true
          },
          "FileNumber" : {
            "type" : "string",
            "description" : "Shva file number",
            "nullable" : true
          },
          "CheckoutIndex" : {
            "type" : "string",
            "description" : "Shva checkout index",
            "nullable" : true
          },
          "CheckoutRecordIndex" : {
            "type" : "string",
            "description" : "Shva checkout record index",
            "nullable" : true
          },
          "ReferenceNumber" : {
            "type" : "integer",
            "description" : "Shva reference number",
            "format" : "int64",
            "nullable" : true
          },
          "CardToken" : {
            "type" : "string",
            "description" : "Card token",
            "format" : "uuid",
            "nullable" : true
          },
          "CardFPToken" : {
            "type" : "string",
            "description" : "Format preserved token",
            "nullable" : true
          },
          "CardPattern" : {
            "type" : "string",
            "description" : "Card number pattern (including the last 4 digits)",
            "nullable" : true
          },
          "CardExpiration" : {
            "type" : "string",
            "description" : "Credit card expiration",
            "format" : "date-time"
          },
          "Parameters" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Card parameters, as specified in the card parameters folder.",
            "nullable" : true
          },
          "CitizenID" : {
            "type" : "string",
            "description" : "Israeli Citizen ID / Passport Number",
            "nullable" : true
          },
          "ResultRecord" : {
            "type" : "string",
            "description" : "Full result record received from Shva",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CreditGuy_Gateway_GetTransaction_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Gateway_GetTransaction_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "OfficeGuy.Apps.CreditGuy.Typed.ExternalTokenizeMode" : {
        "enum" : [ "TokenizeOnly", "ValidateCard", "Authorize" ],
        "type" : "string"
      },
      "CreditGuy_Gateway_BeginRedirect_Request" : {
        "required" : [ "Credentials", "Mode" ],
        "type" : "object",
        "properties" : {
          "Mode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Apps.CreditGuy.Typed.ExternalTokenizeMode"
            } ],
            "description" : "Transaction type"
          },
          "Amount" : {
            "type" : "number",
            "description" : "Transaction amount",
            "format" : "double",
            "nullable" : true
          },
          "PaymentsNonFirstCount" : {
            "type" : "integer",
            "description" : "Non-first payments count<div><i>Leave this empty for non-payments transaction</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "PaymentsFirstAmount" : {
            "type" : "number",
            "description" : "First payment amount<div><i>Leave this empty for non-payments transaction</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "PaymentsNonFirstAmount" : {
            "type" : "number",
            "description" : "Non-first payment amount<div><i>Leave this empty for non-payments transaction</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "Currency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Typed_Currency"
            } ],
            "description" : "Transaction currency<div><i>Defaults to ILS</i></div>",
            "nullable" : true
          },
          "Identifier" : {
            "type" : "string",
            "description" : "Transaction identifier.<div><i>This parameter will be returned during redirect.</i></div>",
            "nullable" : true
          },
          "MerchantNumber" : {
            "type" : "string",
            "description" : "Shva merchant number (Terminal number).<div><i>This parameter should only be used when multiple merchants are defined in the company.</i></div>",
            "nullable" : true
          },
          "RedirectURL" : {
            "type" : "string",
            "description" : "Redirect URL<div><i>Leave this empty to use the default RedirectURL</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Gateway_BeginRedirect_Response" : {
        "type" : "object",
        "properties" : {
          "RedirectURL" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CreditGuy_Gateway_BeginRedirect_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Gateway_BeginRedirect_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Gateway_GetReferenceNumbers_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "IDs" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Transaction IDs (Maximum of 1000 identifiers)",
            "nullable" : true
          },
          "UniqueIdentifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Unique transaction identifer (Maximum of 1000 identifiers)",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APIPublicCredentials"
            } ],
            "description" : "Company API public credentials"
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Gateway_GetReferenceNumbers_Response" : {
        "type" : "object",
        "properties" : {
          "ReferenceNumbers_ByID" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Sequential list of all reference numbers for the given transaction ids",
            "nullable" : true
          },
          "ReferenceNumbers_ByUniqueIdentifier" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Sequential list of all reference numbers for the given unique transaction identifiers",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CreditGuy_Gateway_GetReferenceNumbers_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Gateway_GetReferenceNumbers_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Vault_Tokenize_Request" : {
        "required" : [ "CardNumber", "Credentials", "ForceFormatPreservingToken" ],
        "type" : "object",
        "properties" : {
          "GetFormatPreserving" : {
            "type" : "boolean",
            "description" : "Should tokenize method also return format preserved token, or only Guid token<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "CardNumber" : {
            "type" : "string",
            "description" : "Full card number to tokenize"
          },
          "ForceFormatPreservingToken" : {
            "type" : "string",
            "description" : "Forced format preserving token\r\nThis can be useful when migrating from another credit card gateway to OfficeGuy.\r\nPlease note the format preserving token should be a RANDOM identifier, which can't be reverse engineered into the card number (encoding/encrypting etc. isn't supported)."
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Vault_Tokenize_Response" : {
        "type" : "object",
        "properties" : {
          "Token" : {
            "type" : "string",
            "description" : "Card token",
            "format" : "uuid",
            "nullable" : true
          },
          "FormatPreservingToken" : {
            "type" : "string",
            "description" : "Format preserved token<div><i>Returned when GetFormatPreserving is used</i></div>",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CreditGuy_Vault_Tokenize_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Vault_Tokenize_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Vault_TokenizeSingleUse_Response" : {
        "type" : "object",
        "properties" : {
          "SingleUseToken" : {
            "type" : "string",
            "description" : "Token for single use. \r\nThis token can be used on the Transaction action, without specifying Expiration, CVV and CitizenID.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CreditGuy_Vault_TokenizeSingleUse_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreditGuy_Vault_TokenizeSingleUse_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CreditGuy_Vault_TokenizeSingleUse_Request" : {
        "required" : [ "CardNumber", "Credentials", "ExpirationMonth", "ExpirationYear" ],
        "type" : "object",
        "properties" : {
          "CardNumber" : {
            "type" : "string",
            "description" : "Full card number to tokenize"
          },
          "ExpirationMonth" : {
            "type" : "integer",
            "description" : "Card expiration month (1-12).",
            "format" : "int32"
          },
          "ExpirationYear" : {
            "type" : "integer",
            "description" : "Card expiration year (4 digits).",
            "format" : "int32"
          },
          "CVV" : {
            "type" : "string",
            "description" : "Card CVV/CVV2.",
            "nullable" : true
          },
          "CitizenID" : {
            "type" : "string",
            "description" : "Israel Citizen ID / Passport Number.",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APIPublicCredentials"
            } ],
            "description" : "Company API public credentials"
          }
        },
        "additionalProperties" : false
      },
      "Core_Typed.Entity" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "description" : "OfficeGuy identifier<div><i>Leave empty to create a new entity or search by other fields when applicable</i></div>",
            "format" : "int64",
            "nullable" : true
          },
          "Folder" : {
            "type" : "string",
            "description" : "Folder identifier.<div><i>Can be either application folder name, or FolderID.</i></div>",
            "nullable" : true
          },
          "Properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : false
            },
            "description" : "Entity fields",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_CreateEntity_Request" : {
        "required" : [ "Credentials", "Entity" ],
        "type" : "object",
        "properties" : {
          "Entity" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_Typed.Entity"
            } ],
            "description" : "The entity to be created"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_CreateEntity_Response" : {
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "description" : "Created entity identifier",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_CRM_Data_CreateEntity_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CRM_Data_CreateEntity_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_UpdateEntity_Request" : {
        "required" : [ "Credentials", "Entity" ],
        "type" : "object",
        "properties" : {
          "Entity" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_Typed.Entity"
            } ],
            "description" : "The entity to be updated"
          },
          "CreateIfMissing" : {
            "type" : "boolean",
            "description" : "Should the update create the entity if it doesn't exist<div><i>This can only be used when Entity.ID is 0\r\nDefaults to false.</i></div>",
            "nullable" : true
          },
          "RemoveExistingProperties" : {
            "type" : "boolean",
            "description" : "Should the update entity remove all existing properties, which didn't pass through the Entity.Properties list?<div><i>Defaults to false</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_UpdateEntity_Response" : {
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "description" : "Entity identifier",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_CRM_Data_UpdateEntity_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CRM_Data_UpdateEntity_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_ArchiveEntity_Request" : {
        "required" : [ "Credentials", "EntityID" ],
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "description" : "Entity identifier",
            "format" : "int64"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_DeleteEntity_Request" : {
        "required" : [ "Credentials", "EntityID" ],
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "description" : "Entity identifier",
            "format" : "int64"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Core_Typed.Filter" : {
        "type" : "object",
        "properties" : {
          "Property" : {
            "type" : "string",
            "description" : "Property to filter<div><i>Supports either property identifier (numeric) or property name</i></div>",
            "nullable" : true
          },
          "Value" : {
            "type" : "object",
            "additionalProperties" : false,
            "description" : "Filter value<div><i>Supports array with multiple values as well</i></div>",
            "nullable" : true
          },
          "Negative" : {
            "type" : "boolean",
            "description" : "Negative filter (excludes values)<div><i>Defaults to false.</i></div>",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Core_Typed.Order" : {
        "type" : "object",
        "properties" : {
          "Property" : {
            "type" : "string",
            "description" : "Property to order by (sort)",
            "nullable" : true
          },
          "Descending" : {
            "type" : "boolean",
            "description" : "Sort ascending/descending<div><i>(Defaults to ascending)</i></div>",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Core_Typed.Paging" : {
        "type" : "object",
        "properties" : {
          "StartIndex" : {
            "type" : "integer",
            "description" : "Paging start index",
            "format" : "int32",
            "nullable" : true
          },
          "PageSize" : {
            "type" : "integer",
            "description" : "Returned entities count.<div><i>Defaults to 10, minimum of 10, maximum of 1000.</i></div>",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_ListEntities_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "Folder" : {
            "type" : "string",
            "description" : "Folder identifier.<div><i>Can be either application folder name, or FolderID.</i></div>",
            "nullable" : true
          },
          "IncludeInheritedFolders" : {
            "type" : "boolean",
            "description" : "Include entities from inherited folders",
            "nullable" : true
          },
          "Filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Core_Typed.Filter"
            },
            "description" : "List filters",
            "nullable" : true
          },
          "Order" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_Typed.Order"
            } ],
            "description" : "List results order (sort)",
            "nullable" : true
          },
          "Paging" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_Typed.Paging"
            } ],
            "description" : "List paging",
            "nullable" : true
          },
          "LoadProperties" : {
            "type" : "boolean",
            "description" : "Load results properties<div><i>Defaults to false</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_ListEntities_Response" : {
        "type" : "object",
        "properties" : {
          "Entities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Core_Typed.Entity"
            },
            "description" : "Matched entities",
            "nullable" : true
          },
          "HasNextPage" : {
            "type" : "boolean",
            "description" : "Indicator whether the last page has reached"
          }
        },
        "additionalProperties" : false
      },
      "Response_CRM_Data_ListEntities_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CRM_Data_ListEntities_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_GetEntity_Request" : {
        "required" : [ "Credentials", "EntityID" ],
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "description" : "Entities identifier",
            "format" : "int64"
          },
          "IncludeIncomingProperties" : {
            "type" : "boolean",
            "description" : "Include incoming entity properties<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "IncludeFields" : {
            "type" : "boolean",
            "description" : "Include all entity fields<div><i>Defaults to True</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_GetEntity_Response" : {
        "type" : "object",
        "properties" : {
          "Entity" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_Typed.Entity"
            } ],
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CRM_Data_GetEntity_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CRM_Data_GetEntity_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_CountEntityUsage_Request" : {
        "required" : [ "Credentials", "EntityID" ],
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "description" : "Entity identifier",
            "format" : "int64"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Response_System.Int64" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "type" : "integer",
            "description" : "API specific response data",
            "format" : "int64"
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_GetEntityPrintHTML_Request" : {
        "required" : [ "Credentials", "EntityID", "SchemaID" ],
        "type" : "object",
        "properties" : {
          "SchemaID" : {
            "type" : "integer",
            "description" : "Schema identifier",
            "format" : "int64"
          },
          "EntityID" : {
            "type" : "integer",
            "description" : "Entity identifier",
            "format" : "int64"
          },
          "PDF" : {
            "type" : "boolean",
            "description" : "Get PDF instead of HTML<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Data_GetEntitiesHTML_Request" : {
        "required" : [ "Credentials", "SchemaID", "ViewID" ],
        "type" : "object",
        "properties" : {
          "SchemaID" : {
            "type" : "integer",
            "description" : "Schema identifier",
            "format" : "int64"
          },
          "ViewID" : {
            "type" : "integer",
            "description" : "View identifier",
            "format" : "int64"
          },
          "PDF" : {
            "type" : "boolean",
            "description" : "Get PDF instead of HTML<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Schema_GetFolder_Request" : {
        "required" : [ "Credentials", "Folder" ],
        "type" : "object",
        "properties" : {
          "Folder" : {
            "type" : "string",
            "description" : "Folder identifier.<div><i>Can be either application folder name, or FolderID.</i></div>"
          },
          "IncludeProperties" : {
            "type" : "boolean",
            "description" : "Get folder properties<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Typed_Folder" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Typed_Property" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Name" : {
            "type" : "string",
            "nullable" : true
          },
          "Description" : {
            "type" : "string",
            "nullable" : true
          },
          "Category" : {
            "type" : "string",
            "nullable" : true
          },
          "ValueType" : {
            "type" : "string",
            "nullable" : true
          },
          "APIName" : {
            "type" : "string",
            "nullable" : true
          },
          "Required" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Schema_GetFolder_Response" : {
        "type" : "object",
        "properties" : {
          "Folder" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CRM_Typed_Folder"
            } ],
            "nullable" : true
          },
          "Properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CRM_Typed_Property"
            },
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CRM_Schema_GetFolder_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CRM_Schema_GetFolder_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Teva.Common.DynamicDB.Typed.Status" : {
        "enum" : [ "Normal", "Archive", "Deleted", "Temporary" ],
        "type" : "string"
      },
      "CRM_Schema_ListFolders_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "IncludeInherited" : {
            "type" : "boolean",
            "nullable" : true
          },
          "NameFilter" : {
            "type" : "string",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.DynamicDB.Typed.Status"
            } ],
            "nullable" : true
          },
          "SortByName" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ApplicationName" : {
            "type" : "string",
            "nullable" : true
          },
          "HideForFoldersList" : {
            "type" : "boolean",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Schema_ListFolders_Response" : {
        "type" : "object",
        "properties" : {
          "Folders" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CRM_Typed_Folder"
            },
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CRM_Schema_ListFolders_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CRM_Schema_ListFolders_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Views_ListViews_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "FolderID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CRM_Typed_View" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CRM_Views_ListViews_Response" : {
        "type" : "object",
        "properties" : {
          "Views" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CRM_Typed_View"
            },
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_CRM_Views_ListViews_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CRM_Views_ListViews_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CustomerService_Tickets_Create_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "Subject" : {
            "type" : "string",
            "nullable" : true
          },
          "ContentsHTML" : {
            "type" : "string",
            "nullable" : true
          },
          "ContentsText" : {
            "type" : "string",
            "nullable" : true
          },
          "TicketTypeID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "CustomerID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "CustomerEmailAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "CustomerName" : {
            "type" : "string",
            "nullable" : true
          },
          "Attachments" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "binary"
            },
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "CustomerService_Tickets_Create_Response" : {
        "type" : "object",
        "properties" : {
          "TicketID" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_CustomerService_Tickets_Create_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CustomerService_Tickets_Create_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "EmailSubscriptions_MailingLists_List_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "EmailSubscriptions_Typed_MailingList" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "EmailSubscriptions_MailingLists_List_Response" : {
        "type" : "object",
        "properties" : {
          "MailingLists" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmailSubscriptions_Typed_MailingList"
            },
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_EmailSubscriptions_MailingLists_List_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_List_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "EmailSubscriptions_MailingLists_Add_Request" : {
        "required" : [ "Credentials", "EmailAddress", "MailingListID" ],
        "type" : "object",
        "properties" : {
          "MailingListID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "EmailAddress" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "EmailSubscriptions_MailingLists_Add_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_EmailSubscriptions_MailingLists_Add_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmailSubscriptions_MailingLists_Add_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "AccountingHashExport_Export_Send_Request" : {
        "required" : [ "Credentials", "Date_From", "Date_To" ],
        "type" : "object",
        "properties" : {
          "Date_From" : {
            "type" : "string",
            "description" : "Date range - from",
            "format" : "date-time"
          },
          "Date_To" : {
            "type" : "string",
            "description" : "Date range - to",
            "format" : "date-time"
          },
          "MarkAsExported" : {
            "type" : "boolean",
            "description" : "Mark records as exported<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "ExportNewDocumentsOnly" : {
            "type" : "boolean",
            "description" : "Export only new documents<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "AccountingHashExport_Export_Send_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_AccountingHashExport_Export_Send_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountingHashExport_Export_Send_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "LetterByClick_Typed_MailType" : {
        "enum" : [ "Regular", "Registered", "DeliveryConfirmation", "ScannedDeliveryConfirmation" ],
        "type" : "string"
      },
      "LetterByClick_LetterByClick_SendDocument_Request" : {
        "required" : [ "Credentials", "PDF", "RecipientAddressLine1" ],
        "type" : "object",
        "properties" : {
          "BackgroundID" : {
            "type" : "string",
            "description" : "Template background ID<div><i>This field is supplied by Beeri\r\nDefaults to the application settings.</i></div>",
            "nullable" : true
          },
          "RecipientAddressLine1" : {
            "type" : "string",
            "description" : "Recipient address line #1"
          },
          "RecipientAddressLine2" : {
            "type" : "string",
            "description" : "Recipient address line #2",
            "nullable" : true
          },
          "RecipientAddressLine3" : {
            "type" : "string",
            "description" : "Recipient address line #3",
            "nullable" : true
          },
          "RecipientCity" : {
            "type" : "string",
            "description" : "Recipient city",
            "nullable" : true
          },
          "RecipientPostCode" : {
            "type" : "string",
            "description" : "Recipient post code (zipcode)",
            "nullable" : true
          },
          "RecipientTitle" : {
            "type" : "string",
            "description" : "Recipient title (name)",
            "nullable" : true
          },
          "PDF" : {
            "type" : "string",
            "description" : "PDF file contents. Only A4 pages are supported.<div><i>Shouldn't be specified when using the SendMultipartDocument API method</i></div>",
            "format" : "byte"
          },
          "SenderAddress" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Specify up to 7 lines<div><i>Defaults to the application settings.</i></div>",
            "nullable" : true
          },
          "ReturnAddress" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Return address, specify up to 7 lines.<div><i>Defaults to the application settings.</i></div>",
            "nullable" : true
          },
          "Color" : {
            "type" : "boolean",
            "description" : "Indicates whether to print with Full Color (true) or black-white (false)<div><i>Defaults to Black-White (False)</i></div>",
            "nullable" : true
          },
          "DoubleSided" : {
            "type" : "boolean",
            "description" : "Indicates whether to print on both page sides (true) or single-sided (false)<div><i>Defaults to Single-Sided (False)</i></div>",
            "nullable" : true
          },
          "MailType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LetterByClick_Typed_MailType"
            } ],
            "description" : "Mail type (Regular, Registered, Delivery Confirmation or Scanned Delivery Confirmation)<div><i>Defaults to Regular</i></div>",
            "nullable" : true
          },
          "LiveMode" : {
            "type" : "boolean",
            "description" : "Indicated whether this is a live or a test API call.<div><i>Defaults to test (False)</i></div>",
            "nullable" : true
          },
          "AutoRotate" : {
            "type" : "boolean",
            "description" : "Indicated whether to auto rotate the document to portrait if needed.\r\nPlease note this incurs performance hit, and should only be used when necessary.<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "LetterByClick_LetterByClick_SendDocument_Response" : {
        "type" : "object",
        "properties" : {
          "OrderID" : {
            "type" : "string",
            "description" : "Letter by click order identifier",
            "nullable" : true
          },
          "ExternalCode" : {
            "type" : "string",
            "description" : "External code used for tracking",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_LetterByClick_LetterByClick_SendDocument_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LetterByClick_LetterByClick_SendDocument_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "LetterByClick_LetterByClick_GetTrackingCode_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "ExternalCode" : {
            "type" : "string",
            "description" : "External code returned from the SendDocument API",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "LetterByClick_LetterByClick_GetTrackingCode_Response" : {
        "type" : "object",
        "properties" : {
          "TrackingCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_LetterByClick_LetterByClick_GetTrackingCode_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LetterByClick_LetterByClick_GetTrackingCode_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Fax_Fax_Send_Request" : {
        "required" : [ "Credentials", "FaxNumber", "FileBytes", "Filename" ],
        "type" : "object",
        "properties" : {
          "FaxNumber" : {
            "type" : "string"
          },
          "FileBytes" : {
            "type" : "string",
            "format" : "byte"
          },
          "Filename" : {
            "type" : "string"
          },
          "SaveDraft" : {
            "type" : "boolean",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Fax_Fax_Send_Response" : {
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "EstimatedQuota" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_Fax_Fax_Send_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Fax_Fax_Send_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_General_OpenUPayTerminal_Request" : {
        "required" : [ "AccountNumber", "BankCode", "BranchCode", "Credentials" ],
        "type" : "object",
        "properties" : {
          "BankCode" : {
            "type" : "integer",
            "description" : "Bank code",
            "format" : "int32"
          },
          "BranchCode" : {
            "type" : "integer",
            "description" : "Bank branch code",
            "format" : "int32"
          },
          "AccountNumber" : {
            "type" : "string",
            "description" : "Bank account number"
          },
          "DailyCredit" : {
            "type" : "boolean",
            "description" : "Daily credit (+0.3% commission)"
          },
          "DisablePaymentsCredit" : {
            "type" : "boolean",
            "description" : "Disable immediate payments (+0.75% per payment)"
          },
          "EnableAmericanExpressDiners" : {
            "type" : "boolean",
            "description" : "Enable support for American Express and Diners credit cards"
          },
          "EnableBilling" : {
            "type" : "boolean",
            "description" : "Enable support for recurring payments (request CVV exempt)"
          },
          "EmailAddress" : {
            "type" : "string",
            "description" : "Opened account email address.<div><i>Leave empty for auto generated email address</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_General_OpenUPayTerminal_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Billing_General_OpenUPayTerminal_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_General_OpenUPayTerminal_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_General_SetUPayCredentials_Request" : {
        "required" : [ "Credentials", "EmailAddress", "Password" ],
        "type" : "object",
        "properties" : {
          "EmailAddress" : {
            "type" : "string",
            "description" : "UPay Email Address (Username)"
          },
          "Password" : {
            "type" : "string",
            "description" : "UPay Password"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_General_SetUPayCredentials_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Billing_General_SetUPayCredentials_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_General_SetUPayCredentials_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_PaymentMethods_GetForCustomer_Request" : {
        "required" : [ "Credentials", "Customer" ],
        "type" : "object",
        "properties" : {
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer details"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Typed_PaymentMethodType" : {
        "enum" : [ "Other", "CreditCard", "DirectDebit" ],
        "type" : "string"
      },
      "Billing_Typed_PaymentMethod" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "CustomerID" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "CreditCard_Number" : {
            "type" : "string",
            "description" : "Credit card full number<div><i>Required for credit card</i></div>",
            "nullable" : true
          },
          "CreditCard_LastDigits" : {
            "type" : "string",
            "description" : "Credit card last 4 digits<div><i>Shouldn't be input by API caller</i></div>",
            "nullable" : true
          },
          "CreditCard_ExpirationMonth" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Credit card expiration month (1-2 digits)<div><i>Required for credit card</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "CreditCard_ExpirationYear" : {
            "type" : "integer",
            "description" : "Credit card expiration year (4 digits)<div><i>Required for credit card</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "CreditCard_CVV" : {
            "type" : "string",
            "description" : "Credit card CVV/CVV2<div><i>Required when CVV is required by credit company</i></div>",
            "nullable" : true
          },
          "CreditCard_Track2" : {
            "type" : "string",
            "description" : "Credit card Track2",
            "nullable" : true
          },
          "CreditCard_CitizenID" : {
            "type" : "string",
            "description" : "Credit card owner Israel Citizen ID / Passport Number<div><i>Required when Citizen ID is required by credit company</i></div>",
            "nullable" : true
          },
          "CreditCard_CardMask" : {
            "type" : "string",
            "description" : "Credit card mask<div><i>Shouldn't be input by API caller</i></div>",
            "nullable" : true
          },
          "CreditCard_Token" : {
            "type" : "string",
            "description" : "Credit card token",
            "nullable" : true
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_PaymentMethodType"
            } ],
            "description" : "Payment method type"
          }
        },
        "additionalProperties" : false
      },
      "Billing_PaymentMethods_GetForCustomer_Response" : {
        "type" : "object",
        "properties" : {
          "PaymentMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_PaymentMethod"
            } ],
            "description" : "Payment method",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Billing_PaymentMethods_GetForCustomer_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_PaymentMethods_GetForCustomer_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_PaymentMethods_SetForCustomer_Request" : {
        "required" : [ "Credentials", "Customer" ],
        "type" : "object",
        "properties" : {
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer details"
          },
          "PaymentMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_PaymentMethod"
            } ],
            "description" : "Payment method",
            "nullable" : true
          },
          "SingleUseToken" : {
            "type" : "string",
            "description" : "Single use token, for all payment details (CardNumber, Expiration, CVV, CitizenID).<div><i>Used primarily by the Payments JavaScript API.</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_PaymentMethods_SetForCustomer_Response" : {
        "type" : "object",
        "properties" : {
          "CustomerID" : {
            "type" : "integer",
            "description" : "Customer ID",
            "format" : "int64"
          },
          "PaymentMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_PaymentMethod"
            } ],
            "description" : "Payment method",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Billing_PaymentMethods_SetForCustomer_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_PaymentMethods_SetForCustomer_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_PaymentMethods_Remove_Request" : {
        "required" : [ "Credentials", "Customer" ],
        "type" : "object",
        "properties" : {
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer details"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_PaymentMethods_Remove_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Billing_PaymentMethods_Remove_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_PaymentMethods_Remove_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Typed_ChargeItem" : {
        "type" : "object",
        "properties" : {
          "Item" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_IncomeItem"
            } ],
            "description" : "Item",
            "nullable" : true
          },
          "Quantity" : {
            "type" : "integer",
            "description" : "Quantity<div><i>Defaults to 1</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "UnitPrice" : {
            "type" : "number",
            "description" : "Single unit price in payment currency\r\nDefaults to the Item price",
            "format" : "double",
            "nullable" : true
          },
          "Currency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentCurrency"
            } ],
            "description" : "Payment currency<div><i>Leave empty for company default currency</i></div>",
            "nullable" : true
          },
          "Description" : {
            "type" : "string",
            "description" : "Item description",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Payments_Charge_Request" : {
        "required" : [ "Credentials", "Customer", "Items" ],
        "type" : "object",
        "properties" : {
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer"
          },
          "PaymentMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_PaymentMethod"
            } ],
            "description" : "Payment method details<div><i>Leave this empty to use the customer payment method, or when using the SingleUseToken</i></div>",
            "nullable" : true
          },
          "SingleUseToken" : {
            "type" : "string",
            "description" : "Single use token, for all payment details (CardNumber, Expiration, CVV, CitizenID).<div><i>Used primarily by the Payments JavaScript API.</i></div>",
            "nullable" : true
          },
          "CreditCardAuthNumber" : {
            "type" : "string",
            "description" : "Transaction authorization number, as received from a previous Gateway Transaction",
            "nullable" : true
          },
          "Items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_Typed_ChargeItem"
            },
            "description" : "Items"
          },
          "Payments_Count" : {
            "type" : "integer",
            "description" : "Payments count<div><i>Leave this empty to disable payments</i></div>",
            "format" : "int64",
            "nullable" : true
          },
          "Payments_FirstAmount" : {
            "type" : "number",
            "description" : "First payment amount<div><i>Leave this empty to disable payments / automatic payments calculating</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "Payments_NonFirstAmount" : {
            "type" : "number",
            "description" : "Non-first payment amount<div><i>Leave this empty to disable payments / automatic payments calculating</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "UpdateCustomerByEmail" : {
            "type" : "boolean",
            "description" : "Update customer by email (notification email, with invoice/receipt download link)<div><i>Leave this empty to disable email sending feature</i></div>",
            "nullable" : true
          },
          "UpdateCustomerByEmail_AttachDocument" : {
            "type" : "boolean",
            "description" : "Attach invoice/receipt to email<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "UpdateCustomerByEmail_Language" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Language"
            } ],
            "description" : "Update email language<div><i>Defaults to the company language</i></div>",
            "nullable" : true
          },
          "SendDocumentByEmail" : {
            "type" : "boolean",
            "description" : "Send invoice/receipt by email",
            "nullable" : true
          },
          "SendDocumentByEmail_Language" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Language"
            } ],
            "description" : "Send document email language<div><i>Defaults to the company language</i></div>",
            "nullable" : true
          },
          "DocumentLanguage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Language"
            } ],
            "description" : "Document language<div><i>Defaults to the company language</i></div>",
            "nullable" : true
          },
          "DocumentDescription" : {
            "type" : "string",
            "description" : "Document description (the description is printed on the document)",
            "nullable" : true
          },
          "VATIncluded" : {
            "type" : "boolean",
            "description" : "Is VAT included in the prices?<div><i>Defaults to false</i></div>",
            "nullable" : true
          },
          "VATRate" : {
            "type" : "number",
            "description" : "Document VAT Rate<div><i>Leave empty for company default.\r\nRelevant for items only.</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "AuthoriseOnly" : {
            "type" : "boolean",
            "description" : "Should the transaction be committed, or authorized only.<div><i>Leave empty for \"False\" (Auto-Commit).\r\nThis field could be used for testing the Charge action easily.\r\nPlease note, when using AuthoriseOnly, documents will be issued as \"Draft\".</i></div>",
            "nullable" : true
          },
          "DraftDocument" : {
            "type" : "boolean",
            "description" : "Create draft document?<div><i>Leave empty to use the application setting.\r\nPlease note, when using AuthoriseOnly, documents will always be issued as \"Draft\".</i></div>",
            "nullable" : true
          },
          "DocumentType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentType"
            } ],
            "description" : "Create document type<div><i>Leave empty for default</i></div>",
            "nullable" : true
          },
          "SupportCredit" : {
            "type" : "boolean",
            "description" : "Allow credit instead of charge (debit), in case the total is less than 0?<div><i>Defaults to false</i></div>",
            "nullable" : true
          },
          "MerchantNumber" : {
            "type" : "string",
            "description" : "Shva merchant number (Terminal number).<div><i>This parameter should only be used when multiple merchants are defined in the company.</i></div>",
            "nullable" : true
          },
          "SendCopyToOrganization" : {
            "type" : "boolean",
            "description" : "Send email to the organization as well.\r\nDefaults to the accounting application settings.<div><i>Relevant when using either UpdateCustomerByEmail or SendDocumentByEmail.</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Typed_Payment" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "description" : "Payment identifier",
            "format" : "int64"
          },
          "CustomerID" : {
            "type" : "integer",
            "description" : "Customer identifier",
            "format" : "int64"
          },
          "Date" : {
            "type" : "string",
            "description" : "Payment date",
            "format" : "date-time",
            "nullable" : true
          },
          "ValidPayment" : {
            "type" : "boolean",
            "description" : "Indicates if the payment is valid"
          },
          "Status" : {
            "type" : "string",
            "description" : "Payment status",
            "nullable" : true
          },
          "StatusDescription" : {
            "type" : "string",
            "description" : "Payment status description",
            "nullable" : true
          },
          "Amount" : {
            "type" : "number",
            "description" : "Payment amount",
            "format" : "double"
          },
          "PaymentMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_PaymentMethod"
            } ],
            "description" : "Payment method details",
            "nullable" : true
          },
          "AuthNumber" : {
            "type" : "string",
            "description" : "Authorization number",
            "nullable" : true
          },
          "RecurringCustomerItemIDs" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Relevant only for payments originating from recurring payments",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Payments_Charge_Response" : {
        "type" : "object",
        "properties" : {
          "Payment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_Payment"
            } ],
            "nullable" : true
          },
          "DocumentID" : {
            "type" : "integer",
            "description" : "Document ID (OfficeGuy identifier)",
            "format" : "int64",
            "nullable" : true
          },
          "DocumentNumber" : {
            "type" : "integer",
            "description" : "Document number",
            "format" : "int64",
            "nullable" : true
          },
          "CustomerID" : {
            "type" : "integer",
            "description" : "Customer number",
            "format" : "int64",
            "nullable" : true
          },
          "DocumentDownloadURL" : {
            "type" : "string",
            "description" : "Document download URL<div><i>Produced document will be original (on first fetching), or certified copy.</i></div>",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Billing_Payments_Charge_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Payments_Charge_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Payments_Get_Request" : {
        "required" : [ "Credentials", "PaymentID" ],
        "type" : "object",
        "properties" : {
          "PaymentID" : {
            "type" : "integer",
            "description" : "PaymentID<div><i>Returned from the BeginRedirect or the Charge API methods</i></div>",
            "format" : "int64"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Payments_Get_Response" : {
        "type" : "object",
        "properties" : {
          "Payment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_Payment"
            } ],
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Billing_Payments_Get_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Payments_Get_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Payments_List_Request" : {
        "required" : [ "Credentials", "Date_From", "Date_To" ],
        "type" : "object",
        "properties" : {
          "Date_From" : {
            "type" : "string",
            "description" : "Payments date range (from)",
            "format" : "date-time"
          },
          "Date_To" : {
            "type" : "string",
            "description" : "Payments date range (to)",
            "format" : "date-time"
          },
          "Valid" : {
            "type" : "boolean",
            "description" : "List only valid/invalid payments",
            "nullable" : true
          },
          "StartIndex" : {
            "type" : "integer",
            "description" : "Start index for paging",
            "format" : "int32"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Payments_List_Response" : {
        "type" : "object",
        "properties" : {
          "Payments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_Typed_Payment"
            },
            "nullable" : true
          },
          "HasNextPage" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "Response_Billing_Payments_List_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Payments_List_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "OfficeGuy.Core.Typed.Theme" : {
        "enum" : [ "Default", "Light", "Dark", "Orange", "Material", "Joyness", "White" ],
        "type" : "string"
      },
      "Billing_Payments_BeginRedirect_Request" : {
        "required" : [ "Credentials", "Customer", "Items" ],
        "type" : "object",
        "properties" : {
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer"
          },
          "Items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_Typed_ChargeItem"
            },
            "description" : "Items"
          },
          "VATIncluded" : {
            "type" : "boolean",
            "description" : "Is VAT included in the prices?<div><i>Leave empty for false.\r\nRelevant for items only.</i></div>",
            "nullable" : true
          },
          "DocumentType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentType"
            } ],
            "description" : "Created document type<div><i>Leave empty for default</i></div>",
            "nullable" : true
          },
          "RedirectURL" : {
            "type" : "string",
            "description" : "URL to redirect the user on successful payment.<div><i>The following parameters will be added to the URL:\r\nOG-CustomerID: Customer identifier\r\nOG-PaymentID: Payment identifier\r\nOG-ExternalIdentifier: The original ExternalIdentifier\r\nWhen empty, the user will be redirected the the customer payments history page</i></div>",
            "nullable" : true
          },
          "ExternalIdentifier" : {
            "type" : "string",
            "description" : "External identifier.<div><i>This identifier will be appended to the RedirectURL on successful payment.</i></div>",
            "nullable" : true
          },
          "MaximumPayments" : {
            "type" : "integer",
            "description" : "Maximum payments (installments) allowed on the payment page.<div><i>By default, the maximum payments count is set according to the purchase pages application settings.\r\nSet to 0 to disable payments.</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "SendUpdateByEmailAddress" : {
            "type" : "string",
            "description" : "Email address to which the result document will be created following payments.",
            "nullable" : true
          },
          "ExpirationHours" : {
            "type" : "integer",
            "description" : "Number of hours, in which the direct URL will expire.<div><i>Defaults to 1 hours. Maximum of 240 hours (10 days).</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "Theme" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Core.Typed.Theme"
            } ],
            "description" : "Payment page theme",
            "nullable" : true
          },
          "Language" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Language"
            } ],
            "description" : "Payment page language<div><i>Defaults to Hebrew</i></div>",
            "nullable" : true
          },
          "Header" : {
            "type" : "string",
            "description" : "Payment page header<div><i>Defaults to the company name</i></div>",
            "nullable" : true
          },
          "UpdateOrganizationOnSuccess" : {
            "type" : "boolean",
            "description" : "Send payment notification to organization on successful payment",
            "nullable" : true
          },
          "UpdateOrganizationOnFailure" : {
            "type" : "boolean",
            "description" : "Send payment notification to organization on failed payment",
            "nullable" : true
          },
          "UpdateCustomerOnSuccess" : {
            "type" : "boolean",
            "description" : "Send payment notification to customer on successful payment.",
            "nullable" : true
          },
          "DocumentDescription" : {
            "type" : "string",
            "description" : "Document description (the description is printed on the document)",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Payments_BeginRedirect_Response" : {
        "type" : "object",
        "properties" : {
          "RedirectURL" : {
            "type" : "string",
            "description" : "Payment page URL.<div><i>Redirect your user to this page, in order to continue the payment process.</i></div>",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Billing_Payments_BeginRedirect_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Payments_BeginRedirect_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Recurring_ListForCustomer_Request" : {
        "required" : [ "Credentials", "Customer" ],
        "type" : "object",
        "properties" : {
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer"
          },
          "IncludeInactive" : {
            "type" : "boolean",
            "description" : "Also include inactive items<div><i>Defaults to false</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Typed_RecurringItem" : {
        "type" : "object",
        "properties" : {
          "Duration_Days" : {
            "type" : "integer",
            "description" : "Recurring duration/interval in days",
            "format" : "int64",
            "nullable" : true
          },
          "Duration_Months" : {
            "type" : "integer",
            "description" : "Recurring duration/interval in months",
            "format" : "int64",
            "nullable" : true
          },
          "ID" : {
            "type" : "integer",
            "description" : "OfficeGuy identifier",
            "format" : "int64",
            "nullable" : true
          },
          "Name" : {
            "type" : "string",
            "description" : "Item name",
            "nullable" : true
          },
          "Price" : {
            "type" : "number",
            "description" : "Item price (for single unit)",
            "format" : "double",
            "nullable" : true
          },
          "Currency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentCurrency"
            } ],
            "description" : "Price currency<div><i>Leave empty for company default</i></div>",
            "nullable" : true
          },
          "Cost" : {
            "type" : "number",
            "description" : "Item cost (for single unit)",
            "format" : "double",
            "nullable" : true
          },
          "ExternalIdentifier" : {
            "type" : "string",
            "description" : "Customer external identifier",
            "nullable" : true
          },
          "SearchMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_IncomeItemSearchMode"
            } ],
            "nullable" : true
          },
          "Properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : false
            },
            "description" : "Entity fields",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Typed_RecurringCustomerItemStatus" : {
        "enum" : [ "Active", "Cancelled", "DisabledFailedBillingPayment", "FinishedExpired", "GracePeriod", "PendingForFirstPayment", "CancelledByCustomer" ],
        "type" : "string"
      },
      "Billing_Typed_RecurringCustomerItem" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "description" : "Identifier",
            "format" : "int64",
            "readOnly" : true
          },
          "Item" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_RecurringItem"
            } ],
            "description" : "Item",
            "nullable" : true
          },
          "Quantity" : {
            "type" : "number",
            "description" : "Quantity<div><i>Defaults to 1</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "UnitPrice" : {
            "type" : "number",
            "description" : "Price<div><i>Defaults to 0</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "Date_Start" : {
            "type" : "string",
            "description" : "First payment date",
            "format" : "date-time",
            "nullable" : true
          },
          "Date_End" : {
            "type" : "string",
            "description" : "Last payment date",
            "format" : "date-time",
            "nullable" : true
          },
          "Date_NextBilling" : {
            "type" : "string",
            "description" : "Next payment date",
            "format" : "date-time",
            "nullable" : true
          },
          "Date_PreviousBilling" : {
            "type" : "string",
            "description" : "Previous payment date",
            "format" : "date-time",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_RecurringCustomerItemStatus"
            } ],
            "description" : "Item status",
            "nullable" : true
          },
          "Description" : {
            "type" : "string",
            "description" : "Recurring record description",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Recurring_ListForCustomer_Response" : {
        "type" : "object",
        "properties" : {
          "RecurringItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_Typed_RecurringCustomerItem"
            },
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Billing_Recurring_ListForCustomer_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Recurring_ListForCustomer_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Recurring_Cancel_Request" : {
        "required" : [ "Credentials", "Customer", "RecurringCustomerItemID" ],
        "type" : "object",
        "properties" : {
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer"
          },
          "RecurringCustomerItemID" : {
            "type" : "integer",
            "description" : "Recurring customer item identifier",
            "format" : "int64"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Recurring_Cancel_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Billing_Recurring_Cancel_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Recurring_Cancel_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Typed_ChargeRecurringItem" : {
        "required" : [ "Item" ],
        "type" : "object",
        "properties" : {
          "Item" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_RecurringItem"
            } ],
            "description" : "Item"
          },
          "Quantity" : {
            "type" : "number",
            "description" : "Quantity<div><i>Defaults to 1</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "UnitPrice" : {
            "type" : "number",
            "description" : "Single unit price in payment currency",
            "format" : "double",
            "nullable" : true
          },
          "Currency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentCurrency"
            } ],
            "description" : "Price currency<div><i>Leave empty for company default currency</i></div>",
            "nullable" : true
          },
          "Date_Start" : {
            "type" : "string",
            "description" : "First payment date<div><i>Defaults to current date</i></div>",
            "format" : "date-time",
            "nullable" : true
          },
          "Description" : {
            "type" : "string",
            "description" : "Recurring record description",
            "nullable" : true
          },
          "Duration_Days" : {
            "type" : "integer",
            "description" : "Recurring duration/interval in days<div><i>For instance, for monthly payments, specify 0. For weekly payments, specify 7.</i></div>",
            "format" : "int64",
            "nullable" : true
          },
          "Duration_Months" : {
            "type" : "integer",
            "description" : "Recurring duration/interval in months<div><i>For instance, for monthly payments, specify 1</i></div>",
            "format" : "int64",
            "nullable" : true
          },
          "Recurrence" : {
            "type" : "integer",
            "description" : "Number of recurring payments<div><i>For instance, for 1 year of monthly payments, specify 12.\r\nSetting this to null or 0 will result in continuous payments</i></div>",
            "format" : "int64",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Recurring_Charge_Request" : {
        "required" : [ "Credentials", "Customer", "Items" ],
        "type" : "object",
        "properties" : {
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer"
          },
          "PaymentMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_PaymentMethod"
            } ],
            "description" : "Payment method details<div><i>Leave this empty to use the customer payment method, or when using the SingleUseToken</i></div>",
            "nullable" : true
          },
          "SingleUseToken" : {
            "type" : "string",
            "description" : "Single use token, for all payment details (CardNumber, Expiration, CVV, CitizenID).<div><i>Used primarily by the Payments JavaScript API.</i></div>",
            "nullable" : true
          },
          "Items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_Typed_ChargeRecurringItem"
            },
            "description" : "Items"
          },
          "UpdateCustomerByEmail" : {
            "type" : "boolean",
            "description" : "Update customer by email<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "UpdateCustomerByEmail_AttachDocument" : {
            "type" : "boolean",
            "description" : "Attach invoice/receipt to email<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "AuthoriseOnly" : {
            "type" : "boolean",
            "description" : "Should the transaction be committed, or authorized only.<div><i>Leave empty for \"False\" (Auto-Commit).\r\nThis field could be used for testing the Charge action easily.\r\nPlease note, when using AuthoriseOnly, documents will be created as \"Draft\", and recurring items will be created as cancelled.</i></div>",
            "nullable" : true
          },
          "DocumentType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_DocumentType"
            } ],
            "description" : "Created document type<div><i>Leave empty for default</i></div>",
            "nullable" : true
          },
          "SendCopyToOrganization" : {
            "type" : "boolean",
            "description" : "Send email to the organization as well.\r\nDefaults to the accounting application settings.<div><i>Relevant when using UpdateCustomerByEmail.</i></div>",
            "nullable" : true
          },
          "VATIncluded" : {
            "type" : "boolean",
            "description" : "Is VAT included in the prices?<div><i>Leave empty for false.\r\nRelevant for items only.</i></div>",
            "nullable" : true
          },
          "AttributionOffset" : {
            "type" : "integer",
            "description" : "Attribution offset in months",
            "format" : "int64",
            "nullable" : true
          },
          "CreditCardPayments_Count" : {
            "type" : "integer",
            "description" : "Credit card payments count.\r\nPlease note this is not the recurrence (how many months the transaction should last), this parameter shouldn't be used on most use cases.<div><i>Leave this empty to disable payments and use standard direct debit.</i></div>",
            "format" : "int64",
            "nullable" : true
          },
          "MerchantNumber" : {
            "type" : "string",
            "description" : "Shva merchant number (Terminal number).<div><i>This parameter should only be used when multiple merchants are defined in the company.</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Recurring_Charge_Response" : {
        "type" : "object",
        "properties" : {
          "Payment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Typed_Payment"
            } ],
            "description" : "Payment details",
            "nullable" : true
          },
          "DocumentID" : {
            "type" : "integer",
            "description" : "Document ID",
            "format" : "int64",
            "nullable" : true
          },
          "CustomerID" : {
            "type" : "integer",
            "description" : "Customer number",
            "format" : "int64"
          },
          "DocumentDownloadURL" : {
            "type" : "string",
            "description" : "Document download URL<div><i>Produced document will be original (on first fetching), or certified copy.</i></div>",
            "nullable" : true
          },
          "RecurringCustomerItemIDs" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Created recurring customer items identifiers",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Billing_Recurring_Charge_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Recurring_Charge_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Billing_Recurring_Update_Request" : {
        "required" : [ "Credentials", "Customer", "RecurringCustomerItemID" ],
        "type" : "object",
        "properties" : {
          "Customer" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Accounting_Typed_Customer"
            } ],
            "description" : "Customer"
          },
          "RecurringCustomerItemID" : {
            "type" : "integer",
            "description" : "Recurring customer item identifier",
            "format" : "int64"
          },
          "UnitPrice" : {
            "type" : "number",
            "description" : "Unit price",
            "format" : "double",
            "nullable" : true
          },
          "Quantity" : {
            "type" : "number",
            "description" : "Quantity<div><i>Defaults to 1</i></div>",
            "format" : "double",
            "nullable" : true
          },
          "Recurrence" : {
            "type" : "integer",
            "description" : "Number of pending recurring payments<div><i>For instance, for a total of 1 year of monthly payments, specify 12\r\nSetting this to 0 will result in continuous payments.\r\nPlease note this parameter cannot be used when the LastPaymentDate parameter is set.</i></div>",
            "format" : "int32",
            "nullable" : true
          },
          "NextPaymentDate" : {
            "type" : "string",
            "description" : "Next payment date",
            "format" : "date-time",
            "nullable" : true
          },
          "LastPaymentDate" : {
            "type" : "string",
            "description" : "Last payment date.<div><i>Please note this parameter cannot be used when the Recurrence parameter is set.</i></div>",
            "format" : "date-time",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Recurring_Update_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Billing_Recurring_Update_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Recurring_Update_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "OfficeGuy.Apps.Billing.Typed.ResultDocumentEnum" : {
        "enum" : [ "InvoiceAndReceipt", "Invoice", "Receipt", "DonationReceipt", "ProformaInvoice", "Order", "PaymentRequest", "Automatic", "None" ],
        "type" : "string"
      },
      "OfficeGuy.Apps.Billing.Typed.ExternalDocumentEnum" : {
        "enum" : [ "ProformaInvoice", "Order", "TaxInvoice", "PaymentRequest", "None" ],
        "type" : "string"
      },
      "Billing_Recurring_UpdateSettings_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "AutomaticBilling" : {
            "type" : "boolean",
            "description" : "Automatic billing mode",
            "nullable" : true
          },
          "AutomaticBilling_CreditCard" : {
            "type" : "boolean",
            "description" : "Automatic billing mode for credit card payments",
            "nullable" : true
          },
          "AutomaticBilling_DirectDebit" : {
            "type" : "boolean",
            "description" : "Automatic billing mode for direct debit payments",
            "nullable" : true
          },
          "AutomaticBilling_DocumentsOnly" : {
            "type" : "boolean",
            "description" : "Automatic billing mode for documents only",
            "nullable" : true
          },
          "AutomaticBilling_ProformaInvoices" : {
            "type" : "boolean",
            "description" : "Automatic billing mode for charging existing proforma invoices",
            "nullable" : true
          },
          "AutomaticBilling_PaymentRequests" : {
            "type" : "boolean",
            "description" : "Automatic billing mode for charging existing payment requests",
            "nullable" : true
          },
          "AutomaticBilling_TaxInvoices" : {
            "type" : "boolean",
            "description" : "Automatic billing mode charging existing tax invoices",
            "nullable" : true
          },
          "AutomaticBilling_ChargeDocument" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Apps.Billing.Typed.ResultDocumentEnum"
            } ],
            "description" : "Default document type for charges billing",
            "nullable" : true
          },
          "AutomaticBilling_DocumentsOnlyDocument" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Apps.Billing.Typed.ExternalDocumentEnum"
            } ],
            "description" : "Default document type for documents only billing",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Billing_Recurring_UpdateSettings_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Billing_Recurring_UpdateSettings_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Billing_Recurring_UpdateSettings_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "SMS_MailingLists_List_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "SMS_Typed_MailingList" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "SMS_MailingList_List_Response" : {
        "type" : "object",
        "properties" : {
          "MailingLists" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SMS_Typed_MailingList"
            },
            "description" : "Mailing lists",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_SMS_MailingList_List_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SMS_MailingList_List_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "SMS_MailingLists_Add_Request" : {
        "required" : [ "Credentials", "MailingListID", "PhoneNumber" ],
        "type" : "object",
        "properties" : {
          "MailingListID" : {
            "type" : "integer",
            "description" : "Mailing list ID",
            "format" : "int64"
          },
          "PhoneNumber" : {
            "type" : "string",
            "description" : "Recipient phone number"
          },
          "Name" : {
            "type" : "string",
            "description" : "Recipient name",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "SMS_MailingLists_Add_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_SMS_MailingLists_Add_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SMS_MailingLists_Add_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "SMS_SMS_Send_Request" : {
        "required" : [ "Credentials", "Recipient", "Text" ],
        "type" : "object",
        "properties" : {
          "Recipient" : {
            "type" : "string",
            "description" : "Recipient"
          },
          "Text" : {
            "type" : "string",
            "description" : "Body (formatted as HTML)"
          },
          "SaveDraft" : {
            "type" : "boolean",
            "description" : "Save as draft? (Prevents automatic sending)<div><i>Defaults to false (No draft)</i></div>",
            "nullable" : true
          },
          "Sender" : {
            "type" : "string",
            "description" : "Sender number<div><i>Sender number should be verified prior to sending SMS messages</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "SMS_SMS_Send_Response" : {
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "description" : "Created SMS entity id",
            "format" : "int64"
          },
          "EstimatedQuota" : {
            "type" : "integer",
            "description" : "Estimated quota",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_SMS_SMS_Send_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SMS_SMS_Send_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "SMS_SMS_SendMultiple_Request" : {
        "required" : [ "Credentials", "Recipients", "Text" ],
        "type" : "object",
        "properties" : {
          "Recipients" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Recipients"
          },
          "Text" : {
            "type" : "string",
            "description" : "Body (formatted as HTML)"
          },
          "SaveDraft" : {
            "type" : "boolean",
            "description" : "Save as draft? (Prevents automatic sending)<div><i>Defaults to false (No draft)</i></div>",
            "nullable" : true
          },
          "Schedule" : {
            "type" : "string",
            "description" : "Schedule sending for a future date<div><i>Not supported for draft saving</i></div>",
            "format" : "date-time",
            "nullable" : true
          },
          "Sender" : {
            "type" : "string",
            "description" : "Sender number<div><i>Sender number should be verified prior to sending SMS messages</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "SMS_SMS_SendMultiple_Response" : {
        "type" : "object",
        "properties" : {
          "EntityID" : {
            "type" : "integer",
            "description" : "Created SMS multiple entity ID",
            "format" : "int64"
          },
          "EstimatedQuota" : {
            "type" : "integer",
            "description" : "Estimated quota",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_SMS_SMS_SendMultiple_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SMS_SMS_SendMultiple_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "SMS_SMS_ListSenders_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "SMS_SMS_ListSenders_Response" : {
        "type" : "object",
        "properties" : {
          "Senders" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Verified sender numbers",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_SMS_SMS_ListSenders_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SMS_SMS_ListSenders_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Stock_Stock_List_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "ItemIDs" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Allows listing stock for specific items<div><i>When not set, stock is returned for all items.</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Stock_Typed_StockItem" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Name" : {
            "type" : "string",
            "nullable" : true
          },
          "ExternalIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "Stock" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "additionalProperties" : false
      },
      "Stock_Stock_List_Response" : {
        "type" : "object",
        "properties" : {
          "Stock" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Stock_Typed_StockItem"
            },
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Stock_Stock_List_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Stock_Stock_List_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Triggers_Triggers_Subscribe_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "URL" : {
            "type" : "string",
            "nullable" : true
          },
          "Folder" : {
            "type" : "string",
            "nullable" : true
          },
          "View" : {
            "type" : "integer",
            "format" : "int64"
          },
          "TriggerType" : {
            "type" : "string",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Triggers_Triggers_Subscribe_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Triggers_Triggers_Subscribe_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Triggers_Triggers_Subscribe_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Triggers_Triggers_Unsubscribe_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "URL" : {
            "type" : "string",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Triggers_Triggers_Unsubscribe_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Triggers_Triggers_Unsubscribe_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Triggers_Triggers_Unsubscribe_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "OfficeGuy.Core.Typed.CompanyType" : {
        "enum" : [ "CompanyWithVAT", "VATExemptDealer", "LicensedDealer", "Fellowship", "Partnership", "CommunityInterestCompany", "Cooperative", "HouseCommittee", "ElectionGroup", "Party" ],
        "type" : "string"
      },
      "Website_Typed_Company" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string",
            "description" : "Organization name",
            "nullable" : true
          },
          "EmailAddress" : {
            "type" : "string",
            "description" : "Organization email address<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "Country" : {
            "type" : "string",
            "description" : "Organization country<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "Address" : {
            "type" : "string",
            "description" : "Organization address<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "Phone" : {
            "type" : "string",
            "description" : "Organization phone number<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "Fax" : {
            "type" : "string",
            "description" : "Organization fax number<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "Title" : {
            "type" : "string",
            "description" : "Organization title<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "CorporateNumber" : {
            "type" : "string",
            "description" : "Organization TAX identifier<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "English_Name" : {
            "type" : "string",
            "description" : "English organization name<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "English_Address" : {
            "type" : "string",
            "description" : "English organization address<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "English_Country" : {
            "type" : "string",
            "description" : "English organization country<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "English_Phone" : {
            "type" : "string",
            "description" : "English organization phone<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "English_Fax" : {
            "type" : "string",
            "description" : "English organization fax number<div><i>Optional field</i></div>",
            "nullable" : true
          },
          "English_Title" : {
            "type" : "string",
            "description" : "English organization title",
            "nullable" : true
          },
          "CompanyType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Core.Typed.CompanyType"
            } ],
            "description" : "Organization type<div><i>CompanyWithVAT - חברה\r\nVATExemptDealer - עמותה\r\nLicensedDealer - עוסק מורשה\r\nFellowship - עמותה\r\nPartnership - שותפות\r\nCommunityInterestCompany - חברה לתועלת הציבור\r\nCooperative - אגודה שיתופית\r\nHouseCommittee - ועד בית\r\nElectionGroup - סיעה לבחירות\r\nParty - מפלגה</i></div>",
            "nullable" : true
          },
          "Logo" : {
            "type" : "string",
            "description" : "Logo image file<div><i>File should be a standard PNG/JPG/GIF file</i></div>",
            "format" : "byte",
            "nullable" : true
          },
          "Website" : {
            "type" : "string",
            "description" : "Website URL",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Typed_User" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string",
            "description" : "User full name",
            "nullable" : true
          },
          "EmailAddress" : {
            "type" : "string",
            "description" : "User email address",
            "nullable" : true
          },
          "Password" : {
            "type" : "string",
            "description" : "User password (raw)",
            "nullable" : true
          },
          "Phone" : {
            "type" : "string",
            "description" : "User phone number",
            "nullable" : true
          },
          "SkipActivation" : {
            "type" : "boolean",
            "description" : "Allows skipping email activation before user can login.<div><i>Leave empty for false (Require activation)</i></div>",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Typed_Application" : {
        "enum" : [ "CreditCard", "DirectDebit", "RecurringBilling", "PurchasePages", "CRM", "EmailSubscriptions", "SMS", "Accounting", "Expenses", "Cheques", "PayPal", "TaskManagement", "TimeClock", "TimeRecorder", "BusinessCard", "LandingPages", "Calendar", "Fax", "AccountingHashExport" ],
        "type" : "string"
      },
      "Website_Typed_ApplicationAdditionType" : {
        "enum" : [ "Accounting_Documents_100", "Accounting_Documents_500", "Billing_Payments_100", "Billing_Payments_500", "Users_APIKeys_5", "Users_User_1" ],
        "type" : "string"
      },
      "Website_Typed_ApplicationAddition" : {
        "type" : "object",
        "properties" : {
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Typed_ApplicationAdditionType"
            } ],
            "description" : "Addition type"
          },
          "Quantity" : {
            "type" : "integer",
            "description" : "Addition quantity multiplier<div><i>Defaults to 1</i></div>",
            "format" : "int64",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_Create_Request" : {
        "required" : [ "Company", "Credentials" ],
        "type" : "object",
        "properties" : {
          "Company" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Typed_Company"
            } ],
            "description" : "Company details"
          },
          "User" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Typed_User"
            } ],
            "description" : "Company owner<div><i>Leave empty to set calling company owners as owners</i></div>",
            "nullable" : true
          },
          "Applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Website_Typed_Application"
            },
            "description" : "List of applications to be installed on the created company.<div><i>Please note installing applications might incur additional charges.</i></div>",
            "nullable" : true
          },
          "ApplicationAdditions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Website_Typed_ApplicationAddition"
            },
            "description" : "List of applications additions to be installed on the created company.<div><i>Please note this will incur additional charges.</i></div>",
            "nullable" : true
          },
          "HideFromCompaniesList" : {
            "type" : "boolean",
            "description" : "Allows hiding the created company from the user companies list<div><i>Defaults to False</i></div>",
            "nullable" : true
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_Create_Response" : {
        "type" : "object",
        "properties" : {
          "CompanyID" : {
            "type" : "integer",
            "description" : "Created company identifier",
            "format" : "int64"
          },
          "APIKey" : {
            "type" : "string",
            "description" : "API Key for future calls",
            "nullable" : true
          },
          "APIPublicKey" : {
            "type" : "string",
            "description" : "Public API Key for future calls",
            "nullable" : true
          },
          "UserPassword" : {
            "type" : "string",
            "description" : "Created user password<div><i>Returned only when new user is created</i></div>",
            "nullable" : true
          },
          "UserEncryptedPassword" : {
            "type" : "string",
            "description" : "Created user encrypted password<div><i>Returned only when new user is created</i></div>",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Website_Companies_Create_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Companies_Create_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_Update_Request" : {
        "required" : [ "Company", "Credentials" ],
        "type" : "object",
        "properties" : {
          "Company" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Typed_Company"
            } ],
            "description" : "Company details<div><i>Only supplied fields will be updated</i></div>"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_Update_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Website_Companies_Update_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Companies_Update_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_GetDetails_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_GetDetails_Response" : {
        "type" : "object",
        "properties" : {
          "Company" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Typed_Company"
            } ],
            "description" : "Company details",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Website_Companies_GetDetails_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Companies_GetDetails_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_ListQuotas_Request" : {
        "required" : [ "Credentials" ],
        "type" : "object",
        "properties" : {
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Typed_QuotaRecord" : {
        "type" : "object",
        "properties" : {
          "ApplicationName" : {
            "type" : "string",
            "nullable" : true
          },
          "StatisticName" : {
            "type" : "string",
            "nullable" : true
          },
          "Usage" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Quota" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_ListQuotas_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Website_Typed_QuotaRecord"
            },
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Website_Companies_ListQuotas_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Companies_ListQuotas_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_InstallApplications_Request" : {
        "required" : [ "Applications", "Credentials" ],
        "type" : "object",
        "properties" : {
          "Applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Website_Typed_Application"
            },
            "description" : "List of applications to be installed.<div><i>Please note this may incur additional charges.</i></div>"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_InstallApplications_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Website_Companies_InstallApplications_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Companies_InstallApplications_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_InstallAdditions_Request" : {
        "required" : [ "Additions", "Credentials" ],
        "type" : "object",
        "properties" : {
          "Additions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Website_Typed_ApplicationAddition"
            },
            "description" : "List of additions to be installed.<div><i>Please note this will incur additional charges.</i></div>"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_InstallAdditions_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Website_Companies_InstallAdditions_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Companies_InstallAdditions_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_RemoveAdditions_Request" : {
        "required" : [ "Additions", "Credentials" ],
        "type" : "object",
        "properties" : {
          "Additions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Website_Typed_ApplicationAdditionType"
            },
            "description" : "List of additions to be removed."
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Companies_RemoveAdditions_Response" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "Response_Website_Companies_RemoveAdditions_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Companies_RemoveAdditions_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "OfficeGuy.Core.Typed.UserCompanyRole" : {
        "enum" : [ "Owner", "Shared", "Accountant", "ReadOnly", "None", "AccountantReadOnly" ],
        "type" : "string"
      },
      "Website_Permissions_Set_Request" : {
        "required" : [ "Credentials", "Role", "UserID" ],
        "type" : "object",
        "properties" : {
          "UserID" : {
            "type" : "integer",
            "description" : "User identifier",
            "format" : "int64"
          },
          "Role" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Core.Typed.UserCompanyRole"
            } ],
            "description" : "User role"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Permissions_Remove_Request" : {
        "required" : [ "Credentials", "UserID" ],
        "type" : "object",
        "properties" : {
          "UserID" : {
            "type" : "integer",
            "description" : "User identifier",
            "format" : "int64"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Users_Create_Request" : {
        "required" : [ "Credentials", "Role", "User" ],
        "type" : "object",
        "properties" : {
          "User" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Typed_User"
            } ],
            "description" : "User details"
          },
          "Role" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OfficeGuy.Core.Typed.UserCompanyRole"
            } ],
            "description" : "User role"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Users_Create_Response" : {
        "type" : "object",
        "properties" : {
          "UserID" : {
            "type" : "integer",
            "description" : "Created user identifier",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "Response_Website_Users_Create_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Users_Create_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Website_Users_LoginRedirect_Request" : {
        "required" : [ "Credentials", "EmailAddress", "Password" ],
        "type" : "object",
        "properties" : {
          "EmailAddress" : {
            "type" : "string",
            "description" : "User email address"
          },
          "Password" : {
            "type" : "string",
            "description" : "User password"
          },
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Core_APICredentials"
            } ],
            "description" : "Company API credentials"
          }
        },
        "additionalProperties" : false
      },
      "Website_Users_LoginRedirect_Response" : {
        "type" : "object",
        "properties" : {
          "RedirectURL" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Response_Website_Users_LoginRedirect_Response" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Website_Users_LoginRedirect_Response"
            } ],
            "description" : "API specific response data",
            "nullable" : true
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Teva.Common.ResponseStatus"
            } ],
            "description" : "Response status"
          },
          "UserErrorMessage" : {
            "type" : "string",
            "description" : "Error message, in a user readable format",
            "nullable" : true
          },
          "TechnicalErrorDetails" : {
            "type" : "string",
            "description" : "Technical error details, let us know if you received this.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      }
    }
  }
}