openapi: 3.0.0
security:
  - password:
      - read
      - write
paths:
  /meeting/:
    get:
      summary: Returns all meetings
      description: >-
        It returns all the meeting that belong to the logged user. If the user making the request has Admin role it will return all the meetings of all users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeetingCollection'
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter by room name (exact match)
        - in: query
          name: status
          schema:
            type: integer
            enum: [1,2,3,4,5,6,7]
          description: >-
            Filter by room status 
            <br>1: QUEUED
            <br>2: LAUNCHING
            <br>3: RUNNING
            <br>4: TERMINATING
            <br>5: TERMINATED
            <br>6: ERROR_CREATE
            <br>7: ERROR_TERMINATE
        - in: query
          name: location
          schema:
            type: integer
            enum: [1,2,3,4]
          description: >-
            The region where the VM will be deployed
            <br>1: America
            <br>2: Europe
            <br>3: Asia
            <br>4: India
        - in: query
          name: search
          schema:
            type: string
          description: Search for meeting by its partial name
        - in: query
          name: ordering
          schema:
            type: string
            enum: ['creation_date', '-creation_date', 'modification_date', '-modification_date', 'id', '-id', 'name', '-name', 'location', '-location', 'size', '-size', 'status', '-status']
          description: Order the results by a specific field
        - in: query
          name: page_size
          schema:
            type: integer
            maximum: 150
          description: >-
            The quantity of results returned on the call (Default: 50, Max: 150)
    post:
      summary: Create a new meeting
      description: It will schedule the creation of a new meeting
      requestBody:
        description: This is the payload that you need to sent to create a new meeting
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateMeetingPayload'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseCreateMeetingSaved'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseCreateMeetingBadRequest'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseCreateMeetingPaymentRequired'
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseInternalError'
  /meeting/{id}/:
    get:
      summary: Get
      description: Retrieve a meeting data
      parameters: 
        - in: path
          name: id
          description: ID of the meeting to retrieve
          schema:
            type: integer
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityMeeting'
        404:
          description: Not found
    delete:
      summary: Delete / Stop a meeting
      parameters: 
        - in: path
          name: id
          description: ID of the meeting to delete
          schema:
            type: integer
          required: true
      responses:
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseInternalError'
        404:
          description: >-
            Not found. This can be caused for two reasons.<br>
            1. The meeting requested doesn't exists<br>
            2. The user making the request is not the owner of the meeting
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/APIResponseNotFound'
                
        202:
          description: >-
            Accepted.<br>
            The meeting is scheduled for deletion because it has status:<br>
            2: LAUNCHING<br> 
            3: RUNNING<br>
            4: TERMINATING<br>
            The entity won't be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMeetingSchudeledDelete'
        400:
          description: >-
            Bad Request. The meeting can't be terminated because it has status:<br>
            5: TERMINATED<br>
            6: ERROR_CREATE<br>
            7: ERROR_TERMINATE
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMeetingDeleteBadRequest'
        204:
          description: >-
            The meeting has been deleted. The entity gets deleted since the meeting had status<br>
            1: QUEUED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMeetingDeleteNoContent'
servers:
  - url: 'https://app.yameeting.com/api/v1'
    description: Production server (uses live data)
components:
  securitySchemes:
    password:
      type: oauth2
      flows:
        password:
          tokenUrl: 'https://app.yameeting.com/api/auth/token/'
          scopes:
            write: allows modifying resources
            read: allows reading resources
  schemas:
    DRFCollectionResponse:
      type: object
      properties:
        count:
          type: integer
          description: Qty of entities found
          example: 340
        next:
          type: string
          nullable: true
          description: URL to get the next page or null if there's no more results
        previous:
          type: string
          nullable: true
          description: URL to get the previous page or null if there's no more results
        results:
          type: array
          items:
            type: object
            description: An entity
    CollectionEntityMeeting:
      type: array
      description: A collection of meetings entities
      items:
        $ref: '#/components/schemas/EntityMeeting'
    EntityMeeting:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the meeting
          example: 4422
        name:
          type: string
          description: The name of the meeting
          example: "I love Ya!Meeting"
        size:
          type: object
          description: >-
            The maximun number of participants on the meeting
            <br>1: Up to 5 people
            <br>2: Up to 15 people
            <br>3: Up to 30 people
            <br>4: Up to 50 people
            <br>5: Up to 100 people
          properties:
            code:
              type: integer
              enum: [1,2,3,4,5]
              example: 2
            label:
              type: string
              example: "Up to 5 people. (USD 0.02/hr)"
        start_date:
          type: string
          example: "2020-04-11T15:32:27Z"
          format: date-time
          description: >-
            The date and time when the meeting should start in iso-8601 format. (Note: The meeting will be launched from 5 to 10 minutes before the requested date)
        end_date:
          type: string
          format: date-time
          description: When the meeting will ended
          example: "2020-04-11T17:32:27Z"
        invite:
          type: string
          items:
            type: string
            example: ["bot@yameeting.com", "adriano@yameeting.com"]
        url:
          type: string
          description: The URL for accesing the meeting
          example: "https://meetme.yameeting.com/229a89f161b08ae8/ILoveYaMeeting"
        user:
          type: integer
          description: The user ID that created the meeting
          example: 44
        status:
          type: object
          description: >-
            The status of the meeting
          properties:
            code:
              type: integer
              enum: [1,2,3,4,5,6]
              example: 2
              description: >-
                1: QUEUED
                <br>2: LAUNCHING
                <br>3: RUNNING
                <br>4: TERMINATING
                <br>5: TERMINATED
                <br>6: ERROR_CREATE
                <br>7: ERROR_TERMINATE
            label:
              type: string
              example: "Launching"
        location:
          type: object
          description: The region where the VM will be launched
          properties:
            code:
              type: integer
              description: >-
                1: America
                <br>2: Europe
                <br>3: Asia
                <br>4: India
              enum: [1,2,3,4]
              example: 1
            label:
              type: string
              example: "America"
        creation_date:
          type: string
          description: A datetime record of when the meeting was created
          example: "2020-04-11T17:49:33.063714Z"
        modification_date:
          type: string
          description: A datetime record of when the meeting was modified
          example: "2020-04-11T17:55:33.063714Z"
        moderator:
          type: boolean
          description: Indicates if this meeting has predefined moderator
        moderator_credentials:
          type: object
          description: The credentials needed to obtain moderator role and activate the meeting
          nullable: true
          properties:
            username:
              type: string
              description: The username
            password:
              type: string
              description: The password
    GetMeetingCollection:
      allOf:
        - $ref: '#/components/schemas/DRFCollectionResponse'
      properties:
        results:
          $ref: '#/components/schemas/CollectionEntityMeeting'
    CreateMeetingPayload:
      type: object
      properties:
        name:
          type: "string"
          minLength: 1
          maxLength: 25
          example: "My super new meeting"
        size:
          type: integer
          enum: [1,2,3,4,5]
          description: >
            Defines how many people will attend the meeting.
            <br>1: Up to 5 people
            <br>2: Up to 15 people
            <br>3: Up to 30 people
            <br>4: Up to 50 people
            <br>5: Up to 100 people
        duration: 
          type: integer
          enum: [3,6,12,24]
          description: The duration of the meeting in hours
        start_date:
          type: string
          example: "2020-04-11T15:32:27.753Z"
          description: >-
            The date and time when the meeting should start in iso-8601 format. (Note: The room will be launched from 5 to 10 minutes before the requested date)
        location:
          type: integer
          enum: [1,2,3,4]
          description: >-
            The location where the VM will created for the meeting. This will help you reduce latencies issues.
              <br>1: America
              <br>2: Europe
              <br>3: Asia
              <br>4: India
        invite:
          type: array
          description: The emails address of the meeting attendees
          items:
            type: string
            example: ["bot@yameeting.com","adriano@yameeting.com"]
        moderator:
          type: boolean
          description: Indicates if this meeting has predefined moderator 
    APIResponseCreateMeetingSaved:
      allOf:
        - $ref: '#/components/schemas/APIResponse'
      properties:
        data:
          $ref: '#/components/schemas/EntityMeeting'
        message:
          example: "Meeting saved"
        message_code:
          example: "MEETING_SAVED"
        http_code:
          example: 201
        error_fields:
          example: {}
    APIResponseMeetingSchudeledDelete:
      allOf:
        - $ref: '#/components/schemas/APIResponse'
      properties:
        data:
          $ref: '#/components/schemas/EntityMeeting'
        message:
          example: "The meeting has been scheduled for termination"
        message_code:
          example: "MEETING_SCHEDULED_FOR_TERMINATION"
        http_code:
          example: 202
        error_fields:
          example: {}
    APIResponseMeetingDeleteBadRequest:
      allOf:
        - $ref: '#/components/schemas/APIResponse'
      properties:
        data:
          $ref: '#/components/schemas/EntityMeeting'
        message:
          example: "The meeting has ended already. You can't delete it."
        message_code:
          example: "MEETING_HAS_ENDED"
        http_code:
          example: 400
        error_fields:
          example: {}
    APIResponseMeetingDeleteNoContent:
      allOf:
        - $ref: '#/components/schemas/APIResponse'
      properties:
        message:
          example: "The meeting was deleted"
        message_code:
          example: "MEETING_DELETED"
        http_code:
          example: 204
        error_fields:
          example: {}
    APIResponseCreateMeetingBadRequest:
      allOf:
        - $ref: '#/components/schemas/APIResponse'
      properties:
        message:
          example: "Invalid Request"
        message_code:
          example: "INVALID_REQUEST"
        http_code:
          example: 400
        error_fields:
          example: {"name": ["Ensure this field has no more than 25 characters."]}
    APIResponseCreateMeetingPaymentRequired:
      allOf:
        - $ref: '#/components/schemas/APIResponse'
      properties:
        message:
          example: "You don't have enough credits to create the meeting"
        message_code:
          example: "NOT_ENOUGH_CREDIT"
        http_code:
          example: 402
        error_fields:
          example: {}
    APIResponseInternalError:
      allOf:
        - $ref: '#/components/schemas/APIResponse'
      properties:
        message:
          example: "Something failed on our side"
        message_code:
          example: "INTERNAL_ERROR"
        http_code:
          example: 500
        error_fields:
          example: {}
    APIResponseNotFound:
      allOf:
        - $ref: '#/components/schemas/APIResponse'
      properties:
        message:
          example: "The meeting requested doesn't exists"
        message_code:
          example: "MEETING_NOT_FOUND"
        http_code:
          example: 404
        error_fields:
          example: {}
    APIResponse:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
        message_code:
          type: string
        http_code:
          type: integer
        error_fields:
          type: object
info:
  contact:
    name: Ya!Meeting
    email: hello@yameeting.com
    url: https://www.yameeting.com
  version: "1.1"
  title: Ya!Meeting
  description: |-
    One click secure and encrypted video conferencing solution for meetings.
    <br>On Demand private servers with Jitsi Meet for every meeting
