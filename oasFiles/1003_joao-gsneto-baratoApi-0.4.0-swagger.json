{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "API Barato App.",
    "version" : "0.4.0",
    "title" : "API BC",
    "license" : {
      "name" : "Barato License",
      "url" : "http://www.barato.com.br"
    }
  },
  "tags" : [ {
    "name" : "users",
    "description" : "Users API endpoint"
  }, {
    "name" : "homepage",
    "description" : "Homepage blocks and listings"
  }, {
    "name" : "offers",
    "description" : "Offers and offer lists and info"
  }, {
    "name" : "cart",
    "description" : "Offers and offer lists and info"
  }, {
    "name" : "delivery",
    "description" : "Delivery API and Features"
  } ],
  "servers" : [ {
    "url" : "http://localhost:8000",
    "description" : "Local server"
  }, {
    "url" : "https://api-staging.barato.com.br",
    "description" : "Staging Server"
  }, {
    "url" : "https://api.barato.com.br",
    "description" : "Production server"
  } ],
  "paths" : {
    "/users" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "User - Create",
        "description" : "Add a new user to barato",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "User post data",
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/LoginResponse"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid parameters"
          },
          "405" : {
            "description" : "Invalid user"
          }
        }
      }
    },
    "/user/{user}" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Update user info (except for password).",
        "description" : "Update user's info at database.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "User change data",
          "required" : true
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "user",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "ID representing the user to be edited."
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Ill formed request"
          },
          "404" : {
            "description" : "Invalid parameters"
          }
        }
      }
    },
    "/users/login_with_credentials" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "User - Login - With Credentials",
        "description" : "",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserLogin"
              }
            }
          },
          "description" : "User credentials",
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/LoginResponse"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid credentials"
          },
          "405" : {
            "description" : "Invalid parameters"
          }
        }
      }
    },
    "/users/request_password_reset" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "User - Reset Password - Request",
        "description" : "",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserEmail"
              }
            }
          },
          "description" : "User email",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid credentials"
          },
          "405" : {
            "description" : "Invalid parameters"
          }
        }
      }
    },
    "/users/validate_password_reset" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "User - Reset Password - Validate",
        "description" : "",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserChangeEmail"
              }
            }
          },
          "description" : "User email, token and the new password",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid credentials"
          },
          "405" : {
            "description" : "Invalid parameters"
          }
        }
      }
    },
    "/users/login_with_social_token" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "User - Login - Social",
        "description" : "",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserLoginSocial"
              }
            }
          },
          "description" : "Social auth Token and type",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/LoginResponse"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid credentials"
          },
          "405" : {
            "description" : "Invalid parameters"
          }
        }
      }
    },
    "/users/validate_cellphone_code" : {
      "post" : {
        "security" : [ {
          "BearerUser" : [ ]
        }, {
          "ApiKey" : [ ]
        } ],
        "tags" : [ "users" ],
        "summary" : "User - Edit - Validate Phonenumber and save",
        "description" : "Validates an updated cellphone to enable logins via cellphone.<br /> Require an valid Bearer Firebase Token",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCellPhoneValidation"
              }
            }
          },
          "description" : "User phone",
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid token"
          }
        }
      }
    },
    "/users/request_cellphone_code" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "User - Edit - Request Phonenumber",
        "description" : "Request an sms code to firebase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCellPhone"
              }
            }
          },
          "description" : "User phone",
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/login_with_cellphone_request" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "User - Login - SMS - Request",
        "description" : "Request an sms code to firebase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCellPhone"
              }
            }
          },
          "description" : "User phone",
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/change_password" : {
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "User - Change Password - Request",
        "description" : "Allow the current user to change his password",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserChangePassword"
              }
            }
          },
          "description" : "Old password and new password.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/LoginResponse"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid credentials"
          },
          "405" : {
            "description" : "Invalid parameters"
          }
        }
      }
    },
    "/users/login_with_cellphone_validate" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "User - Login - SMS - Validate and Do Login",
        "description" : "Validates an cellphone and SMS code to proceed to login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCellPhoneValidation"
              }
            }
          },
          "description" : "Phone and token combination",
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/LoginResponse"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid credentials"
          },
          "405" : {
            "description" : "Invalid parameters"
          }
        }
      }
    },
    "/offers/{city_id}" : {
      "get" : {
        "tags" : [ "offers" ],
        "summary" : "Offers - List - By City",
        "parameters" : [ {
          "in" : "path",
          "name" : "city_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "ID representing the city",
          "$ref" : "#/components/schemas/OffersResponse"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/OffersResponse"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid parameters"
          }
        }
      }
    },
    "/offer/{offer_id}" : {
      "get" : {
        "tags" : [ "offers" ],
        "summary" : "Offers - Offer - By ID",
        "parameters" : [ {
          "in" : "path",
          "name" : "offer_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "ID representing the offer"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Offer"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid parameters"
          }
        }
      }
    },
    "/delivery/user/address" : {
      "get" : {
        "tags" : [ "delivery" ],
        "summary" : "Delivery - User - List User Addresses",
        "description" : "Returns a list of user addresses",
        "security" : [ {
          "BearerUser" : [ ]
        }, {
          "ApiKey" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ApiResponse"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/DeliveryUserAddress"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "delivery" ],
        "summary" : "Delivery - User - New Address",
        "description" : "Saves a new address to user",
        "security" : [ {
          "BearerUser" : [ ]
        }, {
          "ApiKey" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryUserAddress"
              }
            }
          },
          "description" : "Address payload.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/delivery/user/address/{address}" : {
      "put" : {
        "tags" : [ "delivery" ],
        "summary" : "Delivery - User - Update Address",
        "description" : "Saves a new address to user",
        "parameters" : [ {
          "in" : "path",
          "name" : "address",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "Address ID"
        } ],
        "security" : [ {
          "BearerUser" : [ ]
        }, {
          "ApiKey" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryUserAddress"
              }
            }
          },
          "description" : "Address payload.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/delivery/orders/{state}" : {
      "get" : {
        "tags" : [ "delivery" ],
        "summary" : "Delivery - Orders - List Pending",
        "description" : "Returns a list of pending orders",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "state",
          "schema" : {
            "type" : "string",
            "enum" : [ "pending", "approved", "on_delivery", "cancelled" ]
          }
        } ],
        "security" : [ {
          "BearerPartner" : [ ]
        }, {
          "ApiKey" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ApiResponse"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/DeliveryOrder"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/delivery/order/address/{address}" : {
      "put" : {
        "tags" : [ "delivery" ],
        "summary" : "Delivery - User - Update Address",
        "description" : "Saves a new address to user",
        "parameters" : [ {
          "in" : "path",
          "name" : "address",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "Address ID"
        } ],
        "security" : [ {
          "BearerUser" : [ ]
        }, {
          "ApiKey" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryUserAddress"
              }
            }
          },
          "description" : "Address payload.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about this API",
    "url" : "http://www.barato.com.br"
  },
  "security" : [ {
    "BearerPartner" : [ ]
  }, {
    "BearerUser" : [ ]
  }, {
    "ApiKey" : [ "users", "delivery", "home", "offers", "cart", "Promocode", "Purchase" ]
  } ],
  "components" : {
    "securitySchemes" : {
      "BearerUser" : {
        "type" : "http",
        "scheme" : "bearer"
      },
      "ApiKey" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "X-API-Key"
      }
    },
    "schemas" : {
      "LoginResponse" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authToken" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "UserEmail" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email"
          }
        }
      },
      "UserLogin" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          }
        }
      },
      "UserChangePassword" : {
        "type" : "object",
        "properties" : {
          "oldPassword" : {
            "type" : "string",
            "format" : "password"
          },
          "newPassword" : {
            "type" : "string",
            "format" : "password"
          }
        }
      },
      "UserLoginSocial" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "format" : "token"
          },
          "method" : {
            "type" : "string",
            "format" : "string",
            "description" : "Social provider name (facebook|google|apple)"
          }
        }
      },
      "UserCellPhone" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "UserCellPhoneValidation" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "format" : "int64"
          },
          "code" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "UserChangeEmail" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "newPassword" : {
            "type" : "string",
            "format" : "password"
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          },
          "phone" : {
            "type" : "string",
            "format" : "int64"
          },
          "avatar" : {
            "type" : "string",
            "format" : "url"
          },
          "ip" : {
            "type" : "string",
            "format" : "ipv4"
          },
          "cpf" : {
            "type" : "string",
            "format" : "int64"
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "F", "M" ]
          },
          "state" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "birthdate" : {
            "type" : "string"
          },
          "neighborhood" : {
            "type" : "string"
          }
        }
      },
      "DeliveryUserAddress" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "cep" : {
            "type" : "string",
            "format" : "zipcode"
          },
          "address" : {
            "type" : "string"
          },
          "complement" : {
            "type" : "string",
            "format" : "int64"
          },
          "reference" : {
            "type" : "string",
            "format" : "string"
          }
        }
      },
      "Offer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string"
          },
          "partner" : {
            "type" : "string"
          },
          "team_price" : {
            "type" : "string"
          },
          "and_more_fields" : {
            "type" : "string"
          }
        }
      },
      "OffersResponse" : {
        "type" : "object",
        "properties" : {
          "offers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Offer"
            }
          }
        }
      },
      "ApiResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "success | error"
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "error message"
          },
          "data" : {
            "type" : "object"
          }
        }
      },
      "DeliveryOrder" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "id"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "pending", "cancelled", "approved", "on_delivery" ]
          },
          "comments" : {
            "type" : "string"
          },
          "order" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer"
              },
              "created_at" : {
                "type" : "string",
                "format" : "datetime"
              }
            }
          },
          "user" : {
            "type" : "object",
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "type" : "object",
            "$ref" : "#/components/schemas/Offer"
          },
          "address" : {
            "type" : "object",
            "$ref" : "#/components/schemas/DeliveryUserAddress"
          }
        }
      }
    }
  }
}