---
openapi: 3.0.0
servers:
  - url: "https://api.crediwatch.com"
    description: Production Platform - Crediwatch
  - url: "https://api.crediwatch.org"
    description: Staging Platform - Crediwatch
  - url: "https://api.sandbox.crediwatch.com"
    description: Sandbox Platform - Crediwatch 
info:
  version: 3.0.0
  title: Crediwatch
  contact:
    name: Sandeep Anandampillai
    email: developer@crediwatch.com
    url: "https://www.crediwatch.com/contact/"
  license:
    name: Crediwatch API License
    url: ""
  termsOfService: "https://www.crediwatch.com/api-terms-of-use/"
externalDocs:
  url: https://developer.crediwatch.com
security:
  - jwt: []
paths:
  /search/complete:
    get:
      summary: Autocomplete list
      description: list out the autocomplete array
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            minLength: 3
          description: query string
      operationId: /search/complete
      responses:
        200:
          description: List of Suggestions for complete
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchComplete"
  /search/uci:
    get:
      summary: List of Suggestions for UCI
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            minLength: 3
          description: query string
      operationId: /search/uci
      responses:
        200:
          description: List of Suggestions for UCI
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchUCI"
      description: API to fetch Unique Customer Identification for a given string
  /search:
    get:
      summary: List of Search Results
      description: API to fetch Search Results based on query string and facets
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            minLength: 3
          description: query string
        - name: facet_flag
          in: query
          required: false
          schema:
            type: string
            default: "false"
            enum: 
              - "true"
              - "false"
          description: facet_flag
        - name: page
          in: query
          required: false
          schema:
            type: number
            default: 1
          description: page
        - name: per_page
          in: query
          required: false
          schema:
            type: number
            default: 10
          description: per_page
        - name: filter
          in: query
          required: false
          schema:
            type: object
            properties:
              city: 
                type: "array"
                items: 
                  type: "string"
                example: 
                  - "NEW DELHI"
                  - "BANGALORE"
              model_type: 
                type: "array"
                items: 
                  type: "string"
                example: 
                  - "private_company"
                  - "public_company"
              section_code: 
                type: "array"
                items: 
                  type: "string"
                example: 
                  - "Business Services"
                  - "business_services"
              state: 
                type: "array"
                items: 
                  type: "string"
                example: 
                  - "karnataka"
                  - "Maharashtra"
              status: 
                type: "array"
                items: 
                  type: "string"
                example: 
                  - "active"
                  - "Active"
                  - "Strike Off"
            description: facets
      operationId: /search
      responses:
        200:
          description: List of Search Results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Search"
  /party/{partyId}:
    get:
      summary: Specific party information
      description: API to fetch specific party Information
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
      responses:
        200:
          description: Party basic information
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Party"
  /party/{partyId}/relationships:
    get:
      summary: Relationships list of specific Party
      description: API to fetch Relationships of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - "director"
              - "auditor"
              - "subsidiary_company"
              - "associated_company"
              - "holding_company"
              - "share_holder"
              - "company_secretary"
              - "chief_financial_officer"
              - "chief_executive_officer"
            example: "director"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Party Relationships
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyRelationships"
  /party/{partyId}/relationships/{relatioshipId}:
    get:
      summary: Specific Relationship of specific Party
      description: API to fetch a Relationship of specific Party
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: relatioshipId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
      responses:
        200:
          description: Party Relationships
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyRelationship"
  /party/{partyId}/registrations:
    get:
      summary: Registrations list of specific Party
      description: API to fetch Registrations of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - "permanent_account_number"
              - "passport"
              - "tax_identification_number"
              - "legal_entity_identifier"
              - "director_identification_number"
              - "corporate_identification_number"
              - "llp_identification_number"
              - "foreign_company_registration_number"
              - "employee_provident_fund"
              - "gstn"
              - "importer_exporter_code"
              - "auditor_membership_number"
              - "trademark"
              - "voter_identification"
            example: "corporate_identification_number"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Party Registrations
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyRegistrations"
  /party/{partyId}/information:
    get:
      summary: Information list of specific Party
      description: API to fetch Information of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - "permanent_account_number"
              - "passport"
              - "tax_identification_number"
              - "legal_entity_identifier"
              - "director_identification_number"
              - "corporate_identification_number"
              - "llp_identification_number"
              - "foreign_company_registration_number"
              - "employee_provident_fund"
              - "gstn"
              - "importer_exporter_code"
              - "auditor_membership_number"
              - "charge"
              - "nse_listing"
              - "bse_listing"
              - "trademark"
              - "voter_identification"
            example: "corporate_identification_number"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Party Information
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyInformationList"
  /party/{partyId}/information/{informationId}:
    get:
      summary: Information list of specific Party
      description: API to fetch Information of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: informationId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
      responses:
        200:
          description: Party Information
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyInformation"
  /party/{partyId}/addressess:
    get:
      summary: Address list of specific Party
      description: API to fetch Address of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - "postal_address"
              - "email"
              - "telephone"
            example: "postal_address"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Party Address
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyAddresses"
  /party/{partyId}/addressess/{addressId}:
    get:
      summary: Address list of specific Party
      description: API to fetch Address of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: addressId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
      responses:
        200:
          description: Party Address
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyAddress"
  /party/{partyId}/documents:
    get:
      summary: Documents list of specific Party
      description: API to fetch Documents of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: type
          in: query
          required: false
          schema:
            type: string
            example: "form_dir_12"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Party Address
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyDocuments"
  /party/{partyId}/documents/{documentId}:
    get:
      summary: Documents list of specific Party
      description: API to fetch Documents of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
      responses:
        200:
          description: Party Address
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyDocument"
  /party/{partyId}/court_cases:
    get:
      summary: Court Case list of specific Party
      description: API to fetch Court Cases of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: type
          in: query
          required: false
          schema:
            type: string
            example: "in_court_hc_karnataka"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Party Court Cases
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyDocuments"
  # /party/{partyId}/court_cases/{caseId}:
  /party/{partyId}/products:
    get:
      summary: Product list of specific Party
      description: API to fetch Products of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: type
          in: query
          required: false
          schema:
            type: string
            example: "report"
        - name: owner
          in: query
          required: false
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: tag
          in: query
          required: false
          schema:
            type: string
            example: "case"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Party Address
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyDocuments"
  # /party/{partyId}/products/{productId}:
  /party/{partyId}/portfolios:
    get:
      summary: Portfolio list of specific Party
      description: API to fetch Portfolios of specific Party with type filter and pagination
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: type
          in: query
          required: false
          schema:
            type: string
            example: "report"
        - name: owner
          in: query
          required: false
          schema:
            type: string
            example: 556829c96d6f6f2616253107
        - name: tag
          in: query
          required: false
          schema:
            type: string
            example: "case"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Party Address
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartyDocuments"
  # /party/{partyId}/portfolios/{portfolioId}:
  /products:
    get:
      summary: List all Products
      description: API to fetch all Products
      parameters:
        - name: scope
          in: query
          required: false
          schema:
            type: string
            default: all
            enum:
              - all
              - my
              - account
          description: |-
            To get Products by owner
      operationId: /products
      responses:
        200:
          description: List of portfolios owned by customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
    post:
      description: Create a new Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        201:
          description: Product created for customer
        400:
          description: the request could not be understood or was missing required parameters
  /products/{productId}:
    get:
      summary: Get a specific Product
      description: API to fetch a portfolio
      parameters:
        - in: path
          name: productId
          required: true
          description: id of the Product
          schema:
            type: string
            example: 556829c96d6f6f2616253107
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Product"
  /portfolios:
    get:
      summary: List all portfolios
      description: API to fetch all portfolios
      parameters:
        - name: scope
          in: query
          required: false
          schema:
            type: string
            default: all
            enum:
              - all
              - my
              - account
          description: |-
            To get portfolios by Owner
        - name: type
          in: query
          required: false
          schema:
            type: string
          description: |-
            To get portfolios by Owner
      operationId: /portfolios
      responses:
        200:
          description: List of portfolios owned by customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Portfolios"
    post:
      description: Create a new portfolio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Portfolio"
      responses:
        201:
          description: List of portfolios owned by customer
        400:
          description: the request could not be understood or was missing required parameters
  /portfolios/{portfolioId}:
    get:
      summary: List a specific portfolio
      description: API to fetch a portfolio
      parameters:
        - in: path
          name: portfolioId
          required: true
          description: id of the portfolio
          schema:
            type: string
            example: 556829c96d6f6f2616253107
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Portfolio"
  /news/articles:
    get:
      summary: List all news articles
      description: API to fetch all news articles
      parameters:
        - in: query
          name: party
          required: true
          schema:
            type: string
            minLength: 3
            description: this takes query to search for e.g party = 'infosys' this also takes 'or' and 'and' query for 'or' query specify ' ; ' between strings e.g. 'infosys;wipro' for 'and' query specify ' , ' between strings e.g 'infosys,murthy'
        - name: industry
          in: query
          required: false
          schema:
            type: string
            description: This takes category value such as 'business','politics' etc
          allowEmptyValue: true
        - name: location
          in: query
          required: false
          schema:
            type: string
            description: This takes location values such as 'global','india' and if want to get multiple news articles from multiple locations separte locations by comma(' , ')
            example: "global,india"
          allowEmptyValue: true
        - name: customer
          in: query
          required: false
          schema:
            type: string
          allowEmptyValue: true
          description: Name of customer for which news api is used e.g. bajaj
        - name: sentiment
          in: query
          required: false
          schema:
            type: string
          description: |-
            if specified takes values as 'negative' or 'positive'
            if not does filter out articles based on sentiment
          allowEmptyValue: true
        - name: from_published_date
          in: query
          required: false
          schema:
            type: string
          description: |-
            it returns the articles from the date given till now
            else do not filter articles based on date
          allowEmptyValue: true
        - name: to_published_date
          in: query
          required: false
          schema:
            type: string
          description: |-
            It returns the articles till date given
            else do not filter articles based on date
          allowEmptyValue: true
        - name: count
          in: query
          required: false
          schema:
            type: string
            default: "100"
          description: returns no of articles equal to count or less
          allowEmptyValue: true
        - name: luci
          in: query
          required: false
          schema:
            type: string
            default: "False"
          description: |-
            least unique company name indentifier.
            must be set true only in case of search string contains party name/s
          allowEmptyValue: true
        - name: cursor
          in: query
          required: false
          schema:
            type: string
            default: "0"
          description: |-
            this is pointer to elasticsearch.
            set higher number to get more results
          allowEmptyValue: true
        - name: exact
          in: query
          required: false
          schema:
            type: string
          description: if set true, exact match search string
          allowEmptyValue: true
        - name: sentiment_min
          in: query
          required: false
          schema:
            type: string
            default: "0.1"
          description: minimum threshold for sentiment.
          allowEmptyValue: true
        - name: sentiment_max
          in: query
          required: false
          schema:
            type: string
            default: "1"
          description: maximum threshold for sentiment
          allowEmptyValue: true
        - name: salience
          in: query
          required: false
          schema:
            type: string
            default: "False"
          description: if set true uses google salience features returns entities with their salience values
          allowEmptyValue: true
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
          description: sort results by published data or relevance score, eg. sort_by=published_date
      operationId: ""
      responses:
        "200":
          description: Successfully returned news articles
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Articles"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /news/articles/{articleId}:
    get:
      summary: ""
      description: ""
      parameters:
        - name: sentiment
          in: query
          required: false
          schema:
            type: string
            default: "False"
          allowEmptyValue: true
          description: gives sentiment score of article
        - name: summary
          in: query
          required: false
          schema:
            type: string
            default: "False"
          description: return summary of news article
          allowEmptyValue: true
        - name: word_count
          in: query
          required: false
          schema:
            type: string
            default: "100"
          description: this sets numbers words in summary
          allowEmptyValue: true
        - name: articleId
          in: path
          required: true
          schema:
            type: string
          description: ID of news article
      operationId: ""
      responses:
        "200":
          description: Sucessfully returned summary
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Article"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      example:
                        internalMessage: its a value error, check the values constraint

components:
  links: {}
  callbacks: {}
  schemas:
    SearchComplete:
      type: object
      properties:
        meta:
          type: "object"
          properties: 
            q: 
              type: "string"
              example: "info"
        data:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "string"
                example: "556277cf6d6f6f376276f50f"
              type:
                type: "string"
                example: "private_company"
              attributes:
                type: "object"
                properties:
                  name:
                    type: "string"
                    example: "INFO SERVICES PRIVATE LIMITED"
                  status:
                    type: "string"
                    example: "Strike Off"
                  created:
                    type: "string"
                    example: "1999-12-15"
    SearchUCI:
      type: object
      properties:
        meta:
          type: "object"
          properties: 
            q: 
              type: "string"
              example: "info"
        data:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "string"
                example: "556277cf6d6f6f376276f50f"
              type:
                type: "string"
                example: "private_company"
              attributes:
                type: "object"
                properties:
                  name:
                    type: "string"
                    example: "INFO SERVICES PRIVATE LIMITED"
                  status:
                    type: "string"
                    example: "Strike Off"
                  created:
                    type: "string"
                    example: "1999-12-15"
    Search:
      type: object
      properties: 
        meta: 
          properties: 
            q: 
              type: "string"
              example: "infosys"
            page: 
              type: "number"
              example: 1
            per_page: 
              type: "number"
              example: 10
            total: 
              type: "number"
              example: 3977
            facets: 
              properties: 
                city: 
                  type: "object"
                  properties: 
                    doc_count: 
                      type: "number"
                      example: 3977
                    city: 
                      type: "object"
                      properties: 
                        doc_count_error_upper_bound: 
                          type: "number"
                          example: 5
                        sum_other_doc_count: 
                          type: "number"
                          example: 377
                        buckets: 
                          type: "array"
                          items: 
                            type: "object"
                            properties: 
                              key: 
                                type: "string"
                                example: "NEW DELHI"
                              doc_count: 
                                type: "number"
                                example: 34
                model_type: 
                  properties: 
                    doc_count_error_upper_bound: 
                      type: "number"
                      example: 0
                    sum_other_doc_count: 
                      type: "number"
                      example: 1
                    buckets: 
                      type: "array"
                      items: 
                        type: "object"
                        properties: 
                          key: 
                            type: "string"
                            example: "private_company"
                          doc_count: 
                            type: "number"
                            example: 1532
                  type: "object"
                section_code: 
                  properties: 
                    doc_count: 
                      type: "number"
                      example: 3977
                    section_code: 
                      properties: 
                        doc_count_error_upper_bound: 
                          type: "number"
                          example: 5
                        sum_other_doc_count: 
                          type: "number"
                          example: 127
                        buckets: 
                          type: "array"
                          items: 
                            type: "object"
                            properties: 
                              key: 
                                type: "string"
                                example: "Business Services"
                              doc_count: 
                                type: "number"
                                example: 582
                      type: "object"
                  type: "object"
                state: 
                  properties: 
                    doc_count: 
                      type: "number"
                      example: 3977
                    state: 
                      properties: 
                        doc_count_error_upper_bound: 
                          type: "number"
                          example: 17
                        sum_other_doc_count: 
                          type: "number"
                          example: 675
                        buckets: 
                          type: "array"
                          items: 
                            type: "object"
                            properties: 
                              key: 
                                type: "string"
                                example: "karnataka"
                              doc_count: 
                                type: "number"
                                example: 93
                      type: "object"
                  type: "object"
                status: 
                  properties: 
                    doc_count: 
                      type: "number"
                      example: 3977
                    status: 
                      properties: 
                        doc_count_error_upper_bound: 
                          type: "number"
                          example: 0
                        sum_other_doc_count: 
                          type: "number"
                          example: 0
                        buckets: 
                          type: "array"
                          items: 
                            type: "object"
                            properties: 
                              key: 
                                type: "string"
                                example: "active"
                              doc_count: 
                                type: "number"
                                example: 925
                      type: "object"
                  type: "object"
              type: "object"
          type: "object"
        data: 
          type: "array"
          items: 
            type: "object"
            properties: 
              _id: 
                type: "string"
                example: "556829c96d6f6f2616253107"
              _type: 
                type: "string"
                example: "public_company"
              attributes: 
                properties: 
                  name: 
                    type: "string"
                    example: "INFOSYS LIMITED"
                  status: 
                    type: "string"
                    example: "active"
                  city: 
                    type: "string"
                    example: "BANGALORE"
                  created: 
                    type: "string"
                    format: "date"
                    example: "1981-07-02"
                  authorised_capital: 
                    type: "number"
                    example: 24000000000.0
                  paid_up_capital: 
                    type: "number"
                    example: 21292283390.0
                type: "object"
    Party:
      type: object
      properties:
        data:
          type: "object"
          properties:
            id:
              type: string
              example: "57ec67ed6d6f6f192300b226"
            type:
              type: string
              example: "private_company"
            attributes:
              type: "object"
              properties:
                name:
                  type: string
                  example: "CREDIWATCH INFORMATION ANALYTICS PRIVATELIMITED"
                status:
                  type: string
                  example: "active"
                paid_up_capital:
                  type: number
                  format: double
                  example: 993169.00
                company_category:
                  type: string
                  example: "Company limited by Shares"
                authorised_capital:
                  type: number
                  format: double
                  example: 2500000.00
                company_status:
                  type: string
                  example: "Active"
                aliases:
                  type: "array"
                  items:
                    type: string
                  example:
                    - "CREDIWATCH INFORMATION ANALYTICS PRIVATELIMITED"
                    - "CREDIWATCH INFORMATION ANALYTICS PRIVATE LIMITED"
                whether_listed_or_not:
                  type: string
                  example: "Unlisted"
                date_of_last_agm:
                  type: string
                  format: date
                  example: "2019-09-20"
                date_of_balance_sheet:
                  type: string
                  format: date
                  example: "2019-03-31"
                created:
                  type: string
                  format: date-time
                  example: "2016-09-27T00:00:00.000+00:00"
    PartyRelationship:
      type: object
      properties:
        meta:
          type: "object"
          properties:
            party_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
            relatioship_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
        data:
          type: "object"
          properties:
            id:
              type: "string"
              example: "5a3246bf278d9ed5a851c4fc"
            type:
              type: "string"
              example: "director"
            attributes:
              type: "object"
              properties:
                _ref:
                  type: "string"
                  example: "signatory"
                created:
                  type: "string"
                  format: "date"
                  example: "2016-09-27"
                current_designation_appointed_date:
                  type: "string"
                  format: "date"
                  example: "2016-09-27"
                date_of_cessation:
                  type: "string"
                  format: "date"
                  example: "2016-09-27"
                designation:
                  type: "string"
                  example: "Director"
                dsc_expiry_date:
                  type: "string"
                  format: "date"
                  example: "2020-09-26"
                dsc_registered:
                  type: "string"
                  example: "Yes"
                name:
                  type: "string"
                  example: "signatory"
                target_id:
                  type: "string"
                  example: "5559c6176d6f6f272bc51706"
                updated:
                  type: "string"
                  format: "date"
                  example: "2018-09-28"
                target_name:
                  type: "string"
                  example: "SANDEEP ANANDAMPILLAI RAMANUJAPURAM"
                din_status:
                  type: "string"
                  example: "Approved"
    PartyRelationships:
      type: object
      properties:
        meta:
          type: "object"
          properties:
            party_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
            page:
              type: "number"
              example: 1
            per_page:
              type: "number"
              example: 10
            total_records:
              type: "number"
              example: 5
        data:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "string"
                example: "5a3246bf278d9ed5a851c4fc"
              type:
                type: "string"
                example: "director"
              attributes:
                type: "object"
                properties:
                  _ref:
                    type: "string"
                    example: "signatory"
                  created:
                    type: "string"
                    format: "date"
                    example: "2016-09-27"
                  current_designation_appointed_date:
                    type: "string"
                    format: "date"
                    example: "2016-09-27"
                  date_of_cessation:
                    type: "string"
                    format: "date"
                    example: "2016-09-27"
                  designation:
                    type: "string"
                    example: "Director"
                  dsc_expiry_date:
                    type: "string"
                    format: "date"
                    example: "2020-09-26"
                  dsc_registered:
                    type: "string"
                    example: "Yes"
                  name:
                    type: "string"
                    example: "signatory"
                  target_id:
                    type: "string"
                    example: "5559c6176d6f6f272bc51706"
                  updated:
                    type: "string"
                    format: "date"
                    example: "2018-09-28"
                  target_name:
                    type: "string"
                    example: "SANDEEP ANANDAMPILLAI RAMANUJAPURAM"
                  din_status:
                    type: "string"
                    example: "Approved"
    PartyInformationList:
      type: object
      properties:
        meta: 
          properties: 
            party_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
            page:
              type: "number"
              example: 1
            per_page:
              type: "number"
              example: 10
            total_records:
              type: "number"
              example: 5
            date_format: 
              type: "string"
              example: "Y-m-d"
          type: "object"
        data: 
          type: "array"
          items: 
            type: "object"
            properties: 
              id: 
                type: "string"
                example: "5dd3f6fbc775eb0fffb48cb1"
              type: 
                type: "string"
                example: "financial_year"
              
              sources:
                type: "object"
                properties: 
                  document_id: 
                    type: "string"
                    example: "5dd3f665c775eb0fffb48ca7"
                  in_gov_mca: 
                    type: "string"
                    example: "2019-12-18 13:12:13 +0530"
              attributes: 
                type: "object"
                properties: 
                  _ref: 
                    type: "string"
                    example: "2019-03-31"
                  amount_due_for_transfer_to_investor_education_and_protection_fund_iepf: 
                    type: "string"
                    example: "0.00"
                  assets: 
                    type: "string"
                    example: "58385701.00"
                  borrowing_from_foreign_companies: 
                    type: "string"
                    example: "0.00"
                  borrowing_from_foreign_institutional_agencies: 
                    type: "string"
                    example: "0.00"
                  business_activities: 
                    type: "array"
                    items: 
                      type: "object"
                      properties: 
                        name: 
                          type: "string"
                          example: "Information and communication"
                        activity_group_code: 
                          type: "string"
                          example: "J"
                        description_of_main_activity_group: 
                          type: "string"
                          example: "Information and communication"
                        business_activity_code: 
                          type: "string"
                          example: "J8"
                        description_of_business_activity: 
                          type: "string"
                          example: "Other information & communication service activities"
                        percentage_turnover: 
                          type: "string"
                          example: "100.00"
                  calls_unpaid_by_directors: 
                    type: "string"
                    example: "0.00"
                  calls_unpaid_by_others: 
                    type: "string"
                    example: "0.00"
                  capital_reserve: 
                    type: "string"
                    example: "0.00"
                  capital_work_in_progress: 
                    type: "string"
                    example: "4943094.00"
                  cash_and_cash_equivalents: 
                    type: "string"
                    example: "31992230.00"
                  change_in_inventories_finished_goods: 
                    type: "string"
                    example: "0.00"
                  change_in_inventories_work_in_trade: 
                    type: "string"
                    example: "0.00"
                  changes_in_inventories_of_finished_goods_work_in_progress_and_stock_in_trade: 
                    type: "string"
                    example: "0.00"
                  commercial_paper: 
                    type: "string"
                    example: "0.00"
                  cost_of_materials_consumed: 
                    type: "string"
                    example: "0.00"
                  created: 
                    type: "string"
                    example: "2018-04-01"
                  currency: 
                    type: "string"
                    example: "INR"
                  current_investments: 
                    type: "string"
                    example: "3200132.00"
                  current_reporting_date: 
                    type: "string"
                    example: "2019-03-31"
                  current_tax: 
                    type: "string"
                    example: "0.00"
                  debentures_claimed_but_not_paid: 
                    type: "string"
                    example: "0.00"
                  deferred_tax: 
                    type: "string"
                    example: "-261325.00"
                  deferred_tax_assets_net: 
                    type: "string"
                    example: "332840.00"
                  deferred_tax_liabilities_net: 
                    type: "string"
                    example: "0.00"
                  party_id: 
                    type: "string"
                    example: "57ec67ed6d6f6f192300b226"
                  terminated: 
                    type: "string"
                    example: "2019-03-31"
    PartyInformation:
      type: object
      properties:
        meta: 
          properties: 
            party_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
            information_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
          type: "object"
        data: 
          type: "object"
          properties: 
            id: 
              type: "string"
              example: "5dd3f6fbc775eb0fffb48cb1"
            type: 
              type: "string"
              example: "financial_year"
            
            sources:
              type: "object"
              properties: 
                document_id: 
                  type: "string"
                  example: "5dd3f665c775eb0fffb48ca7"
                in_gov_mca: 
                  type: "string"
                  example: "2019-12-18 13:12:13 +0530"
            attributes: 
              type: "object"
              properties: 
                _ref: 
                  type: "string"
                  example: "2019-03-31"
                amount_due_for_transfer_to_investor_education_and_protection_fund_iepf: 
                  type: "string"
                  example: "0.00"
                assets: 
                  type: "string"
                  example: "58385701.00"
                borrowing_from_foreign_companies: 
                  type: "string"
                  example: "0.00"
                borrowing_from_foreign_institutional_agencies: 
                  type: "string"
                  example: "0.00"
                business_activities: 
                  type: "array"
                  items: 
                    type: "object"
                    properties: 
                      name: 
                        type: "string"
                        example: "Information and communication"
                      activity_group_code: 
                        type: "string"
                        example: "J"
                      description_of_main_activity_group: 
                        type: "string"
                        example: "Information and communication"
                      business_activity_code: 
                        type: "string"
                        example: "J8"
                      description_of_business_activity: 
                        type: "string"
                        example: "Other information & communication service activities"
                      percentage_turnover: 
                        type: "string"
                        example: "100.00"
                calls_unpaid_by_directors: 
                  type: "string"
                  example: "0.00"
                calls_unpaid_by_others: 
                  type: "string"
                  example: "0.00"
                capital_reserve: 
                  type: "string"
                  example: "0.00"
                capital_work_in_progress: 
                  type: "string"
                  example: "4943094.00"
                cash_and_cash_equivalents: 
                  type: "string"
                  example: "31992230.00"
                change_in_inventories_finished_goods: 
                  type: "string"
                  example: "0.00"
                change_in_inventories_work_in_trade: 
                  type: "string"
                  example: "0.00"
                changes_in_inventories_of_finished_goods_work_in_progress_and_stock_in_trade: 
                  type: "string"
                  example: "0.00"
                commercial_paper: 
                  type: "string"
                  example: "0.00"
                cost_of_materials_consumed: 
                  type: "string"
                  example: "0.00"
                created: 
                  type: "string"
                  example: "2018-04-01"
                currency: 
                  type: "string"
                  example: "INR"
                current_investments: 
                  type: "string"
                  example: "3200132.00"
                current_reporting_date: 
                  type: "string"
                  example: "2019-03-31"
                current_tax: 
                  type: "string"
                  example: "0.00"
                debentures_claimed_but_not_paid: 
                  type: "string"
                  example: "0.00"
                deferred_tax: 
                  type: "string"
                  example: "-261325.00"
                deferred_tax_assets_net: 
                  type: "string"
                  example: "332840.00"
                deferred_tax_liabilities_net: 
                  type: "string"
                  example: "0.00"
                party_id: 
                  type: "string"
                  example: "57ec67ed6d6f6f192300b226"
                terminated: 
                  type: "string"
                  example: "2019-03-31"
    PartyRegistrations:
      type: object
      properties:
        meta:
          type: "object"
          properties:
            party_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
            page:
              type: "number"
              example: 1
            per_page:
              type: "number"
              example: 10
            total_records:
              type: "number"
              example: 5
        data: 
          type: "array"
          items: 
            type: "object"
            properties: 
              id: 
                type: "string"
                example: "5ca5bc23c775eb06d0de2cfc"
              type: 
                type: "string"
                example: "charge"
              attributes:
                type: "object"
                properties: 
                  _ref: 
                    type: "string"
                    example: "100246781"
                  sources: 
                    type: "object"
                    properties: 
                      in_gov_mca: 
                        type: "string"
                        example: "2019-04-04 08:11:12 +0000"
                  normalized_name: 
                    type: "string"
                    example: "CREDIWATCH INFORMATION ANALYTICS PRIVATELIMITED"
                  name: 
                    type: "string"
                    example: "CREDIWATCH INFORMATION ANALYTICS PRIVATELIMITED"
                  charge_holder: 
                    type: "string"
                    example: "RBL BANK LIMITED"
                  charge_holder_address: 
                    type: "string"
                    example: "SHAHUPURI,KOLHAPUR,KOLHAPURMa416001IN"
                  amount: 
                    type: "string"
                    format: "double"
                    example: "30000000.00"
                  created: 
                    type: "string"
                    example: "2019-03-08"
    PartyAddresses:
      type: object
      properties:
        meta:
          type: "object"
          properties:
            party_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
            page:
              type: "number"
              example: 1
            per_page:
              type: "number"
              example: 10
            total_records:
              type: "number"
              example: 5
        data: 
          type: "array"
          items: 
            type: "object"
            properties: 
              id: 
                type: "string"
                example: "5dd24888c775eb6c4449a9a2"
              type: 
                type: "string"
                example: "address"
              attributes:
                type: "object"
                properties: 
                  _model_type: 
                    type: "string"
                    example: "email"
                  _ref: 
                    type: "string"
                    example: "compliance@crediwatch.com"
                  registration_id: 
                    type: "string"
                    example: "57ebf5cd6d6f6f3dd100d5e0"         
    PartyAddress:
      type: object
      properties:
        meta:
          type: "object"
          properties:
            party_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
            address_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
        data: 
          type: "object"
          properties: 
            id: 
              type: "string"
              example: "5dd24888c775eb6c4449a9a2"
            type: 
              type: "string"
              example: "address"
            attributes:
              type: "object"
              properties: 
                _model_type: 
                  type: "string"
                  example: "email"
                _ref: 
                  type: "string"
                  example: "compliance@crediwatch.com"
                registration_id: 
                  type: "string"
                  example: "57ebf5cd6d6f6f3dd100d5e0"   
    PartyDocuments:
      type: object
      properties:
        meta:
          type: "object"
          properties:
            party_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
            page:
              type: "number"
              example: 1
            per_page:
              type: "number"
              example: 10
            total_records:
              type: "number"
              example: 5
        data: 
          type: "array"
          items: 
            type: "object"
            properties: 
              id: 
                type: "string"
                example: "5dea3128e32bd13306f45597"
              type: 
                type: "string"
                example: "form_aoc_4"
              attributes: 
                type: "object"
                properties: 
                  name: 
                    type: "string"
                    example: "Form AOC-4-22112019"
                  year: 
                    type: "string"
                    example: "2019"
                  date: 
                    type: "string"
                    format: "date"
                    example: "2019-11-22"
                  link: 
                    type: "string"
                    example: "link to document download if document owned by Customer"
    PartyDocument:
      type: object
      properties:
        meta:
          type: "object"
          properties:
            party_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
            document_id:
              type: "string"
              example: "57ec67ed6d6f6f192300b226"
        data:
          type: "object"
          properties: 
            id: 
              type: "string"
              example: "5dea3128e32bd13306f45597"
            type: 
              type: "string"
              example: "form_aoc_4"
            attributes: 
              type: "object"
              properties: 
                name: 
                  type: "string"
                  example: "Form AOC-4-22112019"
                year: 
                  type: "string"
                  example: "2019"
                date: 
                  type: "string"
                  example: "2019-11-22T00:00:00.000+00:00"
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 4
        type:
          type: string
          example: report
        attributes:
          type: object
          properties:
            code:
              type: string
              example: 4bfu51uqyuv
            token:
              type: string
              example: 16530169
            product_definition_slug:
              type: string
              example: basic-report
            party_id:
              type: string
              example: 5cd5e715c775eb47454edd5e
            customer_id: 
              type: string
              example: 596f65d71ca2e16fa43d7359
            party_name:
              type: string
              example: "CREDIWATCH INFORMATION ANALYTICS PRIVATE LIMITED"
            created: 
              type: string
              format: date
              example: "2014-03-12"
            owner: 
              type: string
              example: 592383b1edb01a41f5d650da
            status: 
              type: string
              enum:
                - "done"
                - "processing"
                - "new"
                - "error"
              example: "done"
            product_tag: 
              type: array
              items:
                type: string
                example:  billable
            path_url: 
              type: string
              example: "https://crediwatch.s3.ap-south-1.amazonaws.com/5637609b89408577ad000000/fjl6yorrr5.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=AKIAJTXVCNZZJEMPYFKQ%2F20200111%2Fap-south-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20200111T075412Z\u0026X-Amz-Expires=600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=79c4ca6ee8fe5c84bd71ad9b6180dc7cc8ec02a568586548a95c1e7d7f88d3a5"
    Portfolios:
      type: array
      items:
        $ref: "#/components/schemas/Portfolio"
    Portfolio:
      type: object
      properties:
        id:
          type: integer
          example: 4
        type:
          type: string
          example: basic-report
        attributes:
          type: object
          properties:
            name:
              type: string
              example: Portfolio 1
            created:
              type: string
              format: date
              example: "2014-03-12"
    Articles:
      type: object
      properties:
        aggregations:
          type: array
          items:
            type: object
            properties:
              doc_count:
                type: integer
                example: 10
              key:
                type: string
                example: google
        cursor:
          type: integer
          example: 1
        deduped:
          type: integer
          example: 10
        filtered:
          type: integer
          example: 10
        hits_count:
          type: integer
          example: 1100
        total_entries:
          type: integer
          example: 100
        terms:
          type: array
          items:
            type: object
            properties:
              count:
                type: integer
                example: 10
              size:
                type: integer
                example: 10
              term:
                type: string
                example: google
        results:
          type: array
          items:
            type: object
            properties:
              authors:
                type: array
                items:
                  type: string
                example:
                  - mr ck das
                  - mr mk basu
              category:
                type: array
                items:
                  type: string
                example:
                  - technology
              content_hash:
                type: integer
                example: -1407545534
              crawled_date:
                type: integer
                example: "2019-11-04T12:29:18.335000"
              fragment:
                type: array
                items:
                  type: string
                example:
                  - on 30 November, <span class='highlighted-fragment'>Infosys</span>
                    said.
              hash:
                type: integer
                example: 685950541
              id:
                type: string
                example: e644a05760ee62f50489c378fc42297855faf023
              image:
                type: string
                example: www.google.com/news.image
              is_article:
                type: boolean
                example: true
              language:
                type: string
                example: en
              location:
                type: array
                items:
                  type: string
                example:
                  - india
              named_entities:
                type: array
                items:
                  type: string
                example:
                  - google
                  - alphabet
                  - larry page
              ne_cardinal:
                type: array
                items:
                  type: string
                example:
                  - two
                  - "16"
              ne_date:
                type: array
                items:
                  type: string
                example:
                  - nov 04, 2019 15:38
                  - november
              ne_gpe:
                type: array
                items:
                  type: string
                example:
                  - us
                  - california
              ne_ordinal:
                type: array
                items:
                  type: string
                example:
                  - 13th
                  - 14th
                  - second
              ne_money:
                type: array
                items:
                  type: string
                example:
                  - 200 billion
                  - $15m
              ne_org:
                type: array
                items:
                  type: string
                example:
                  - google
                  - alphabet
              ne_percent:
                type: array
                items:
                  type: string
                example:
                  - 1 percent
                  - 2%
              ne_person:
                type: array
                items:
                  type: string
                example:
                  - larry
                  - page
              ne_work_of_art:
                type: array
                items:
                  type: string
                example:
                  - seshasayee and sikka
              ne_law:
                type: array
                items:
                  type: string
                example:
                  - the sc/st act
              ne_loc:
                type: array
                items:
                  type: string
                example:
                  - west
              ne_time:
                type: array
                items:
                  type: string
                example:
                  - 08:08 am
              netloc:
                type: string
                example: www.google.com
              proximity:
                type: array
                items:
                  type: integer
                example:
                  - 50
              published_date:
                type: string
                example: "2019-11-04T10:08:21"
              published_day:
                type: string
                example: Monday
              relevance_score:
                type: number
                example: "49.847595"
              score:
                type: number
                example: -0.33694285714285716
              sentiment_score:
                type: number
                example: -0.16769499556667092
              terms:
                type: object
                example:
                  prosecute: 1
              text:
                type: string
                example: this is text
              title:
                type: string
                example: this is title
              type:
                type: string
                example: news_article
              url:
                type: string
                example: http://www.google.com/news
    Article:
      type: object
      properties:
        data:
          type: object
          properties:
            authors:
              type: array
              items:
                type: string
              example:
                - mr ck das
                - mr mk basu
            category:
              type: array
              items:
                type: string
              example:
                - technology
            named_entities:
              type: array
              items:
                type: string
              example:
                - google
                - alphabet
                - larry page
            ne_work_of_art:
              type: array
              items:
                type: string
              example:
                - seshasayee and sikka
            ne_cardinal:
              type: array
              items:
                type: string
              example:
                - two
                - one
            ne_ordinal:
              type: array
              items:
                type: string
              example:
                - 13th
                - 14th
                - second
            ne_date:
              type: array
              items:
                type: string
              example:
                - nov 04, 2019 15:38
                - november
            ne_money:
              type: array
              items:
                type: string
              example:
                - 200 billion
                - $15m
            ne_org:
              type: array
              items:
                type: string
              example:
                - google
                - alphabet
            ne_norp:
              type: array
              items:
                type: string
              example:
                - israeli
                - skawa
            ne_law:
              type: array
              items:
                type: string
              example:
                - the sc/st act
            ne_loc:
              type: array
              items:
                type: string
              example:
                - west
            ne_time:
              type: array
              items:
                type: string
              example:
                - 08:08 am
            ne_percent:
              type: array
              items:
                type: string
              example:
                - 1 percent
                - 2%
            ne_person:
              type: array
              items:
                type: string
              example:
                - larry
                - page
            ne_gpe:
              type: array
              items:
                type: string
              example:
                - us
                - california
            relation:
              type: object
              items:
                type: string
              example:
                relation: in
            stemmed_sentences:
              type: array
              items:
                type: string
              example:
                - this
                - is
                - google
            text:
              type: string
              example: this is text
            url:
              type: string
              example: www.google.com/news/
            title:
              type: string
              example: this is title
            netloc:
              type: string
              example: www.google.com
            published_date:
              type: string
              example: "2019-11-04T10:08:21"
            published_day:
              type: string
              example: Monday
            content_hash:
              type: integer
              example: 1863358922
            crawled_date:
              type: string
              example: "2019-11-04T12:29:18.335000"
            image:
              type: string
              example: www.google.com/news.image
            is_article:
              type: boolean
              example: true
            language:
              type: string
              example: en
  securitySchemes:
    # jwt:
    #   type: "http"
    #   scheme: "bearer"
    #   bearerFormat: "JWT"
    crediwatchSSO:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. 
      flows:
        password: 
          tokenUrl: https://accounts.crediwatch.com/auth
          scopes: 
            read: Grant read-only access to all your data except for the account and user info
            write: Grant write-only access to all your data except for the account and user info
            profile: Grant read-only access to the account and user info only
        # clientCredentials: 
        #   tokenUrl: https://accounts.crediwatch.com/auth
        #   scopes: {}
        # implicit:
        #   authorizationUrl: https://accounts.crediwatch.com/auth
        #   scopes:
        #     read: Grant read-only access to all your data except for the account and user info
        #     write: Grant write-only access to all your data except for the account and user info
        #     profile: Grant read-only access to the account and user info only