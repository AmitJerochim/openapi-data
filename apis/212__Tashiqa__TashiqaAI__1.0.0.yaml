penapi: 3.0.0
servers:
  - description: Tashiqa Swagger Mock Server
    url: https://virtserver.swaggerhub.com/Tashiqa/TashiqaAI/1.0.0
info:
  description: This is Tashiqa AI API's which enables developers to consume services defined by OAS3 standards.
  version: "1.0.0"
  title: Tashiqa AI API
  contact:
    url: https://tashiqa.firebaseapp.com/en/contact/
    name: Tashiqa
    email: kumarvivek@tashiqa.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: https://tashiqa.firebaseapp.com/en/legal/privacy-policy/
tags:
  - name: Vision AI
    description: Artificial intelligence building blocks to process and analyse images
  - name: Text AI
    description: Artificial intelligence building blocks to process and analyse text
paths:
  /vision/labelIdentification:
    post:
      tags:
        - Vision AI
      summary: identify the labels and objects in the input image
      operationId: labelIdentification
      description: |
        By passing the image in binary format, you can extract the labels
        and objects in the image.
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: list of objects and labels in the input image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/labelDetection'
        '400':
          description: 'Invalid file format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidBody'
        '401':
          description: 'Unauthorized request without JWT token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
  /vision/brandDetection:
    post:
      tags:
        - Vision AI
      summary: identify the brands in the input image
      operationId: brandDetection
      description: |
        By passing the image in binary format, you can extract the brand
        names from the image.
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: list of brands in the input image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/brandDetection'
        '400':
          description: 'Invalid file format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidBody'
        '401':
          description: 'Unauthorized request without JWT token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
  /text/summarization:
    post:
      tags:
        - Text AI
      summary: find summary from large paragraphs
      operationId: summarization
      description: |
        API endpoing is to be used for summarizing the big paragraphs into summarized notes.
      requestBody:
        description: body with data to be validated
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/summarizationRequest'
        required: true
      responses:
        '200':
          description: summaried text out of large input text
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/textSummarization'
        '400':
          description: 'Invalid body or parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidBody'
        '401':
          description: 'Unauthorized request without JWT token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
  /text/sentimentAnalysis:
    post:
      tags:
        - Text AI
      summary: identify the sentiment of input text
      operationId: sentimentAnalysis
      description: |
        By passing the input text array in the body, you will be returned
        sentiment of each string in the array.
      requestBody:
        description: body with data to be validated
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/sentimentAnalysisRequest'
        required: true
      responses:
        '200':
          description: sentiment array of the input text
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sentimentAnalysis'
        '400':
          description: 'Invalid body or parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidBody'
        '401':
          description: 'Unauthorized request without JWT token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
  /text/keywordAnalysis:
    post:
      tags:
        - Text AI
      summary: keyword extraction from the input text
      operationId: keywordAnalysis
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      requestBody:
        description: body with data to be validated
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/keywordAnalysisRequest'
        required: true
      responses:
        '200':
          description: array of keywords from the input text
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keywordAnalysis'
        '400':
          description: 'Invalid body or parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidBody'
        '401':
          description: 'Unauthorized request without JWT token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
components:
  schemas:
    labelDetection:
      type: object
      properties:
        labelDetection:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: "Diagram"
              score:
                type: number
                example: 0.82433397
    brandDetection:
      type: object
      properties:
        brandDetection:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: "SAP SE"
              score:
                type: number
                example: 0.99899167
    sentimentAnalysis:
      properties:
        sentimentAnalysis:
          type: array
          items:
            type: object
            properties:
              positive:
                type: number
                example: 0.9980732202529907
              negative:
                type: number
                example: 0.0019267015159130096
    textSummarization:
      properties:
        textSummarization:
          type: object
          properties:
            summary:
              type: string
              example: "A very short summary of request body."
      type: object
    keywordAnalysis:
      properties:
        keywordAnalysis:
          type: array
          items:
            type: object
            properties:
              ngram:
                type: string
                example: "tashiqa"
              score:
                type: number
                example: 0.030330306601861593
      type: object
    sentimentAnalysisRequest:
      properties:
        text:
          type: array
          items:
            type: string
      type: object
    summarizationRequest:
      properties:
        text:
          type: array
          items:
            type: string
      type: object
    keywordAnalysisRequest:
      properties:
        keywordAnalysis:
          type: object
          properties:
            language:
              type: string
              example: "en"
            maxKeywordSize:
              type: number
              example: 3
            numberOfKeyword:
              type: number
              example: 10
            text:
              type: string
              example: "Big text to analyse for keyword."
      type: object
    unauthorized:
      properties:
        message:
          type: string
          example: "Unauthorized"
        detail:
          type: string
          example: "This API has not been authorized, use a valid JWT token with your API reuqest and pass it as parameter in Authorization header."
      type: object
    invalidBody:
      properties:
        message:
          type: string
          example: "Invalid Body"
        detail:
          type: string
          example: "Missing parameters in body or request url, please verify the format and resend your request."
      type: object