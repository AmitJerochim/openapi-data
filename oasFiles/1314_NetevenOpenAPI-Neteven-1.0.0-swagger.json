{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Neteven Retailer API",
    "description" : "This specification describes the Retailer API of the Neteven Platform and can be used for reference, development and testing purposes. Please use this document along with the specification document shared with you. In case of any discrepancy between this documentation and specification shared with you (pdf version), please report to the Neteven team.",
    "contact" : {
      "email" : "contact@neteven.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/NetevenOpenAPI/Neteven/1.0.0"
  }, {
    "description" : "Neteven Production Accounts",
    "url" : "https://api.neteven.com/"
  } ],
  "security" : [ {
    "accessCode" : [ "read", "write" ]
  } ],
  "tags" : [ {
    "name" : "login",
    "description" : "Generate a time limited token (24h)"
  }, {
    "name" : "products",
    "description" : "Access the merchant inventory/products"
  }, {
    "name" : "offers",
    "description" : "Access the listings (price and stock)"
  }, {
    "name" : "orders",
    "description" : "Access the orders"
  } ],
  "paths" : {
    "/login" : {
      "post" : {
        "tags" : [ "login" ],
        "summary" : "Generate a time limited token (24h)",
        "description" : "Using user's login and password",
        "operationId" : "gettkn",
        "requestBody" : {
          "description" : "Authentication is made through the generation of a time-limited token (24h), using the user's login and password.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Login"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/retailer_products" : {
      "get" : {
        "tags" : [ "products" ],
        "summary" : "Fetch merchant product data",
        "description" : "Get merchants inventory",
        "operationId" : "getprd",
        "parameters" : [ {
          "name" : "new_products",
          "in" : "query",
          "description" : "returns only products which have not yet been created (no marketplace_product_id)",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "ean",
          "in" : "query",
          "description" : "returns only the selected ean, if existing",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "list"
          }
        }, {
          "name" : "sku",
          "in" : "query",
          "description" : "returns only the selected merchant sku, if existing",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "list"
          }
        }, {
          "name" : "marketplace_product_id",
          "in" : "query",
          "description" : "returns only the selected marketplace_product_id, if existing",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "list"
          }
        }, {
          "name" : "family_sku",
          "in" : "query",
          "description" : "returns only the selected family_sku, if exisiting",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "list"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "offset",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Retailer_products"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body",
        "security" : [ {
          "apikey" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "products" ],
        "summary" : "Update products",
        "description" : "Add marketplace product id or change status",
        "operationId" : "pchprd",
        "requestBody" : {
          "description" : "Fields to be updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Products3"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Products5"
                }
              }
            }
          },
          "406" : {
            "description" : "Sku 'SKU No.' not in database"
          },
          "409" : {
            "description" : "sku is already in update state"
          }
        },
        "x-codegen-request-body-name" : "body",
        "security" : [ {
          "apikey" : [ ]
        } ]
      }
    },
    "/retailer_offers" : {
      "get" : {
        "tags" : [ "offers" ],
        "summary" : "Fetch merchant offer/listing data",
        "description" : "Get merchants stock and price details",
        "operationId" : "getofr",
        "parameters" : [ {
          "name" : "pending_offers",
          "in" : "query",
          "description" : "returns only offers for which a modification is pending (stock / price change in merchant inventory). Set to \"true\" by default.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "ean",
          "in" : "query",
          "description" : "returns only the selected ean, if existing",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "list"
          }
        }, {
          "name" : "sku",
          "in" : "query",
          "description" : "returns only the selected merchant sku, if existing",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "list"
          }
        }, {
          "name" : "marketplace_product_id",
          "in" : "query",
          "description" : "returns only the selected marketplace_product_id, if existing",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "list"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "offset",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Retailer_offers"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body",
        "security" : [ {
          "apikey" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "offers" ],
        "summary" : "Update listings",
        "description" : "Update status of stock and price updates",
        "operationId" : "pchofr",
        "requestBody" : {
          "description" : "Fields to be updated",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Retailer_offers2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Offers4"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body",
        "security" : [ {
          "apikey" : [ ]
        } ]
      }
    },
    "/retailer_orders" : {
      "post" : {
        "tags" : [ "orders" ],
        "summary" : "Create orders",
        "description" : "Create orders with product and customer data",
        "operationId" : "pstord",
        "requestBody" : {
          "description" : "Fields to be sent",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Retailer_orders"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "406" : {
            "description" : "Sku 'SKU No.' not in database"
          },
          "409" : {
            "description" : "this marketplace_order_id is already in neteven"
          }
        },
        "x-codegen-request-body-name" : "body",
        "security" : [ {
          "apikey" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "orders" ],
        "summary" : "Update order data",
        "description" : "Update order details and status",
        "operationId" : "pchord",
        "requestBody" : {
          "description" : "Fields to be sent for update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Retailer_orders2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "406" : {
            "description" : "Sku 'SKU No.' not in database"
          },
          "409" : {
            "description" : "this marketplace_order_id is already in neteven"
          }
        },
        "x-codegen-request-body-name" : "body",
        "security" : [ {
          "apikey" : [ ]
        } ]
      },
      "get" : {
        "tags" : [ "orders" ],
        "summary" : "Fetch orders",
        "description" : "Get all the orders",
        "operationId" : "getord",
        "parameters" : [ {
          "name" : "order_line_status_pending",
          "in" : "query",
          "description" : "retrieve orders if status updates are submitted by merchant for the retailer to confirm acceptance (order line confirmation / cancellation / shipment / refund).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "PENDING CONFIRMATION", "PENDING CANCELLATION", "PENDING SHIPMENT", "PENDING REFUND" ]
          }
        }, {
          "name" : "marketplace_order_id",
          "in" : "query",
          "description" : "returns the list of selected orders, if existing",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "list"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "offset",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "return_full_content",
          "in" : "query",
          "description" : "set as \"false\" by default. If \"true\", (bool), the fields and sections shown as \"HIDDEN BY DEFAULT\" will be returned.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Retailer_orders"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body",
        "security" : [ {
          "apikey" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Login" : {
        "required" : [ "login", "password" ],
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string",
            "description" : "enter the login id here"
          },
          "password" : {
            "type" : "string",
            "description" : "enter the password here"
          }
        }
      },
      "LoginResponse" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9"
          },
          "expiration_date" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "2019-02-27T11:24:24"
          }
        }
      },
      "Images" : {
        "type" : "object",
        "properties" : {
          "image_url_1" : {
            "type" : "string",
            "description" : ""
          },
          "image_url_2" : {
            "type" : "string"
          },
          "image_url_3" : {
            "type" : "string"
          },
          "image_url_4" : {
            "type" : "string"
          },
          "image_url_5" : {
            "type" : "string"
          },
          "image_url_6" : {
            "type" : "string"
          },
          "image_url_7" : {
            "type" : "string"
          },
          "image_url_8" : {
            "type" : "string"
          },
          "image_url_9" : {
            "type" : "string"
          },
          "image_url_10" : {
            "type" : "string"
          }
        }
      },
      "Attributes" : {
        "type" : "object",
        "properties" : {
          "attribute_name" : {
            "type" : "string",
            "description" : "name of the attribute, str"
          },
          "attribute_value" : {
            "type" : "string",
            "description" : "value of the attribute, str"
          }
        }
      },
      "Product_status" : {
        "type" : "object",
        "properties" : {
          "marketplace_product_id" : {
            "type" : "string",
            "description" : ""
          }
        }
      },
      "Products" : {
        "type" : "object",
        "properties" : {
          "sku" : {
            "type" : "string",
            "description" : "merchant id for product"
          },
          "family_sku" : {
            "type" : "string",
            "description" : "parent id used to regroup all variations (size and colour), str"
          },
          "sub_family_sku" : {
            "type" : "string",
            "description" : "sub parent id used to regroup all variations (all sizes for any given colour), str"
          },
          "ean" : {
            "type" : "string",
            "description" : "ean code of the product"
          },
          "title" : {
            "type" : "string",
            "description" : "product title"
          },
          "description" : {
            "type" : "string",
            "description" : "product description"
          },
          "images" : {
            "$ref" : "#/components/schemas/Images"
          },
          "category_name" : {
            "type" : "string",
            "description" : "name of product category str"
          },
          "category_code" : {
            "type" : "string",
            "description" : "category id, str"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Attributes"
            }
          },
          "product_status" : {
            "$ref" : "#/components/schemas/Product_status"
          }
        }
      },
      "Retailer_products" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "description" : "query limit parameter, max 1000, default 100 int"
          },
          "number_of_results" : {
            "type" : "integer",
            "description" : "number of items found int"
          },
          "offset" : {
            "type" : "integer",
            "description" : "query offset parameter, default 0 int"
          },
          "products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Products"
            }
          }
        }
      },
      "Product_status2" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "REQUIRED. product status in your system str enum",
            "enum" : [ "PENDING CREATION", "CREATED", "UPDATED", "ERROR" ]
          },
          "status_message" : {
            "type" : "string",
            "description" : "your own status message (in case of error), str list"
          },
          "warnings" : {
            "type" : "string",
            "description" : "warnings are messages that are not errors str list"
          },
          "status_code" : {
            "type" : "string",
            "description" : "your own internal status code, if any, str"
          },
          "marketplace_product_id" : {
            "type" : "string",
            "description" : "REQUIRED if status = CREATED or UPDATED. your own internal identifier for the product, str"
          }
        }
      },
      "Products2" : {
        "type" : "object",
        "properties" : {
          "sku" : {
            "type" : "string",
            "description" : "REQUIRED merchant id for product"
          },
          "product_status" : {
            "$ref" : "#/components/schemas/Product_status2"
          }
        }
      },
      "Products3" : {
        "type" : "object",
        "properties" : {
          "products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Products2"
            }
          }
        }
      },
      "Products4" : {
        "type" : "object",
        "properties" : {
          "status_message" : {
            "type" : "string",
            "description" : "status message received for the request"
          },
          "marketplace_product_id" : {
            "type" : "string",
            "description" : "your own internal identifier for the product, str"
          },
          "sku" : {
            "type" : "string",
            "description" : "merchant id for product"
          },
          "status_code" : {
            "type" : "string",
            "description" : "status code of the request"
          }
        }
      },
      "Products5" : {
        "type" : "object",
        "properties" : {
          "products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Products4"
            }
          },
          "total_count" : {
            "type" : "integer",
            "description" : "number of items found, int"
          }
        }
      },
      "Delivery" : {
        "type" : "object",
        "properties" : {
          "lead_time_to_ship" : {
            "type" : "integer",
            "description" : "number of days until shipment int"
          },
          "carrier_name" : {
            "type" : "string",
            "description" : "name of the carrier str"
          },
          "delivery_time_min" : {
            "type" : "integer",
            "description" : "minimal time for delivery in days int"
          },
          "delivery_time_max" : {
            "type" : "integer",
            "description" : "maximal time for delivery in days int"
          },
          "shipping_cost_value" : {
            "type" : "number",
            "description" : "cost of shipping per item numeric(10,2)"
          },
          "shipping_cost_currency" : {
            "type" : "string",
            "description" : "currency_code for the prices str ISO 4217"
          }
        }
      },
      "Price_rule" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string",
            "description" : "currency_code for the prices str ISO 4217"
          },
          "selling_price" : {
            "type" : "number",
            "description" : "rice to sell the product outside of promotions numeric(10,2)"
          },
          "promotion_price" : {
            "type" : "number",
            "description" : "discounted price, linked to promotion date bracket numeric(10,2)"
          },
          "promotion_start_date" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "start date of the promotion timestamp"
          },
          "promotion_end_date" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "end date of the promotion timestamp"
          }
        }
      },
      "Offers" : {
        "type" : "object",
        "properties" : {
          "sku" : {
            "type" : "string",
            "description" : "merchant id for product"
          },
          "price_rule" : {
            "$ref" : "#/components/schemas/Price_rule"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "quantity to display as available int"
          },
          "warehouse_name" : {
            "type" : "string",
            "description" : "name of the merchant warehouse where the stock is located str"
          },
          "product_condition" : {
            "type" : "integer",
            "description" : "condition of item (new, refurbished, etc). int"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/Delivery"
          }
        }
      },
      "Retailer_offers" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "description" : "query limit parameter, max 1000, default 100 int"
          },
          "number_of_results" : {
            "type" : "integer",
            "description" : "number of items found int"
          },
          "offset" : {
            "type" : "integer",
            "description" : "query offset parameter, default 0 int"
          },
          "offers" : {
            "$ref" : "#/components/schemas/Offers"
          }
        }
      },
      "Offer_status" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "REQUIRED status in your own system str enum",
            "enum" : [ "OFFLINE", "ONLINE", "ERROR" ]
          },
          "status_message" : {
            "type" : "string",
            "description" : "your own status message (in case of error), str list"
          },
          "warnings" : {
            "type" : "string",
            "description" : "warnings are messages that are not errors str list"
          },
          "status_code" : {
            "type" : "string",
            "description" : "your own internal status code, if any, str"
          },
          "marketplace_product_id" : {
            "type" : "string",
            "description" : "REQUIRED. your own internal identifier for the product, str"
          }
        }
      },
      "Offers2" : {
        "type" : "object",
        "properties" : {
          "sku" : {
            "type" : "string",
            "description" : "REQUIRED merchant id for product"
          },
          "publication_status" : {
            "$ref" : "#/components/schemas/Offer_status"
          }
        }
      },
      "Retailer_offers2" : {
        "type" : "object",
        "properties" : {
          "offers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Offers2"
            }
          }
        }
      },
      "Offers3" : {
        "type" : "object",
        "properties" : {
          "status_message" : {
            "type" : "string",
            "description" : "your own status message (in case of error), str list"
          },
          "marketplace_product_id" : {
            "type" : "string",
            "description" : "your own internal identifier for the product, str"
          },
          "sku" : {
            "type" : "string",
            "description" : "REQUIRED merchant id for product"
          },
          "status_code" : {
            "type" : "string",
            "description" : "your own internal status code, if any, str"
          }
        }
      },
      "Offers4" : {
        "type" : "object",
        "properties" : {
          "offers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Offers3"
            }
          },
          "total_count" : {
            "type" : "integer",
            "description" : "number of items found int"
          },
          "limit" : {
            "type" : "integer",
            "description" : "100"
          },
          "offset" : {
            "type" : "integer"
          }
        }
      },
      "Prices1" : {
        "type" : "object",
        "properties" : {
          "currency_id" : {
            "type" : "string",
            "description" : "REQUIRED. order currency_id ISO 4217"
          },
          "total_price_including_taxes_excluding_shipping" : {
            "type" : "number",
            "description" : "REQUIRED. numeric(10,2)"
          },
          "total_price_excluding_taxes_excluding_shipping" : {
            "type" : "number",
            "description" : "numeric(10,2)"
          },
          "total_shipping_cost_including_taxes" : {
            "type" : "number",
            "description" : "REQUIRED. numeric(10,2)"
          },
          "total_shipping_cost_excluding_taxes" : {
            "type" : "number",
            "description" : "numeric(10,2)"
          }
        }
      },
      "Shipping_information" : {
        "type" : "object",
        "properties" : {
          "carrier_name" : {
            "type" : "string",
            "description" : "Name of the carrier chosen by customer, str"
          },
          "tracking_url" : {
            "type" : "string",
            "description" : "tracking url for the parcel (given by merchant), str"
          },
          "delivery_instructions" : {
            "type" : "string",
            "description" : "additional delivery instructions, str"
          },
          "shipping_mode" : {
            "type" : "string",
            "description" : "shipping mode chosen, str"
          },
          "delivery_method" : {
            "type" : "string",
            "description" : "shipping type, str"
          },
          "comment" : {
            "type" : "string",
            "description" : "any other comments, str"
          },
          "date_shipping" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "given by merchant, timestamp"
          },
          "document_url" : {
            "type" : "string",
            "description" : "url to download optional order level documents, such as invoice, return label, etc. str"
          }
        }
      },
      "Address_delivery" : {
        "type" : "object",
        "properties" : {
          "marketplace_customer_id" : {
            "type" : "string",
            "description" : "your own customer id if any, str"
          },
          "title" : {
            "type" : "string",
            "description" : ""
          },
          "first_name" : {
            "type" : "string",
            "description" : ""
          },
          "last_name" : {
            "type" : "string",
            "description" : ""
          },
          "street1" : {
            "type" : "string",
            "description" : ""
          },
          "street2" : {
            "type" : "string",
            "description" : ""
          },
          "city" : {
            "type" : "string",
            "description" : ""
          },
          "state" : {
            "type" : "string",
            "description" : ""
          },
          "country_code" : {
            "type" : "string",
            "description" : ""
          },
          "country" : {
            "type" : "string",
            "description" : ""
          },
          "postcode" : {
            "type" : "string",
            "description" : ""
          },
          "phone1" : {
            "type" : "string",
            "description" : ""
          },
          "phone2" : {
            "type" : "string",
            "description" : ""
          },
          "fax" : {
            "type" : "string",
            "description" : ""
          },
          "email" : {
            "type" : "string",
            "description" : ""
          },
          "login" : {
            "type" : "string",
            "description" : ""
          },
          "company_name1" : {
            "type" : "string",
            "description" : ""
          },
          "company_name2" : {
            "type" : "string",
            "description" : ""
          },
          "relay_name" : {
            "type" : "string",
            "description" : ""
          },
          "relay_contractlevel" : {
            "type" : "string",
            "description" : ""
          },
          "relay_id" : {
            "type" : "string",
            "description" : ""
          }
        }
      },
      "Address_invoice" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : ""
          },
          "first_name" : {
            "type" : "string",
            "description" : ""
          },
          "last_name" : {
            "type" : "string",
            "description" : ""
          },
          "street1" : {
            "type" : "string",
            "description" : ""
          },
          "street2" : {
            "type" : "string",
            "description" : ""
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "country_code" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "postcode" : {
            "type" : "string"
          },
          "phone1" : {
            "type" : "string"
          },
          "phone2" : {
            "type" : "string"
          },
          "fax" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "login" : {
            "type" : "string"
          },
          "company_name1" : {
            "type" : "string"
          },
          "company_name2" : {
            "type" : "string"
          }
        }
      },
      "Order_item" : {
        "type" : "object",
        "properties" : {
          "sku" : {
            "type" : "string",
            "description" : "REQUIRED. the merchant's own identifier str"
          },
          "marketplace_product_id" : {
            "type" : "string",
            "description" : "REQUIRED. the retailer's internal id for the product str"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "REQUIRED. quantity ordered int"
          },
          "warehouse_name" : {
            "type" : "string",
            "description" : "name of the merchant warehouse where the stock is located str"
          }
        }
      },
      "Order_lines" : {
        "type" : "object",
        "properties" : {
          "marketplace_order_line_id" : {
            "type" : "string",
            "description" : "REQUIRED. the retailer's internal ID for the order line, str"
          },
          "merchant_order_line_id" : {
            "type" : "string",
            "description" : "the merchant's internal ID for the order line, str /HIDDEN BY DEFAULT"
          },
          "date_canceled" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "date when order line was canceled (if ever), timestamp"
          },
          "date_refund" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "date when the refund request was taken into account (if ever), timestamp"
          },
          "order_line_status_current" : {
            "type" : "string",
            "description" : "REQUIRED. retailer status of the given order line enum",
            "enum" : [ "TO CONFIRM", "CANCELED", "TO SHIP", "SHIPPED", "TO REFUND", "REFUNDED" ]
          },
          "order_line_status_pending" : {
            "type" : "string",
            "description" : "READ ONLY. pending status set by Neteven if requested status update by merchant enum",
            "enum" : [ "PENDING CONFIRMATION", "PENDING CANCELLATION", "PENDING SHIPMENT", "PENDING REFUND" ]
          },
          "item" : {
            "$ref" : "#/components/schemas/Order_item"
          },
          "prices" : {
            "$ref" : "#/components/schemas/Prices2"
          },
          "shipping_information" : {
            "$ref" : "#/components/schemas/Shipping_information2"
          }
        }
      },
      "Prices2" : {
        "type" : "object",
        "properties" : {
          "total_price_including_taxes_excluding_shipping" : {
            "type" : "number",
            "description" : "REQUIRED. numeric(10,2)"
          },
          "total_price_excluding_taxes_excluding_shipping" : {
            "type" : "number",
            "description" : "numeric(10,2)"
          },
          "total_shipping_cost_including_taxes" : {
            "type" : "number",
            "description" : "numeric(10,2)"
          },
          "total_shipping_cost_excluding_taxes" : {
            "type" : "number",
            "description" : "numeric(10,2)"
          },
          "vat_amount" : {
            "type" : "number",
            "description" : "numeric(10,2)"
          },
          "amount_refunded" : {
            "type" : "number",
            "description" : "numeric(10,2)"
          },
          "fee" : {
            "type" : "number",
            "description" : "numeric(10,2)"
          },
          "ecotax" : {
            "type" : "number",
            "description" : "numeric(10,2)"
          }
        }
      },
      "Shipping_information2" : {
        "type" : "object",
        "properties" : {
          "date_shipping" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "shipping date from merchant, timestamp"
          },
          "return_tracking_number" : {
            "type" : "string",
            "description" : "tracking number for the return, str"
          },
          "return_tracking_url" : {
            "type" : "string",
            "description" : "url linked to tracking number and carrier, str"
          },
          "return_tracking_info" : {
            "type" : "string",
            "description" : "name of carrier for tracking, str"
          },
          "return_reason" : {
            "type" : "string",
            "description" : "reason for the return, str"
          },
          "return_key" : {
            "type" : "string",
            "description" : "id for the return, str"
          },
          "document_url" : {
            "type" : "string",
            "description" : "url to download optional order line level documents, such as invoice, return label, etc. str"
          }
        }
      },
      "Retailer_orders" : {
        "type" : "object",
        "properties" : {
          "marketplace_order_id" : {
            "type" : "string",
            "description" : "REQUIRED. your own internal id for the order str"
          },
          "marketplace_invoice_id" : {
            "type" : "string",
            "description" : "your invoice_id for the order str"
          },
          "merchant_order_id" : {
            "type" : "string",
            "description" : "the merchant's own order id str"
          },
          "date_sale" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "REQUIRED. the date of the order creation on the retailer side timestamp"
          },
          "date_payment" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "REQUIRED. the date when payment was secured on the retailer side timestamp"
          },
          "payment_method" : {
            "type" : "string",
            "description" : "the method of payment str"
          },
          "payment_transaction_id" : {
            "type" : "string",
            "description" : "id of the payment transaction if any, str"
          },
          "prices" : {
            "$ref" : "#/components/schemas/Prices1"
          },
          "shipping_information" : {
            "$ref" : "#/components/schemas/Shipping_information"
          },
          "address_delivery" : {
            "$ref" : "#/components/schemas/Address_delivery"
          },
          "address_invoice" : {
            "$ref" : "#/components/schemas/Address_invoice"
          },
          "order_lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Order_lines"
            }
          }
        }
      },
      "Order_lines2" : {
        "type" : "object",
        "properties" : {
          "marketplace_order_line_id" : {
            "type" : "string",
            "description" : "REQUIRED. the retailer's internal ID for the order line, str"
          },
          "merchant_order_line_id" : {
            "type" : "string",
            "description" : "the merchant's internal ID for the order line //HIDDEN BY DEFAULT, str"
          },
          "date_canceled" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "date when order line was canceled (if ever), timestamp"
          },
          "date_refund" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "date when the refund request was taken into account (if ever), timestamp"
          },
          "order_line_status_current" : {
            "type" : "string",
            "description" : "REQUIRED. retailer status of the given order line enum",
            "enum" : [ "TO CONFIRM", "CANCELED", "TO SHIP", "SHIPPED", "TO REFUND", "REFUNDED" ]
          },
          "order_line_status_pending" : {
            "type" : "string",
            "description" : "READ ONLY. pending status set by Neteven if requested status update by merchant enum",
            "enum" : [ "PENDING CONFIRMATION", "PENDING CANCELLATION", "PENDING SHIPMENT", "PENDING REFUND" ]
          },
          "shipping_information" : {
            "$ref" : "#/components/schemas/Shipping_information2"
          }
        }
      },
      "Retailer_orders2" : {
        "type" : "object",
        "properties" : {
          "marketplace_order_id" : {
            "type" : "string",
            "description" : "REQUIRED. your own internal id for the order str"
          },
          "marketplace_invoice_id" : {
            "type" : "string",
            "description" : "your invoice_id for the order str"
          },
          "merchant_order_id" : {
            "type" : "string",
            "description" : "the merchant's own order id if any str"
          },
          "date_sale" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "the date of the order creation on the retailer side timestamp"
          },
          "date_payment" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "the date when payment was secured on the retailer side timestamp"
          },
          "payment_method" : {
            "type" : "string",
            "description" : "the method of payment str"
          },
          "shipping_information" : {
            "$ref" : "#/components/schemas/Shipping_information"
          },
          "address_delivery" : {
            "$ref" : "#/components/schemas/Address_delivery"
          },
          "address_invoice" : {
            "$ref" : "#/components/schemas/Address_invoice"
          },
          "order_lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Order_lines2"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "apikey" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "X-Token"
      }
    }
  }
}