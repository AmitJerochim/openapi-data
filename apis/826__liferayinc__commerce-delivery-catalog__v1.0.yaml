omponents:
    parameters:
        channelId:
            in: path
            name: channelId
            required: true
            schema:
                type: integer
                format: int64
                minimum: 0
                description: Channel Id
                example: 30130
        productId:
            in: path
            name: productId
            required: true
            schema:
                type: integer
                format: int64
                minimum: 0
                description: Product Id
                example: 30130
        accountIdParam:
            in: query
            name: accountId
            required: false
            schema:
                type: integer
    schemas:
        Attachment:
          required:
            - sku
          type: object
          properties:
            attachment:
              type: string
              description: Base64 encoded file
            displayDate:
              type: string
              format: date
              example: "2017-07-21"
            expirationDate:
              type: string
              format: date
              example: "2017-08-21"
            title:
              type: string
            options:
              type: object
              additionalProperties:
                type: string
              example: {
                  "optionKey": "optionValueKey",
                  "color": "yellow",
                  "size": "xs"
                }
            priority:
              type: number
              format: double
              example: 1.2
            src:
              type: string
              description: URL of the location
            type:
              type: integer
              format: int32
              readOnly: true
            neverExpire:
              type: boolean
              example: true
            id:
              type: integer
              format: int64
              readOnly: true
              minimum: 0
              example: 30130
        Availability:
            properties:
                label:
                    example: Available
                    type: string
                stockQuantity:
                    format: int32
                    type: integer
            type: object
        Category:
          type: object
          properties:
            name:
              type: string
              description: Category Name
            vocabulary:
              type: string
              readOnly: true
              example: Default Vocabulary
            siteId:
              type: integer
              format: int64
            id:
              type: integer
              format: int64
              minimum: 0
              example: 30130
        Price:
            properties:
                currency:
                    type: string
                discount:
                    type: string
                discountPercentage:
                    type: string
                discountPercentages:
                    items:
                        type: string
                    type: array
                finalPrice:
                    type: string
                price:
                    type: number
                    format: double
                priceFormatted:
                    type: string
                promoPrice:
                    type: number
                    format: double
                promoPriceFormatted:
                    type: string
                tierPrice:
                    type: number
                    format: double
                tierPriceFormatted:
                    type: string
            type: object
        Product:
            properties:
                attachments:
                    type: array
                    items:
                       $ref: "#/components/schemas/Attachment"
                categories:
                    items:
                       $ref: "#/components/schemas/Category"
                    type: array
                createDate:
                    example: 2017-07-21
                    format: date
                    type: string
                description:
                    type: string
                expando:
                    additionalProperties: true
                    type: object
                id:
                    example: 30130
                    format: int64
                    minimum: 0
                    readOnly: true
                    type: integer
                images:
                  type: array
                  items:
                     $ref: "#/components/schemas/Attachment"
                metaDescription:
                    type: string
                metaKeyword:
                    type: string
                metaTitle:
                    type: string
                modifiedDate:
                    example: 2017-08-21
                    format: date
                    type: string
                multipleOrderQuantity:
                    format: int32
                    type: integer
                name:
                    type: string
                options:
                  type: array
                  items:
                     $ref: "#/components/schemas/ProductOption"
                productId:
                    format: int64
                    readOnly: true
                    type: integer
                productSpecification:
                    items:
                        $ref: "#/components/schemas/ProductSpecification"
                    type: array
                productType:
                    example: simple
                    type: string
                relatedProducts:
                    items:
                       $ref: "#/components/schemas/RelatedProduct"
                    type: array
                shortDescription:
                    type: string
                skus:
                    items:
                        $ref: "#/components/schemas/Sku"
                    type: array
                tags:
                    example: [tag1, tag2, tag3]
                    items:
                        type: string
                    type: array
                slug:
                    type: string
                urlImage:
                    type: string
            type: object
        ProductOption:
          type: object
          properties:
            name:
              type: string
            key:
              type: string
              example: "color"
            description:
              type: string
            fieldType:
              type: string
              enum:
              - select
              - radio
              - date
              - checkbox
              - checkbox_multiple 
              - numeric
              example: "select"
            priority:
              type: number
              format: double
              example: 1.2
            values:
              type: array
              items:
                 $ref: "#/components/schemas/ProductOptionValue"
            catalogId:
              type: integer
              format: int64
            id:
              type: integer
              format: int64
              minimum: 0
              example: 30130
              readOnly: true
            optionId:
              type: integer
              format: int64
              minimum: 0
              example: 30080
        ProductOptionValue:
          type: object
          properties:
            name:
              type: string
            key:
              type: string
              example: "black"
            priority:
              type: number
              format: double
              example: 1.2
            id:
              type: integer
              format: int64
              minimum: 0
              readOnly: true
              example: 30130
        ProductSpecification:
          type: object
          properties:
            id:
              type: integer
              format: int64
              minimum: 0
              example: 31130
            optionCategoryId:
              type: integer
              format: int64
              minimum: 0
              example: 30129
            productId:
              type: integer
              format: int64
              minimum: 0
              example: 30129
            specificationId:
              type: integer
              format: int64
              minimum: 0
              example: 30129
            specificationKey:
              type: string
              example: "specification-key"
            value:
              type: string
            priority:
              type: number
              format: double
              minimum: 0
              example: 1.2
        Sku:
            properties:
                allowedOrderQuantities:
                    example: [10, 20, 30, 40]
                    items:
                        type: string
                    type: array
                availability:
                    $ref: "#/components/schemas/Availability"
                depth:
                    type: number
                    format: double
                    minimum: 0
                    example: 1.1
                displayDate:
                    type: string
                    format: date
                    example: "2017-07-21"
                expirationDate:
                    type: string
                    format: date
                    example: "2017-08-21"
                gtin:
                    type: string
                    example: "12341234"
                height:
                    type: number
                    format: double
                    minimum: 0
                    example: 20.2
                id:
                  type: integer
                  format: int64
                  minimum: 0
                  readOnly: true
                  example: 30130
                manufacturerPartNumber:
                    type: string
                    example: "12341234"
                maxOrderQuantity:
                    format: int32
                    type: integer
                minOrderQuantity:
                    format: int32
                    type: integer
                neverExpire:
                    type: boolean
                    example: true
                options:
                  type: object
                  additionalProperties:
                      type: string
                  example: {
                        "optionKey": "optionValueKey",
                        "color": "yellow",
                        "size": "xs" }
                published:
                    type: boolean
                    example: true
                purchasable:
                    type: boolean
                    example: true
                price:
                    $ref: "#/components/schemas/Price"
                sku:
                    type: string
                weight:
                    type: number
                    format: double
                    minimum: 0
                    example: 1.1
                width:
                    type: number
                    format: double
                    minimum: 0
                    example: 20.2
            type: object
        RelatedProduct:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    minimum: 0
                    example: 30130
                    readOnly: true
                priority:
                    type: number
                    format: double
                    example: 1.2
                productId:
                    type: integer
                    format: int64
                    minimum: 0
                    example: 30129
                type:
                    type: string
                    example: "cross-sell"
info:
    description: "Headless Commerce Delivery Catalog API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "Headless Commerce Delivery Catalog API"
    version: v1.0
openapi: 3.0.1
paths:
    "/channels/{channelId}/products":
        get:
            description: Retrieves products from selected channel.
            parameters:
                - $ref: "#/components/parameters/channelId"
                - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/filterQueryParam"
                - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageQueryParam"
                - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageSizeQueryParam"
                - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/sortQueryParam"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
                    description: ""
                401:
                    $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/UnauthorizedError"
                404:
                    $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/NotFound"
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
            tags: 
                - "Product"
    "/products/{productId}":
      get:
          description: Retrieves products from selected channel.
          parameters:
              - $ref: "#/components/parameters/productId"
          responses:
              200:
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Product"
                      application/xml:
                          schema:
                              $ref: "#/components/schemas/Product"
                  description: ""
              401:
                  $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/UnauthorizedError"
              404:
                  $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/NotFound"
              500:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
                      application/xml:
                          schema:
                              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
          tags: 
              - "Product"
    "/channels/{channelId}/products/{productId}/attachments/":
      get:
        summary: Gets a list of Attachments related to a Product.
        tags:
          - "Attachment"
        parameters:
          - $ref: "#/components/parameters/channelId"
          - $ref: "#/components/parameters/productId"
          - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageQueryParam"
          - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageSizeQueryParam"
        responses:
          200:
            description: Successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Attachment"
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Attachment"
          401:
              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/UnauthorizedError"
          404:
              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/NotFound"
          500:
              description: Unexpected error
              content:
                  application/json:
                      schema:
                          $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
                  application/xml:
                      schema:
                          $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
    "/channels/{channelId}/products/{productId}/categories/":
      get:
        description: Gets a list of Category related to a Product.
        parameters:
          - $ref: "#/components/parameters/channelId"
          - $ref: "#/components/parameters/productId"
          - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageQueryParam"
          - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageSizeQueryParam"
        responses:
          200:
            description: Successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Category"
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Category"
          401:
            $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/UnauthorizedError"
          404:
            $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/NotFound"
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
              application/xml:
                schema:
                  $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
        tags:
          - "Category"
    "/channels/{channelId}/products/{productId}/product-options/":
        get:
          summary: Gets Product Options.
          tags:
            - "ProductOption"
          parameters:
            - $ref: "#/components/parameters/channelId"
            - $ref: "#/components/parameters/productId"
            - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageQueryParam"
            - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageSizeQueryParam"
          responses:
            200:
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: array
                    items: 
                      $ref: "#/components/schemas/ProductOption"
                application/xml:
                  schema:
                    type: array
                    items: 
                      $ref: "#/components/schemas/ProductOption"
            401:
                $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/UnauthorizedError"
            404:
                $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/NotFound"
            500:
                description: Unexpected error
                content:
                    application/json:
                        schema:
                            $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
                    application/xml:
                        schema:
                            $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"

    "/channels/{channelId}/products/{productId}/product-specifications/":
      get:
        summary: Gets a list of Values related to a Specification.
        tags:
          - "ProductSpecification"
        parameters:
            - $ref: "#/components/parameters/channelId"
            - $ref: "#/components/parameters/productId"
            - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageQueryParam"
            - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageSizeQueryParam"
        responses:
            200:
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductSpecification"
                application/xml:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductSpecification"
            401:
                $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/UnauthorizedError"
            404:
                $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/NotFound"
            500:
                description: Unexpected error
                content:
                    application/json:
                        schema:
                            $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
                    application/xml:
                        schema:
                            $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error" 

    "/channels/{channelId}/products/{productId}/images/":
      get:
        summary: Gets a list of Images related to a Product.
        tags:
          - "Attachment"
        parameters:
          - $ref: "#/components/parameters/channelId"
          - $ref: "#/components/parameters/productId"
          - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageQueryParam"
          - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageSizeQueryParam"
        responses:
          200:
            description: Successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Attachment"
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Attachment"
          401:
              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/UnauthorizedError"
          404:
              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/NotFound"
          500:
              description: Unexpected error
              content:
                  application/json:
                      schema:
                          $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
                  application/xml:
                      schema:
                          $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
    "/channels/{channelId}/products/{productId}/related-products/":
        get:
          description: Gets a list of Related Products of a Product.
          parameters:
              - $ref: "#/components/parameters/channelId"
              - $ref: "#/components/parameters/productId"
              - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageQueryParam"
              - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageSizeQueryParam"
              - in: query
                name: type
                required: false
                schema:
                  type: string
          responses:
              200:
                description: Successful operation
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: "#/components/schemas/RelatedProduct"
                  application/xml:
                    schema:
                      type: array
                      items:
                        $ref: "#/components/schemas/RelatedProduct"
              401:
                  $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/UnauthorizedError"
              404:
                  $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/NotFound"
              500:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
                      application/xml:
                          schema:
                              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
          tags: 
              - "RelatedProduct"
    "/channels/{channelId}/products/{productId}/skus":
      get:
          description: Retrieves products from selected channel.
          parameters:
              - $ref: "#/components/parameters/channelId"
              - $ref: "#/components/parameters/productId"
              - $ref: "#/components/parameters/accountIdParam"
              - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageQueryParam"
              - $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/parameters/pageSizeQueryParam"
          responses:
              200:
                  content:
                      application/json:
                          schema:
                              items:
                                  $ref: "#/components/schemas/Sku"
                              type: array
                      application/xml:
                          schema:
                              items:
                                  $ref: "#/components/schemas/Sku"
                              type: array
                  description: ""
              401:
                  $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/UnauthorizedError"
              404:
                  $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/responses/NotFound"
              500:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
                      application/xml:
                          schema:
                              $ref: "https://api.swaggerhub.com/apis/liferayinc/commerce-domain/v1.0#/components/schemas/Error"
          tags: 
              - "Sku"