openapi: 3.0.0
info:
  description: This is a API for creating rules of visit scheduling for a medical clinic
  version: "1.0.0-oas3"
  title: Scheduling Rules API
  contact:
    email: fernandodmp@outlook.com
    
servers:
  - url: http://localhost:8000/api/v1
    
components:
  schemas:
    Date:
      type: string
      format: 'yyyy-mm-ddT00:00:00'
      example: 'yyyy-mm-ddT00:00:00-03:00'
    Time:
      type: string
      format: 'HH:MM'
      example: 'HH:MM'
    DailyRule:
      type: object
      required:
        - start
        - end
        - type
      properties:
        id:
          type: string
          format: short-uuid
          example: xdnvjqEc3amUZ9uSWvEAfL
        type:
          type: string
          enum:
            - daily
            - weekly
            - singleDay
          example: '(daily | weekly | singleDay)'
        start:
          type: object
          $ref: '#/components/schemas/Time'
        end:
          type: object
          $ref: '#/components/schemas/Time'
    WeeklyRule:
      allOf:
        - $ref: '#/components/schemas/DailyRule'
        - type: object
          required:
            - weekdays
          properties:
            weekdays:
              type: array
              items:
                type: string
                enum:
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
              example:
                - Monday
                - Thursday
    SingleDayRule:
      allOf:
        - $ref: '#/components/schemas/DailyRule'
        - type: object
          required:
            - date
          properties:
            date:
              type: object
              $ref: '#/components/schemas/Date'
    AvailableTime:
      type: object
      required:
        - day
        - intervals
      properties:
        day:
          type: string
          format: "dd-mm-yyyy"
          example: "dd-mm-yyyy"
        interval:
          type: array
          items:
            type: object
            required:
              - start
              - end
            properties:
              start:
                type: object
                $ref: '#/components/schemas/Time'
              end:
                type: object
                $ref: '#/components/schemas/Time'
    #DateInterval:
     # type: object
      #required:
       # - initialDate
        #- finalDate
      # properties:
        #initialDate:
         # type: object
          #$ref: '#/components/schemas/Date'
        #finalDate:
         # type: object
          #$ref: '#/components/schemas/Date'
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
tags:
  - name: Rules
    description: The constraints for medical visit scheduling
  - name: Available Times
    description: The time intervals available to scheduling
paths:
  /rules:
    get:
      tags:
        - Rules
      summary: Retrieves all existing rules
      description: |
        Retrieves all the existing rules
      responses:
        '200':
          description: Returns an array of rules containing all of the existing rules
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/DailyRule'
                    - $ref: '#/components/schemas/WeeklyRule'
                    - $ref: '#/components/schemas/SingleDayRule'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Rules
      summary: Creates a new rule
      description: Creates and adds a new rule for the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DailyRule'
                - $ref: '#/components/schemas/WeeklyRule'
                - $ref: '#/components/schemas/SingleDayRule'
      
      responses:
        '201':
          description: Rule created successfully returns the created rule
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DailyRule'
                  - $ref: '#/components/schemas/WeeklyRule'
                  - $ref: '#/components/schemas/SingleDayRule'
        
                
        '400':
          description: 'Something was wrong with the request data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
 
  /rules/{id}:
    get:
      tags:
        - Rules
      summary: Retrieves a single existing rule
      description: |
        Retrieves a single existing rule
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: short-uuid
          required: true
          description: The identifier for the desired rule
      
      responses:
        '200':
          description: Successfully found the rule
          content:
            aplication/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DailyRule'
                  - $ref: '#/components/schemas/WeeklyRule'
                  - $ref: '#/components/schemas/SingleDayRule'
          
        '404':
          description: Desired rule not found or not existant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
    delete:
      tags:
        - Rules
      summary: Deletes an existing rule
      description: |
        Deletes an the existing rule
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: short-uuid
          required: true
          description: The identifier for the desired rule
      
      responses:
        '204':
          description: Successfully deleted the rule and returns nothing
          
        '404':
          description: Desired rule not found or not existant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /times:
    get:
      tags:
        - Available Times
      summary: Retrieves the times available for scheduling in a given interval
      description: |
        Retrieves the times available for scheduling in a given interval
        
      parameters:
      
        - in: query
          name: initialDate
          schema:
            $ref: '#/components/schemas/Date'
          required: true
          description: The initial date of the date interval for available times
          
        - in: query
          name: finalDate
          schema:
            $ref: '#/components/schemas/Date'
          required: true
          description: The initial date of the date interval for available times
      
      responses:
        '200':
          description: Returns an array of days and their respectives available time intervals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableTime'
        
        '400':
          description: 'Something was wrong with the parameters data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
