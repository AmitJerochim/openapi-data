{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Chestnut API",
    "contact" : { },
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "variables" : { }
  } ],
  "paths" : {
    "/api" : {
      "get" : {
        "tags" : [ "GET" ],
        "summary" : "/api",
        "description" : "GET request to the root of the HATEOAS API",
        "operationId" : "/api",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/users" : {
      "get" : {
        "tags" : [ "GET" ],
        "summary" : "/api/users ADMIN",
        "description" : "Get all registered users info.",
        "operationId" : "/api/usersADMIN",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/users/{id}" : {
      "get" : {
        "tags" : [ "GET" ],
        "summary" : "/api/users/:id ADMIN",
        "description" : "Get 1 user by his id, unavailable route.",
        "operationId" : "/api/users/:idADMIN",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "DELETE" ],
        "summary" : "/api/users/:id ADMIN",
        "description" : "Delete an user by his id, request can only be made by an admin.",
        "operationId" : "Delete/api/users/:idADMIN",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 3
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "PATCH" ],
        "summary" : "/api/users/:id ADMIN",
        "description" : "Update an user with id.",
        "operationId" : "Patch/api/users/:idADMIN",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 3
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/~1api~1users~1%3Aid"
              },
              "example" : {
                "username" : "test4",
                "isAdmin" : true
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/keys" : {
      "get" : {
        "tags" : [ "GET" ],
        "summary" : "/api/keys",
        "description" : "Get all public keypairs and usernames of all registered users.",
        "operationId" : "/api/keys",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/keys/users/me" : {
      "get" : {
        "tags" : [ "GET" ],
        "summary" : "/api/keys/users/me",
        "description" : "Get all keys, public and private of currently logged in user.",
        "operationId" : "/api/keys/users/me",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/keys/users/{id}" : {
      "get" : {
        "tags" : [ "GET" ],
        "summary" : "/api/keys/users/:id",
        "operationId" : "/api/keys/users/:id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/keys/{id}" : {
      "delete" : {
        "tags" : [ "DELETE" ],
        "summary" : "/api/keys/:id",
        "description" : "Delete key by id. User will be denied to delete a key he does not own.",
        "operationId" : "/api/keys/:id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/users/me" : {
      "delete" : {
        "tags" : [ "DELETE" ],
        "summary" : "/api/users/me",
        "description" : "Delete currently logged in user.",
        "operationId" : "/api/users/me",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/keys/new/users/me" : {
      "post" : {
        "tags" : [ "POST" ],
        "summary" : "/api/keys/new/users/me",
        "description" : "Generate a new keypair for currently logged in user.",
        "operationId" : "/api/keys/new/users/me",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/~1api~1keys~1new~1users~1me"
              },
              "example" : {
                "name" : "key-name",
                "type" : "RSA",
                "length" : 1024,
                "publicKey" : "pubkey-example",
                "privateKey" : "privkey-example"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/encrypt1" : {
      "post" : {
        "tags" : [ "POST" ],
        "summary" : "/api/encrypt",
        "description" : "Endpoint that will encrypt provided string.",
        "operationId" : "/api/encrypt",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/~1api~1encrypt"
              },
              "example" : {
                "text" : "Hello World!",
                "publicKey" : "-----BEGIN PUBLIC KEY-----MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC5LwADmz/nlyXs5/LFM8bcmyveWdi3e5PzCa8QWdySV5yW97oDQXbLAynEnuwZ7EYkzn+7YCu1DGzXiFa3nRcBoEXVkudwF7Xfm6HXNa5wjqE0ACL9EYu8vAt8ACe8D6qZdwm+onMFXv4Qv+P3YHguZIwGLP4cyhWb9eyQPNqf8QIDAQAB-----END PUBLIC KEY-----"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/decrypt" : {
      "post" : {
        "tags" : [ "POST" ],
        "summary" : "/api/decrypt",
        "description" : "Endpoint that will decrypt provided cipher.",
        "operationId" : "/api/decrypt",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/~1api~1decrypt"
              },
              "example" : {
                "encryptedText" : "lxMgjomsY9jrMGFe+D3naToxLcuzD2yGpMf51ZcAPlnjguAgNL3tSjlDAZzYW4M0QuhJKgQdWXc0ctS63kkFymmsWDMxaIoVITf5qam0tJdKSLwaoajo6fQY86J2sF218T2G5UOrII2J/naufabBbGJtvWUNAnWpr+/1Riv2068=",
                "privateKey" : "-----BEGIN RSA PRIVATE KEY-----MIICXQIBAAKBgQC5LwADmz/nlyXs5/LFM8bcmyveWdi3e5PzCa8QWdySV5yW97oDQXbLAynEnuwZ7EYkzn+7YCu1DGzXiFa3nRcBoEXVkudwF7Xfm6HXNa5wjqE0ACL9EYu8vAt8ACe8D6qZdwm+onMFXv4Qv+P3YHguZIwGLP4cyhWb9eyQPNqf8QIDAQABAoGBALMyMfdLcilu7/ox8ZC2q8aqOWcu1jGnWeGjC07tRi4urY7BJbUk0gldhDuJ9bqYEsBnOt9dDq5h2akve4qubqU0OaBCskoVt8K/4AAFhPNYUTcw//Tp8g33eMtpodC3lxOlgk4BFC9tdZqaFZ6xNKsJt4HEjHyQiov/4YJI92dhAkEA5T7DiDRkbdMCv+g7S0vVTuRQFC14Xqc4lX2yI1haY1glkq3h20zNLISIvr835LjRQeoSv0/xlQCFPOHL3AzuNQJBAM7LyyG018BjLgOGIiNY6CKVHVS3EBAB7ZNAVB47aylrpyXVnp13KVwSqNce2eulzWkm12fHFC+WhQUm82NCUk0CQA7ZSucGpb6rXVE65KRS7CUpCrrT2ykeYb7lHmXFsk0fB4gBtVB0IBITH5xjXGZ3Ri6jz8UOk5JYL0krQv4k5EUCQQCWbyQfKgpFdyDTCXGuGxALkEQdC2rQ6kYkd4h50am8IQcf+81+KWBaDWzryRKoXR4Xn1zVrrndgHbV76bgjy+FAkBkbobGiuqDgwrD2Ba6NdetRw0cPxJ+ho5tErv0Na6RplOwsulsAyKU29fype19fOVtma7Pf81DFsIXQtl7Ha7Y-----END RSA PRIVATE KEY-----"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/login" : {
      "post" : {
        "tags" : [ "POST" ],
        "summary" : "/api/login",
        "description" : "Log in endpoint. Check if username exists, check if password is correct. Provide token on successful log in.",
        "operationId" : "/api/login",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/~1api~1login"
              },
              "example" : {
                "username" : "test1",
                "password" : "test1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/signup" : {
      "post" : {
        "tags" : [ "POST" ],
        "summary" : "/api/signup",
        "description" : "Signup endpoint. Makes sure username and email are unique. Hashes password and adds info to db.",
        "operationId" : "/api/signup",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/~1api~1signup"
              },
              "example" : {
                "username" : "test5",
                "password" : "test5",
                "email" : "test5@gmail.com"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "schemas" : {
      "/api/keys/new/users/me" : {
        "title" : "/api/keys/new/users/me",
        "required" : [ "name", "type", "length", "publicKey", "privateKey" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "length" : {
            "type" : "integer",
            "format" : "int32"
          },
          "publicKey" : {
            "type" : "string"
          },
          "privateKey" : {
            "type" : "string"
          }
        },
        "example" : {
          "name" : "key-name",
          "type" : "RSA",
          "length" : 1024,
          "publicKey" : "pubkey-example",
          "privateKey" : "privkey-example"
        }
      },
      "/api/encrypt" : {
        "title" : "/api/encrypt",
        "required" : [ "text", "publicKey" ],
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string"
          },
          "publicKey" : {
            "type" : "string"
          }
        },
        "example" : {
          "text" : "Hello World!",
          "publicKey" : "-----BEGIN PUBLIC KEY-----MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC5LwADmz/nlyXs5/LFM8bcmyveWdi3e5PzCa8QWdySV5yW97oDQXbLAynEnuwZ7EYkzn+7YCu1DGzXiFa3nRcBoEXVkudwF7Xfm6HXNa5wjqE0ACL9EYu8vAt8ACe8D6qZdwm+onMFXv4Qv+P3YHguZIwGLP4cyhWb9eyQPNqf8QIDAQAB-----END PUBLIC KEY-----"
        }
      },
      "/api/decrypt" : {
        "title" : "/api/decrypt",
        "required" : [ "encryptedText", "privateKey" ],
        "type" : "object",
        "properties" : {
          "encryptedText" : {
            "type" : "string"
          },
          "privateKey" : {
            "type" : "string"
          }
        },
        "example" : {
          "encryptedText" : "lxMgjomsY9jrMGFe+D3naToxLcuzD2yGpMf51ZcAPlnjguAgNL3tSjlDAZzYW4M0QuhJKgQdWXc0ctS63kkFymmsWDMxaIoVITf5qam0tJdKSLwaoajo6fQY86J2sF218T2G5UOrII2J/naufabBbGJtvWUNAnWpr+/1Riv2068=",
          "privateKey" : "-----BEGIN RSA PRIVATE KEY-----MIICXQIBAAKBgQC5LwADmz/nlyXs5/LFM8bcmyveWdi3e5PzCa8QWdySV5yW97oDQXbLAynEnuwZ7EYkzn+7YCu1DGzXiFa3nRcBoEXVkudwF7Xfm6HXNa5wjqE0ACL9EYu8vAt8ACe8D6qZdwm+onMFXv4Qv+P3YHguZIwGLP4cyhWb9eyQPNqf8QIDAQABAoGBALMyMfdLcilu7/ox8ZC2q8aqOWcu1jGnWeGjC07tRi4urY7BJbUk0gldhDuJ9bqYEsBnOt9dDq5h2akve4qubqU0OaBCskoVt8K/4AAFhPNYUTcw//Tp8g33eMtpodC3lxOlgk4BFC9tdZqaFZ6xNKsJt4HEjHyQiov/4YJI92dhAkEA5T7DiDRkbdMCv+g7S0vVTuRQFC14Xqc4lX2yI1haY1glkq3h20zNLISIvr835LjRQeoSv0/xlQCFPOHL3AzuNQJBAM7LyyG018BjLgOGIiNY6CKVHVS3EBAB7ZNAVB47aylrpyXVnp13KVwSqNce2eulzWkm12fHFC+WhQUm82NCUk0CQA7ZSucGpb6rXVE65KRS7CUpCrrT2ykeYb7lHmXFsk0fB4gBtVB0IBITH5xjXGZ3Ri6jz8UOk5JYL0krQv4k5EUCQQCWbyQfKgpFdyDTCXGuGxALkEQdC2rQ6kYkd4h50am8IQcf+81+KWBaDWzryRKoXR4Xn1zVrrndgHbV76bgjy+FAkBkbobGiuqDgwrD2Ba6NdetRw0cPxJ+ho5tErv0Na6RplOwsulsAyKU29fype19fOVtma7Pf81DFsIXQtl7Ha7Y-----END RSA PRIVATE KEY-----"
        }
      },
      "/api/login" : {
        "title" : "/api/login",
        "required" : [ "username", "password" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        },
        "example" : {
          "username" : "test1",
          "password" : "test1"
        }
      },
      "/api/signup" : {
        "title" : "/api/signup",
        "required" : [ "username", "password", "email" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        },
        "example" : {
          "username" : "test5",
          "password" : "test5",
          "email" : "test5@gmail.com"
        }
      },
      "/api/users/:id" : {
        "title" : "/api/users/:id",
        "required" : [ "username", "isAdmin" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "isAdmin" : {
            "type" : "boolean"
          }
        },
        "example" : {
          "username" : "test4",
          "isAdmin" : true
        }
      }
    },
    "securitySchemes" : {
      "httpBearer" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    }
  },
  "security" : [ {
    "httpBearer" : [ ]
  } ],
  "tags" : [ {
    "name" : "GET"
  }, {
    "name" : "DELETE"
  }, {
    "name" : "POST"
  }, {
    "name" : "PATCH"
  } ]
}