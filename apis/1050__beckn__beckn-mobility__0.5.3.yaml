openapi: 3.0.0
info:
  version: "0.5.3"
  title: 'Beckn Mobility API'
  description: API specification for a multi-modal Journey by a commuter in a city using any form of public or shared mobility service provider. Though this documentation seems like it has been created for REST APIs, it has been attempted to make the API as protocol agnostic as possible. All requests in this interface will be POST requests and the standard data interchange format will be JSON as it is widely accepted across the world.
  contact:
    name: Beckn Mobility
    email: ravi@beckn.org
    url: http://beckn.org
  license:
    name: Creative Commons BY-ND
    url: https://creativecommons.org/licenses/by-nd/2.0/
paths:   
  /Journey/search:
    post:
      description: This API performs a search query with an intent to find Journeys or ResourcesSearch
      operationId: Journeys/search
      externalDocs:
        url: http://link-to-external-document.html
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  $ref: '#/components/schemas/JourneyIntent'
            examples:
              Simple Search:
                description: This example shows the case where an MUA app user simply enters the origin and destination and time and expects a list of multi modal journeys constructed by the MGP.
                value:
                  {
                    header: {
                      action: Journey/search,
                      txn_id: "<transaction id>",
                      version: "1.0.0",
                      timestamp: "2019-09-13T14:31:54+05:30@UTC",
                    },
                    body: {
                      origin: {
                        location: {
                          value: "(12.878742,77.999654)",
                          format: "geocode"
                        },
                        departure_time: {
                          value: "2019-09-13T14:31:54",
                          format: "utc"
                        }
                      },
                      destination: {
                        location: {
                          value: "(12.982984,77.454322)",
                          format: "geocode"
                        },
                      }
                    }
                  }
              Complex Search:
                description: This is an advanced case where the user sends intent with some personal preferences regarding the nature and context of his/her travel
                value:
                  {
                    header: {
                      action: Journey/search,
                      txn_id: "<transaction id>",
                      version: "1.0.0",
                      timestamp: "2019-09-13T14:31:54+05:30@UTC",
                    },
                    body: {
                      intent: {
                        type: "JourneyIntent",
                        origin: {
                          location: {
                            value: "(12.878742,77.999654)",
                            format: "geocode"
                          },
                          departure_time: {
                            value: "2019-09-13T14:31:54",
                            format: "utc"
                          }
                        },
                        destination: {
                          location: {
                            value: "(12.982984,77.454322)",
                            format: "geocode"
                          },
                        }
                      }
                    }
                  }
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/cb_search:
    post:
      description: BG sends a list of Journey objects to BA
      operationId: Journey/cb_search
      tags:
        - Beckn App API
      requestBody:
        description: BG sends the following message to the BA
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: array
                  items:
                    $ref: '#/components/schemas/Journey'
                      
                footer:
                  $ref: '#/components/schemas/Footer'
            examples:
              BusAndMetro:
                description: In this case, the MUA user simply enters origin and time and expects all the services operating from or through that place.
                value:
                  {
                    header: {
                      action: Journey/cb_search,
                      txn_id: "<transaction id>",
                      version: "1.0.0",
                      timestamp: "2019-09-13T14:31:54+05:30@UTC",
                    },
                    body:[
                      {
                        origin: {
                          location: {
                            value: "(12.878742,77.999654)",
                            format: "geocode"
                          },
                          departure_time: {
                            value: "2019-09-13T14:31:54+05:30",
                            format: "utc"
                          }
                        },
                        destination: {
                          location: {
                            value: "(12.454612,77.876287)",
                            format: "geocode"
                          }
                        },
                        state: "PLAN",
                        trips: [
                          {
                            id: "yuplEnK1HqCh09JA1wsj",
                            MobilityService: {
                              id: "h3nM51o2POfNqXeZJXu6",
                              name: "Port Authority Bus Service",
                              provision_type: 'FIXED',
                              reservability: {
                                is_reservable: true
                              },
                              capacity_type: {
                                carrier_reservable: false,
                                seat_reservable: false
                              },
                              mobility_form: {
                                carrier: {
                                  category: 'BUS'
                                },
                                medium: 'ROADWAYS'
                              }
                            },
                            route: {
                              flexibilty: 'FIXED CORRIDOR',
                              medium: 'ROADWAYS',
                              stops: [
                                {
                                  location: "geocode:(12.878742,77.999654)@coord.(DD.DDDDDD);Vesey Street@name",
                                  arrival_time: "2019-09-13T14:31:54+05:30",
                                  buffer_time: "60 s",
                                  departure_time: "2019-09-13T14:31:54+05:30"
                                },
                                {
                                  location: "geocode:(12.878742,77.999654)@coord.(DD.DDDDDD);Fulton Street@name",
                                  arrival_time: "2019-09-13T14:31:54+05:30"
                                },
                              ],
                              edges: [
                                {
                                  travel_time: "2 min",
                                  path: "polyline:(12.878742,77.999654),(12.878742,77.999654),(12.878742,77.999654)"
                                }
                              ]
                            }
                          },
                          {
                            id: "XrjwfV1m2ujtCU8Wm0JG",
                            service: {
                              id: "Dl9jAJzRlCZirt8IJYwA",
                              name: "New York Subway",
                              provision_type: 'FIXED',
                              reservability: {
                                is_reservable: true
                              },
                              capacity_type: {
                                carrier_reservable: false,
                                seat_reservable: false
                              },
                              mobility_form: {
                                carrier: {
                                  category: 'TRAIN'
                                },
                                medium: 'RAILWAYS'
                              }
                            },
                            route: {
                              flexibilty: 'FIXED CORRIDOR',
                              medium: 'RAILWAYS',
                              stops: [
                                {
                                  location: "station:33rd Street, World Trade Center@name",
                                  arrival_time: "2019-09-13T14:31:54+05:30",
                                  buffer_time: "60 s",
                                  departure_time: "2019-09-13T14:31:54+05:30"
                                },
                                {
                                  location: "station:34th Street, Pennsylavania Station@name",
                                  arrival_time: "2019-09-13T14:31:54+05:30"
                                },
                              ],
                              edges: [
                                {
                                  travel_time: "12 min",
                                  path: "polyline:(12.878742,77.999654),(12.878742,77.999654),(12.878742,77.999654)"
                                }
                              ]
                            }
                          },
                        ],
                        transfers: [
                          {
                            origin: "geocode:(12.878742,77.999654)@coord.(DD.DDDDDD);Fulton Street@name",
                            destination: "station:33rd Street, World Trade Center@name",
                            medium: "ROADWAYS",
                            mode: "WALK",
                            time: "5 min"
                          }
                        ]
                      }
                    ]
                  }
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Trip/search:
    post:
      description: In this API, the MGP Requests an MSP to fetch possible trips between two points.
      operationId: search/Intent/TripIntent
      tags:
        - Beckn Provider API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  $ref: '#/components/schemas/JourneyIntent'
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Trip/cb_search:
    post:
      description: This is the callback API to the findTrips API where the MSP sends a list of serviceable trips
      operationId: cb_search/Trip/Intent
      tags:
        - Beckn Gateway Supply Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    trips:
                      type: array
                      items:
                        $ref: '#/components/schemas/JourneyIntent'
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/Travelers/add:
    post:
      description: BA adds traveler to the Journey
      operationId: Journey/Travelers/add
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    journey:
                      type: object
                      properties:
                        id:
                          type: string
                        traveler:
                          $ref: '#/components/schemas/Traveler'
                footer:
                  $ref: '#/components/schemas/Footer'
            examples:
              Default:
                description: This example shows the case where an MGP sends the origin and destination and time and expects a list of trips serviced by the MSP.
                value:
                  header:
                    action: addJourneyTraveler
                    txn_id: "<transaction id>"
                    version: "1.0.0"
                    timestamp: "2019-09-13T14:31:54+05:30@UTC"
                  body:
                    journey:
                      id: Xk0L2JF1wWeFWyF3fZrV
                      traveler: {
                        name: "Mr John Doe",
                        email: "johndoe@gmail.com",
                        phone: "+91-8888888888"
                      }
                  footer:
                    token: "Xk0L2JF1wWeFWyF3fZrV"
                    signature: "lN5hPNLsBo06f5cyJbRD"
                    public_key: "Cxy55xAFE1tc52Srd41e"
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/Travelers/cb_add:
    post:
      description: BG returns the journey object with the traveler details
      operationId: cb_add/Journey/Traveler
      tags:
        - Beckn App API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    journey:
                      type: object
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Trip/Stop/add:
    post:
      description: Adds a stop to a Trip
      operationId: add/Trip/Stop
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                        route:
                          type: object
                          properties:
                            stop:
                              type: object
                              properties:
                                location:
                                  type: string
                                arrival_time:
                                  type: string
                                departure_time:
                                  type: string
                                buffer_time:
                                  type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Trip/Stop/cb_add:
    post:
      description: Adds a stop to a Trip
      operationId: Trip/Stop/cb_add
      tags:
        - Beckn Gateway Supply Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                        route:
                          type: object
                          properties:
                            stop:
                              type: object
                              properties:
                                id:
                                  type: string
                                location:
                                  type: string
                                arrival_time:
                                  type: string
                                departure_time:
                                  type: string
                                buffer_time:
                                  type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/Trip/add:
    post:
      description: Adds a Trip to a Journey
      operationId: Journey/Trip/add
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    journey:
                      type: object
                      properties:
                        id:
                          type: string
                        trip:
                          type: object
                          properties:
                            origin:
                              type: string
                            destination:
                              type: string
                            time:
                              type: string
                              format: date-time

                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/Trip/cb_add:
    post:
      description: Callback to the add Trip API
      operationId: cb_add/Journey/Trip
      tags:
        - Beckn App API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    journey:
                      type: object
                      properties:
                        id:
                          type: string
                        trip:
                          type: object
                          properties:
                            id:
                              type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Travelers/Cred/get:
    post:
      description: Request made by MSP to get Traveler Credentials if needed at any stage of the trip
      operationId: /Travelers/Cred/get
      tags:
        - Beckn Gateway Supply Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    traveler:
                      type: object
                      properties:
                        id:
                          type: string
                        credentials:
                          type: object
                          properties:
                            type:
                              type: string
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Travelers/Cred/cb_get:
    post:
      description: MUA sends Traveler credentials to MSP
      operationId: cb_get/Traveler/Cred
      tags:
        - Beckn Provider API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    traveler:
                      type: object
                      properties:
                        id:
                          type: string
                        credentials:
                          type: object
                          properties:
                            type:
                              type: string
                            value:
                              type: string
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /MobilityService/FareProducts/get:
    post:
      description: Get Fare Products of a Service.
      operationId: /MobilityService/FareProducts/get
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    service:
                      type: object
                      properties:
                        id:
                          type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /MobilityService/FareProduct/cb_get:
    post:
      description: Returns Fare Products of an MSP
      operationId: cb_search/Service/FareProduct
      tags:
        - Beckn App API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    service:
                      type: object
                      properties:
                        id:
                          type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/init:
    post:
      description: User selects one of the returned Journeys and begins the <b>Pre-Booking</b> process. The MGP splits the Journey into the respective Trips and forwards them to the MSPs using the initTrip API to fetch details specific to the individual Trips
      operationId: Journey/init
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    journey:
                      $ref: '#/components/schemas/Journey'
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Trip/init:
    post:
      description: Here the MGP sends the trip ID to the MUA to fetch Trip specific data available to select and add on to the Journey. These may be various value added services, Fare Products and Discounts offered by the MSP along with their prices and breakup.
      operationId: Trip/init
      tags:
        - Beckn Provider API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/cb_init:
    post:
      description: MGP returns the combined results of the initTrip APIs from the respective MSPs
      operationId: cb_init/Journey
      tags:
        - Beckn App API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    journey:
                      $ref: '#/components/schemas/Journey'
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Trip/cb_init:
    post:
      description: BP returns Trip specific data available to select and add on to the Journey. These may be various value added services, Fare Products and Discounts offered by the BP along with their prices and breakup
      operationId: /Trip/cb_init
      tags:
        - Beckn Gateway Supply Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                        service:
                          type: object
                          properties:
                            id:
                              type: string
                            fare_products:
                              type: array
                              items:
                                $ref: '#/components/schemas/FareProduct'
                            value_added_services:
                              type: array
                              items:
                                $ref: '#/components/schemas/ValueAddedService'
                            discounts:
                              type: array
                              items:
                                $ref: '#/components/schemas/Discount'
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/confirm:
    post:
      description: This is the API where the user has entered all the details (along with Fare Products and Value Added Services etc) and is ready to start the Journey. The MGP splits the Journey into the respective Trips and forwards the confirmation to the MSPs using the confirmTrip API. This is the API where the user has entered all the required details for the upcoming Journey. For all sense and purposes, this can also be called <b>Booking</b> the Journey
      operationId: Journey/confirm
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  $ref: '#/components/schemas/Journey'
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
  /Trip/confirm:
    post:
      description: This is the API where the MGP sends the user confirmed details of the selected Trip. This includes selecting Fare Products, Value Added Services, Availing Discounts and adding other Trip Related Details
      operationId: Trip/confirm
      tags:
        - Beckn Provider API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  $ref: '#/components/schemas/Trip'
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/cb_confirm:
    post:
      description: The MGP combines the results of cb_confirmTrip and returns the Journey confirmation status of all the Trips in it. In case any of the Trips has cancelled its service or availibility, it will be returned in this API. The user then has an option of removing the unavailable Trip and re-confirming the remaining Journey, selecting another Journey or initiating a fresh search.<br><br>In case all the trips get confirmed, the MGP returns the Journey ID with the confirmed trips details.
      operationId: cb_confirm/Journey
      tags:
        - Beckn App API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  $ref: '#/components/schemas/Journey'
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Trip/cb_confirm:
    post:
      description: Here the MSP returns the confirmation status of the Trip
      operationId: cb_confirm/Trip
      tags:
        - Beckn Gateway Supply Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  $ref: '#/components/schemas/Trip'
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
                

  /Trip/State/update:
    post:
      description: Updates a Trip state
      operationId: /Trip/State/update
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                        TripState:
                          type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'


  /Journey/Trip/remove:
    post:
      description: Removes a Trip from the journey if not started yet.
      operationId: /Journey/Trip/remove
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Journey/Trip/cb_remove:
    post:
      description: Returns Journey with Refund or cancellation details if applicable
      operationId: cb_remove/Trip
      tags:
        - Beckn App API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    journey:
                      type: object
                      properties:
                        id:
                          type: string
                        refund:
                          $ref: '#/components/schemas/Refund'

                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'


  /Trip/track:
    post:
      description: Tracks a Trip using a specific communication channel
      operationId: Trip/track
      tags:
        - Beckn Gateway Demand Side API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                        link:
                          type: string
                        key:
                          type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'

  /Trip/cb_track:
    post:
      description: MSP returns the tracking info. It could be a tracking URL, or a link to the tracking web page.
      operationId: /Trip/cb_track
      tags:
        - Beckn App API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Header'
                body:
                  type: object
                  properties:
                    trip:
                      type: object
                      properties:
                        id:
                          type: string
                        link:
                          type: string
                        key:
                          type: string
                footer:
                  $ref: '#/components/schemas/Footer'
      responses:
        200:
          description: Acknowledgement of API received
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
                
  /Provider/signup:
    post:
      description: Register Beckn Service Provider
      operationId: signup/Provider
      tags:
        - Beckn Registration API
      requestBody:
        description: Service Provider provides his contact info and supporting documents to register
        content:
          application/json:
            schema:
              type: object
              properties:
                info:
                  type: object
                  properties:
                    name:
                      type: string
                    phone:
                      type: string
                    email:
                      type: string
                    company_id:
                      type: string
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        200:
          description: Acknowledgement of signup
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  acknowledgement_id:
                    type: string


  /Provider/Info/update:
    post:
      description: Update Provider info
      operationId: update/Info
      tags:
        - Beckn Registration API
      requestBody:
        description: Service Provider provides his contact info and supporting documents to register
        content:
          application/json:
            schema:
              type: object
              properties:
                info:
                  type: object
                  properties:
                    name:
                      type: string
                    phone:
                      type: string
                    email:
                      type: string
                    company_id:
                      type: string
      responses:
        200:
          description: Acknowledgement of signup
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  acknowledgement_id:
                    type: string
                  status_url:
                    type: string
                    format: url

  /Provider/Documents/add:
    post:
      description: Add provider documents
      operationId: add/Documents
      tags:
        - Beckn Registration API
      requestBody:
        description: Service Provider adds documents to its profile
        content:
          application/json:
            schema:
              type: object
              properties:
                acknowledgement_id:
                  type: string
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        200:
          description: Acknowledgement of signup
          content: 
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  acknowledgement_id:
                    type: string
                  
                
components:
  schemas:  
    Ack:
      description: This is the acknowledgement message sent in response to any API
      type: object
      properties:
        Header:
          description: Describes the API Headers. In case the protocol is HTTP/HTTPS, all the header variables will be sent in the header section of the POST API Secondly, in the case of HTTP/HTTPS, he header object in the requestBody can be sent as an empty object. For all other protocols, the header will be an object as part of the requestBody under a key called 'headers'
          properties:
            Version:
              type: string
              description: API Version
              example: "1.0.0"
            Action:
              type: string
              description: Acknowledement action
              example: "ACK"
            Callback:
              type: string
              description: Callback to the search API
              example: ""
            Transaction_id:
              type: string
              description: Transaction ID of the search flow
              example: "7RdFk7nqj9gxMGgHyNVcbrY41Cptr0bEt0wqNqLQr8"
            Timestamp:
              type: string
              description: Timestamp of the search request
              example: "2019-09-13T14:31:54"
        Body:
          type: object
        Footer:
          $ref: '#/components/schemas/Footer'
    
    Amount:
      type: object
      description: Indicates the value of a Resource or Journey
      properties:
        Value:
          type: number
          format: float
        Info:
          type: string
      example:
        {
          value: 105,
          info: "Base Fare : 100 \n Tax @ 5%: 5"
        }
    CapacityType:
      type: string
      enum: ['CARRIER-RESERVATION', 'SEAT-RESERVATION']
    
    Communication:
      type: object
      properties:
        CommunicationChannel:
          $ref: '#/components/schemas/CommunicationChannel'
        CommunicationContent:
          $ref: '#/components/schemas/CommunicationContent'
   
    CommunicationChannel:
      type: string  
           
    CommunicationContent:
      type: string
    
    Discount:
      type: object
      description: Value Added Services that are available on a Trip
      properties:
        name:
          type: string
        price:
          type: string
        code:
          type: string
        breakup:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
    
    Edge:
      type: object
      properties:
        Path:
          $ref: '#/components/schemas/Path'
        TravelTime:
          type: string
          
    Fare:
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        Currency:
          type: string
          
    FareMedia:
      type: object
      properties:
        Type:
          type: string
        Info:
          type: string
          
    FareProduct:
      description: A Fare Product is the form agnostic business product which executes a certain Fare Policy.
      properties:
        Name:
          type: string
          example: Monthly Pass
        Description:
          type: string
          example: This pass is valid for all Metro users for one month from the date of issuance. Applicable to all routes
        ShortCode:
          type: string
          example: MP
        WayOfPurchase:
          type: string
          enum: ['PAY-BEFORE', 'PAY-AS-YOU-GO', 'PAY-AFTER']
        FareMedia:
          $ref: '#/components/schemas/FareMedia'
        TermsOfUsage:
          type: string
          
    Footer:
      description: Describes the API Footer
      properties:
        token:
          type: string
          description:  token generated by the Registry to anonymize the MUA
          example: "LSEGBze0bEt0wqNqLQr81LG9rOTkbptUPkjxSQWbxzJ6kJNIIxTn8bjDvnk"
        signature:
          type: string
          description: Signature of Registry
          example: "IqPL4jG9sCAPGaYN17RdFk7nqj9gxMGgHyNVOce8fKri5IaEw9pTDckKB6Ko"
        public_key:
          type: string
          description: public key of the MUA
          example: "QQrYkPcsOXCrrPJz9zhyjk9E2hgecbrY41CptrGd"
    
    FundingSource:
      type: string
          
    Header:
      type: object
      description: Describes the API Headers. In case the protocol is HTTP/HTTPS, all the header variables will be sent in the header section of the POST API Secondly, in the case of HTTP/HTTPS, he header object in the requestBody can be sent as an empty object. For all other protocols, the header will be an object as part of the requestBody under a key called 'headers'
      properties:
        Action:
          type: string
          description: Name of the API being called. All callbacks to this API will be prefixed with 'cb_'. For example, callback to the createJourney API will be cb_createJourney
          example: "actionName"
        Version:
          type: string
          description: API Version
          example: "1.0.0"
        TransactionId:
          type: string
          description: Transaction ID of the search flow
          example: "7RdFk7nqj9gxMGgHyNVcbrY41Cptr0bEt0wqNqLQr8"
        Timestamp:
          type: string
          description: Timestamp of the search request
          example: "2019-09-13T14:31:54"
    
    Intent:
      type: object
      properties:
        Type:
          description: Describes the intent type whether its a Journey or Resource Intent
          type: string
          enum: ['RESOURCE', 'JOURNEY']
    
    Journey:
      type: object
      properties:
        State:
          $ref: '#/components/schemas/JourneyState'
        Origin:
          $ref: '#/components/schemas/Stop'
        Destination:
          $ref: '#/components/schemas/Stop'
        Travelers:
          type: array
          items:
            $ref: '#/components/schemas/Traveler'
        TravelGroup:
          $ref: '#/components/schemas/TravelGroup'
        Trips:
          type: array
          items: 
            $ref: '#/components/schemas/Trip'
        Transfers:
          $ref: '#/components/schemas/Transfer'
        Refund:
          $ref: '#/components/schemas/Refund'
          
    JourneyIntent:
      allOf:
        - $ref: '#/components/schemas/Intent'
        - type: object
          properties:
            Communication:
              $ref: '#/components/schemas/Communication'
            Destination:
              $ref: '#/components/schemas/Stop'
            Fare:
              $ref: '#/components/schemas/TripFare'
            Transfers:
              $ref: '#/components/schemas/Transfer'
            Medium:
              $ref: '#/components/schemas/Medium'
            MobilityForm:
              $ref: '#/components/schemas/MobilityForm'
            MobilityService:
              $ref: '#/components/schemas/MobilityService'
            Origin:
              $ref: '#/components/schemas/Stop'
            Route:
              $ref: '#/components/schemas/Route'
          
    JourneyState:
      type: string
      enum: ['PLAN', 'ACTIVE', 'END', 'CLOSED']
    
    KeyValuePair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    
    Medium:
      type: string
      enum: ['ROADWAYS', 'WATERWAYS', 'RAILWAYS', 'AIRWAYS']
    
    MobilityForm:
      type: object
      properties:
        Vehicle:
          $ref: '#/components/schemas/Vehicle'
        Medium:
          $ref: '#/components/schemas/Medium'
    
    MobilityService:
      type: object
      properties:
        Reservability:
          type: object
          properties:
            IsReservable:
              type: boolean
            Condition:
              type: object
        ProvisionType:
          type: string
          enum: ['FLOATING', 'FIXED', 'ON-DEMAND']
        CapacityType:
          $ref: '#/components/schemas/CapacityType'
        FareProducts:
          type: array
          items:
            $ref: '#/components/schemas/FareProduct'
        MobilityForm:
          $ref: '#/components/schemas/MobilityForm'
        VehicleReservability:
          $ref: '#/components/schemas/VehicleReservability'
        SeatReservability:
          $ref: '#/components/schemas/SeatReservability'
          
    MobilityServiceProvider:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            id:
              description: Id of Mobility Service Provider
            MobilityService:
              $ref: '#/components/schemas/MobilityService'
          
    MobilityUserAgency:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
      #TODO
      
    MspInitiatedPayment:
      allOf:
        - $ref: '#/components/schemas/Payment'
        - type: object
          properties:
            MspId:
              description: ID of the Mobility Service Provider
              type: string
              
    Path:
      type: string
      #TODO
    
    Payment:
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        FundingSource:
          $ref: '#/components/schemas/FundingSource'
        PaymentChannel:
          $ref: '#/components/schemas/PaymentChannel'
    
    PaymentChannel:
      type: string
    
    Person:
      type: object
      properties:
        Profile:
          type: object #TODO
        Preferences:
          type: object #TODO
        Cred:
          type: string #TODO
          
    Policy:
      type: object
      properties:
        id:
          type: string
        beckn_provider_id:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        inclusion_zones:
          type: array
          items:
            type: object
            properties:
              shape:
                type: string
              trace:
                type: string
        exclusion_zones:
          type: array
          items:
            type: object
            properties:
              shape:
                type: string
              trace:
                type: string
          
    Promotion:
      type: object
      properties:
        PromotionId:
          type: string
        Description:
          type: string
          
    Refund:
      $ref: '#/components/schemas/MspInitiatedPayment'
      
    Reservability:
      type: object
      properties:
        IsReservable:
          type: boolean
        Condition:
          type: string
          
    
    SeatReservability:
      $ref: '#/components/schemas/Reservability'
      
    Resource:
      type: object
      properties:
        id:
          type: string
    
    Route:
      type: object
      properties:
        Stop:
          $ref: '#/components/schemas/Route'
        Edge:
          type: array
          items:
            $ref: '#/components/schemas/Edge'
        Medium:
          $ref: '#/components/schemas/Medium'
        
    
    Stop:
      type: object
      description: Model containing info about a train/bus stop
      properties:
        Location:
          type: string
        ArrivalTime:
          type: string
          format: date-time
        DepartureTime:
          type: string
          format: date-time
        BufferTime:
          type: string
          example: '20 s'
          
    Tracking:
      type: object
      properties:
        TrackingMethod:
          type: string
        TrackingValue:
          type: string
    
    Transfer:
      type: object
      properties:
        origin:
          type: object
        destination:
          type: object
        
    Traveler:
      $ref: '#/components/schemas/Person'
        
    
    TravelGroup:
      type: object
      properties:
        count:
          type: integer
          
    Trip:
      type: object
      properties:
        id:
          type: string
          description: Trip ID as generated by the MGP
        TripType:
          type: string
          enum: ['ON-DEMAND', 'FIXED-CORRIDOR']
        TripState:
          $ref: '#/components/schemas/TripState'
        Stops:
          type: array
          items:
            $ref: '#/components/schemas/Stop'
        Route: 
          type: object
          properties:
            flexibility:
              type: string
              enum: ['FIXED_CORRIDOR', 'FLEXIBLE_CORRIDOR']
            stops:
              type: array
              items:
                $ref: '#/components/schemas/Stop'
            medium:
              type: string
        MobilityService:
          $ref: '#/components/schemas/MobilityService'
        TripFare:
          $ref: '#/components/schemas/TripFare'
        Refund:
          $ref: '#/components/schemas/Refund'
        Tracking:
          $ref: '#/components/schemas/Tracking'
          
    TripFare:
      allOf:
        - $ref: '#/components/schemas/Fare'
        - type: object
          properties:
            Promotions:
              type: array
              items:
                $ref: '#/components/schemas/Promotion'
          
    TripState:
      type: string
      enum: ['PLAN', 'ACTIVE', 'END', 'CLOSED']
          
    ValueAddedService:
      type: object
      description: Value Added Services that are available on a Trip
      properties:
        name:
          type: string
        price:
          type: string
        breakup:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
    
    Vehicle:
      type: object
      properties:
        EnergyType:
          type: string
        Model:
          type: string
        Capacity:
          type: number
        Specifications:
          type: object
          
    VehicleReservability:
      $ref: '#/components/schemas/Reservability'