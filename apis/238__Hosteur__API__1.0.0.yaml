openapi: 3.0.0
info:
  description: "Hosteur API"
  version: "1.0.0"
  title: "Hosteur API"
  contact:
    email: "support@hosteur.com"
servers:
  - description: Hosteur API
    url: https://www.hosteur.com/api-hosteur
tags:
- name: "Clients"
- name: "Tickets"
- name: "Domaines"
- name: "Hébergements"
- name: "Certificats SSL"
- name: "Serveurs"
- name: "HDrive"
- name: "VDI"
#- name: "SMS"
#- name: "Webpanel"
#- name: "Pool de ressources"
security:
- basic: []
  site: []
- basic: []
  apikey: []
  site: []
paths:
  /user/update:
    post:
      tags:
      - "Clients"
      summary: "Modification des informations d'une fiche client"
      operationId: "userUpdate"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "formJur"
        description: "Forme juridique (particulier|société|association)"
        schema:
          type: string
          enum: [particulier,société,association]
      - in: query
        name: "nom"
        description: "Nom du client"
        schema:
          type: string
      - in: query
        name: "prenom"
        description: "Prénom du client"
        schema:
          type: string
      - in: query
        name: "adresse"
        description: "Adresse du client"
        schema:
          type: string
      - in: query
        name: "codepostal"
        description: "Codepostal du client"
        schema:
          type: string
      - in: query
        name: "ville"
        description: "Ville du client"
        schema:
          type: string
      - in: query
        name: "telephone"
        description: "Téléphone du client"
        schema:
          type: string
      - in: query
        name: "FK_PAYS"
        description: "Code pays du client"
        schema:
          type: integer
      - in: query
        name: "siret"
        description: "Numéro de siret du client"
        schema:
          type: string
      - in: query
        name: "telephone_gsm"
        description: "Téléphone GSM du client"
        schema:
          type: string
      - in: query
        name: "assosoc"
        description: "Nom de la socété"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/tech-info/update:
    post:
      tags:
      - "Clients"
      summary: "Modification du contact technique d'un client"
      operationId: "userTechInfoUpdate"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_NOM_TECH"
        description: "Nom du contact technique"
        schema:
          type: string
      - in: query
        name: "S_PRENOM_TECH"
        description: "Prénom du contact technique"
        schema:
          type: string
      - in: query
        name: "S_COURRIEL_TECH"
        description: "Email du contact technique"
        schema:
          type: string
      - in: query
        name: "S_TEL_TECH"
        description: "Téléphone du contact technique"
        schema:
          type: string
      - in: query
        name: "S_TELPORT_TECH"
        description: "Téléphone portable du contact technique"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/promo-code/list:
    get:
      tags:
      - "Clients"
      summary: "Récupération de la liste des codes promo d'un client"
      operationId: "userPromoCodeList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/bank-card/list:
    get:
      tags:
      - "Clients"
      summary: "Récupération de la liste des CB d'un client"
      operationId: "userBankCardList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/bank-card/add:
    post:
      tags:
      - "Clients"
      summary: "Ajout d'une CB sur un compte client"
      operationId: "userBankCardAdd"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "numero"
        description: "Numero de la CB"
        schema:
          type: string
      - in: query
        name: "mois"
        description: "Mois d'expiration de la CB"
        schema:
          type: string
      - in: query
        name: "annee"
        description: "Année d'expiration de la CB"
        schema:
          type: string
      - in: query
        name: "code"
        description: "Cryptogramme de la CB"
        schema:
          type: string
      - in: query
        name: "nom"
        description: "Nom du titulaire de la CB"
        schema:
          type: string
      - in: query
        name: "prenom"
        description: "Prenom du titulaire de la CB"
        schema:
          type: string
      - in: query
        name: "PK_TYPE_CARTE"
        description: "Type de la carte"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/invoice/list:
    get:
      tags:
      - "Clients"
      summary: "Récupération de la liste des factures d'un client"
      operationId: "userInvoiceList"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "TYPE_FACTURE"
        description: "Type de facture"
        schema:
          type: string
          enum: [attente,default]
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/quotation/list:
    get:
      tags:
      - "Clients"
      summary: "Récupération de la liste des devis d'un client"
      operationId: "userQuotationList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/quotation/delete:
    delete:
      tags:
      - "Clients"
      summary: "Suppression d'un devis"
      operationId: "userQuotationDelete"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_CODEFAC"
        description: "Code du devis"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/rib/list:
    get:
      tags:
      - "Clients"
      summary: "Récupération de la liste des RIB d'un client"
      operationId: "userRibList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/rib/add:
    post:
      tags:
      - "Clients"
      summary: "Ajout d'un RIB sur un compte client"
      operationId: "userRibAdd"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "etablissement"
        description: "Nom de l'établissement"
        schema:
          type: string
      - in: query
        name: "guichet"
        description: "Code guichet"
        schema:
          type: string
      - in: query
        name: "rib"
        description: "Numero de RIB"
        schema:
          type: string
      - in: query
        name: "libelle"
        description: "Nom du RIB"
        schema:
          type: string
      - in: query
        name: "banque"
        description: "Code banque"
        schema:
          type: string
      - in: query
        name: "numero"
        description: "Prénom du client"
        schema:
          type: string
      - in: query
        name: "S_IBAN"
        description: "Code IBAN"
        schema:
          type: string
      - in: query
        name: "S_BIC"
        description: "Code BIC"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/service/list:
    get:
      tags:
      - "Clients"
      summary: "Récupération de la liste des services d'un client"
      operationId: "userServiceList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/service/autorebill/update:
    post:
      tags:
      - "Clients"
      summary: "Activation/désactivation du renouvellement automatique d'un service"
      operationId: "userServiceAutorebillUpdate"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_PRESTATION"
        description: "Type de service"
        schema:
          type: string
          enum: [hosting,exchange2013,exchange2016,vps,server,vdi,domaine,backup,emailtransac,licencehpanel,sharepoint,auditweb,licence,cdn,archivagelegal,veeamcloud,rgpd,dnspower,registrylock,sla,flexone]
      - in: query
        name: "B_ACTIVE"
        description: "Activer ou desactiver le renouvellement"
        schema:
          type: integer
          enum: [1,0]
      - in: query
        name: "PK_PRESTATION"
        description: "Identifiant de la prestation"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/contact/list:
    get:
      tags:
      - "Clients"
      summary: "Récupération de la liste des contacts de domaine d'un client"
      operationId: "userContactList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/contact/add:
    post:
      tags:
      - "Clients"
      summary: "Ajout d'un contact domaine"
      operationId: "userContactAdd"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_NOM"
        description: "Nom"
        schema:
          type: string
      - in: query
        name: "S_PRENOM"
        description: "Prénom"
        schema:
          type: string
      - in: query
        name: "P_PASSWORD"
        description: "Mot de passe"
        schema:
          type: string
      - in: query
        name: "S_EMAIL"
        description: "Adresse email"
        schema:
          type: string
      - in: query
        name: "S_FORM_JURIDIQUE"
        description: "Forme juridique"
        schema:
          type: string
          enum: [individual,corporation,association]
      - in: query
        name: "S_SOCIETE"
        description: "Nom de la société"
        schema:
          type: string
      - in: query
        name: "S_ADRESSE"
        description: "Adresse"
        schema:
          type: string
      - in: query
        name: "S_CP"
        description: "Code postal"
        schema:
          type: string
      - in: query
        name: "S_VILLE"
        description: "Ville"
        schema:
          type: string
      - in: query
        name: "S_SIREN"
        description: "Numéro de siren"
        schema:
          type: string
      - in: query
        name: "S_NUM_TVA"
        description: "Numéro de TVA"
        schema:
          type: string
      - in: query
        name: "S_FAX"
        description: "Numéro de FAX"
        schema:
          type: string
      - in: query
        name: "S_TELEPHONE"
        description: "Numéro de téléphone"
        schema:
          type: string
      - in: query
        name: "S_PAYS_CODE"
        description: "Code pays (FR, BE, CH...)"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/contact/update:
    post:
      tags:
      - "Clients"
      summary: "Modification d'un contact domaine"
      operationId: "userContactUpdate"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_NOM"
        description: "Nom"
        schema:
          type: string
      - in: query
        name: "S_PRENOM"
        description: "Prénom"
        schema:
          type: string
      - in: query
        name: "P_PASSWORD"
        description: "Mot de passe"
        schema:
          type: string
      - in: query
        name: "S_EMAIL"
        description: "Adresse email"
        schema:
          type: string
      - in: query
        name: "S_FORM_JURIDIQUE"
        description: "Forme juridique"
        schema:
          type: string
          enum: [individual,corporation,association]
      - in: query
        name: "S_SOCIETE"
        description: "Nom de la société"
        schema:
          type: string
      - in: query
        name: "S_ADRESSE"
        description: "Adresse"
        schema:
          type: string
      - in: query
        name: "S_CP"
        description: "Code postal"
        schema:
          type: string
      - in: query
        name: "S_VILLE"
        description: "Ville"
        schema:
          type: string
      - in: query
        name: "S_SIREN"
        description: "Numéro de siren"
        schema:
          type: string
      - in: query
        name: "S_NUM_TVA"
        description: "Numéro de TVA"
        schema:
          type: string
      - in: query
        name: "S_FAX"
        description: "Numéro de FAX"
        schema:
          type: string
      - in: query
        name: "S_TELEPHONE"
        description: "Numéro de téléphone"
        schema:
          type: string
      - in: query
        name: "S_PAYS_CODE"
        description: "Code pays (FR, BE, CH...)"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /user/credit/info:
    get:
      tags:
      - "Clients"
      summary: "Récupération du nombre de crédits disponibles d'un compte client"
      operationId: "userCreditInfo"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
          
  /ticket/list:
    get:
      tags:
      - "Tickets"
      summary: "Récupération de la liste des tickets d'un client"
      operationId: "ticketList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /ticket/add:
    post:
      tags:
      - "Tickets"
      summary: "Ajout d'un ticket"
      operationId: "ticketAdd"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "title"
        description: "Titre du ticket"
        schema:
          type: string
      - in: query
        name: "message"
        description: "Message"
        schema:
          type: string
      - in: query
        name: "assigned_to"
        description: "Identifiant de l'operateur a qui assigner le ticket"
        schema:
          type: string
      - in: query
        name: "categorie"
        description: "Identifiant de la catégorie"
        schema:
          type: string
      - in: query
        name: "S_SERVICE"
        description: "Service concerné par le ticket"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /ticket/info:
    get:
      tags:
      - "Tickets"
      summary: "Récupéation des détails d'un ticket"
      operationId: "ticketInfo"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "id_ticket"
        description: "Identifiant du ticket"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /ticket/update:
    post:
      tags:
      - "Tickets"
      summary: "Mise à jour d'un ticket"
      operationId: "ticketUpdate"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "id_ticket"
        description: "Identifiant du ticket"
        schema:
          type: integer
      - in: query
        name: "message "
        description: "Message"
        schema:
          type: string
      - in: query
        name: "close_ticket"
        description: "Fermer le ticket 1/0"
        schema:
          type: integer
          enum: [0,1]
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  
  /domain/list:
    get:
      tags:
      - "Domaines"
      summary: "Recupération de la liste des domaines du client"
      operationId: "domainList"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "domaine"
        description: "Domaine à rechercher"
        required: false
        schema:
          type: string
      - in: query
        name: "extention"
        description: "Extension à rechercher"
        required: false
        schema:
          type: string
      - in: query
        name: "order_by"
        description: "Champ de tri (trié par ordre croissant)"
        required: false
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/info:
    get:
      tags:
      - "Domaines"
      summary: "Recupération des détails d'un nom de domaine"
      operationId: "domainInfo"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_DOMAINE"
        description: "Nom de domaine"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/delete:
    delete:
      tags:
      - "Domaines"
      summary: "Suppression d'un nom de domaine"
      operationId: "domainDelete"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_DOMAINE"
        description: "Nom de domaine"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/whois:
    get:
      tags:
      - "Domaines"
      summary: "Verification de la disponibilité d'un domaine"
      operationId: "domainWhois"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "domaine"
        description: "Domaine à rechercher"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/order:
    post:
      tags:
      - "Domaines"
      summary: "Dépôt d'un nouveau nom de domaine pour 1 an. Cette fonction necessite un solde de crédit positif."
      operationId: "domainOrder"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_DOMAIN"
        description: "Nom de domaine"
        schema:
          type: string
      - in: query
        name: "FK_CONTACT_O"
        description: "ID du contact Owner"
        schema:
          type: string
      - in: query
        name: "FK_CONTACT_A"
        description: "ID du contact Admin"
        schema:
          type: string
      - in: query
        name: "FK_CONTACT_B"
        description: "ID du contact Billing"
        schema:
          type: string
      - in: query
        name: "FK_CONTACT_T"
        description: "ID du contact Technique"
        schema:
          type: string
      - in: query
        name: "S_DNS_1"
        description: "Adresse du serveur DNS 1"
        schema:
          type: string
      - in: query
        name: "S_DNS_2"
        description: "Adresse du serveur DNS 2"
        schema:
          type: string
      - in: query
        name: "S_IP"
        description: "Adresse IP de pointage DNS"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/renew:
    post:
      tags:
      - "Domaines"
      summary: "Renouvellement d'un nom de domaine pour 1 an. Cette fonction necessite un solde de crédit positif."
      operationId: "domainRenew"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_DOMAINE"
        description: "Nom de domaine"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/transfer:
    post:
      tags:
      - "Domaines"
      summary: "Transfert d'un nom de domaine pour 1 an. Cette fonction necessite un solde de crédit positif."
      operationId: "domainTransfer"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_DOMAIN"
        description: "Nom de domaine"
        schema:
          type: string
      - in: query
        name: "FK_CONTACT_O"
        description: "ID du contact Owner"
        schema:
          type: string
      - in: query
        name: "FK_CONTACT_A"
        description: "ID du contact Admin"
        schema:
          type: string
      - in: query
        name: "FK_CONTACT_B"
        description: "ID du contact Billing"
        schema:
          type: string
      - in: query
        name: "FK_CONTACT_T"
        description: "ID du contact Technique"
        schema:
          type: string
      - in: query
        name: "S_DNS_1"
        description: "Adresse du serveur DNS 1"
        schema:
          type: string
      - in: query
        name: "S_DNS_2"
        description: "Adresse du serveur DNS 2"
        schema:
          type: string
      - in: query
        name: "S_IP"
        description: "Adresse IP de pointage DNS"
        schema:
          type: string
      - in: query
        name: "S_AUTH"
        description: "Code AUTH de transfert"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/pack/info:
    get:
      tags:
      - "Domaines"
      summary: "Récuperation des infos du pack domaine d'un client"
      operationId: "domainPackInfo"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/transfer/list:
    get:
      tags:
      - "Domaines"
      summary: "Récupération de la liste des transferts de domaine"
      operationId: "domainTransferList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/dns/update:
    post:
      tags:
      - "Domaines"
      summary: "Modifier les serveurs DNS d'un nom de domaine."
      operationId: "domainDnsUpdate"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_DOMAINE"
        description: "Nom de domaine"
        schema:
          type: string
      - in: query
        name: "S_DNS_1"
        description: "Adresse du serveur DNS 1"
        schema:
          type: string
      - in: query
        name: "S_DNS_2"
        description: "Adresse du serveur DNS 2"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/dns/add:
    post:
      tags:
      - "Domaines"
      summary: "Ajout d'un domaine sur le serveur DNS"
      operationId: "domainDnsAdd"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_DOMAINE"
        description: "Nom de domaine"
        schema:
          type: string
      - in: query
        name: "S_IP"
        description: "Adresse ip de pointage"
        schema:
          type: string
      - in: query
        name: "MUTUK8S"
        description: "Pour l'hébergement mutualisé kubernetes"
        schema:
          type: integer
          enum: [0,1]
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/lock/update:
    post:
      tags:
      - "Domaines"
      summary: "Verrouillage/Déverrouillage le transfert d'un nom de domaine."
      operationId: "domainLockUpdate"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_DOMAINE"
        description: "Nom de domaine"
        schema:
          type: string
      - in: query
        name: "S_STATUS"
        description: "Statut du domaine"
        schema:
          type: string
          enum: [lock,unlock]
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/dns-zone/list:
    get:
      tags:
      - "Domaines"
      summary: "Recupération de la liste des domaines sur le serveur DNS"
      operationId: "domainDnsZoneList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/extension/list:
    get:
      tags:
      - "Domaines"
      summary: "Recupération de la liste des extentions disponible"
      operationId: "domainExtensionList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/reverse-dns:
    get:
      tags:
      - "Domaines"
      summary: "Recupération du reverse DNS d'une adresse IP"
      operationId: "domainReverseDns"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_IP"
        description: "Adresse IP"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/reverse-dns/delete:
    delete:
      tags:
      - "Domaines"
      summary: "Suppression du reverse DNS d'une adresse IP"
      operationId: "domainReverseDnsDelete"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_IP"
        description: "Adresse IP"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /domain/reverse-dns/create:
    post:
      tags:
      - "Domaines"
      summary: "Création du reverse DNS d'une adresse IP"
      operationId: "domainReverseDnsCreate"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_IP"
        description: "Adresse IP"
        schema:
          type: string
      - in: query
        name: "S_HOSTNAME"
        description: "Le nom d'hôte DNS"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
          
  /hosting/list:
    get:
      tags:
      - "Hébergements"
      summary: "Récupération de la liste des hébergements du client"
      operationId: "hostingList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /hosting/info:
    get:
      tags:
      - "Hébergements"
      summary: "Récupération des détails d'un hébergement"
      operationId: "hostingInfo"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "PK_HEBERGEMENT"
        description: "Identifiant de l'hébergement"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
          
  /ssl/list:
    get:
      tags:
      - "Certificats SSL"
      summary: "Récupération de la liste des Certificats SSL d'un client"
      operationId: "sslList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /ssl/info:
    get:
      tags:
      - "Certificats SSL"
      summary: "Récupération des détails d'un Certificat SSL"
      operationId: "sslInfo"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "FK_SSL"
        description: "Identifiant du certificat SSL"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
          
  /server/list:
    get:
      tags:
      - "Serveurs"
      summary: "Récupération de la liste des serveurs & VPS d'un client"
      operationId: "serverList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /server/info:
    get:
      tags:
      - "Serveurs"
      summary: "Récupération des détails d'un serveur"
      operationId: "serverInfo"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_TYPE"
        description: "Type de serveur"
        schema:
          type: string
          enum: [SERVEUR,VPS]
      - in: query
        name: "PK_SERVEUR"
        description: "Identifiant serveur pour le type SERVEUR"
        schema:
          type: integer
      - in: query
        name: "PK_VPS"
        description: "Identifiant serveur pour le type VPS"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /server/dedicated/disable:
    post:
      tags:
      - "Serveurs"
      summary: "Suspension un serveur dédié"
      operationId: "serverDedicatedDisable"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "PK_SERVEUR"
        description: "Identifiant serveur"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /server/vps/reinstall:
    post:
      tags:
      - "Serveurs"
      summary: "Réinstallation d'un serveur VPS"
      operationId: "serverVpsReinstall"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_DEPCODE"
        description: "DEPCODE"
        schema:
          type: string
      - in: query
        name: "S_TYPE_TEMPLATE"
        description: "Nom du template"
        schema:
          type: string
      - in: query
        name: "PK_VPS"
        description: "Identifiant du VPS"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /server/vps/reboot:
    post:
      tags:
      - "Serveurs"
      summary: "Redémarrage d'un serveur VPS"
      operationId: "serverVpsReboot"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "S_COMMENTAIRES"
        description: "Raison du reboot"
        schema:
          type: string
      - in: query
        name: "PK_VPS"
        description: "Identifiant du VPS"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /server/vps/reboot/history:
    get:
      tags:
      - "Serveurs"
      summary: "Récupération des détails d'un Certificat SSL"
      operationId: "serverVpsRebootHistory"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "FK_VPS"
        description: "Identifiant du VPS"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /server/vps/disable:
    post:
      tags:
      - "Serveurs"
      summary: "Suspension d'un serveur VPS"
      operationId: "serverVpsDisable"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "PK_VPS"
        description: "Identifiant du VPS"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
          
  /hdrive/list:
    get:
      tags:
      - "HDrive"
      summary: "Récupération de la liste des service HDrive d'un client"
      operationId: "hdriveList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
          
  /vdi/list:
    get:
      tags:
      - "VDI"
      summary: "Récupération de la liste des VDI d'un client"
      operationId: "vdiList"
      parameters:
      - $ref: '#/components/parameters/site'
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /vdi/info:
    get:
      tags:
      - "VDI"
      summary: "Récupération desd étails d'un VDI"
      operationId: "vdiInfo"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "PK_VDI"
        description: "Identifiant du VDI"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /vdi/disable:
    post:
      tags:
      - "VDI"
      summary: "Suspension d'un VDI"
      operationId: "vdiDisable"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "PK_VDI"
        description: "Identifiant du VDI"
        schema:
          type: integer
      - in: query
        name: "PK_VPS"
        description: "Identifiant du VPS"
        schema:
          type: integer
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
  /vdi/reboot:
    post:
      tags:
      - "VDI"
      summary: "Redémarrage d'un VDI"
      operationId: "vdiReboot"
      parameters:
      - $ref: '#/components/parameters/site'
      - in: query
        name: "PK_VDI"
        description: "Identifiant du VDI"
        schema:
          type: integer
      - in: query
        name: "S_COMMENTAIRES"
        description: "Raison du redémarrage"
        schema:
          type: string
      responses:
        200:
          $ref: "#/components/responses/200OK"
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/405MethodNotAllowed"
components:
  securitySchemes:
    basic:
      type: http
      description: "Veuillez envoyer \"NOPASSWORD\" en guise de mot de passe dans le cas d'une authentification par clé api"
      scheme: basic
    apikey:
      type: apiKey
      in: header
      name: apikey
  parameters:  
    site:
      in: header
      name: "site"
      description: "Site distributeur"
      required: true
      schema:
        type: integer
        default: 2
  schemas:
    CommonResponse:
      type: object
      properties:
        result:
          type: integer
          description: "Code du resultat 1/0"
        error:
            type: string
            description: "Message d'erreur si result = 0"
        data:
            type: string
            description: "Tableau des données retournées si applicable"
      required:
      - result
  responses:
    200OK:
      description: Opération effectuée
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommonResponse'
    404NotFound:
      description: Commande inconnue
    405MethodNotAllowed:
      description: Methode non autorisée