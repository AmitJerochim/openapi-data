{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "API to integrate with the Moneyfarm wealth management platform",
    "version" : "0.8",
    "title" : "Moneyfarm API",
    "contact" : {
      "email" : "api-support@moneyfarm.com"
    }
  },
  "servers" : [ {
    "description" : "API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/moneyfarm/api/0.6"
  }, {
    "description" : "Moneyfarm Test",
    "url" : "https://api-test.moneyfarm.com/v0"
  }, {
    "description" : "Moneyfarm Production",
    "url" : "https://api.moneyfarm.com/v0"
  } ],
  "tags" : [ {
    "name" : "account"
  }, {
    "name" : "bank-account"
  }, {
    "name" : "direct-debit-mandate"
  }, {
    "name" : "documents"
  }, {
    "name" : "financial-details"
  }, {
    "name" : "login"
  }, {
    "name" : "onboarding"
  }, {
    "name" : "payment"
  }, {
    "name" : "portfolio"
  }, {
    "name" : "portfolio-review"
  }, {
    "name" : "product"
  }, {
    "name" : "user"
  }, {
    "name" : "investment-order"
  } ],
  "security" : [ {
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/accounts/{id}" : {
      "get" : {
        "operationId" : "getAccountById",
        "tags" : [ "account" ],
        "description" : "Get the details of an account.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The details of the specified account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/account"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/accounts/{id}/portfolios" : {
      "post" : {
        "operationId" : "createPortfolioForAccount",
        "tags" : [ "account" ],
        "description" : "Create a portfolio for an account.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/portfolio-creation-parameters"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The `id` for the new portfolio.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "portfolioId" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/accounts/{id}/recommendations" : {
      "post" : {
        "operationId" : "createPortfolioRecommendationForAccount",
        "tags" : [ "account" ],
        "description" : "Create a portfolio recommendation for an account.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "timeHorizonYears" : {
                    "type" : "integer",
                    "minimum" : 1
                  },
                  "contributionOneOffAmount" : {
                    "type" : "number"
                  },
                  "contributionMonthlyAmount" : {
                    "type" : "number"
                  },
                  "goal" : {
                    "type" : "string"
                  }
                },
                "required" : [ "timeHorizonYears", "contributionOneOffAmount", "goal" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A list of portfolios by risk level and suitability status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "recommendationId" : {
                      "type" : "string",
                      "format" : "uuid"
                    },
                    "availablePortfolios" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/available-portfolio"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/activities" : {
      "get" : {
        "operationId" : "listActivitiesForUser",
        "tags" : [ "user" ],
        "description" : "Get activities for a user.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/activity-type"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The date from which the activities list should start, this is an inclusive date range boundary.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The date to which the activities list should end, this is an inclusive date range boundary.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "portfolioId",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "metadata.type",
          "in" : "query",
          "description" : "The sub-type of the activity expressed with metadata field named type. This filter is allowed ***only if*** a value is provided for the parameter `type`. The only activity type that currently suports this filter is `cash-flow`.\n",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/cash-flow-type"
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of activities for the authenticated user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-activities"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          }
        }
      }
    },
    "/bank-accounts" : {
      "post" : {
        "operationId" : "createBankAccount",
        "tags" : [ "bank-account" ],
        "description" : "Create a bank account.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "identifier" : {
                    "oneOf" : [ {
                      "$ref" : "#/components/schemas/iban"
                    }, {
                      "$ref" : "#/components/schemas/sort-code-account-number"
                    } ],
                    "example" : {
                      "iban" : "IT60X0542811101000000123456"
                    }
                  },
                  "name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "identifier" ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The new bank account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/bank-account"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          }
        }
      },
      "get" : {
        "operationId" : "listBankAccountsForUser",
        "tags" : [ "bank-account" ],
        "description" : "Get bank accounts for a user. The bank account identifier will be returned obfuscated",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "products",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "slug"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "pending", "action-required", "validated" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of bank accounts for the authenticated user. The identifier of each bank account will be obfuscated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/bank-accounts"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          }
        }
      }
    },
    "/bank-accounts/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      } ],
      "patch" : {
        "operationId" : "renameBankAccountById",
        "tags" : [ "bank-account" ],
        "description" : "Change the friendly name of the bank account.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name" ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "example" : "My new bank account"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The updated bank account",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/bank-account"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      },
      "delete" : {
        "operationId" : "deleteBankAccountById",
        "tags" : [ "bank-account" ],
        "description" : "Delete the bank account identified by the given id.",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/direct-debit-mandates" : {
      "post" : {
        "operationId" : "createDirectDebitMandate",
        "tags" : [ "direct-debit-mandate" ],
        "description" : "Create a new draft direct debit mandate.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "bankAccountId" ],
                "properties" : {
                  "bankAccountId" : {
                    "type" : "string",
                    "format" : "uuid"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The created draft direct-debit-mandate.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/direct-debit-mandate"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      },
      "get" : {
        "operationId" : "getDirectDebitMandates",
        "tags" : [ "direct-debit-mandate" ],
        "description" : "Get a list of all direct debit mandates for the user.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/direct-debit-mandate-status"
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of direct debit mandates for the user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/direct-debit-mandates"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/direct-debit-mandates/{id}" : {
      "delete" : {
        "operationId" : "cancelDirectDebitMandate'",
        "tags" : [ "direct-debit-mandate" ],
        "description" : "Cancel a direct debit mandate.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/direct-debit-mandates/{id}/sign" : {
      "post" : {
        "operationId" : "signDirectDebitMandate",
        "tags" : [ "direct-debit-mandate" ],
        "description" : "Sign a direct debit mandate.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "signedAt", "key", "format", "proof" ],
                "properties" : {
                  "signedAt" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "fileName" : {
                    "type" : "string"
                  },
                  "format" : {
                    "type" : "string"
                  },
                  "proof" : {
                    "type" : "string",
                    "description" : "Cryptographic proof that the mandate has been signed by the end user. The proof is expected to be the hexadecimal representation of the SHA-1 hash of the concatenation of: user-id, direct-debit-mandate-id and shared secret interleaved with periods: <user-id>.<direct-debit-mandate-id>.<shared-secret>. i.e. for user-id: 7d1605f4-8fda-403b-8708-1b0857b13169 direct-debit-mandate-id: 149c862a-df74-43a7-b330-4dea77384c91 and secret: \"a-simple-shared-secret\" the expected value would be baee6fe0fa96854d3a589d31a5673cb00dc9272a."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The created draft direct-debit-mandate.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/direct-debit-mandate"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/documents" : {
      "get" : {
        "operationId" : "getDocuments",
        "tags" : [ "documents" ],
        "description" : "Returns the paginated list of user documents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/document-type"
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of documents for the specified user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/document-paginated-list"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      },
      "post" : {
        "operationId" : "createDocument",
        "tags" : [ "documents" ],
        "description" : "Create the document metadata",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/document"
                } ],
                "required" : [ "type", "filename" ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/documents/{uuid}" : {
      "parameters" : [ {
        "name" : "uuid",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      } ],
      "get" : {
        "operationId" : "getDocumentById",
        "tags" : [ "documents" ],
        "description" : "Get the document metadata",
        "responses" : {
          "200" : {
            "description" : "Get the document information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/document"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      },
      "delete" : {
        "operationId" : "deleteDocumentById",
        "tags" : [ "documents" ],
        "description" : "Delete the document identified by the given identifier and the related file (if exists). Fail if the document is not in status 'draft'.",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/documents/{uuid}/file" : {
      "parameters" : [ {
        "name" : "uuid",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      } ],
      "get" : {
        "operationId" : "getDocumentFileById",
        "tags" : [ "documents" ],
        "description" : "Download the document",
        "responses" : {
          "200" : {
            "description" : "Byte stream",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      },
      "put" : {
        "operationId" : "uploadDocumentFileById",
        "tags" : [ "documents" ],
        "description" : "Upload a new document",
        "requestBody" : {
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/financial-details" : {
      "put" : {
        "operationId" : "updateFinancialDetails",
        "tags" : [ "financial-details" ],
        "description" : "Create or update the user financial details.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/financial-details"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      },
      "get" : {
        "operationId" : "getLatestFinancialDetails",
        "tags" : [ "financial-details" ],
        "description" : "Get the latest financial details.",
        "responses" : {
          "200" : {
            "description" : "The latest financial details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/financial-details"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/investment-types" : {
      "get" : {
        "operationId" : "listAvailableInvestmentTypes",
        "tags" : [ "account" ],
        "description" : "Get a list of available investment types.",
        "responses" : {
          "200" : {
            "description" : "A list of available investment types.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "investment-types" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/investment-type"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/login/token" : {
      "post" : {
        "operationId" : "loginByPartnerToken",
        "tags" : [ "login" ],
        "description" : "Exchanges a JWT issued by a trusted partner, identifying a user on our platform, for a JWT access token that can be used to call our API's on behalf of said user",
        "responses" : {
          "200" : {
            "description" : "Moneyfarm JWT access token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/access-token-response"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/model-portfolios/{id}" : {
      "get" : {
        "operationId" : "getModelPortfolioById",
        "tags" : [ "portfolio" ],
        "description" : "Get the details of a model portfolio.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "slug"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The details of the specified model portfolio.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/model-portfolio"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/onboardings" : {
      "post" : {
        "operationId" : "onboardNewUser",
        "tags" : [ "onboarding" ],
        "description" : "Create a new user, account and portfolio. The specified `productId` will define the investment type of the account.",
        "parameters" : [ {
          "in" : "header",
          "name" : "Idempotency-Key",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "required" : false,
          "description" : "Idempotency-Key is used to safely retry requests without accidentally performing the same operation twice. When this api is called multiple times with the same (client-bound) Idempotency-Key and same exact request, this api will return the same response generated the first time that Idempotency-Key has been received. Each Idempotency-Key will expire in 24 hours after the first request. It is up to the client to guarantee the uniqueness of the idempotency key, reason for which we strongly suggest to use a V4 UUID."
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "user" : {
                    "$ref" : "#/components/schemas/user"
                  },
                  "account" : {
                    "$ref" : "#/components/schemas/account-creation-parameters"
                  },
                  "portfolio" : {
                    "$ref" : "#/components/schemas/portfolio-creation-parameters"
                  }
                },
                "required" : [ "user", "account", "portfolio" ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The status of the onboarding request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/onboarding-status"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/payment-orders" : {
      "post" : {
        "operationId" : "create payment order",
        "tags" : [ "payment" ],
        "description" : "Create a payment order.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "paymentMethod", "frequency", "amount", "destination" ],
                "properties" : {
                  "paymentMethod" : {
                    "required" : [ "type", "details" ],
                    "properties" : {
                      "type" : {
                        "$ref" : "#/components/schemas/payment-method-type"
                      },
                      "details" : {
                        "oneOf" : [ {
                          "type" : "object",
                          "required" : [ "bankAccountId" ],
                          "properties" : {
                            "bankAccountId" : {
                              "type" : "string",
                              "format" : "uuid"
                            }
                          }
                        }, {
                          "type" : "object",
                          "required" : [ "directDebitMandateId" ],
                          "properties" : {
                            "directDebitMandateId" : {
                              "type" : "string",
                              "format" : "uuid"
                            }
                          }
                        } ]
                      }
                    }
                  },
                  "frequency" : {
                    "$ref" : "#/components/schemas/payment-order-frequency"
                  },
                  "amount" : {
                    "type" : "number",
                    "format" : "decimal"
                  },
                  "destination" : {
                    "oneOf" : [ {
                      "$ref" : "#/components/schemas/payment-order-portfolio-destination"
                    }, {
                      "$ref" : "#/components/schemas/payment-order-account-destination"
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The payment order has been created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/payment-order"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          }
        }
      },
      "get" : {
        "operationId" : "listPaymentOrders",
        "tags" : [ "payment" ],
        "description" : "Get the list of payment orders.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "portfolioId",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "bankAccountId",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of payment orders for the authenticated user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/payment-orders-list"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/payment-orders/{id}" : {
      "delete" : {
        "operationId" : "deletePaymentOrder",
        "tags" : [ "payment" ],
        "description" : "Delete a payment order",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested payment order has been successfully deleted."
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/portfolios/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      } ],
      "get" : {
        "operationId" : "getPortfolioById",
        "tags" : [ "portfolio" ],
        "description" : "Get the details of a portfolio.",
        "responses" : {
          "200" : {
            "description" : "The details of the specified portfolio.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/portfolio"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      },
      "patch" : {
        "tags" : [ "portfolio" ],
        "description" : "Change portfolio information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The portfolio has been updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/portfolio"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      },
      "put" : {
        "operationId" : "updatePortoflio",
        "tags" : [ "portfolio" ],
        "deprecated" : true,
        "description" : "Change risk level of an existing portfolio",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/update-portfolio-risk-level-request"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The portfolio has been updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/portfolio"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/portfolios/{id}/recommendations/{recommendationId}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      }, {
        "name" : "recommendationId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      } ],
      "put" : {
        "operationId" : "changePortfolioRiskLevel",
        "tags" : [ "portfolio" ],
        "description" : "Change the risk level of an existing portfolio given the provided recommendation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/update-portfolio-risk-level-request"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The portfolio's risk level has been updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/accepted-recommendation"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/portfolios/{id}/historical-market-value" : {
      "get" : {
        "operationId" : "getPortfolioHistoricalMarketValue",
        "tags" : [ "portfolio" ],
        "description" : "Get the historical market value of a portfolio.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The date of the first day to include in the market value series.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The date of the last day to include in the market value series.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The historical market value of the specified portfolio.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "from" : {
                      "type" : "string"
                    },
                    "to" : {
                      "type" : "string"
                    },
                    "series" : {
                      "$ref" : "#/components/schemas/series"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/portfolios/{id}/historical-net-contribution" : {
      "get" : {
        "operationId" : "getPortfolioHistoricalNetContribution",
        "tags" : [ "portfolio" ],
        "description" : "Get the historical net contributions of a portfolio.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The date of the first day to include in the net contributions series.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The date of the last day to include in the net contributions series.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The historical net contributions of the specified portfolio.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "from" : {
                      "type" : "string"
                    },
                    "to" : {
                      "type" : "string"
                    },
                    "series" : {
                      "$ref" : "#/components/schemas/series"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/portfolios/{id}/historical-performance" : {
      "get" : {
        "operationId" : "getPortfolioHistoricalPerformance",
        "tags" : [ "portfolio" ],
        "description" : "Get the historical performance of a portfolio.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The method used to calculate the performance.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "time-weighted", "money-weighted" ]
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The date of the first day to include in the performance series.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The date of the last day to include in the performance series.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The historical performance of the specified portfolio.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "type" : {
                      "type" : "string"
                    },
                    "from" : {
                      "type" : "string"
                    },
                    "to" : {
                      "type" : "string"
                    },
                    "series" : {
                      "$ref" : "#/components/schemas/series"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/portfolios/{id}/recommendations" : {
      "post" : {
        "operationId" : "createNewRecommendationForPortfolio",
        "tags" : [ "portfolio" ],
        "description" : "Get a new recommendation for the portfolio.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "timeHorizonYears" : {
                    "type" : "integer",
                    "minimum" : 1
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A list of portfolios by risk level and suitability status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "recommendationId" : {
                      "type" : "string",
                      "format" : "uuid"
                    },
                    "availablePortfolios" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/available-portfolio"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/portfolio-reviews" : {
      "get" : {
        "operationId" : "listPortfolioReviewForUser",
        "tags" : [ "portfolio-review" ],
        "description" : "Get the list of the portfolio review.",
        "responses" : {
          "200" : {
            "description" : "The list of the portfolio review.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "portfolioReviews" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/portfolio-review"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/portfolio-reviews/{id}" : {
      "get" : {
        "operationId" : "getPortfolioReviewById",
        "tags" : [ "portfolio-review" ],
        "description" : "Get the portfolio review.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The portfolio review.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/portfolio-review"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "operationId" : "listAvailableProducts",
        "tags" : [ "product" ],
        "description" : "Get a list of available products.",
        "parameters" : [ {
          "name" : "legalEntityId",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "slug"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of available products.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "products" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/product"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/recommendations" : {
      "post" : {
        "operationId" : "createPortfolioRecommendation",
        "tags" : [ "portfolio" ],
        "description" : "Create a portfolio recommendation.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/risk-profile"
                }, {
                  "type" : "object"
                } ],
                "properties" : {
                  "age" : {
                    "type" : "integer"
                  },
                  "productId" : {
                    "type" : "string",
                    "format" : "slug"
                  },
                  "contributionOneOffAmount" : {
                    "type" : "number"
                  },
                  "contributionMonthlyAmount" : {
                    "type" : "number"
                  },
                  "timeHorizonYears" : {
                    "type" : "integer",
                    "minimum" : 1
                  },
                  "goal" : {
                    "$ref" : "#/components/schemas/investment-goal"
                  }
                },
                "required" : [ "age", "productId", "contributionOneOffAmount", "timeHorizonYears", "goal" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A list of portfolios by risk level and suitability status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "recommendationId" : {
                      "type" : "string",
                      "format" : "uuid"
                    },
                    "availablePortfolios" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/available-portfolio"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/simulations" : {
      "get" : {
        "operationId" : "getSimulation",
        "tags" : [ "portfolio" ],
        "description" : "Get a simulated portfolio recommendation.",
        "parameters" : [ {
          "in" : "query",
          "name" : "riskProfileScore",
          "schema" : {
            "type" : "number"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "financialExperienceScore",
          "schema" : {
            "type" : "number"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "annualSavingsPercentage",
          "schema" : {
            "type" : "number"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "totalAssets",
          "schema" : {
            "type" : "number"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "annualIncome",
          "schema" : {
            "type" : "number"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "incomeSource",
          "schema" : {
            "$ref" : "#/components/schemas/income-source"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "age",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "productId",
          "schema" : {
            "type" : "string",
            "format" : "slug"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "contributionOneOffAmount",
          "schema" : {
            "type" : "number"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "contributionMonthlyAmount",
          "schema" : {
            "type" : "number"
          },
          "required" : false
        }, {
          "in" : "query",
          "name" : "timeHorizonYears",
          "schema" : {
            "type" : "number"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "$ref" : "#/components/schemas/investment-goal"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of portfolios by risk level and suitability status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "availablePortfolios" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/available-portfolio"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "operationId" : "getUserInformation",
        "tags" : [ "user" ],
        "description" : "Get the basic details of a user.",
        "responses" : {
          "200" : {
            "description" : "The basic details of a user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-preview"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/user/documents" : {
      "get" : {
        "operationId" : "listUserDocuments",
        "tags" : [ "user" ],
        "deprecated" : true,
        "description" : "Returns the paginated list of user documents (Deprecated: use /documents instead)",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/document-type"
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of documents for the specified user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/document-paginated-list"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/user/risk-profile" : {
      "put" : {
        "operationId" : "updateUserRiskProfile",
        "tags" : [ "user" ],
        "description" : "The risk profile of a user.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/risk-profile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          }
        }
      }
    },
    "/user/sign-document" : {
      "post" : {
        "operationId" : "signDocument",
        "tags" : [ "user" ],
        "description" : "Digitally sign a document",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/sign-document-request"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "404" : {
            "$ref" : "#/components/responses/not-found"
          }
        }
      }
    },
    "/investment-orders" : {
      "post" : {
        "operationId" : "createInvestmentOrder",
        "tags" : [ "investment-order" ],
        "description" : "Create an investment order.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/investment-order-request"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/investment-order"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorised"
          },
          "400" : {
            "$ref" : "#/components/responses/bad-request"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "responses" : {
      "bad-request" : {
        "description" : "The server cannot or will not process the request due to something that is perceived to be a client error.",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error"
            }
          }
        }
      },
      "not-found" : {
        "description" : "The specified resource was not found.",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error"
            }
          }
        }
      },
      "unauthorised" : {
        "description" : "Authorisation information is missing or invalid.",
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error"
            }
          }
        }
      },
      "redirect-found" : {
        "description" : "Redirect to temporary url to download the document",
        "headers" : {
          "Location" : {
            "schema" : {
              "type" : "string"
            },
            "description" : "Contains the url where it should redirect to"
          }
        }
      }
    },
    "parameters" : {
      "complex-filter" : {
        "in" : "query",
        "name" : "complex-filter",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "description" : "Endpoints which include this paramter support a more complex way to filter the results using the so called RHS colon syntax.  The general form of a query expressed with this syntax is: `<field>=<operator>:<value>` e.g. `?date=lt:2020-01-01`. We currently support the following operators:\n  * lt:  less than\n  * lte: less than or equal          \n  * gt:  greater\n  * gte: greater than or equal\n\nWe do not support any additional operator for equality or presence in a set as they can be better expressed using the usual query parameter syntax, e.g.\n  * ?date=2020-01-01\n  * ?type=cash-flow,trade\n\nWhen supported, such filters can be allowed both if they apply on a flat object or on nested objects. On an object defined as:\n  {\n    \"date\": \"2020-01-01\",\n    \"range\": {\n      \"start\": 0,\n      \"end\": 100\n    }\n  }\nA valid request may be:\n  * ?date=gt:2019-09-12&date:lte=2020-12-31&range.start=0&range.end=gte:50\n"
      },
      "page" : {
        "in" : "query",
        "name" : "page",
        "required" : false,
        "schema" : {
          "type" : "integer"
        },
        "description" : "Page number 0-index"
      },
      "page-size" : {
        "in" : "query",
        "name" : "pageSize",
        "required" : false,
        "schema" : {
          "type" : "integer"
        },
        "description" : "The number of items per page"
      },
      "sort" : {
        "in" : "query",
        "name" : "sort",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "description" : "Sort order:\n  * `field:asc` - Ascending field, from A to Z\n  * `field:desc` - Descending field, from Z to A\n"
      },
      "document-type" : {
        "in" : "query",
        "name" : "type",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "description" : "The type of the document"
      }
    },
    "schemas" : {
      "activity-type" : {
        "type" : "string",
        "enum" : [ "cash-flow", "trade" ]
      },
      "access-token-response" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "description" : "JWT token, base64 encoded"
          },
          "expiresIn" : {
            "type" : "number",
            "description" : "duration of time the token is valid for"
          },
          "tokenType" : {
            "type" : "string",
            "description" : "type of token returned. Should always be Bearer"
          }
        }
      },
      "account" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currency" : {
            "type" : "string",
            "format" : "ISO-4217"
          },
          "product" : {
            "$ref" : "#/components/schemas/product"
          },
          "investmentType" : {
            "$ref" : "#/components/schemas/investment-type"
          },
          "portfolios" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/portfolio-preview"
            }
          }
        }
      },
      "account-creation-parameters" : {
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "string",
            "format" : "slug"
          },
          "legalEntityId" : {
            "type" : "string",
            "format" : "slug"
          },
          "currency" : {
            "type" : "string",
            "format" : "ISO-4217"
          }
        },
        "required" : [ "productId", "legalEntityId", "currency" ]
      },
      "account-preview" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currency" : {
            "type" : "string",
            "format" : "ISO-4217"
          },
          "investmentType" : {
            "$ref" : "#/components/schemas/investment-type"
          }
        }
      },
      "account-statement" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "period" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "version" : {
            "type" : "number"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "activity" : {
        "type" : "object",
        "required" : [ "type", "date", "accountId", "metadata" ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/activity-type"
          },
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "portfolioId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "metadata" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/cash-flow"
            }, {
              "$ref" : "#/components/schemas/trade"
            } ]
          }
        }
      },
      "address" : {
        "type" : "object",
        "required" : [ "type", "addressLine1", "country", "geographicRegion", "city", "postcode" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "residence" ]
          },
          "addressLine1" : {
            "type" : "string"
          },
          "addressLine2" : {
            "type" : "string"
          },
          "addressLine3" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "geographicRegion" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "format" : "ISO-3166"
          },
          "postcode" : {
            "type" : "string"
          }
        }
      },
      "available-portfolio" : {
        "type" : "object",
        "properties" : {
          "riskLevel" : {
            "type" : "integer"
          },
          "status" : {
            "$ref" : "#/components/schemas/suitability-status"
          },
          "modelPortfolioId" : {
            "type" : "string",
            "format" : "slug"
          }
        }
      },
      "bank-accounts" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/pagination"
        } ],
        "required" : [ "items" ],
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/bank-account"
            }
          }
        }
      },
      "bank-account" : {
        "required" : [ "id", "identifier", "name", "status", "products" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/iban"
            }, {
              "$ref" : "#/components/schemas/sort-code-account-number"
            } ],
            "example" : {
              "iban" : "IT60X0542811101000000123456"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "pending", "action-required", "validated" ]
          },
          "products" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "slug",
              "example" : "gia-advisory"
            }
          }
        }
      },
      "birth-place" : {
        "type" : "object",
        "required" : [ "country", "city" ],
        "properties" : {
          "country" : {
            "type" : "string",
            "format" : "ISO-3166"
          },
          "geographicRegion" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          }
        }
      },
      "business-address" : {
        "type" : "object",
        "required" : [ "addressLine1", "city", "postcode" ],
        "properties" : {
          "addressLine" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "postcode" : {
            "type" : "string"
          }
        },
        "example" : {
          "addressLine" : "Via Largo Carlo Felice 26",
          "city" : "Cagliari",
          "postcode" : "09124"
        }
      },
      "cash-flow-type" : {
        "type" : "string",
        "enum" : [ "deposit", "investment", "withdrawal", "disinvestment", "dividend", "fee", "capital-gain-tax", "stamp-duty-tax", "dividend-tax", "fee-refund", "capital-gain-tax-refund", "stamp-duty-tax-refund", "dividend-tax-refund" ]
      },
      "cash-flow" : {
        "type" : "object",
        "required" : [ "type", "date", "valueDate", "currency", "amount" ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/cash-flow-type"
          },
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "valueDate" : {
            "type" : "string",
            "format" : "date"
          },
          "currency" : {
            "type" : "string",
            "format" : "ISO-4217"
          },
          "amount" : {
            "type" : "number"
          },
          "isin" : {
            "type" : "string"
          },
          "instrumentName" : {
            "type" : "string"
          }
        }
      },
      "contact-details" : {
        "type" : "object",
        "required" : [ "email", "phoneNumber" ],
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "phoneNumber" : {
            "type" : "string",
            "format" : "E.164",
            "pattern" : "^\\\\+?[1-9]\\\\d{1,14}$"
          }
        }
      },
      "currency" : {
        "type" : "string",
        "enum" : [ "eur", "gbp" ]
      },
      "direct-debit-mandate-status" : {
        "type" : "string",
        "enum" : [ "pending", "validating", "active", "canceled" ]
      },
      "direct-debit-mandates" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/pagination"
        } ],
        "required" : [ "items" ],
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/direct-debit-mandate"
            }
          }
        }
      },
      "direct-debit-mandate" : {
        "type" : "object",
        "required" : [ "id", "status", "type", "contract", "debtor", "creditor" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "status" : {
            "$ref" : "#/components/schemas/direct-debit-mandate-status"
          },
          "debtor" : {
            "type" : "object",
            "required" : [ "fullName", "bankAccount" ],
            "properties" : {
              "fullName" : {
                "type" : "string",
                "example" : "Mario Rossi"
              },
              "bankAccount" : {
                "type" : "object",
                "required" : [ "id", "identifier" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "identifier" : {
                    "oneOf" : [ {
                      "$ref" : "#/components/schemas/iban"
                    }, {
                      "$ref" : "#/components/schemas/sort-code-account-number"
                    } ],
                    "example" : {
                      "iban" : "IT60X0542811101000000123456"
                    }
                  }
                }
              }
            }
          },
          "creditor" : {
            "type" : "object",
            "required" : [ "businessName", "address", "creditorId", "bankAccount" ],
            "properties" : {
              "businessName" : {
                "type" : "string",
                "example" : "MFM Investment LTD – Italian Branch"
              },
              "address" : {
                "$ref" : "#/components/schemas/business-address"
              },
              "creditorIdentifier" : {
                "type" : "string",
                "example" : "IT12H021234563682189892"
              },
              "bankAccount" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/iban"
                }, {
                  "$ref" : "#/components/schemas/sort-code-account-number"
                } ],
                "example" : {
                  "iban" : "IT60X0542811101000000654321"
                }
              }
            }
          },
          "contract" : {
            "$ref" : "#/components/schemas/contract"
          }
        }
      },
      "contract" : {
        "type" : "object",
        "required" : [ "id", "type", "status", "file" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "direct-debit-mandate", "terms-and-conditions" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "not-signed", "signed" ]
          },
          "file" : {
            "type" : "object",
            "required" : [ "reference" ],
            "properties" : {
              "reference" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/internal-file"
                }, {
                  "$ref" : "#/components/schemas/external-file"
                } ]
              },
              "filename" : {
                "type" : "string"
              }
            },
            "example" : {
              "reference" : {
                "documentId" : "abc",
                "filename" : "dd-mandate-contract-1.pdf"
              }
            }
          },
          "signedFile" : {
            "type" : "object",
            "required" : [ "reference" ],
            "properties" : {
              "reference" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/internal-file"
                }, {
                  "$ref" : "#/components/schemas/external-file"
                } ]
              },
              "signedAt" : {
                "type" : "string",
                "format" : "date-time"
              }
            },
            "example" : {
              "reference" : {
                "externalSystem" : "poste",
                "key" : "file.pdf",
                "format" : "pdf"
              },
              "signedAt" : "2020-01-01 19:56:12"
            }
          }
        }
      },
      "internal-file" : {
        "type" : "object",
        "required" : [ "documentId", "filename" ],
        "properties" : {
          "documentId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "filename" : {
            "type" : "string"
          }
        }
      },
      "external-file" : {
        "type" : "object",
        "required" : [ "externalSystem", "key", "format" ],
        "properties" : {
          "externalSystem" : {
            "type" : "string",
            "enum" : [ "poste" ]
          },
          "key" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string",
            "enum" : [ "pdf" ]
          }
        }
      },
      "document" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "meta" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/account-statement"
            }, {
              "$ref" : "#/components/schemas/invoice"
            } ]
          }
        }
      },
      "document-paginated-list" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/pagination"
        } ],
        "required" : [ "items" ],
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/document"
            }
          }
        }
      },
      "document-details" : {
        "type" : "object",
        "required" : [ "type", "number" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "identity-card", "passport", "driving-license" ]
          },
          "number" : {
            "type" : "string"
          },
          "placeOfIssue" : {
            "type" : "string"
          },
          "issuer" : {
            "type" : "string",
            "enum" : [ "municipality", "vehicle-registration-department", "police-headquarter" ]
          },
          "issuingDate" : {
            "type" : "string",
            "format" : "date"
          },
          "expirationDate" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "document-type" : {
        "type" : "string",
        "format" : "slug",
        "enum" : [ "discretionary-mandate-contract" ]
      },
      "error" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "A URI reference [RFC3986] that identifies the problem type."
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type."
          },
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "A human-readable explanation specific to this occurrence of the problem."
          },
          "instance" : {
            "type" : "string",
            "description" : "A URI reference that identifies the specific occurrence of the problem.  It may or may not yield further information if dereferenced."
          }
        },
        "required" : [ "type", "title" ]
      },
      "file" : {
        "type" : "object",
        "required" : [ "url", "filename", "tags", "md5" ],
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "contract", "fea", "mf", "privacy", "aml", "id-card", "fiscal-code", "passport", "driving-license", "front", "back" ]
            }
          },
          "md5" : {
            "type" : "string",
            "description" : "MD5 hash of the file."
          }
        }
      },
      "financial-condition" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/question-and-answer"
        }
      },
      "financial-details" : {
        "type" : "object",
        "required" : [ "status", "financialInstruments", "pensions", "bankAccounts", "insurancePolicies", "savingAccounts", "documents" ],
        "properties" : {
          "version" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "draft", "confirmed", "completed" ]
          },
          "financialInstruments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/financial-details-instrument"
            }
          },
          "pensions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/financial-details-pension"
            }
          },
          "bankAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/financial-details-bank-account"
            }
          },
          "insurancePolicies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/financial-details-insurance-policy"
            }
          },
          "savingAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/financial-details-saving-account"
            }
          },
          "additionalInformation" : {
            "type" : "object",
            "properties" : {
              "notes" : {
                "type" : "string"
              }
            }
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/financial-details-attachment"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "financial-details-attachment" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "filename" : {
            "type" : "string"
          }
        }
      },
      "financial-details-bank-account" : {
        "type" : "object",
        "properties" : {
          "bankName" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          }
        }
      },
      "financial-details-instrument" : {
        "type" : "object",
        "properties" : {
          "isin" : {
            "type" : "string",
            "example" : "US0378331005"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "fund", "bond", "stock", "certificate", "etf" ]
          },
          "quantity" : {
            "type" : "integer"
          },
          "price" : {
            "type" : "number"
          }
        }
      },
      "financial-details-insurance-policy" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          }
        }
      },
      "financial-details-pension" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          }
        }
      },
      "financial-details-saving-account" : {
        "type" : "object",
        "properties" : {
          "bankName" : {
            "type" : "string"
          },
          "investedAmount" : {
            "type" : "number"
          },
          "interestRate" : {
            "type" : "number"
          },
          "expirationDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "required" : [ "bankName", "investedAmount", "interestRate" ]
      },
      "financial-experience" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/question-and-answer"
        }
      },
      "iban" : {
        "properties" : {
          "iban" : {
            "type" : "string",
            "example" : "IT60X*****************3456"
          }
        }
      },
      "identifier" : {
        "type" : "object",
        "required" : [ "country", "identifierType", "identifierValue" ],
        "properties" : {
          "country" : {
            "type" : "string",
            "format" : "ISO-3166"
          },
          "identifierType" : {
            "type" : "string"
          },
          "identifierValue" : {
            "type" : "string"
          }
        }
      },
      "income-source" : {
        "type" : "string",
        "enum" : [ "pension", "full-time", "investments", "self-employed" ]
      },
      "instrument" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "isin" : {
            "type" : "string"
          },
          "assetClassId" : {
            "type" : "string"
          }
        }
      },
      "investment-goal" : {
        "type" : "string",
        "enum" : [ "large-purchase", "grow-wealth", "just-in-case", "beat-inflation", "retirement" ]
      },
      "investment-type" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "slug"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "invoice" : {
        "type" : "object",
        "properties" : {
          "invoiceId" : {
            "type" : "number"
          },
          "number" : {
            "type" : "string"
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date"
          },
          "beginPeriod" : {
            "type" : "string",
            "format" : "date"
          },
          "endPeriod" : {
            "type" : "string",
            "format" : "date"
          },
          "amount" : {
            "type" : "number"
          }
        }
      },
      "model-portfolio" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "slug"
          },
          "riskLevel" : {
            "type" : "integer"
          },
          "complexityLevel" : {
            "type" : "integer"
          },
          "assetClasses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/portfolio-asset-class"
            }
          },
          "instruments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/instrument"
            }
          },
          "expectedPerformance" : {
            "type" : "object",
            "properties" : {
              "mean" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "year" : {
                      "type" : "integer"
                    },
                    "expectedValue" : {
                      "type" : "number"
                    }
                  }
                }
              },
              "perc0025" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "year" : {
                      "type" : "integer"
                    },
                    "expectedValue" : {
                      "type" : "number"
                    }
                  }
                }
              },
              "perc0975" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "year" : {
                      "type" : "integer"
                    },
                    "expectedValue" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          },
          "historicalPerformance" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "date" : {
                  "type" : "string",
                  "format" : "date"
                },
                "performance" : {
                  "type" : "number"
                }
              }
            }
          }
        }
      },
      "onboarding-status" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "new", "in-progress", "done", "failed" ]
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "user" : {
            "$ref" : "#/components/schemas/status"
          },
          "account" : {
            "$ref" : "#/components/schemas/status"
          },
          "portfolio" : {
            "$ref" : "#/components/schemas/status"
          }
        }
      },
      "pagination" : {
        "type" : "object",
        "required" : [ "items", "page", "pageSize", "totalItems" ],
        "properties" : {
          "page" : {
            "type" : "number"
          },
          "pageSize" : {
            "type" : "number"
          },
          "totalItems" : {
            "type" : "number"
          }
        }
      },
      "personal-details" : {
        "type" : "object",
        "required" : [ "firstName", "lastName", "dateOfBirth", "gender", "birthPlace", "politicallyExposedPerson", "occupation", "economicActivityType", "originOfAssets" ],
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date"
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "female", "male" ]
          },
          "birthPlace" : {
            "$ref" : "#/components/schemas/birth-place"
          },
          "politicallyExposedPerson" : {
            "type" : "boolean"
          },
          "occupation" : {
            "type" : "string",
            "description" : "Use `/occupations` to get permitted values."
          },
          "economicActivityType" : {
            "type" : "string",
            "description" : "Use `/economic-activity-types` to get permitted values."
          },
          "originOfAssets" : {
            "type" : "string",
            "enum" : [ "savings-from-income", "inheritance-or-donation", "sale-of-goods", "other" ]
          }
        }
      },
      "payment-method-type" : {
        "type" : "string",
        "enum" : [ "direct-debit", "psd2", "bank-transfer" ]
      },
      "payment-order" : {
        "type" : "object",
        "required" : [ "id", "paymentMethod", "frequency", "amount", "currency", "status", "destination" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "paymentMethod" : {
            "$ref" : "#/components/schemas/payment-method"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/payment-order-frequency"
          },
          "amount" : {
            "type" : "number",
            "format" : "decimal"
          },
          "currency" : {
            "$ref" : "#/components/schemas/currency"
          },
          "status" : {
            "$ref" : "#/components/schemas/payment-order-status"
          },
          "destination" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/payment-order-portfolio-destination"
            }, {
              "$ref" : "#/components/schemas/payment-order-account-destination"
            } ]
          }
        }
      },
      "payment-method" : {
        "type" : "object",
        "required" : [ "type", "details" ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/payment-method-type"
          },
          "details" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/payment-method-details-psd2"
            }, {
              "$ref" : "#/components/schemas/payment-method-details-direct-debit"
            } ]
          }
        }
      },
      "payment-method-details-psd2" : {
        "type" : "object",
        "required" : [ "bankAccountId", "authorisationUrl" ],
        "properties" : {
          "bankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "authorisationUrl" : {
            "type" : "string",
            "format" : "url"
          }
        }
      },
      "payment-method-details-direct-debit" : {
        "type" : "object",
        "required" : [ "bankAccountId", "directDebitMandateId" ],
        "properties" : {
          "bankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "directDebitMandateId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "payment-order-frequency" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "monthly", "one-off" ]
          },
          "day" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 28
          }
        }
      },
      "payment-order-status" : {
        "type" : "string",
        "enum" : [ "draft", "authorized", "confirmed", "accepted", "completed", "cancelled" ]
      },
      "payment-order-account-destination" : {
        "type" : "object",
        "required" : [ "accountId" ],
        "properties" : {
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "payment-order-portfolio-destination" : {
        "type" : "object",
        "required" : [ "portfolioId" ],
        "properties" : {
          "portfolioId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "payment-orders-list" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/pagination"
        } ],
        "required" : [ "items" ],
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/payment-order"
            }
          }
        }
      },
      "portfolio" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "modelPortfolioId" : {
            "type" : "string",
            "format" : "slug"
          },
          "account" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid"
              },
              "investmentType" : {
                "type" : "string",
                "format" : "slug"
              },
              "currency" : {
                "type" : "string",
                "format" : "ISO-4217"
              }
            }
          },
          "recommendation" : {
            "$ref" : "#/components/schemas/accepted-recommendation"
          },
          "timeHorizonYears" : {
            "type" : "number",
            "description" : "The difference between the recommendation time horizon and the number of years that have elapsed since the recommendation."
          },
          "suitabilityStatus" : {
            "description" : "The current suitability status of the portfolio",
            "allOf" : [ {
              "$ref" : "#/components/schemas/suitability-status"
            } ]
          },
          "marketValue" : {
            "type" : "number"
          },
          "cash" : {
            "type" : "number"
          },
          "netContribution" : {
            "type" : "number"
          },
          "timeWeightedPerformance" : {
            "type" : "number"
          },
          "moneyWeightedPerformance" : {
            "type" : "number"
          },
          "assetClasses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/portfolio-asset-class"
            }
          },
          "holdings" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "instrument" : {
                  "$ref" : "#/components/schemas/instrument"
                },
                "quantity" : {
                  "type" : "integer"
                },
                "price" : {
                  "type" : "number"
                },
                "marketValue" : {
                  "type" : "number"
                },
                "volumeWeightedAveragePrice" : {
                  "type" : "number"
                },
                "performance" : {
                  "type" : "number"
                }
              }
            }
          },
          "status" : {
            "type" : "string",
            "format" : "slug",
            "enum" : [ "active", "inactive" ]
          }
        }
      },
      "portfolio-asset-class" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "number"
          }
        }
      },
      "portfolio-creation-parameters" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "recommendationId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "riskLevel" : {
            "type" : "integer"
          }
        },
        "required" : [ "name", "recommendationId", "riskLevel" ]
      },
      "portfolio-preview" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "timeHorizonYears" : {
            "type" : "number",
            "description" : "The difference between the recommendation time horizon and the number of years that have elapsed since the recommendation."
          },
          "riskLevel" : {
            "type" : "integer",
            "description" : "The risk level of the model portfolio selected when the recommendation has been accepted"
          },
          "suitabilityStatus" : {
            "description" : "The current suitability status of the portfolio",
            "allOf" : [ {
              "$ref" : "#/components/schemas/suitability-status"
            } ]
          },
          "marketValue" : {
            "type" : "number"
          },
          "netContribution" : {
            "type" : "number"
          },
          "timeWeightedPerformance" : {
            "type" : "number"
          },
          "moneyWeightedPerformance" : {
            "type" : "number"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "active", "inactive" ]
          }
        }
      },
      "portfolio-review" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "reportUrl" : {
            "type" : "string"
          },
          "financialDetails" : {
            "$ref" : "#/components/schemas/financial-details"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "product" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "slug"
          },
          "name" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "format" : "ISO-4217"
          },
          "legalEntityId" : {
            "type" : "string",
            "format" : "slug"
          }
        }
      },
      "question-and-answer" : {
        "type" : "object",
        "properties" : {
          "questionSlug" : {
            "type" : "string",
            "format" : "slug"
          },
          "answerSlug" : {
            "type" : "string",
            "format" : "slug"
          }
        }
      },
      "risk-attitude" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/question-and-answer"
        }
      },
      "accepted-recommendation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "timeHorizonYears" : {
            "type" : "integer",
            "description" : "The time horizon in years selected to obtain the recommendation"
          },
          "riskLevel" : {
            "type" : "integer",
            "description" : "The risk level of the model portfolio selected when the recommendation has been accepted"
          },
          "suitabilityStatus" : {
            "description" : "The suitability status of the model portfolio selected when the recommendation has been accepted",
            "allOf" : [ {
              "$ref" : "#/components/schemas/suitability-status"
            } ]
          }
        }
      },
      "risk-profile" : {
        "type" : "object",
        "properties" : {
          "riskProfileScore" : {
            "type" : "number"
          },
          "financialExperienceScore" : {
            "type" : "number"
          },
          "annualSavingsPercentage" : {
            "type" : "number"
          },
          "totalAssets" : {
            "type" : "number"
          },
          "annualIncome" : {
            "type" : "number"
          },
          "incomeSource" : {
            "$ref" : "#/components/schemas/income-source"
          }
        },
        "required" : [ "riskProfileScore", "financialExperienceScore", "annualSavingsPercentage", "totalAssets", "annualIncome", "incomeSource" ]
      },
      "series" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "date" : {
              "type" : "string"
            },
            "value" : {
              "type" : "number"
            }
          }
        }
      },
      "sign-document-request" : {
        "type" : "object",
        "required" : [ "documentUrl", "otp", "documentType" ],
        "properties" : {
          "documentUrl" : {
            "type" : "string",
            "format" : "url"
          },
          "otp" : {
            "type" : "string"
          },
          "documentType" : {
            "$ref" : "#/components/schemas/document-type"
          }
        }
      },
      "sort-code-account-number" : {
        "properties" : {
          "sortCode" : {
            "type" : "string",
            "example" : "4**7*4"
          },
          "accountNumber" : {
            "type" : "string",
            "example" : "7**7***0"
          }
        }
      },
      "status" : {
        "type" : "object",
        "required" : [ "status" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "new", "in-progress", "done", "failed" ]
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "suitability-status" : {
        "type" : "string",
        "format" : "slug",
        "enum" : [ "unsuitable-conservative", "suitable-conservative", "suitable-lower-risk", "suitable-recommended-risk", "suitable-higher-risk", "suitable-aggressive", "unsuitable-aggressive" ]
      },
      "trade" : {
        "type" : "object",
        "required" : [ "date", "valueDate", "currency", "side", "quantity", "isin", "price", "amount", "instrumentName" ],
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "valueDate" : {
            "type" : "string",
            "format" : "date"
          },
          "currency" : {
            "type" : "string",
            "format" : "ISO-4217"
          },
          "side" : {
            "type" : "string",
            "enum" : [ "buy", "sell" ]
          },
          "quantity" : {
            "type" : "number"
          },
          "isin" : {
            "type" : "string"
          },
          "instrumentName" : {
            "type" : "string"
          },
          "price" : {
            "type" : "number"
          },
          "amount" : {
            "type" : "number"
          }
        }
      },
      "update-portfolio-risk-level-request" : {
        "type" : "object",
        "required" : [ "riskLevel" ],
        "properties" : {
          "riskLevel" : {
            "type" : "number"
          }
        }
      },
      "user" : {
        "type" : "object",
        "properties" : {
          "personalDetails" : {
            "$ref" : "#/components/schemas/personal-details"
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/address"
            }
          },
          "contacts" : {
            "$ref" : "#/components/schemas/contact-details"
          },
          "nationalIdentifiers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/identifier"
            }
          },
          "taxResidence" : {
            "$ref" : "#/components/schemas/identifier"
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/file"
            }
          },
          "documentDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/document-details"
            }
          },
          "financialExperience" : {
            "$ref" : "#/components/schemas/financial-experience"
          },
          "financialCondition" : {
            "$ref" : "#/components/schemas/financial-condition"
          },
          "riskAttitude" : {
            "$ref" : "#/components/schemas/risk-attitude"
          },
          "externalId" : {
            "type" : "string"
          }
        }
      },
      "user-activities" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/pagination"
        } ],
        "required" : [ "items" ],
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/activity"
            }
          }
        }
      },
      "user-preview" : {
        "type" : "object",
        "required" : [ "firstName", "lastName", "accounts" ],
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "accounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/account-preview"
            }
          },
          "externalId" : {
            "type" : "string"
          }
        }
      },
      "investment-frequency" : {
        "type" : "object",
        "required" : [ "type", "day" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "montly" ]
          },
          "day" : {
            "type" : "number",
            "minimum" : 1,
            "maximum" : 28
          }
        }
      },
      "investment-order-request" : {
        "type" : "object",
        "required" : [ "destination", "amount", "frequency" ],
        "properties" : {
          "destination" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/investment-frequency"
          }
        }
      },
      "investment-order" : {
        "type" : "object",
        "required" : [ "id", "destination", "amount", "active", "frequency" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "destination" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "active" : {
            "type" : "boolean"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/investment-frequency"
          }
        }
      }
    }
  }
}