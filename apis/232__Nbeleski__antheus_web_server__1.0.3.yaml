penapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: Antheus Match Server API
    url: ./swagger
info:
  description: API de acesso as funcionalidade do match server
  version: "1.0.3"
  title: Antheus Match Server API
  contact:
    email: nicolas@antheus.com
  # license:
  #   name: Apache 2.0
  #   url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
#tags:
#  - name: usuarios
#    description: operações disponíveis
paths:
  /request:
    post:
      tags:
        - Operações de Requisição
      summary: Cria uma requisição para o match server.
      operationId: make_request
      description: Envia uma requisição ao match server à partir de um conjunto de templates (por exemplo extraídos utilizando /extract_features).
      responses:
        '200':
          description: Requisição criada.
          content: 
            text/html:
              schema:
                type: string
                example: '001'
                description: 'ID da requisição criada'
        '400':
          description: Objeto json invalido ou com chaves faltantes.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input_make_request'
        description: Envio de requisição
    get:
      tags:
        - Operações de Requisição
      summary: Pega a lista de requisições.
      operationId: get_all_requests
      description: Recupera a lista de requisições do match server;
      responses:
        '200':
          description: Sucesso.
          content: 
            text/html:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  prioridade:
                    type: integer
                    example: 1
                  concluido:
                    type: boolean
                    example: false
                  owner:
                    type: string
                    example: 'owner'
                  cluser:
                    type: string
                    example: 'cluster'
                description: 'ID da requisição criada'
        '400':
          description: Objeto json invalido ou com chaves faltantes.
  /request/{request_id}:
    get:
      tags:
        - Operações de Requisição
      summary: Busca o resultado de uma requisição pelo seu ID
      parameters:
        - in: path
          name: request_id
          schema:
            type: integer
          required: true
          description: ID do request a ser buscado.
      responses:
        '200':
          description: Requisição criada.
          content: 
            application/json:
              schema:
                type: object
                properties:
                  avaliados:
                    type: integer
                    example: 12345678
                    description: 'numero de candidatos avaliados'
                  progresso:
                    type: number
                    example: 56.78
                    description: 'progresso da busca, em %'
                  penetração:
                    type: number
                    example: 2.34
                    description: 'candidatos aprovados no pre-match, em %'
                  aprovados_no_pre_match:
                    type: integer
                    example: 23456
                    description: 'numero de candidatos aprovados no pre-match'
                  num_cand:
                    type: integer
                    example: 7
                    description: 'numero de candidatos aprovados no matching'
                  candidatos:
                    type: array
                    description: 'array de candidatos aprovados segundo critérios estabelecidos na requisição'
                    items:
                      type: object
                      properties:
                        numintarid:
                          type: integer
                          example: 42
                          description: 'numintarid de registro candidato'
                        sequencial:
                          type: integer
                          example: 2
                          description: 'sequencial de registro candidato'
                        score_minucias:
                          type: number
                          example: 0.987
                          description: 'escore no match de minucias'
                        score_pre_match:
                          type: number
                          example: 0.555
                          description: 'escore no pre-match'
        '400':
          description: ID não encontrado.
    delete:
      tags:
        - Operações de Requisição
      summary: Deleta a requisição com o ID especificado.
      parameters:
        - in: path
          name: request_id
          schema:
            type: integer
          required: true
          description: ID do request a ser deletado.
      responses:
        '200':
          description: Requisição deletada.
        '400':
          description: ID não encontrado.
  /request/cluster/{cluster_name}:
    get:
      tags:
        - Operações de Requisição
      summary: Busca o resultado de uma requisição pelo seu ID
      parameters:
        - in: path
          name: cluster_name
          schema:
            type: string
          required: true
          description: nome do cluster para filtrar requests.
      responses:
        '200':
          description: Requisição criada.
          content: 
            application/json:
              schema:
                type: object
                properties:
                  avaliados:
                    type: integer
                    example: 12345678
                    description: 'numero de candidatos avaliados'
                  progresso:
                    type: number
                    example: 56.78
                    description: 'progresso da busca, em %'
                  penetração:
                    type: number
                    example: 2.34
                    description: 'candidatos aprovados no pre-match, em %'
                  aprovados_no_pre_match:
                    type: integer
                    example: 23456
                    description: 'numero de candidatos aprovados no pre-match'
                  num_cand:
                    type: integer
                    example: 7
                    description: 'numero de candidatos aprovados no matching'
                  candidatos:
                    type: array
                    description: 'array de candidatos aprovados segundo critérios estabelecidos na requisição'
                    items:
                      type: object
                      properties:
                        numintarid:
                          type: integer
                          example: 42
                          description: 'numintarid de registro candidato'
                        sequencial:
                          type: integer
                          example: 2
                          description: 'sequencial de registro candidato'
                        score_minucias:
                          type: number
                          example: 0.987
                          description: 'escore no match de minucias'
                        score_pre_match:
                          type: number
                          example: 0.555
                          description: 'escore no pre-match'
  /request/usuario/{usuario_name}:
    get:
      tags:
        - Operações de Requisição
      summary: Busca o resultado de uma requisição pelo seu ID
      parameters:
        - in: path
          name: usuario_name
          schema:
            type: string
          required: true
          description: nome do usuario para filtrar requests.
      responses:
        '200':
          description: Requisição criada.
          content: 
            application/json:
              schema:
                type: object
                properties:
                  avaliados:
                    type: integer
                    example: 12345678
                    description: 'numero de candidatos avaliados'
                  progresso:
                    type: number
                    example: 56.78
                    description: 'progresso da busca, em %'
                  penetração:
                    type: number
                    example: 2.34
                    description: 'candidatos aprovados no pre-match, em %'
                  aprovados_no_pre_match:
                    type: integer
                    example: 23456
                    description: 'numero de candidatos aprovados no pre-match'
                  num_cand:
                    type: integer
                    example: 7
                    description: 'numero de candidatos aprovados no matching'
                  candidatos:
                    type: array
                    description: 'array de candidatos aprovados segundo critérios estabelecidos na requisição'
                    items:
                      type: object
                      properties:
                        numintarid:
                          type: integer
                          example: 42
                          description: 'numintarid de registro candidato'
                        sequencial:
                          type: integer
                          example: 2
                          description: 'sequencial de registro candidato'
                        score_minucias:
                          type: number
                          example: 0.987
                          description: 'escore no match de minucias'
                        score_pre_match:
                          type: number
                          example: 0.555
                          description: 'escore no pre-match'
  /registro:
    post:
      tags:
        - Manipulação de Registros
      summary: Adiciona um novo registro à base
      responses:
        '200':
          description: Registro adicionado
        '400':
          description: Objeto json invalido ou com chaves faltantes.
        '401':
          description: Falha ao adicionar novo registro ao banco.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input_registro'
  /registro/{nia}/{fgp}:
    get:
      tags:
        - Manipulação de Registros
      summary: Busca um registro da base
      parameters:
        - in: path
          name: nia
          schema:
            type: integer
          required: true
          description: numintarid do request a ser buscado.
        - in: path
          name: fgp
          schema:
            type: integer
          required: true
          description: sequencial do request a ser buscado.
      responses:
        '200':
          description: Registro encontrado.
        '400':
          description: Objeto json invalido ou com chaves faltantes.
    delete:
      tags:
        - Manipulação de Registros
      summary: Deleta um registro da base
      parameters:
        - in: path
          name: nia
          schema:
            type: integer
          required: true
          description: numintarid do request a ser deletado.
        - in: path
          name: fgp
          schema:
            type: integer
          required: true
          description: sequencial do request a ser deletado.
      responses:
        '200':
          description: Registro deletado
        '400':
          description: Objeto json invalido ou com chaves faltantes.
  /heartbeat:
    get:
      tags:
        - Outras Operações
      summary: Retorna o conjunto de match_servers registrados.
      operationId: heartbeat
      description: Retorna o conjunto de de servidores registrados na base de dados configurada. Inclui identificações relativas ao cluster e o progresso dos requests atuais.
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  servers:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: 'server_name'
                        cluster:
                          type: string
                          example: 'civil'
                        cpus:
                          type: integer
                          example: 64
                        requests:
                          type: integer
                          example: 5
                        progresso:
                          type: number
                          example: 67.89
                        tempo_restante_estimado:
                          type: integer
                          example: 180
                        indice_cluster:
                          type: integer
                          example: 1
                        total_cluster:
                          type: integer
                          example: 4
  /extract_features:
    post:
      tags:
        - Outras Operações
      summary: Extrai as features de um conjunto de imagens.
      operationId: extract_features
      description: Extrai as features de um conjunto de imagens de impressao digital e uma imagem de face. Extrai (opcionalmente) minucias, classe, qualidade e geometria de impressão digital e template de face.
      responses:
        '200':
          description: Requisição criada.
          content: 
            application/json:
              schema:
                type: object
                properties:
                  ano_do_nascimento:
                    type: integer
                  ano_da_foto:
                    type: integer
                  sexo:
                    type: integer
                  templ_face:
                    type: string
                  dedos:
                    type: array
                    items:
                      type: object
                      properties:
                        geometria:
                          type: array
                          items:
                            type: integer
                            example: [0, 0, 0, 0, 0, 0, 0, 0]
                        grupo:
                          type: array
                          items:
                            type: number
                            example: [0, 0, 0, 0, 0, 0]
                        incits378:
                          type: string
                        qual:
                          type: number
        '400':
          description: Objeto json invalido ou com chaves faltantes.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input_extract_features'
        description: Requisição de imagens
  /get_graph:
    post:
      tags:
        - Outras Operações
      summary: Extrai informação de matching de dois templates.
      responses:
        '200':
          description: Requisição criada.
          content: 
            text/html:
              schema:
                type: string
                example: 'JSON com informações sobre minucias mapeadas (TODO)'
                description: 'JSON com informações sobre minucias mapeadas'
        '400':
          description: Objeto json invalido ou com chaves faltantes.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input_get_graph'
  /wsq_to_jpg:
    post:
      tags:
        - Outras Operações
      summary: Converte uma imagem wsq para jpg.
      responses:
        '200':
          description: Sucesso na operação.
          content: 
            text/html:
              schema:
                type: string
                example: 'data:image/jpg; base64, imagem_jpg_codificada'
                description: 'retorna a imagem jpg codificada em base64'
        '400':
          description: Falha na decodificação do WSQ ou buffer vazio.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input_wsq_to_jpg'
components:
  schemas:
    input_extract_features:
      type: object
      required:
        - extrair_grupos
        - extrair_qualidade
        - extrair_minucias
        - extrair_geometria
        - extrair_templface
        - sexo
        - ano_do_nascimento
        - ano_da_foto
        - face
        - dedos
      properties:
        extrair_grupos:
          type: boolean
          example: true
          description: 'Extrair grupos das impressões digitais'
        extrair_qualidade:
          type: boolean
          example: true
          description: 'Extrair qualidade das impressões digitais'
        extrair_minucias:
          type: boolean
          example: true
          description: 'Extrair template das impressões digitais'
        extrair_geometria:
          type: boolean
          example: true
          description: 'Extrair geometria das impressões digitais'
        extrair_templface:
          type: boolean
          example: true
        face:
          type: string
          example: 'imagem'
          description: 'imagem jpg em base64'
        dedos:
          type: array
          description: 'array de dedos com fgp e imagem'
          items:
            type: object
            required:
              - fgp
              - imagem_wsq
            properties:
              fgp:
                type: integer
                enum: [1, 10]
                example: 1
              imagem_wsq:
                type: string
                example: 'imagem'
                description: 'imagem wsq em base64'
        sexo:
          type: integer
          enum: [0, 2]
          default: 0
          example: 0
          description: '0: não especificado, 1: masculino, 2: feminino'
        ano_do_nascimento:
          type: integer
          default: 0
          example: 0
          description: 'ano do nascimento da pessoa'
        ano_da_foto:
          type: integer
          default: 0
          example: 0
          description: 'ano que foto foi tirada'
    input_make_request:
      type: object
      required:
        - rank
        - tipo
        - latente
        - origem
        - usuario
        - usar_face
        - comparar_sexo
        - numintarid_1x1
        - sequencial_1x1
        - usar_pre_match
        - limiar_pre_match
        - limiar_score_minucias
        - limiar_pre_match_com_face
        - probabilidade_minima
        - somente_ultimo_sequencial
        - amostra
      properties:
        rank:
          type: integer
          default: 10
          example: 10
          description: 'numero maximo de candidatos no resultado'
        tipo:
          type: string
          default: 'deca'
          example: 'deca'
          description: 'Tipo da requisição - deca, tetra, mono, face'
        latente:
          type: boolean
          default: false
          example: false
          description: 'Busca de latente (somente em caso de tipo mono)'
        origem:
          type: string
          default: ''
          example: 'local/ip/orgão de origem'
          description: 'descrição da origem da requisição'
        usuario:
          type: string
          default: ''
          example: 'usuario'
          description: 'usuario que gerou a requisição'
        usar_face:
          type: boolean
          default: true
          example: true
          description: 'usar imagem facial na filtragem'
        comparar_sexo:
          type: boolean
          default: false
          example: false
          description: 'usar sexo informado na filtragem'
        numintarid_1x1:
          type: integer
          default: 0
          example: 1
          description: 'numintarid alvo para busca 1:1; 0 para 1:N'
        sequencial_1x1:
          type: integer
          default: 0
          example: 2
          description: 'sequencial alvo para busca 1:1; Em caso de 0 faz 1:N ou 1:todos os sequenciais do numintarid especificado no campo numintarid_1x1'
        usar_pre_match:
          type: boolean
          default: true
          example: true
          description: 'usar pre-match para filtrar resultados'
        limiar_pre_match:
          type: number
          default: 0
          example: 0
          description: 'limiar para aprovação no pre-match'
        limiar_pre_match_com_face:
          type: number
          default: 0
          example: 0
          description: 'limiar para aprovação no pre-match com face'
        probabilidade_minima:
          type: number
          default: 0.7
          example: 0.7
          description: 'probabilidade minima para inclusao no resultado em busca do tipo face'
        somente_ultimo_sequencial:
          type: boolean
          default: false
          example: false
          description: 'comparar apenas contra registro mais recente de cada numintarid'
        amostra:
          type: object
          properties:
            templ_face:
              type: string
              description: 'template facial extraido pelo /extract_features'
            ano_do_nascimento:
              type: integer
              default: 0
              example: 0
              description: 'ano do nascimento da pessoa'
            sexo:
              type: integer
              enum: [0, 2]
              default: 0
              example: 0
              description: '0: não especificado, 1: masculino, 2: feminino'
            dedos:
              type: array
              items:
                type: object
                properties:
                  geometria:
                    type: array
                    items:
                      type: integer
                      example: [0, 0, 0, 0, 0, 0, 0, 0]
                  grupo:
                    type: array
                    items:
                      type: number
                      example: [0, 0, 0, 0, 0, 0]
                  incits378:
                    type: string
                  qual:
                    type: number
    input_registro:
      type: object
      required:
        - amostra
        - numintarid
        - sequencial
        - sexo
        - ano_do_nascimento
        - ano_da_foto
      properties:
        numintarid:
          type: integer
          example: 1
          description: 'numintarid do novo registro'
        sequencial:
          type: integer
          example: 2
          description: 'sequencial do novo registro'
        amostra:
          type: object
          properties:
            templ_face:
              type: string
              description: 'template facial extraido pelo /extract_features'
            ano_do_nascimento:
              type: integer
              default: 0
              example: 0
              description: 'ano do nascimento da pessoa'
            sexo:
              type: integer
              enum: [0, 2]
              default: 0
              example: 0
              description: '0: não especificado, 1: masculino, 2: feminino'
            dedos:
              type: array
              items:
                type: object
                properties:
                  geometria:
                    type: array
                    items:
                      type: integer
                      example: [0, 0, 0, 0, 0, 0, 0, 0]
                  grupo:
                    type: array
                    items:
                      type: number
                      example: [0, 0, 0, 0, 0, 0]
                  incits378:
                    type: string
                  qual:
                    type: number
    input_get_graph:
      type: object
      required:
        - t2
        - t1
      properties:
        t1:
          type: string
          description: 'Template incits em base64'
        t2:
          type: string
          description: 'Template incits em base64'
    input_wsq_to_jpg:
      type: string
      description: 'Buffer de arquivo .wsq como string.'