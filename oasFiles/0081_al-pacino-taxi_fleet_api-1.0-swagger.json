{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0",
    "title" : "Ресурсы API"
  },
  "servers" : [ {
    "url" : "https://fleet-api.taxi.yandex.net"
  } ],
  "paths" : {
    "/v1/parks/cars/list" : {
      "post" : {
        "summary" : "Список машин",
        "description" : "Получение списка машин в парке",
        "tags" : [ "Транспорт" ],
        "security" : [ {
          "ClientID" : [ ]
        }, {
          "APIKey" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CarsList"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CarsList"
          },
          "400" : {
            "$ref" : "#/components/responses/Response400"
          },
          "401" : {
            "$ref" : "#/components/responses/Response401"
          },
          "403" : {
            "$ref" : "#/components/responses/Response403"
          },
          "500" : {
            "$ref" : "#/components/responses/Response500"
          }
        }
      }
    },
    "/v1/parks/orders/list" : {
      "post" : {
        "summary" : "Список заказов",
        "description" : "Получение списка заказов в парке",
        "tags" : [ "Заказы" ],
        "security" : [ {
          "ClientID" : [ ]
        }, {
          "APIKey" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OrdersList"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/OrdersList"
          },
          "400" : {
            "$ref" : "#/components/responses/Response400"
          },
          "401" : {
            "$ref" : "#/components/responses/Response401"
          },
          "403" : {
            "$ref" : "#/components/responses/Response403"
          },
          "500" : {
            "$ref" : "#/components/responses/Response500"
          }
        }
      }
    },
    "/v2/parks/driver-profiles/transactions" : {
      "post" : {
        "summary" : "Создание водительской транзакции",
        "description" : "Создание транзакции по водителю в парке\n",
        "tags" : [ "Транзакции" ],
        "security" : [ {
          "ClientID" : [ ]
        }, {
          "APIKey" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/IdempotencyToken"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ParksDriverProfilesTransactions"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ParksDriverProfilesTransactions"
          },
          "400" : {
            "$ref" : "#/components/responses/Response400"
          },
          "401" : {
            "$ref" : "#/components/responses/Response401"
          },
          "403" : {
            "$ref" : "#/components/responses/Response403"
          },
          "500" : {
            "$ref" : "#/components/responses/Response500"
          }
        }
      }
    },
    "/v2/parks/driver-profiles/transactions/list" : {
      "post" : {
        "summary" : "Список водительских транзакций",
        "description" : "Получение списка транзакций по водителю в парке\n",
        "tags" : [ "Транзакции" ],
        "security" : [ {
          "ClientID" : [ ]
        }, {
          "APIKey" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ParksDriverProfilesTransactionsList"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ParksTransactionsList"
          },
          "400" : {
            "$ref" : "#/components/responses/Response400"
          },
          "401" : {
            "$ref" : "#/components/responses/Response401"
          },
          "403" : {
            "$ref" : "#/components/responses/Response403"
          },
          "500" : {
            "$ref" : "#/components/responses/Response500"
          }
        }
      }
    },
    "/v2/parks/orders/transactions/list" : {
      "post" : {
        "summary" : "Список транзакций по заказу",
        "description" : "Получение списка транзакций по заказу в парке\n",
        "tags" : [ "Транзакции" ],
        "security" : [ {
          "ClientID" : [ ]
        }, {
          "APIKey" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OrdersTransactionsList"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/OrdersTransactionsList"
          },
          "400" : {
            "$ref" : "#/components/responses/Response400"
          },
          "401" : {
            "$ref" : "#/components/responses/Response401"
          },
          "403" : {
            "$ref" : "#/components/responses/Response403"
          },
          "500" : {
            "$ref" : "#/components/responses/Response500"
          }
        }
      }
    },
    "/v2/parks/transactions/list" : {
      "post" : {
        "summary" : "Список парковых транзакций",
        "description" : "Получение списка транзакций в парке\n",
        "tags" : [ "Транзакции" ],
        "security" : [ {
          "ClientID" : [ ]
        }, {
          "APIKey" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ParksTransactionsList"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ParksTransactionsList"
          },
          "400" : {
            "$ref" : "#/components/responses/Response400"
          },
          "401" : {
            "$ref" : "#/components/responses/Response401"
          },
          "403" : {
            "$ref" : "#/components/responses/Response403"
          },
          "500" : {
            "$ref" : "#/components/responses/Response500"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "ClientID" : {
        "in" : "header",
        "name" : "X-Client-ID",
        "type" : "apiKey",
        "description" : "идентификатор клиента"
      },
      "APIKey" : {
        "in" : "header",
        "name" : "X-API-Key",
        "type" : "apiKey",
        "description" : "API-ключ"
      }
    },
    "parameters" : {
      "IdempotencyToken" : {
        "in" : "header",
        "name" : "X-Idempotency-Token",
        "required" : true,
        "description" : "токен идемпотентности запроса,\nдолжен состоять только из печатных ASCII символов\n",
        "schema" : {
          "type" : "string",
          "example" : "c56fa6537e5a4adbbce6ef3593210fb9",
          "minLength" : 16,
          "maxLength" : 64
        }
      }
    },
    "requestBodies" : {
      "CarsList" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "required" : [ "limit", "query" ],
              "properties" : {
                "limit" : {
                  "$ref" : "#/components/schemas/CarsListLimit"
                },
                "offset" : {
                  "$ref" : "#/components/schemas/CarsListOffset"
                },
                "query" : {
                  "$ref" : "#/components/schemas/CarsListQuery"
                },
                "fields" : {
                  "$ref" : "#/components/schemas/CarsListFields"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      },
      "OrdersList" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "required" : [ "query", "limit" ],
              "properties" : {
                "query" : {
                  "$ref" : "#/components/schemas/OrdersListQuery"
                },
                "limit" : {
                  "$ref" : "#/components/schemas/OrdersListLimit"
                },
                "cursor" : {
                  "$ref" : "#/components/schemas/Cursor"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      },
      "ParksDriverProfilesTransactions" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ParksDriverProfilesTransactionsRequest"
            }
          }
        }
      },
      "ParksDriverProfilesTransactionsList" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ParksDriverProfilesTransactionsListRequest"
            }
          }
        }
      },
      "OrdersTransactionsList" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ParksOrdersTransactionsListRequest"
            }
          }
        }
      },
      "ParksTransactionsList" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ParksTransactionsListRequest"
            }
          }
        }
      }
    },
    "responses" : {
      "CarsList" : {
        "description" : "список машин",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "required" : [ "limit", "offset", "total", "cars" ],
              "properties" : {
                "limit" : {
                  "$ref" : "#/components/schemas/CarsListLimit"
                },
                "offset" : {
                  "$ref" : "#/components/schemas/CarsListOffset"
                },
                "total" : {
                  "$ref" : "#/components/schemas/CarsListTotal"
                },
                "cars" : {
                  "$ref" : "#/components/schemas/CarsListCars"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      },
      "OrdersList" : {
        "description" : "список транзакций",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "required" : [ "orders", "limit" ],
              "properties" : {
                "orders" : {
                  "$ref" : "#/components/schemas/Orders"
                },
                "limit" : {
                  "$ref" : "#/components/schemas/OrdersListLimit"
                },
                "cursor" : {
                  "$ref" : "#/components/schemas/Cursor"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      },
      "ParksDriverProfilesTransactions" : {
        "description" : "транзакция успешно создана",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ParksDriverProfilesTransactionsResponse"
            }
          }
        }
      },
      "ParksTransactionsList" : {
        "description" : "список транзакций",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ParksTransactionsListResponse"
            }
          }
        }
      },
      "OrdersTransactionsList" : {
        "description" : "список транзакций",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ParksOrdersTransactionsListResponse"
            }
          }
        }
      },
      "Response400" : {
        "description" : "некорректные параметры запроса",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Response401" : {
        "description" : "отсутствуют параметры авторизации запроса",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Response403" : {
        "description" : "недостаточно прав для выполнения запроса",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Response500" : {
        "description" : "внутренняя ошибка сервера",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "schemas" : {
      "ErrorResponse" : {
        "type" : "object",
        "required" : [ "code", "message" ],
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "машиночитаемый код ошибки"
          },
          "message" : {
            "type" : "string",
            "description" : "человекочитаемое сообщение об ошибке"
          }
        },
        "additionalProperties" : false
      },
      "ParkId" : {
        "type" : "string",
        "description" : "идентификатор парка",
        "example" : "ee6f33c4562b4e1f8646d157bd70b2c4",
        "minLength" : 1,
        "maxLength" : 100
      },
      "DriverProfileId" : {
        "type" : "string",
        "description" : "идентификатор водителя",
        "example" : "33de650c6a1a40bfa78dd981817da866",
        "minLength" : 1,
        "maxLength" : 100
      },
      "CarId" : {
        "type" : "string",
        "description" : "идентификатор машины",
        "example" : "5011ade6ba054dfdb7143c8cc9460dbc",
        "minLength" : 1,
        "maxLength" : 100
      },
      "CarIds" : {
        "type" : "array",
        "minItems" : 1,
        "maxItems" : 100,
        "items" : {
          "$ref" : "#/components/schemas/CarId"
        }
      },
      "OrderId" : {
        "type" : "string",
        "description" : "идентификатор заказа",
        "minLength" : 1,
        "maxLength" : 100
      },
      "OrderIds" : {
        "type" : "array",
        "minItems" : 1,
        "maxItems" : 100,
        "items" : {
          "$ref" : "#/components/schemas/OrderId"
        }
      },
      "OrderShortId" : {
        "type" : "integer",
        "minimum" : 0,
        "description" : "порядковый номер заказ (с учётом несостоявшихся заказов)"
      },
      "OrderShortIds" : {
        "type" : "array",
        "minItems" : 1,
        "maxItems" : 100,
        "items" : {
          "$ref" : "#/components/schemas/OrderShortId"
        }
      },
      "OrderStatus" : {
        "type" : "string",
        "enum" : [ "none", "driving", "waiting", "calling", "transporting", "complete", "failed", "cancelled", "expired" ]
      },
      "PaymentMethod" : {
        "type" : "string",
        "enum" : [ "cash", "cashless", "card", "internal", "other", "corp", "prepaid" ]
      },
      "Amount" : {
        "type" : "string",
        "maxLength" : 20,
        "example" : "12345.1434",
        "description" : "Сумма с фиксированной точностью"
      },
      "DateTime" : {
        "type" : "string",
        "description" : "ISO 8601 с временной зоной",
        "format" : "date-time",
        "example" : "2019-08-08T11:58:01+03:00"
      },
      "Cursor" : {
        "type" : "string",
        "minLength" : 1,
        "description" : "значение должно в точности совпадать со значением из ответа"
      },
      "DateTimeInterval" : {
        "type" : "object",
        "required" : [ "from", "to" ],
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "to" : {
            "$ref" : "#/components/schemas/DateTime"
          }
        },
        "additionalProperties" : false
      },
      "DateTimeOptionalInterval" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "to" : {
            "$ref" : "#/components/schemas/DateTime"
          }
        },
        "additionalProperties" : false
      },
      "CurrencyCode" : {
        "type" : "string",
        "example" : "RUB"
      },
      "Description" : {
        "type" : "string"
      },
      "CarStatus" : {
        "type" : "string",
        "enum" : [ "unknown", "working", "not_working", "tech_inspection", "repairing", "highjacked", "in_garage" ]
      },
      "CarStatuses" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CarStatus"
        }
      },
      "CarAmenity" : {
        "type" : "string",
        "enum" : [ "conditioner", "no_smoking", "child_chair", "animal_transport", "universal", "wifi", "check", "card", "yamoney", "newspaper", "coupon", "creditcard", "dont_call", "smoking", "delivery", "vip_event", "woman_driver", "post_terminal", "bicycle", "skiing", "passenger_plus", "cargo_clean", "door_to_door" ]
      },
      "CarAmenities" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CarAmenity"
        }
      },
      "CarCategory" : {
        "type" : "string",
        "enum" : [ "econom", "comfort", "comfort_plus", "business", "minivan", "vip", "wagon", "pool", "start", "standard", "ultimate", "maybach", "promo", "premium_van", "premium_suv", "suv", "personal_driver", "cargo" ]
      },
      "CarCategories" : {
        "type" : "array",
        "minItems" : 1,
        "items" : {
          "$ref" : "#/components/schemas/CarCategory"
        }
      },
      "CarCallsign" : {
        "type" : "string",
        "description" : "позывной машины"
      },
      "CarsListLimit" : {
        "type" : "integer",
        "description" : "ограничение сверху на число машин в ответе",
        "default" : 100,
        "minimum" : 1,
        "maximum" : 100
      },
      "CarsListOffset" : {
        "type" : "integer",
        "description" : "отступ, начиная с которого возвращаются машины в ответе",
        "default" : 0,
        "minimum" : 0
      },
      "CarsListTotal" : {
        "type" : "integer",
        "description" : "общее число машин, удовлетворяющих запросу",
        "minimum" : 0
      },
      "CarsListQueryParkCar" : {
        "type" : "object",
        "description" : "поисковые ограничения на машину",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/CarIds"
          },
          "status" : {
            "$ref" : "#/components/schemas/CarStatuses"
          },
          "amenities" : {
            "$ref" : "#/components/schemas/CarAmenities"
          },
          "categories" : {
            "$ref" : "#/components/schemas/CarCategories"
          }
        }
      },
      "CarsListQueryPark" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/ParkId"
          },
          "car" : {
            "$ref" : "#/components/schemas/CarsListQueryParkCar"
          }
        }
      },
      "CarsListQueryText" : {
        "type" : "string",
        "description" : "текстовый поисковый запрос по полям машины"
      },
      "CarsListQuery" : {
        "type" : "object",
        "description" : "поисковые ограничения",
        "required" : [ "park" ],
        "properties" : {
          "park" : {
            "$ref" : "#/components/schemas/CarsListQueryPark"
          },
          "text" : {
            "$ref" : "#/components/schemas/CarsListQueryText"
          }
        },
        "additionalProperties" : false
      },
      "CarsListCarField" : {
        "type" : "string",
        "description" : "поле машины",
        "enum" : [ "id", "status", "amenities", "category", "callsign", "brand", "model", "year", "color", "number", "registration_cert", "vin" ]
      },
      "CarsListFieldsCar" : {
        "type" : "array",
        "description" : "поля машины",
        "items" : {
          "$ref" : "#/components/schemas/CarsListCarField"
        }
      },
      "CarsListFields" : {
        "type" : "object",
        "description" : "поля, которые нужно вернуть в ответе",
        "properties" : {
          "car" : {
            "$ref" : "#/components/schemas/CarsListFieldsCar"
          }
        },
        "additionalProperties" : false
      },
      "CarBrand" : {
        "type" : "string",
        "description" : "марка машины",
        "example" : "Mercedes-Benz"
      },
      "CarModel" : {
        "type" : "string",
        "description" : "модель машины",
        "example" : "E-klasse"
      },
      "CarYear" : {
        "type" : "integer",
        "description" : "год выпуска машины",
        "example" : 2019
      },
      "CarColor" : {
        "type" : "string",
        "description" : "цвет машины",
        "example" : "Черный",
        "enum" : [ "Белый", "Желтый", "Бежевый", "Черный", "Голубой", "Серый", "Красный", "Оранжевый", "Синий", "Зеленый", "Коричневый", "Фиолетовый", "Розовый" ]
      },
      "CarNumber" : {
        "type" : "string",
        "description" : "гос. номер машины",
        "example" : "А404ЕЕ777"
      },
      "CarRegistrationCert" : {
        "type" : "string",
        "description" : "номер свидетельства о регистрации машины",
        "example" : "235235234234"
      },
      "CarVIN" : {
        "type" : "string",
        "description" : "номер кузова машины",
        "example" : "75849583748392738"
      },
      "CarsListCar" : {
        "type" : "object",
        "description" : "данные машины",
        "required" : [ "id", "status", "amenities", "category", "year", "color" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/CarId"
          },
          "status" : {
            "$ref" : "#/components/schemas/CarStatus"
          },
          "amenities" : {
            "$ref" : "#/components/schemas/CarAmenities"
          },
          "category" : {
            "$ref" : "#/components/schemas/CarCategories"
          },
          "callsign" : {
            "$ref" : "#/components/schemas/CarCallsign"
          },
          "brand" : {
            "$ref" : "#/components/schemas/CarBrand"
          },
          "model" : {
            "$ref" : "#/components/schemas/CarModel"
          },
          "year" : {
            "$ref" : "#/components/schemas/CarYear"
          },
          "color" : {
            "$ref" : "#/components/schemas/CarColor"
          },
          "number" : {
            "$ref" : "#/components/schemas/CarNumber"
          },
          "registration_cert" : {
            "$ref" : "#/components/schemas/CarRegistrationCert"
          },
          "vin" : {
            "$ref" : "#/components/schemas/CarVIN"
          }
        },
        "additionalProperties" : false
      },
      "CarsListCars" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CarsListCar"
        }
      },
      "OrdersListLimit" : {
        "type" : "integer",
        "description" : "ограничение сверху на число заказов в ответе",
        "minimum" : 1,
        "maximum" : 500
      },
      "OrderTypeId" : {
        "type" : "string",
        "description" : "идентификатор типа заказа (Например, от борта)",
        "minLength" : 1
      },
      "OrderTypeIds" : {
        "type" : "array",
        "minItems" : 1,
        "maxItems" : 100,
        "items" : {
          "$ref" : "#/components/schemas/OrderTypeId"
        }
      },
      "QueryParkOrderType" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "ids" ],
        "properties" : {
          "ids" : {
            "$ref" : "#/components/schemas/OrderTypeIds"
          }
        }
      },
      "Statuses" : {
        "type" : "array",
        "minItems" : 1,
        "items" : {
          "$ref" : "#/components/schemas/OrderStatus"
        }
      },
      "PaymentMethods" : {
        "type" : "array",
        "minItems" : 1,
        "items" : {
          "$ref" : "#/components/schemas/PaymentMethod"
        }
      },
      "Provider" : {
        "type" : "string",
        "enum" : [ "none", "partner", "platform" ]
      },
      "Providers" : {
        "type" : "array",
        "minItems" : 1,
        "items" : {
          "$ref" : "#/components/schemas/Provider"
        }
      },
      "OrdersListQueryParkDriverProfile" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/DriverProfileId"
          }
        }
      },
      "OrdersListQueryParkCar" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/CarId"
          }
        }
      },
      "PriceInterval" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "to" : {
            "$ref" : "#/components/schemas/Amount"
          }
        }
      },
      "OrdersListQueryParkOrder" : {
        "type" : "object",
        "description" : "обязательно задание booked_at или ended_at",
        "properties" : {
          "ids" : {
            "$ref" : "#/components/schemas/OrderIds"
          },
          "short_ids" : {
            "$ref" : "#/components/schemas/OrderShortIds"
          },
          "booked_at" : {
            "$ref" : "#/components/schemas/DateTimeInterval"
          },
          "ended_at" : {
            "$ref" : "#/components/schemas/DateTimeInterval"
          },
          "type" : {
            "$ref" : "#/components/schemas/QueryParkOrderType"
          },
          "statuses" : {
            "$ref" : "#/components/schemas/Statuses"
          },
          "payment_methods" : {
            "$ref" : "#/components/schemas/PaymentMethods"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Providers"
          },
          "categories" : {
            "$ref" : "#/components/schemas/CarCategories"
          },
          "price" : {
            "$ref" : "#/components/schemas/PriceInterval"
          }
        },
        "additionalProperties" : false
      },
      "OrdersListQueryPark" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "id", "order" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/ParkId"
          },
          "order" : {
            "$ref" : "#/components/schemas/OrdersListQueryParkOrder"
          },
          "driver_profile" : {
            "$ref" : "#/components/schemas/OrdersListQueryParkDriverProfile"
          },
          "car" : {
            "$ref" : "#/components/schemas/OrdersListQueryParkCar"
          }
        }
      },
      "OrdersListQuery" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "park" ],
        "properties" : {
          "park" : {
            "$ref" : "#/components/schemas/OrdersListQueryPark"
          }
        }
      },
      "AddressInfo" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "address", "lat", "lon" ],
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "lat" : {
            "type" : "number"
          },
          "lon" : {
            "type" : "number"
          }
        }
      },
      "RoutePoints" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AddressInfo"
        }
      },
      "Event" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "event_at", "order_status" ],
        "properties" : {
          "event_at" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "order_status" : {
            "$ref" : "#/components/schemas/OrderStatus"
          }
        }
      },
      "Events" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Event"
        }
      },
      "DriverProfile" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/DriverProfileId"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "License" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "number" ],
        "properties" : {
          "number" : {
            "type" : "string"
          }
        }
      },
      "OrdersListCar" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/CarId"
          },
          "brand_model" : {
            "type" : "string"
          },
          "license" : {
            "$ref" : "#/components/schemas/License"
          },
          "callsign" : {
            "$ref" : "#/components/schemas/CarCallsign"
          }
        }
      },
      "OrderType" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/OrderTypeId"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "DriverWorkRule" : {
        "type" : "object",
        "additionalProperties" : false,
        "description" : "условие работы водителя",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "OrderTariff" : {
        "type" : "object",
        "additionalProperties" : false,
        "description" : "тарифы парка",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Passenger" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "phones" : {
            "type" : "array",
            "minItems" : 1,
            "maxItems" : 3,
            "items" : {
              "type" : "string",
              "minLength" : 1
            }
          }
        }
      },
      "Company" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "slip" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "ParkDetails" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "tariff" : {
            "$ref" : "#/components/schemas/OrderTariff"
          },
          "passenger" : {
            "$ref" : "#/components/schemas/Passenger"
          },
          "company" : {
            "$ref" : "#/components/schemas/Company"
          }
        }
      },
      "Order" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "id", "short_id", "status", "created_at", "booked_at", "provider", "amenities", "address_from", "route_points", "events" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/OrderId"
          },
          "short_id" : {
            "$ref" : "#/components/schemas/OrderShortId"
          },
          "status" : {
            "$ref" : "#/components/schemas/OrderStatus"
          },
          "created_at" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "booked_at" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "provider" : {
            "$ref" : "#/components/schemas/Provider"
          },
          "category" : {
            "$ref" : "#/components/schemas/CarCategory"
          },
          "amenities" : {
            "$ref" : "#/components/schemas/CarAmenities"
          },
          "address_from" : {
            "$ref" : "#/components/schemas/AddressInfo"
          },
          "route_points" : {
            "$ref" : "#/components/schemas/RoutePoints"
          },
          "events" : {
            "$ref" : "#/components/schemas/Events"
          },
          "ended_at" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "payment_method" : {
            "$ref" : "#/components/schemas/PaymentMethod"
          },
          "driver_profile" : {
            "$ref" : "#/components/schemas/DriverProfile"
          },
          "car" : {
            "$ref" : "#/components/schemas/OrdersListCar"
          },
          "type" : {
            "$ref" : "#/components/schemas/OrderType"
          },
          "price" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "driver_work_rule" : {
            "$ref" : "#/components/schemas/DriverWorkRule"
          },
          "mileage" : {
            "type" : "string"
          },
          "cancellation_description" : {
            "type" : "string"
          },
          "park_details" : {
            "$ref" : "#/components/schemas/ParkDetails"
          }
        }
      },
      "Orders" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Order"
        }
      },
      "TransactionId" : {
        "type" : "string",
        "minLength" : 1,
        "maxLength" : 100
      },
      "TransactionsListLimit" : {
        "type" : "integer",
        "format" : "int32",
        "minimum" : 1,
        "maximum" : 1000,
        "default" : 40,
        "description" : "ограничение сверху на число транзакций в ответе"
      },
      "TransactionCategoryId" : {
        "type" : "string",
        "description" : "категория транзакции",
        "minLength" : 1,
        "maxLength" : 100,
        "enum" : [ "bank_payment", "bonus", "card", "cash_collected", "no_contract_bonus", "no_contract_promotion_promocode", "on_hold_bonus", "on_hold_platform_bonus_fee", "partner_bonus_fee", "partner_ride_card", "partner_ride_cash_collected", "partner_ride_fee", "partner_ride_fine_cancel", "partner_ride_promotion_promocode", "partner_ride_tip", "partner_service_manual", "partner_service_other", "partner_service_recurrent_payment", "partner_subscription_fee", "platform_bonus_fee", "platform_callcenter_fee", "platform_other_carwash", "platform_other_gas", "platform_other_gas_cashback", "platform_other_gas_fleet_fee", "platform_other_gas_tip", "platform_other_referral", "platform_other_rent_childseat", "platform_other_rent_childseat_vat", "platform_other_scout", "platform_ride_fee", "platform_ride_vat", "promotion_discount", "promotion_promocode", "subscription", "subscription_vat", "tip" ]
      },
      "TransactionCategoryIds" : {
        "type" : "array",
        "minItems" : 1,
        "maxItems" : 32,
        "items" : {
          "$ref" : "#/components/schemas/TransactionCategoryId"
        }
      },
      "PassportUID" : {
        "type" : "string",
        "description" : "паспортный идентификатор пользователя",
        "example" : "123456789"
      },
      "DispatcherID" : {
        "type" : "string",
        "description" : "идентификатор диспетчера"
      },
      "DispatcherName" : {
        "type" : "string",
        "description" : "имя диспетчера",
        "example" : "Вася Пупкин"
      },
      "FleetAPIClientID" : {
        "type" : "string",
        "description" : "fleet-api client id",
        "example" : "taxi/park/abc123"
      },
      "FleetAPIKeyID" : {
        "type" : "string",
        "description" : "fleet-api api key id",
        "example" : "521"
      },
      "TransactionCreatedByDispatcher" : {
        "type" : "object",
        "required" : [ "identity", "passport_uid", "dispatcher_id", "dispatcher_name" ],
        "properties" : {
          "identity" : {
            "type" : "string",
            "enum" : [ "dispatcher" ]
          },
          "passport_uid" : {
            "$ref" : "#/components/schemas/PassportUID"
          },
          "dispatcher_id" : {
            "$ref" : "#/components/schemas/DispatcherID"
          },
          "dispatcher_name" : {
            "$ref" : "#/components/schemas/DispatcherName"
          }
        },
        "additionalProperties" : false
      },
      "TransactionCreatedByTechSupport" : {
        "type" : "object",
        "required" : [ "identity" ],
        "properties" : {
          "identity" : {
            "type" : "string",
            "enum" : [ "tech-support" ]
          }
        },
        "additionalProperties" : false
      },
      "TransactionCreatedByFleetAPI" : {
        "type" : "object",
        "required" : [ "identity", "client_id", "key_id" ],
        "properties" : {
          "identity" : {
            "type" : "string",
            "enum" : [ "fleet-api" ]
          },
          "client_id" : {
            "$ref" : "#/components/schemas/FleetAPIClientID"
          },
          "key_id" : {
            "$ref" : "#/components/schemas/FleetAPIKeyID"
          }
        },
        "additionalProperties" : false
      },
      "TransactionCreatedByPlatform" : {
        "type" : "object",
        "required" : [ "identity" ],
        "properties" : {
          "identity" : {
            "type" : "string",
            "enum" : [ "platform" ]
          }
        },
        "additionalProperties" : false
      },
      "TransactionCreatedBy" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TransactionCreatedByDispatcher"
        }, {
          "$ref" : "#/components/schemas/TransactionCreatedByTechSupport"
        }, {
          "$ref" : "#/components/schemas/TransactionCreatedByFleetAPI"
        }, {
          "$ref" : "#/components/schemas/TransactionCreatedByPlatform"
        } ],
        "discriminator" : {
          "propertyName" : "identity",
          "mapping" : {
            "dispatcher" : "#/components/schemas/TransactionCreatedByDispatcher",
            "tech-support" : "#/components/schemas/TransactionCreatedByTechSupport",
            "fleet-api" : "#/components/schemas/TransactionCreatedByFleetAPI",
            "platform" : "#/components/schemas/TransactionCreatedByPlatform"
          }
        }
      },
      "Transaction" : {
        "type" : "object",
        "required" : [ "id", "event_at", "category_id", "amount", "currency_code", "description", "created_by" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TransactionId"
          },
          "event_at" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "category_id" : {
            "$ref" : "#/components/schemas/TransactionCategoryId"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "currency_code" : {
            "$ref" : "#/components/schemas/CurrencyCode"
          },
          "description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "created_by" : {
            "$ref" : "#/components/schemas/TransactionCreatedBy"
          },
          "driver_profile_id" : {
            "$ref" : "#/components/schemas/DriverProfileId"
          },
          "order_id" : {
            "$ref" : "#/components/schemas/OrderId"
          }
        },
        "additionalProperties" : false
      },
      "ParksTransactionsList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Transaction"
        }
      },
      "ParksTransactionsListResponse" : {
        "type" : "object",
        "required" : [ "transactions", "limit", "cursor" ],
        "properties" : {
          "transactions" : {
            "$ref" : "#/components/schemas/ParksTransactionsList"
          },
          "limit" : {
            "$ref" : "#/components/schemas/TransactionsListLimit"
          },
          "cursor" : {
            "$ref" : "#/components/schemas/Cursor"
          }
        },
        "additionalProperties" : false
      },
      "ListQueryParkTransaction" : {
        "type" : "object",
        "required" : [ "event_at" ],
        "properties" : {
          "event_at" : {
            "$ref" : "#/components/schemas/DateTimeInterval"
          },
          "category_ids" : {
            "$ref" : "#/components/schemas/TransactionCategoryIds"
          }
        },
        "additionalProperties" : false
      },
      "ParksTransactionsListQueryPark" : {
        "type" : "object",
        "required" : [ "id", "transaction" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/ParkId"
          },
          "transaction" : {
            "$ref" : "#/components/schemas/ListQueryParkTransaction"
          }
        },
        "additionalProperties" : false
      },
      "ParksTransactionsListQuery" : {
        "type" : "object",
        "required" : [ "park" ],
        "properties" : {
          "park" : {
            "$ref" : "#/components/schemas/ParksTransactionsListQueryPark"
          }
        },
        "additionalProperties" : false
      },
      "ParksTransactionsListRequest" : {
        "type" : "object",
        "required" : [ "query" ],
        "properties" : {
          "query" : {
            "$ref" : "#/components/schemas/ParksTransactionsListQuery"
          },
          "limit" : {
            "$ref" : "#/components/schemas/TransactionsListLimit"
          },
          "cursor" : {
            "$ref" : "#/components/schemas/Cursor"
          }
        },
        "additionalProperties" : false
      },
      "ParksParksDriverProfilesTransactionsListQueryParkDriverProfile" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/DriverProfileId"
          }
        },
        "additionalProperties" : false
      },
      "ParksParksDriverProfilesTransactionsListQueryPark" : {
        "type" : "object",
        "required" : [ "id", "driver_profile", "transaction" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/ParkId"
          },
          "driver_profile" : {
            "$ref" : "#/components/schemas/ParksParksDriverProfilesTransactionsListQueryParkDriverProfile"
          },
          "transaction" : {
            "$ref" : "#/components/schemas/ListQueryParkTransaction"
          }
        },
        "additionalProperties" : false
      },
      "ParksParksDriverProfilesTransactionsListQuery" : {
        "type" : "object",
        "required" : [ "park" ],
        "properties" : {
          "park" : {
            "$ref" : "#/components/schemas/ParksParksDriverProfilesTransactionsListQueryPark"
          }
        },
        "additionalProperties" : false
      },
      "ParksDriverProfilesTransactionsListRequest" : {
        "type" : "object",
        "required" : [ "query" ],
        "properties" : {
          "query" : {
            "$ref" : "#/components/schemas/ParksParksDriverProfilesTransactionsListQuery"
          },
          "limit" : {
            "$ref" : "#/components/schemas/TransactionsListLimit"
          },
          "cursor" : {
            "$ref" : "#/components/schemas/Cursor"
          }
        },
        "additionalProperties" : false
      },
      "ParksOrdersTransactionsListQueryParkOrder" : {
        "type" : "object",
        "required" : [ "ids" ],
        "properties" : {
          "ids" : {
            "$ref" : "#/components/schemas/OrderIds"
          }
        },
        "additionalProperties" : false
      },
      "ParksOrdersTransactionsListQueryParkTransaction" : {
        "type" : "object",
        "properties" : {
          "event_at" : {
            "$ref" : "#/components/schemas/DateTimeOptionalInterval"
          }
        },
        "additionalProperties" : false
      },
      "ParksOrdersTransactionsListQueryPark" : {
        "type" : "object",
        "required" : [ "id", "order" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/ParkId"
          },
          "order" : {
            "$ref" : "#/components/schemas/ParksOrdersTransactionsListQueryParkOrder"
          },
          "transaction" : {
            "$ref" : "#/components/schemas/ParksOrdersTransactionsListQueryParkTransaction"
          }
        },
        "additionalProperties" : false
      },
      "ParksOrdersTransactionsListQuery" : {
        "type" : "object",
        "required" : [ "park" ],
        "properties" : {
          "park" : {
            "$ref" : "#/components/schemas/ParksOrdersTransactionsListQueryPark"
          }
        },
        "additionalProperties" : false
      },
      "ParksOrdersTransactionsListRequest" : {
        "type" : "object",
        "required" : [ "query" ],
        "properties" : {
          "query" : {
            "$ref" : "#/components/schemas/ParksOrdersTransactionsListQuery"
          }
        },
        "additionalProperties" : false
      },
      "ParksOrdersTransactionsListResponse" : {
        "type" : "object",
        "required" : [ "transactions" ],
        "properties" : {
          "transactions" : {
            "$ref" : "#/components/schemas/ParksTransactionsList"
          }
        },
        "additionalProperties" : false
      },
      "ParksDriverProfilesTransactionsRequest" : {
        "type" : "object",
        "required" : [ "park_id", "driver_profile_id", "category_id", "amount", "description" ],
        "properties" : {
          "park_id" : {
            "$ref" : "#/components/schemas/ParkId"
          },
          "driver_profile_id" : {
            "$ref" : "#/components/schemas/DriverProfileId"
          },
          "category_id" : {
            "type" : "string",
            "description" : "категория создаваемой транзакции,\nна данный момент разрешена только partner_service_manual\n",
            "enum" : [ "partner_service_manual" ]
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "$ref" : "#/components/schemas/Description"
          }
        },
        "additionalProperties" : false
      },
      "ParksDriverProfilesTransactionsResponse" : {
        "type" : "object",
        "required" : [ "event_at", "park_id", "driver_profile_id", "category_id", "amount", "currency_code", "description", "created_by" ],
        "properties" : {
          "event_at" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "park_id" : {
            "$ref" : "#/components/schemas/ParkId"
          },
          "driver_profile_id" : {
            "$ref" : "#/components/schemas/DriverProfileId"
          },
          "category_id" : {
            "$ref" : "#/components/schemas/TransactionCategoryId"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "currency_code" : {
            "$ref" : "#/components/schemas/CurrencyCode"
          },
          "description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "created_by" : {
            "$ref" : "#/components/schemas/TransactionCreatedBy"
          }
        },
        "additionalProperties" : false
      }
    }
  }
}