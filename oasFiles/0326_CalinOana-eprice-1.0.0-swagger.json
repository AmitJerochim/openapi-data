{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Syneco External Pricing API",
    "version" : "1.0.0",
    "description" : "Interface relevant for pricing operations."
  },
  "servers" : [ {
    "url" : "https://test-offerprocess-api.portal.syneco.net/dev"
  } ],
  "tags" : [ {
    "name" : "Offers",
    "description" : "Offer process"
  }, {
    "name" : "Profiles",
    "description" : "Profile data"
  } ],
  "paths" : {
    "/api/extern/offers" : {
      "post" : {
        "tags" : [ "Offers" ],
        "summary" : "Request price offer",
        "operationId" : "fetchPriceOffer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PricingProfileWrapper"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation or pending",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SynecoResponsesWrapper"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/EntityNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/api/extern/profile" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "summary" : "Check the status of a profile/requestId",
        "operationId" : "getPricingRequestStatus",
        "parameters" : [ {
          "in" : "query",
          "name" : "requestId",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id of the request to be checked"
        } ],
        "responses" : {
          "200" : {
            "description" : "An object containing the response and/or status of the request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SynecoResponsesWrapper"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/EntityNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/api/extern/slprofiles" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "summary" : "A list of SLP profiles for the requested commodity",
        "operationId" : "fetchSLProfilesByCommodity",
        "parameters" : [ {
          "in" : "query",
          "name" : "commodity",
          "schema" : {
            "$ref" : "#/components/schemas/EnumCommodity"
          },
          "required" : true,
          "description" : "The type of profiles to return, filtered by Commodity"
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of SLP profiles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SLProfileDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/EntityNotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  },
  "security" : [ {
    "token" : [ ]
  } ],
  "components" : {
    "securitySchemes" : {
      "token" : {
        "type" : "http",
        "scheme" : "bearer",
        "description" : "Standard Authorization header using the Bearer scheme. Example: \"bearer {token}\""
      }
    },
    "responses" : {
      "NotFound" : {
        "description" : "The specified resource was not found"
      },
      "Unauthorized" : {
        "description" : "Authorization information is missing or invalid"
      },
      "UnexpectedError" : {
        "description" : "Unexpected Error",
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "string",
              "description" : "Error message"
            }
          }
        }
      },
      "EntityNotFound" : {
        "description" : "Requested entity was not found",
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "string",
              "description" : "Error message"
            }
          }
        }
      }
    },
    "schemas" : {
      "ResponseStatus" : {
        "type" : "object",
        "description" : "An object which hav the request result status and (if the case) information about the error",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/EnumPricingResultType"
          },
          "details" : {
            "description" : "Details about the request status",
            "type" : "string"
          }
        }
      },
      "PricingProfileWrapper" : {
        "type" : "object",
        "description" : "A wrapper object which contains the configuration flags and the input object",
        "required" : [ "pricingDetailsWithProfiles" ],
        "properties" : {
          "settingsFlags" : {
            "$ref" : "#/components/schemas/FlagsMap"
          },
          "pricingDetailsWithProfiles" : {
            "$ref" : "#/components/schemas/PricingDetailsWithProfiles"
          }
        }
      },
      "FlagsMapEntry" : {
        "type" : "object",
        "description" : "A single configuration entry consisting of a string Key and true/false as value",
        "properties" : {
          "key" : {
            "description" : "Configuration key",
            "type" : "string"
          },
          "value" : {
            "description" : "Configuration value, true/false",
            "type" : "boolean"
          }
        }
      },
      "FlagsMap" : {
        "description" : "This map can be used to activate/deactivate steps in the offer process, like pricing, net-cost, etc.",
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/FlagsMapEntry"
        }
      },
      "SLProfileDTO" : {
        "description" : "Gas/Power load curve profiles for forecasting consumption",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Profile ID"
          },
          "name" : {
            "type" : "string",
            "description" : "Profile name"
          }
        }
      },
      "PricingDetailsWithProfiles" : {
        "description" : "Main pricing input object containing the load curve profiles and general information",
        "type" : "object",
        "required" : [ "requestId", "portfolioId", "forecastDomain", "bindingOffer" ],
        "properties" : {
          "requestId" : {
            "description" : "User-generated value for identifying this particular calculation",
            "type" : "string"
          },
          "portfolioId" : {
            "description" : "Pricing portfolio ID",
            "type" : "string"
          },
          "commodity" : {
            "$ref" : "#/components/schemas/EnumCommodity"
          },
          "controlZone" : {
            "$ref" : "#/components/schemas/EnumControlZone"
          },
          "marketArea" : {
            "$ref" : "#/components/schemas/EnumMarketArea"
          },
          "bindingOffer" : {
            "description" : "If true, this is a binding Offer type, not indicative",
            "type" : "boolean"
          },
          "pricingProfiles" : {
            "description" : "The pricing profiles which will be aggregated and which a price will be obtained for",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PricingProfile"
            }
          }
        }
      },
      "SynecoResponsesWrapper" : {
        "description" : "Response wrapper object which encloses the responses from all the applications involved in the request flow",
        "type" : "object",
        "properties" : {
          "responseStatus" : {
            "$ref" : "#/components/schemas/ResponseStatus"
          },
          "PricingResponseDTO" : {
            "$ref" : "#/components/schemas/PricingResponseDTO"
          },
          "allegroResponse" : {
            "$ref" : "#/components/schemas/AllegroResponse"
          },
          "confirmationResponse" : {
            "$ref" : "#/components/schemas/ConfirmationResponse"
          },
          "netCostResponse" : {
            "$ref" : "#/components/schemas/NetCostResponse"
          }
        }
      },
      "AllegroResponse" : {
        "description" : "Response object coming from Allegro",
        "type" : "object"
      },
      "ConfirmationResponse" : {
        "description" : "Response object coming from Confirmation tool",
        "type" : "object"
      },
      "NetCostResponse" : {
        "description" : "Response object coming from Net Cost",
        "type" : "object",
        "properties" : {
          "netCosts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetCostDto"
            }
          }
        }
      },
      "PricingResponseDTO" : {
        "description" : "Response object coming from Pricing",
        "required" : [ "requestId" ],
        "type" : "object",
        "properties" : {
          "calculationId" : {
            "description" : "ID of the calculation created in the Pricing tool",
            "type" : "string"
          },
          "requestId" : {
            "description" : "The user-generated ID of the request that caused this response",
            "type" : "string"
          },
          "controlZone" : {
            "$ref" : "#/components/schemas/EnumControlZone"
          },
          "marketArea" : {
            "$ref" : "#/components/schemas/EnumMarketArea"
          },
          "totalPrice" : {
            "description" : "The calculated cost per unit",
            "format" : "double",
            "type" : "number"
          }
        }
      },
      "Address" : {
        "description" : "Street Address",
        "type" : "object",
        "required" : [ "postalCode", "city", "street", "streetNumber" ],
        "properties" : {
          "postalCode" : {
            "type" : "string",
            "description" : "Address postal code. Max 5 characters"
          },
          "city" : {
            "type" : "string",
            "description" : "City"
          },
          "street" : {
            "type" : "string",
            "description" : "Street name"
          },
          "streetNumber" : {
            "type" : "string",
            "description" : "Address number"
          }
        }
      },
      "DeliveryPeriod" : {
        "description" : "Interval of the requested profile",
        "type" : "object",
        "required" : [ "startDate", "endDate" ],
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Starting date of delivery"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Ending date of delivery"
          }
        }
      },
      "NetCostDto" : {
        "type" : "object",
        "properties" : {
          "profileId" : {
            "type" : "string",
            "description" : "the id of the profile"
          },
          "accountingCost" : {
            "type" : "number"
          },
          "cogenerationCost" : {
            "type" : "number"
          },
          "concessionTotalCost" : {
            "type" : "number"
          },
          "eegCost" : {
            "type" : "number"
          },
          "electricityTaxCost" : {
            "type" : "number"
          },
          "measurementServicesCost" : {
            "type" : "number"
          },
          "meterOperationCost" : {
            "type" : "number"
          },
          "moreMinimumCosts" : {
            "type" : "number"
          },
          "offshoreCost" : {
            "type" : "number"
          },
          "overallWorkCost" : {
            "type" : "number"
          },
          "performanceCost" : {
            "type" : "number"
          },
          "reactivePowerCost" : {
            "type" : "number"
          },
          "regulatoryZone" : {
            "type" : "string"
          },
          "shutdownCost" : {
            "type" : "number"
          },
          "skuCost" : {
            "type" : "number"
          },
          "basicCost" : {
            "type" : "number"
          },
          "cogenerationCategoryACost" : {
            "type" : "number"
          },
          "offshoreCategoryACost" : {
            "type" : "number"
          },
          "shutdownCategoryACost" : {
            "type" : "number"
          },
          "skuCategoryACost" : {
            "type" : "number"
          },
          "gasCost" : {
            "type" : "number"
          },
          "accountingChargeCost" : {
            "type" : "number"
          },
          "controlEnergyAllocationCost" : {
            "type" : "number"
          },
          "conversionTaxCost" : {
            "type" : "number"
          },
          "gridOperator" : {
            "type" : "string"
          }
        }
      },
      "PricingProfile" : {
        "type" : "object",
        "required" : [ "deliveryAddress", "deliveryPeriod", "quantity", "scalingType", "profile" ],
        "properties" : {
          "deliveryAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "deliveryPeriod" : {
            "$ref" : "#/components/schemas/DeliveryPeriod"
          },
          "quantity" : {
            "description" : "Total volume",
            "type" : "number",
            "format" : "double"
          },
          "scalingType" : {
            "$ref" : "#/components/schemas/EnumScalingType"
          },
          "slpProfileId" : {
            "type" : "integer",
            "description" : "Slp profile id"
          },
          "pricingProfileId" : {
            "type" : "string",
            "description" : "Pricing Profile Identifier"
          },
          "meterType" : {
            "type" : "number",
            "description" : "Meter Type"
          },
          "hardware" : {
            "type" : "string",
            "description" : "Hardware"
          },
          "serviceProvided" : {
            "type" : "string",
            "description" : "Service Provided"
          },
          "voltageLevel" : {
            "$ref" : "#/components/schemas/EnumVoltageLevel"
          },
          "customerGroup" : {
            "$ref" : "#/components/schemas/EnumCustomerGroup"
          },
          "power" : {
            "type" : "number",
            "description" : "Power"
          },
          "additionalQuantityPercentage" : {
            "type" : "integer",
            "description" : "Additional Quantity Percentage"
          }
        }
      },
      "EnumCommodity" : {
        "description" : "Type of product of interest, GAS/POWER",
        "type" : "string",
        "enum" : [ "GAS", "POWER" ]
      },
      "EnumControlZone" : {
        "description" : "POWER control zones for pricing",
        "type" : "string",
        "enum" : [ "50Hertz", "Amprion", "TransnetBW", "Tennet" ]
      },
      "EnumMarketArea" : {
        "description" : "GAS market areas for pricing",
        "type" : "string",
        "enum" : [ "GP-L", "GP-H", "NCG-L", "NCG-H", "TTF" ]
      },
      "EnumScalingType" : {
        "description" : "Type of scaling",
        "type" : "string",
        "enum" : [ "none", "year", "full_period" ]
      },
      "EnumVoltageLevel" : {
        "description" : "Possible Voltage Levels",
        "type" : "string",
        "enum" : [ "NSP", "MSP_NSP_UMSP", "MSP_NSP_MESS", "MSP", "HSP_MSP_UMSP", "HSP_MSP_MESS", "HSP" ]
      },
      "EnumCustomerGroup" : {
        "type" : "string",
        "enum" : [ "GEWERBE", "HAUSHALT", "SPEICHERHEIZUNG", "KOMMUNALER_KUNDE", "UNTERBRECHBARE_BELIEFERUNG" ]
      },
      "EnumPricingResultType" : {
        "description" : "Describes the process result",
        "type" : "string",
        "enum" : [ "successful", "pending", "input_data_error" ]
      }
    }
  }
}