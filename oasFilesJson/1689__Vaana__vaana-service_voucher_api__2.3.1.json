{"openapi":"3.0.0","info":{"version":"2.3.1","title":"Vaana Service Voucher API"},"paths":{"/municipality/{clientId}/accounts":{"get":{"summary":"Get existing accounts for a muncipality","parameters":[{"description":"Vaana municipality client number. This is the Vaana client ID of the municipality. Client ID should be requested from Vaana.","name":"clientId","in":"path","required":true,"schema":{"type":"string"}}],"security":[{"service-vouchers-authorizer":[]}],"responses":{"200":{"description":"List of accounts of the specified municipality","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}}}}}},"400":{"description":"Bad request. Possible error codes:\n  * invalid-data: The provided municipality id has invalid format\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"$ref":"#/components/responses/UnexpectedError"}}}},"/accounts/{accountId}/voucher-types":{"get":{"summary":"Get available voucher types for a municipality account","parameters":[{"description":"Id of the account. For a list of accounts use /municipality/{clientId}/accounts","name":"accountId","in":"path","required":true,"schema":{"type":"string"}}],"security":[{"service-vouchers-authorizer":[]}],"responses":{"200":{"description":"List of voucher types for specified account","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"defaultValue":{"description":"Proposed default value in euro cents for the voucher.","type":"integer"},"defaultMonthlyValue":{"description":"Amount in euro cents that can be charged from the voucher in a single transaction.","type":"integer"}}}}}}},"400":{"description":"Bad request. Possible error codes:\n  * account-not-found: The municipality account with the given id does not exist\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"$ref":"#/components/responses/UnexpectedError"}}}},"/municipality/{clientId}/contract-venues":{"get":{"summary":"Get venues the municipality has a contract with","parameters":[{"description":"Vaana municipality client number. This is the Vaana client ID of the municipality. Client ID should be requested from Vaana.","name":"clientId","in":"path","required":true,"schema":{"type":"string"}}],"security":[{"service-vouchers-authorizer":[]}],"responses":{"200":{"description":"List of venues that the specified municipality has a contract with","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"id":{"description":"Id of the venue","type":"string"},"name":{"description":"Name of the venue","type":"string"}}}}}}},"400":{"description":"Bad request. Possible error codes:\n  * municipality-not-found: The municipality with the given id does not exist\n  * insufficient-permissions: The user has insufficient rights\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"$ref":"#/components/responses/UnexpectedError"}}}},"/vouchers/{voucherId}":{"get":{"summary":"Get information about a voucher with the given id","parameters":[{"description":"Id of an existing voucher","name":"voucherId","in":"path","required":true,"schema":{"type":"string"}}],"security":[{"service-vouchers-authorizer":[]}],"responses":{"200":{"description":"Returns the voucher with the given id","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"Id of the service voucher"},"credits":{"type":"array","description":"List of credits issued to the voucher","items":{"type":"object","properties":{"href":{"type":"string","description":"Full-URI reference to the credit"},"id":{"type":"integer","description":"Id of the credit"},"balance":{"type":"integer","description":"Amount of money left on the credit (in euro cents)"},"validFrom":{"type":"string","format":"YYYY-MM-DD","pattern":"^\\d{4}-\\d{2}-\\d{2}$","description":"Start date of the validity period of the credit (inclusive)"},"validTo":{"type":"string","format":"YYYY-MM-DD","pattern":"^\\d{4}-\\d{2}-\\d{2}$","description":"End date of the validity period of the credit (inclusive)"}}}},"redeemable":{"type":"boolean","description":"Whether the service voucher can be redeemed. A voucher is redeemable until midnight on the same day as it was created, as long as it is unused."},"serviceDecisionNumber":{"type":"string","description":"Decision number of the voucher entered by the municipality"},"transactions":{"type":"array","description":"List of transactions on the voucher","items":{"type":"object","properties":{"amount":{"type":"integer","description":"Amount of debit / credit transaction (in euro cents)"},"id":{"type":"string","description":"Id of the transaction"},"timestamp":{"type":"string","format":"YYYY-MM-DDThh:mm:ss<timezone>","pattern":"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:\\d{2})$","description":"Timestamp of the transaction. Format is ISO8601 with second precision and timezone information."},"type":{"type":"string","enum":["EXPIRY","ISSUING","PAYMENT","REFUND","RETURN","TRANSFER","UNKNOWN_TRANSACTION"],"description":"Type of the transaction. It is used to keep track of the operations performed on a voucher:<br> * EXPIRY: Voucher expired and money are transferred back to the municipality account<br> * ISSUING: Voucher was created of renewed<br> * PAYMENT: A service was paid from the voucher<br> * REFUND: A payment made to a service provider was reverted<br> * RETURN: A transfer made to a voucher was redeemed<br> * TRANSFER: Manual transaction by customer service<br> * UNKNOWN_TRANSACTION: Unknown transaction\n"}}}},"valid":{"type":"boolean","description":"Whether the service voucher is valid and can be used"}}}}}},"400":{"description":"Bad request. Possible error codes:\n  * voucher-not-found: Voucher with the given id was not found\n  * voucher-not-supported: Voucher exists, but cannot be accessed through this API\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"$ref":"#/components/responses/UnexpectedError"}}},"patch":{"summary":"Modifies an existing service voucher","description":"Can be used to invalidate or to update an existing service voucher. Note that in case of an update, the existing voucher will be invalidated and a new voucher with updated parameters and a different id is created.\nNote: the option to change the validity period of a voucher will be removed in version 3.0 of the API","parameters":[{"description":"Id of an already created voucher. To create a voucher use resource /vouchers.","name":"voucherId","in":"path","required":true,"schema":{"type":"string"}}],"security":[{"service-vouchers-authorizer":[]}],"responses":{"200":{"description":"Successful update on an existing service voucher","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"Id of updated, invalidated or redeemed service voucher. In case of invalidation or redeeming, the id of the now invalid or redeemed voucher is returned. In case of an update, the id of the newly created voucher with updated parameters is returned."}}}}}},"400":{"description":"Bad request. Possible error codes:\n  * voucher-already-invalid: Voucher was already invalidated\n  * voucher-not-found: Voucher with the given id was not found\n  * validation-failure: Invalid combination of parameters\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"$ref":"#/components/responses/UnexpectedError"}},"requestBody":{"content":{"application/json":{"schema":{"title":"voucher update data","type":"object","properties":{"valid":{"type":"boolean","description":"Whether service voucher should be invalidated or not. Specify 'false' to invalidate an existing voucher. Specify 'true' to update an existing service voucher. Do not specify any value if you want to redeem the voucher."},"validFrom":{"deprecated":true,"type":"string","format":"YYYY-MM-DD","pattern":"^\\d{4}-\\d{2}-\\d{2}$","description":"Start date of service voucher validity period. One can use this parameter to update the service voucher validity period.\nNote: the option to change the validity period of a voucher will be removed in version 3.0 of the API"},"validTo":{"deprecated":true,"type":"string","format":"YYYY-MM-DD","pattern":"^\\d{4}-\\d{2}-\\d{2}$","description":"End date of service voucher validity period. One can use this parameter to update the service voucher validity period.\nNote: the option to change the validity period of a voucher will be removed in version 3.0 of the API"},"redeemed":{"type":"boolean","description":"Specify 'true' to redeem the voucher. In this case, leave all other properties undefined. In all other cases, leave this parameter undefined."}}}}}}}},"/vouchers/{voucherId}/credits/{creditId}":{"get":{"summary":"Get information about a credit with creditId that is issued on a voucher with voucherId","parameters":[{"description":"Id of the voucher to which this credit is issued","name":"voucherId","in":"path","required":true,"schema":{"type":"string"}},{"description":"Id of the issued credit","name":"creditId","in":"path","required":true,"schema":{"type":"string"}}],"security":[{"service-vouchers-authorizer":[]}],"responses":{"200":{"description":"Returns information about an issued credit with the given id","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"integer","description":"Id of the credit"},"balance":{"type":"integer","description":"Amount of money left on the credit (in euro cents)"},"validFrom":{"type":"string","format":"YYYY-MM-DD","pattern":"^\\d{4}-\\d{2}-\\d{2}$","description":"Start date of the validity period of the credit (inclusive)"},"validTo":{"type":"string","format":"YYYY-MM-DD","pattern":"^\\d{4}-\\d{2}-\\d{2}$","description":"End date of the validity period of the credit (inclusive)"},"voucher":{"type":"object","properties":{"href":{"type":"string","description":"Full-URI reference to the voucher to which the credit was issued"}}}}}}}},"400":{"description":"Bad request. Possible error codes:\n  * voucher-not-found: Voucher with the given id was not found\n  * credit-not-found: Credit with the given id was not found\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"$ref":"#/components/responses/UnexpectedError"}}}},"/vouchers":{"post":{"summary":"Creates a new service voucher","description":"There needs to be contract(s) between the municipality and the venue that cover the services allowed by the created voucher type for the whole duration of the voucher. Otherwise the service responds with a 'voucher-services-not-covered-by-contract' validation error.\nNote: vouchers created through this API currently have a default payment unit of 'Month' (i.e. services are charged monthly). The default service charge per month is the same as the value given in `monthlyLimit` field.","security":[{"service-vouchers-authorizer":[]}],"responses":{"201":{"description":"Successful creation of new service voucher","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"Id of the successfully created service voucher"}}}}}},"400":{"description":"Bad request. Possible error codes:\n  * validation-failure: Missing or malformed voucher parameters\n  * account-not-found: No municipality account with the given id exists\n  * voucher-services-not-covered-by-contract: There is no contract between the municipality and the venue for the services the given voucher type covers\n  * voucher-type-not-found: The given voucher type was not found\n  * insufficient-funds: The municipality account doesn't have sufficient funds to create the voucher\n  * invalid-voucher-data: The voucher data is invalid\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"$ref":"#/components/responses/UnexpectedError"}},"requestBody":{"content":{"application/json":{"schema":{"title":"voucher data","type":"object","required":["account","voucherType","venue","validFrom","validTo","value","serviceDecisionId"],"properties":{"account":{"type":"string","description":"Id of the municipality account from which the service voucher is created"},"voucherType":{"type":"string","description":"Id of the voucher type that is used to create this service voucher"},"venue":{"type":"string","description":"Id of the venue that this service voucher is targeted to"},"validFrom":{"type":"string","format":"YYYY-MM-DD","pattern":"^\\d{4}-\\d{2}-\\d{2}$","description":"Start date of service voucher validity period"},"validTo":{"type":"string","format":"YYYY-MM-DD","pattern":"^\\d{4}-\\d{2}-\\d{2}$","description":"End date of service voucher validity period"},"value":{"type":"integer","description":"Service voucher total value in euro cents"},"monthlyLimit":{"type":"integer","description":"Amount the service voucher can be used per month in euro cents. Must be > 0, otherwise error invalid-voucher-data is returned."},"serviceDecisionId":{"type":"string","description":"Id of the service decision or the diary id"},"beneficiary":{"type":"object","required":["sex","birthDay"],"properties":{"name":{"type":"string","description":"Beneficiary first name and surname"},"sex":{"type":"string","format":"m | f","enum":["m","f"],"description":"Beneficiary sex"},"birthDay":{"type":"string","format":"YYYY-MM-DD","pattern":"^\\d{4}-\\d{2}-\\d{2}$","description":"Beneficiary birth day"}}}}}}}}}},"/vouchers/{voucherId}/debit":{"post":{"summary":"Charges money from a voucher (i.e. creates a new debit on the voucher)","parameters":[{"description":"Id of the voucher to charge","name":"voucherId","in":"path","required":true,"schema":{"type":"string"}}],"security":[{"service-vouchers-authorizer":[]}],"responses":{"201":{"description":"Debit was successfully created and voucher successfully charged.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"description":"Id of transaction","type":"string"}}}}}},"400":{"description":"Bad request. Possible error codes:\n  * insufficient-funds: Voucher doesn't have sufficient funds to charge from\n  * invalid-voucher: Voucher with the given id was not found\n  * no-valid-contract: There is no contract between the municipality and the venue for at least one of the selected services\n  * invalid-debit-data: Provided debit object has invalid format\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"$ref":"#/components/responses/UnexpectedError"}},"requestBody":{"content":{"application/json":{"schema":{"title":"voucher data","type":"object","required":["amount","venue","serviceProvidedFrom","serviceProvidedTo"],"properties":{"amount":{"type":"integer","description":"Amount of money to charge from a given voucher (in euro cents)"},"venue":{"type":"string","description":"Id of the venue the money is transferred to. This is required since the authenticated user might be allowed to manage several venues."},"serviceProvidedFrom":{"type":"string","format":"YYYY-MM-DDThh:mm<timezone>","pattern":"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}(Z|[+-]\\d{2}:\\d{2})$","description":"Time at which the providing of the service was started. Format is ISO8601 with minute precision and mandatory timezone, e.g. '2019-08-01T12:00+03:00'. Currently minutes and hours will be ignored."},"serviceProvidedTo":{"type":"string","format":"YYYY-MM-DDThh:mm<timezone>","pattern":"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}(Z|[+-]\\d{2}:\\d{2})$","description":"Time at which the providing of the service was ended. Format is ISO8601 with minute precision and mandatory timezone, e.g. '2019-08-01T12:00+03:00'. Currently minutes and hours will be ignored."},"reference":{"type":"string","description":"Transaction reference - must be a numeric value"}}}}}}}}},"servers":[{"url":"/service-voucher"}],"components":{"securitySchemes":{"service-vouchers-authorizer":{"type":"apiKey","name":"Authorization","in":"header"}},"responses":{"UnexpectedError":{"description":"Unexpected error. This is typically an internal server error.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"schemas":{"ErrorResponse":{"description":"Describes why a request failed","type":"object","properties":{"error":{"description":"List of error codes. See the documentation of a specific resource to learn which of these codes can actually occur for the resource.","type":"array","items":{"type":"string","enum":["event-body-missing","json-parse-error","parse-error","validation-failure","internal-server-error","resource-not-found","path-parameter-not-found","insufficient-permissions","insufficient-funds","municipality-not-found","account-not-found","voucher-type-not-found","voucher-services-not-covered-by-contract","invalid-data","voucher-already-invalid","voucher-not-found","voucher-not-supported","voucher-period-not-found","no-valid-contract","error-while-executing-charge","invalid-voucher"]}},"message":{"description":"Human-readable error message (in English language)","type":"string"},"invalidFields":{"description":"In case of a validation error (error code `invalid-data`), lists the fields that are invalid. For every invalid field, a list of error messages is returned.\n","type":"object","additionalProperties":{"description":"List of error messages for the invalid field given by the key","type":"array","items":{"description":"Error message describing a single validation failure","type":"string"}}}},"required":["error","message"]}}}}