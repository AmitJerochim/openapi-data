{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "COG API server",
    "url" : "https://virtserver.swaggerhub.com/whisperwind/COG/1.0.0"
  } ],
  "info" : {
    "description" : "COG interface with external partners. API is IP locked and each call should be authenticated with a key.",
    "version" : "1.0.0",
    "title" : "COG API",
    "contact" : {
      "email" : "georgi@zenlime.com"
    }
  },
  "paths" : {
    "/branch" : {
      "post" : {
        "summary" : "Post branch updates",
        "description" : "Send information updates for all branch changes as they happen - inactivity, change of currencies provided at the kiosk, etc",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Confirms branch changes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Branch"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/StatusMessage"
          }
        }
      }
    },
    "/orders" : {
      "get" : {
        "summary" : "Get a list of unprocessed orders",
        "description" : "",
        "parameters" : [ {
          "in" : "query",
          "name" : "limit",
          "description" : "default 100 items",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 1000
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a list of unprocessed orders, ordered in ascending order by timestamp",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/StatusMessage"
          }
        }
      }
    },
    "/order/{id}/process" : {
      "get" : {
        "summary" : "Converts customer details to HEX code and encrypts it",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "description" : "order ID",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns HEX for the order to be converted to a QR code",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderHex"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/StatusMessage"
          }
        }
      }
    },
    "/order/{id}/cancel" : {
      "get" : {
        "summary" : "Cancels the order, removing it from the system",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "description" : "order ID",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/StatusMessage"
          },
          "400" : {
            "$ref" : "#/components/schemas/StatusMessage"
          }
        }
      }
    },
    "/order/{id}/code" : {
      "get" : {
        "summary" : "Confirms the order, sends SMS & email to the client",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "description" : "order ID",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/OrderCode"
          },
          "400" : {
            "$ref" : "#/components/schemas/StatusMessage"
          }
        }
      }
    },
    "/order/validate" : {
      "post" : {
        "summary" : "Validates if the order exists, marks order as validated and ready to be confirmed",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderHex"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/StatusMessage"
          },
          "400" : {
            "$ref" : "#/components/schemas/StatusMessage"
          }
        }
      }
    },
    "/order/{id}/confirm" : {
      "get" : {
        "summary" : "Confirms validated order, sends confirmation emails",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "description" : "order ID",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/StatusMessage"
          },
          "400" : {
            "$ref" : "#/components/schemas/StatusMessage"
          }
        }
      }
    }
  },
  "security" : [ {
    "bearer" : [ ]
  } ],
  "components" : {
    "securitySchemes" : {
      "bearer" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "schemas" : {
      "Branch" : {
        "type" : "object",
        "required" : [ "id", "name", "isActive", "address", "town", "postCode", "branchImage", "openingHours", "acceptedCurrencies" ],
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string",
            "example" : "Southend Airport"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "address" : {
            "type" : "string",
            "example" : "Eastwoodbury Cres"
          },
          "town" : {
            "type" : "string",
            "example" : "Southend-on-Sea"
          },
          "postCode" : {
            "type" : "string",
            "format" : "postcode",
            "example" : "SS2 6YF"
          },
          "branchImage" : {
            "type" : "string",
            "format" : "url",
            "example" : "https://www.currencyonlinegroup.com/images/collectionBoxes/SouthendAirport.jpg"
          },
          "acceptedCurrencies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Currency"
            }
          }
        }
      },
      "Currency" : {
        "required" : [ "Code" ],
        "properties" : {
          "Code" : {
            "type" : "string",
            "example" : "USD"
          }
        },
        "type" : "object"
      },
      "CurrencyAmount" : {
        "required" : [ "Code", "Amount" ],
        "properties" : {
          "Code" : {
            "type" : "string",
            "example" : "USD"
          },
          "Amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 1500.0
          }
        },
        "type" : "object"
      },
      "Order" : {
        "required" : [ "id", "transactionTime", "orderItems", "branchId" ],
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "transactionTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "orderItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            }
          },
          "branchId" : {
            "type" : "integer"
          }
        }
      },
      "OrderHex" : {
        "required" : [ "id", "hex" ],
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "hex" : {
            "type" : "string",
            "example" : "38626639626235652d623462322d346238332d613661322d356235313963366532303530"
          }
        }
      },
      "OrderCode" : {
        "required" : [ "id", "code" ],
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "code" : {
            "type" : "string",
            "description" : "4-digit code",
            "example" : 1234
          }
        }
      },
      "StatusMessage" : {
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "message" : {
            "type" : "string",
            "example" : "Bad Request"
          }
        }
      }
    }
  }
}