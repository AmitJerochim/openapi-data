openapi: 3.0.1
servers:
  - url: https://localhost:8080/OB-API-REST/v2
info:
  description: "Public API of Diebold Nixdorf for Banking Core Systems integration"
  version: 2.2.0
  title: DN Open Backend API
  contact:
    name: Thorsten Brinkmann
    email: Thorsten.Brinkmann@dieboldnixdorf.com
  termsOfService: /terms-of-use
externalDocs:
  url: /docs
  description: Find more information here
tags:
  - name: "Authentication API"
    description: Authentication request for a transaction.
  - name: "Account Information API"
    description: Fetches account information.
  - name: "Consumer Information API"
    description: Fetches consumer information.
  - name: "Account Transaction API"
    description: Performs a transaction.
paths:
  /getToken:
    get:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/tokenAuthorization'
      summary: Get token required for a transaction.
      tags: [Authentication API]
      operationId: getToken
      description: Retrieves a session Token which can be used for a transaction.
      responses:
        '200':
          description: OK. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /accountList:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Get the account list of a consumer
      tags: [Account Information API]
      operationId: accountList
      description: Retrieves a list of all accounts of a consumer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountListRequest'
        description: Account List Request Structure
      responses:
        '200':
          description: OK. The list of accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountListResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /accountInquiry:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns detail information of an account
      tags: [Account Information API]
      operationId: accountInquiry
      description: Returns detail information of an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountInquiryRequest'
        description: Account Inquiry Request Structure
      responses:
        '200':
          description: OK. Detail information of an account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountInquiryResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /consumerIdentify:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns detailed information of a consumer
      tags: [Consumer Information API]
      operationId: consumerIdentify
      description: Returns detailed information of a consumer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consumerIdentifyRequest'
        description: Consumer Inquiry Request Structure
      responses:
        '200':
          description: OK. Detailed information of a consumer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consumerIdentifyResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /getAccountMovement:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns the list of all the transactions processed in an account.
      tags: [Account Information API]
      operationId: getAccountMovement
      description: Returns the list of all the transactions processed in an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getAccountMovementRequest'
        description: GetAccountMovement Request Structure
      responses:
        '200':
          description: OK. List of all the transactions processed in an account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountMovementResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /getAccountStopHold:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns list of Holds on an account.
      tags: [Account Information API]
      operationId: getAccountStopHold
      description: Returns list of Holds on an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getAccountStopHoldRequest'
        description: GetAccountHold Request Structure
      responses:
        '200':
          description: OK. List of Hold on an account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountStopHoldResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /getAccountWarnings:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns list of Account Warnings on an account.
      tags: [Account Information API]
      operationId: getAccountWarnings
      description: Returns list of Account Warnings on an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getAccountWarningsRequest'
        description: GetAccountWarnings Request Structure
      responses:
        '200':
          description: OK. List of Account Warnings on an account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountWarningsResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /getAccountListWarnings:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns list of Account Warnings on every account.
      tags: [Account Information API]
      operationId: getAccountListWarnings
      description: Returns list of Account Warnings on every account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getAccountListWarningsRequest'
        description: GetAccountWarnings Request Structure
      responses:
        '200':
          description: OK. List of Account Warnings on every account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountListWarningsResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /getBusinessDate:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns the Business Date.
      tags: [Account Information API]
      operationId: getBusinessDate
      description: Returns the Business Date.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getBusinessDateRequest'
        description: Get Business Date Request Structure
      responses:
        '200':
          description: OK. Returns the Business Date.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBusinessDateResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /getCardList:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns list of Cards of an account.
      tags: [Account Information API]
      operationId: getCardList
      description: Returns list of Cards of an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getCardListRequest'
        description: GetCardList Request Structure
      responses:
        '200':
          description: OK. List of Cards of an account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCardListResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /getCheckIssuerDetails:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns details of a check.
      tags: [Account Information API]
      operationId: getCheckIssuerDetails
      description: Returns details of a check.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getCheckIssuerDetailsRequest'
        description: GetCheckIssuerDetails Request Structure
      responses:
        '200':
          description: OK. Returns details of a check.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCheckIssuerDetailsResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /getConsumerWarnings:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns a list of consumer warnings on an account.
      tags: [Consumer Information API]
      operationId: getConsumerWarnings
      description: Returns a list of consumer warnings on an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getConsumerWarningsRequest'
        description: GetConsumerWarnings Request Structure
      responses:
        '200':
          description: OK. List of consumer warnings on an account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConsumerWarningsResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /getScheduledTransactions:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns the list of all the transactions that are yet to be in an account.
      tags: [Account Information API]
      operationId: getScheduledTransactions
      description: Returns the list of all the transactions that are yet to be in an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getScheduledTransactionsRequest'
        description: GetScheduledTransactions Request Structure
      responses:
        '200':
          description: OK. List of all the transactions that are yet to be in an account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getScheduledTransactionsResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /ofacSearch:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Returns the list of all ofac accounts.
      tags: [Consumer Information API]
      operationId: ofacSearch
      description: Returns the list of all ofac accounts.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getOfacSearchRequest'
        description: OfacSearch Request Structure
      responses:
        '200':
          description: OK. List of all ofac accounts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOfacSearchResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /accountHold:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Account Hold
      tags: [Account Information API]
      operationId: accountHold
      description: Account Hold
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountHoldRequest'
        description: Account Hold Request Structure
      responses:
        '200':
          description: accountHold response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /cancelAccountHold:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Cancel Account Hold.
      tags: [Account Information API]
      operationId: cancelAccountHold
      description: Cancel Account Hold.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelAccountHoldRequest'
        description: Cancel Account Hold. Request Structure
      responses:
        '200':
          description: cancelAccountHold response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationWithoutAdditionalPropertiesResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /credit:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: performs credit operation
      tags: [Account Transaction API]
      operationId: credit
      description: performs credit operation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/creditRequest'
        description: Credit Request Structure
      responses:
        '200':
          description: credit response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /debit:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: performs debit operation
      tags: [Account Transaction API]
      operationId: debit
      description: performs debit operation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/debitRequest'
        description: Debit Request Structure
      responses:
        '200':
          description: debit response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /pinChange:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Change pin.
      tags: [Account Transaction API]
      operationId: pinChange
      description: Change pin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pinChangeRequest'
        description: Pin Change Request Structure
      responses:
        '200':
          description: pinChange response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /pinCheck:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Verify pin.
      tags: [Account Transaction API]
      operationId: pinCheck
      description: Verify pin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pinCheckRequest'
        description: Pin Check Request Structure
      responses:
        '200':
          description: pinCheck response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /transfer:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: performs transfer operation
      tags: [Account Transaction API]
      operationId: transfer
      description: performs transfer operation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRequest'
        description: Transfer Request Structure
      responses:
        '200':
          description: transfer response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /updateAccountNickName:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: update the account nickname
      tags: [Account Information API]
      operationId: updateAccountNickName
      description: update the account nickname
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAccountNickNameRequest'
        description: Update Account Nickname Request Structure
      responses:
        '200':
          description: updateAccountNickName response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationWithoutAdditionalPropertiesResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /updateCardState:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Updates the card state
      tags: [Consumer Information API]
      operationId: updateCardState
      description: Updates the card state
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCardStateRequest'
        description: Update Card State Request Structure
      responses:
        '200':
          description: updateCardState response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationWithoutAdditionalPropertiesResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /reversal:
    post:
      parameters:
      - $ref: '#/components/parameters/version'
      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: Performs reversal for a transaction.
      tags: [Account Transaction API]
      operationId: reversal
      description: Performs reversal for a transaction.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reversalRequest'
        description: Reversal Request Structure
      responses:
        '200':
          description: updateCardState response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionConfirmationResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'            
  /currencyTransactionReporting:
    post:
      parameters:
      - $ref: '#/components/parameters/version'      
      - $ref: '#/components/parameters/initiatingPartyId'
      - $ref: '#/components/parameters/productName'
      - $ref: '#/components/parameters/initiatingPartyName'
      - $ref: '#/components/parameters/timestamp'
      - $ref: '#/components/parameters/referenceId'
      - $ref: '#/components/parameters/sessionToken'
      - $ref: '#/components/parameters/authorization'
      - $ref: '#/components/parameters/authType'
      summary: performs transactions that consists of cash deposits, check deposits, cash withdrawals and cash checks
      tags: [Account Transaction API]
      operationId: currencyTransactionReporting
      description: Allows consumers to create teller transactions that consist of cash deposits, check deposits, cash withdrawals, and cash checks. It also allow consumers to add teller currency transactions. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currencyTransactionReportingRequest'
        description: Currency Transaction Reporting Object Structure
      responses:
        '200':
          description: currency transaction reporting response OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currencyTransactionReportingResponse'
        '400':
          description: Invalid input fields, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Error while performing currency transaction reporting operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'                
components:
  parameters:
    version:
      name: version
      in: header
      description: Version of DN Open Backend API being used.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 10
        example: '2.2.0'
    operation:        
      name: operation
      in: header
      description: Name of the operation that is requested. eg. credit
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 255
        example: "transfer"
    initiatingPartyId:        
      name: initiatingPartyId
      in: header
      description: Identifier of the party that has initiated this transaction, in this case Diebold Nixdorf's ID.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 255
        example: "DN123"
    productName:
      name: productName
      in: header
      description: The name of the product which is consuming the service (business product name).
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 255
        example: "Vynamic Transaction Engine"
    initiatingPartyName:
      name: initiatingPartyName
      in: header
      description: The name of the initiating party.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 255
        example: "Diebold Nixdorf"
    timestamp:        
      name: timestamp
      in: header
      description: timestamp of the transaction
      required: true
      schema:
        type: string
        format: "yyyy-MM-dd HH:mm:ssZ"
        description: 'A timestamp as defined by date-time - RFC3339. Please see: https://tools.ietf.org/html/rfc3339'
        example: "2019-09-23T16:40:521"
    referenceId:        
      name: referenceId
      in: header
      description: Unique identifier for the transaction request.
      required: true
      schema:
        type: string
        example: A123F34
    sessionToken:        
      name: token
      in: header
      description: Unique identifier for a session. This token can vary per request or can be re-generated on a scheduled basis like every 1 hour or 1 day.
      schema:
        type: string
        example: "T2131241"
    authType:        
      name: authType
      in: header
      description: Authentication Mechanisam being used
      required: true
      schema:
        type: string
        example: "Basic Auth"
    tokenAuthorization:        
      name: Authorization
      in: header
      description: Contains base 64 encoded userName:password string using HTTP Basic Authentication.
      required: true
      schema:
        type: string
        example: "Basic afae1wad213da"
    authorization:        
      name: Authorization
      in: header
      description: Contains base 64 encoded userName:password string using HTTP Basic Authentication.
      schema:
        type: string
        example: "Basic afae1wad213da"
  schemas:
    errorResponse:
      type: object
      required:
      - responseCode
      properties:
        responseCode:
          type: string
          description: HTTP Response Code
          example: "FAIL"
        error:
          required:
          - code
          - message
          properties:
            code: 
              $ref: '#/components/schemas/ErrorCode'
            message:
              $ref: '#/components/schemas/ErrorMessage'
    tokenResponse:
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - token
          - validity
          properties:
            token:
              type: string
              example: "123456789"
            expirationDate:        
              type: string
              format: "yyyy-MM-dd HH:mm:ssZ"
              description: "Expiry timestamp of the genrated token."
              example: "2019-09-23T16:40:521"
    accountInquiryRequest:
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: "sbAccountOverview"
            operation:
              type: string
              minLength: 1
              example: "accountInquiry"          
        payload:
          required:
          - accountRef
          properties:
            accountRef:
              $ref: '#/components/schemas/AccountRef'
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
    consumerIdentifyRequest:
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: "sbLogin"
            operation:
              type: string
              minLength: 1
              example: "consumerIdentify"          
        payload:
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            accountRef:
              $ref: '#/components/schemas/AccountRef'
            consumerSearchForm:
              type: object
              properties:
                firstName:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: The first name of the account holder. 
                  example: "Betty"
                lastName:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: The last name of the account holder. 
                  example: "Adams"
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: The full name of the account holder. Represents the full name of the individual or name of the business entity if the holder is a business organisation.
                  example: "Betty Adams"
                phoneNumber:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: The phone number of the entity holding the account.
                  example: "91-1234567890"
                taxId:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: The Tax Identification Number
                  example: "123456789"
    accountInquiryResponse:
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - accountDetails
          properties:
            accountDetails:
              $ref: '#/components/schemas/AccountInfo'
    creditRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: "sbDeposit"
            operation:
              type: string
              minLength: 1
              example: "credit"          
        payload:
          required:
          - accountRef
          - amount
          properties:
            amount:
              $ref: '#/components/schemas/Amount'
            consumerId:
              type: string
              example: 123456
            check:
              $ref: '#/components/schemas/Check'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            remark:
              type: string
              maxLength: 255
              description: transaction comments.
              example: some remark.
            clearingCategoryCode:
              type: string
              description: Clearing Category Code
              example: "IMED"
            type:
              type: string
              example: PAYOFF
            valueDate:
              $ref: '#/components/schemas/Date'
            fundTypeCode:
              type: string
              description: Fund Type
              example: "CASH"
            cashBoxNumber:
              type: integer
              description: Cash Box Number
              example: 1234
            accountRef:
              $ref: '#/components/schemas/AccountRef'
    debitRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: "sbWithdrawal"
            operation:
              type: string
              minLength: 1
              example: "debit"          
        payload:
          required:
          - accountRef
          - amount
          properties:
            amount:
              $ref: '#/components/schemas/Amount'
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            check:
              $ref: '#/components/schemas/Check'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            remark:
              type: string
              maxLength: 255
              description: transaction comments.
              example: some remark.
            clearingCategoryCode:
              type: string
              description: Clearing Category Code
              example: "IMED"
            type:
              type: string
              example: PAYOFF
            valueDate:
              $ref: '#/components/schemas/Date'
            fundTypeCode:
              type: string
              description: Fund Type
              example: "CASH"
            cashBoxNumber:
              type: integer
              description: Cash Box Number
              example: 1234
            accountRef:
              $ref: '#/components/schemas/AccountRef'
    transferRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: "sbTransfer"
            operation:
              type: string
              minLength: 1
              example: "transfer"          
        payload:
          required:
          - accountRefTo
          - accountRefFrom
          - amount
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            remark:
              type: string
              maxLength: 255
              description: transaction comments.
              example: some remark.
            type:
              type: string
              example: PAYOFF
            clearingCategoryCode:
              type: string
              description: Clearing Category Code
              example: "IMED"
            valueDate:
              $ref: '#/components/schemas/Date'
            fundTypeCode:
              type: string
              description: Fund Type
              example: "CASH"
            accountRefTo:
              $ref: '#/components/schemas/AccountRef'
            accountRefFrom:
              $ref: '#/components/schemas/AccountRef'
            amount:
              $ref: '#/components/schemas/Amount'
    currencyTransactionReportingRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "currencyTransactionReporting"          
        payload:
          properties:
            remark:
              type: string
              maxLength: 255
              description: currency transaction reporting comments.
              example: CTR request in process.
            conductorConsumerId:
              type: string
              example: A000013
            conductorNonConsumerId:
              type: string
              example: 243234
            conductorType:
              type: string
              example: NonConsumer
            transactionMetaData:
              type: array
              items:
                $ref: '#/components/schemas/TransactionMetaData'
            additionalProperties:
              $ref: '#/components/schemas/AdditionalProperties'
    currencyTransactionReportingResponse:
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          type: object
          properties:
            receiptId:
              type: string
              minLength: 1
              description: Receipt identification number of the transaction
              example: 998a87999
            additionalProperties:
              type: object
    updateCardStateRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "updateCardState"          
        payload:
          required:
          - card
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/Card"
            pin:
              $ref: "#/components/schemas/Pin"
    accountHoldRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "accountHold"          
        payload:
          required:
          - amount
          - expiryDate
          - holdCode
          - holdType
          properties:
            accountRef:
              $ref: '#/components/schemas/AccountRef'
            amount:
              $ref: '#/components/schemas/Amount'
            expiryDate:
              $ref: '#/components/schemas/Date'
            effectiveDate:
              $ref: '#/components/schemas/Date'
            holdType:
              type: string
              maxLength: 255
              example: "GENERAL PURPOSE HOLD"
            holdCode:
              type: string
              maxLength: 255
              example: "GPH"
            remark:
              type: string
              maxLength: 255
              description: transaction comments.
              example: "hold for this account"
            payeeName:
              type: string
              maxLength: 255
              example: "Betty"
    getAccountStopHoldRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "accountStopHold"          
        payload:
          required:
          - accountRef
          properties:
            accountRef:
              $ref: '#/components/schemas/AccountRef'
    getAccountStopHoldResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK        
        payload:
          required:
          - accountHoldList
          properties:
            accountHoldList:
              items:
                $ref: '#/components/schemas/AccountHold'
            accountStopPaymentList:
              items:
                $ref: '#/components/schemas/AccountStop'
    cancelAccountHoldRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "cancelAccountHold"          
        payload:
          required:
          - holdId
          - accountRef
          properties:
            holdId:
              type: string
              description: stop sequence.
              example: ""
            cancelEffectiveDate:
              $ref: '#/components/schemas/Date'
            amount:
              $ref: '#/components/schemas/Amount'
            accountRef:
              $ref: '#/components/schemas/AccountRef'
    getAccountWarningsRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "accountWarnings"
        payload:
          required:
          - accountRef
          properties:
            accountRef:
              $ref: '#/components/schemas/AccountRef'
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
    getAccountWarningsResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - accountWarnings
          - isBankEmployee
          properties:
            isBankEmployee:
              type: boolean
              description: Is Bank Employee.
            accountWarnings:
              items:
                $ref: '#/components/schemas/Warning'
    getAccountListWarningsRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "accountListWarnings"          
        payload:
          required:
          - accounts
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            accounts:
              items:
                $ref: '#/components/schemas/AccountRef'
    getAccountListWarningsResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - accountWarnings 
          properties:
            accountInformationList:
              items:
                $ref: '#/components/schemas/AccountListWarning'
    getConsumerWarningsRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "consumerWarnings"          
        payload:
          required:
          - consumerId
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
    getConsumerWarningsResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - consumerWarnings
          - isBankEmployee
          properties:
            isBankEmployee:
              type: boolean
              description: Is Bank Employee.
            consumerWarnings:
              type: array
              items:
                $ref: '#/components/schemas/Warning'
    getCardListRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "cardList"          
        payload:
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            accountRef:
              $ref: '#/components/schemas/AccountRef'
    getCardListResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - cards
          properties:
            cards:
              items:
                $ref: '#/components/schemas/Cards'
            additionalProperties:
              $ref: '#/components/schemas/AdditionalProperties'
    updateAccountNickNameRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "updateAccountNickName"          
        payload:
          required:
          - accountRef
          - accountName
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            accountRef:
              $ref: '#/components/schemas/AccountRef'
            accountName:
              type: string
              minLength: 1
              maxLength: 255
              example: "Betty Adams"
    getBusinessDateRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "businessDate"          
        payload:
          type: object
    getBusinessDateResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - businessDate
          properties:
            businessDate:
              $ref: '#/components/schemas/BusinessDate'
    getAccountMovementRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: "sbAccountMovement"
            operation:
              type: string
              minLength: 1
              example: "accountMovement"             
        payload:
          type: object
          required:
          - accountRef
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            startDate:
              $ref: '#/components/schemas/Date'
            endDate:
              $ref: '#/components/schemas/Date'
            maxRecords:
              type: integer
              description: Maximum number of records to fetch.
              example: 10
            accountRef:
              $ref: '#/components/schemas/AccountRef'
    getAccountMovementResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - accountMovements
          properties:
            accountMovements:
              items:
                $ref: '#/components/schemas/AccountMovements'
    getOfacSearchRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "ofacSearch"          
        payload:
          type: object
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: '#/components/schemas/CardPan'
            consumerSearchForm:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: The name of the account owner.
                  example: "Betty Adams"
                consumerType:
                  $ref: '#/components/schemas/ConsumerType'   
    getOfacSearchResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - ofacSearchDetails
          properties:
            ofacSearchDetails:
              items:
                $ref: '#/components/schemas/OfacSearch'
    getScheduledTransactionsRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "scheduledTransactions"          
        payload:
          type: object
          required:
          - accountRef
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            accountRef:
              $ref: '#/components/schemas/AccountRef'
    getScheduledTransactionsResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - accountMovements
          properties:
            accountMovements:
              items:
                $ref: '#/components/schemas/AccountMovements'
    getCheckIssuerDetailsRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "checkIssuerDetails"          
        payload:
          type: object
          required:
          - checkInfo
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            checkInfo:
              $ref: '#/components/schemas/Check'
    getCheckIssuerDetailsResponse:
      type: object
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - checkIssuerDetails
          properties:
            checkIssuerDetails:
              $ref: '#/components/schemas/CheckIssuerDetails'
    reversalRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      - confirmationNumber
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: ""
            operation:
              type: string
              minLength: 1
              example: "reversal"          
        payload:
          type: object
          required:
          - confirmationNumber
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
            accountRef:
              $ref: '#/components/schemas/AccountRef'
            amount:
              $ref: '#/components/schemas/Amount'
            confirmationNumber:
              type: string
              description: "the transaction confirmation number for the transaction to be reversed."
              minLength: 0
              example: "12a23e131"
            remarks:
              type: string
              maxLength: 255
              description: Remarks for the transaction.
              example: "Reversal for ACCT XXXX 4567"
    pinCheckRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: "sbCheckPin"
            operation:
              type: string
              minLength: 1
              example: "pinCheck"          
        payload:
          type: object
          required:
          - card
          - pin
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: '#/components/schemas/CardPan'
            pin:
              $ref: '#/components/schemas/Pin'
    pinChangeRequest:
      type: object
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: "sbPinChange"
            operation:
              type: string
              minLength: 1
              example: "pinChange"
        payload:
          type: object
          required:
          - card
          - oldPin
          - newPin
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: '#/components/schemas/CardPan'
            oldPin:
              $ref: '#/components/schemas/Pin'
            newPin:
              $ref: '#/components/schemas/Pin'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          $ref: '#/components/schemas/ErrorMessage'
    ErrorCode:
      type: string
      enum:
      - SERVER_FAILURE
      - NO_RESULT
      - ACCOUNT_NOT_FOUND
      - ACCOUNT_CLOSED
      - ACCOUNT_TYPE_INVALID
      - LIMIT_EXCEEDED
      - INSUFFICIENT_FUNDS
      - SERVER_NOT_READY
      - REQUEST_DATA_INVALID
      - TRX_NOT_PERMITTED_TO_ACCOUNT
      - TRANSACTION_NOT_POSSIBLE
      - HOST_OFFLINE
      - HOST_CANCEL
      - HOST_BUSINESS_ERROR
      description: Error Code Mapping as per Diebold Nixdorf
    ErrorMessage:
      type: string
      description: Description if the error.
      maxLength: 500
      example: "Error occured while processing the request"
    PointOfInteraction:
      required:
      - clientId
      properties:
        clientId:
          type: string
          minLength: 1
          description: DN Teller Id
          example: "123"
        institutionId:
          type: string
          minLength: 1
          description: The id of the institute.
          example: "1234"
        tellerId:
          type: string
          minLength: 1
          description: The id of the teller.
          example: ""
        branchCode:
          type: string
          minLength: 1
          description: Branch Code
          example:  ""
        channel:
          $ref: '#/components/schemas/Channel'
    Card:
      type: object
      required:
      - pan
      properties:
        pan:
          type: string
          minLength: 1
          maxLength: 255
          description: Card number of the consumer
          example: 4512665599887762
        cardState:
          type: string
          description: Defines the state of the card (Active, Blocked etc)
          maxLength: 255
          enum:
            - ACTIVE
            - CLOSED
            - EXPIRED
            - BLOCKED
            - ISSUED
            - HOTCARD
        cardStateReasonCode:
          type: string
          description: Card State Reason Code
          maxLength: 255
          enum:
            - LOST
            - STOLEN
            - EXPIRED
            - DAMAGED
            - SUSPECTED_FRAUD
            - FRAUD
            - CLOSED_BY_CUSTOMER
            - AUTOMATIC_AGREEMENT_COPY
            - DO_NOT_HONOUR
        cardStateReasonDescription:
          type: string
          description: Card State Reason Description
          maxLength: 255
          example: "Activate Card"
    CardPan:
      type: object
      required:
      - pan
      properties:
        pan:
          type: string
          minLength: 1
          maxLength: 255
          description: Card number of the consumer
          example: 4512665599887762
    Check:
      type: object
      required:
      - checkNumber
      properties:
        checkNumber:
         type: string
         example: 214214
        micr:
          type: string
          example: 09879078
        checkType:
          $ref: '#/components/schemas/CheckType'
        bankRoutingId:
          type: string
          description: >-
            Contains the BIC (aka. bank identifier code)The BIC - also known as SWIFT-code - as defined by ISO 9362 is required in/for cross border transfers/transactions. Please see: https://en.wikipedia.org/wiki/ISO_9362
              This field can also be used to send/receive an ABA RTN (ABA routing transit number) or Canadian TN (Canadian transit number).
              See also: https://en.wikipedia.org/wiki/Routing_transit_number
          minLength: 8
          maxLength: 11
          example: "335668810"
        accountNumber:
         type: string
         description: the Account Number.
         maxLength: 255
         example: "A131234"
    FormFieldsOfac:
      type: object
      required:
      - consumerId
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The accunt name of the account
          example: "Betty Adams"
        nameType:
          type: string
          minLength: 1
          maxLength: 255
          description: Name type
          example: "Business/consumer"
    FormFieldsConsumer:
      type: object
      properties:
        firstName:
          type: string
          minLength: 1
          maxLength: 255
          description: The first name of the account holder. 
          example: "Betty"
        lastName:
          type: string
          minLength: 1
          maxLength: 255
          description: The last name of the account holder. 
          example: "Adams"
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The full name of the account holder. Represents the name of the business entity if the holder is a business organisation.
          example: "DN Holdings Pvt. Ltd."
        phoneNumber:
          type: string
          minLength: 1
          maxLength: 255
          description: The phone number of the entity holding the account.
          example: "1(571)123-4567"
        taxId:
          type: string
          minLength: 1
          maxLength: 255
          description: The Tax Identification Number
          example: "123-45-6789"
    ConsumerSearchForm:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The name of the account owner.
          example: "Betty Adams"
        nameType:
          type: string
          minLength: 1
          maxLength: 255
          description: Name type
          example: "Business/consumer"
    Transaction:
      type: object
      required:
      - id
      - type
      - operation
      properties:
        id:
          type: string
          minLength: 1
          example: "212423521525"
        type:
          type: string
          minLength: 1
          example: "withdrawal"
        operation:
          type: string
          minLength: 1
          example: "debit"
    Pin:
      type: object
      properties:
        encryptedPin:
          type: string
          description: pin in encrypted format.
          example: "21412414asdad14121"
        format:
          type: string
          description: encryption format for provided PIN.
          example: "VISA_1"
    CheckIssuerDetails:
      type: object
      properties:
        id:
          type: string
          description: unqiue identifier for the check.
          example: "edc856895cee42b5a859acec7f332ca3"
        transactionNumber:
          type: string
          description: transaction number.
          example: "12489891247987"
        score:
          type: integer
          description: check score.
        state:
          type: string
          description: check state.
          example: "OPEN"
        suspectedFraud:
          type: boolean
          description: "true if check is suspected as fraud."
        checkNumber:
         type: string
         example: 214214
        micr:
          type: string
          example: 09879078
        checkType:
          $ref: '#/components/schemas/CheckType'
        bankRoutingId:
          type: string
          description: >-
            Contains the BIC (aka. bank identifier code)The BIC - also known as SWIFT-code - as defined by ISO 9362 is required in/for cross border transfers/transactions. Please see: https://en.wikipedia.org/wiki/ISO_9362
              This field can also be used to send/receive an ABA RTN (ABA routing transit number) or Canadian TN (Canadian transit number).
              See also: https://en.wikipedia.org/wiki/Routing_transit_number
          minLength: 8
          maxLength: 11
          example: "335668810"
        accountNumber:
         type: string
         description: the Account Number.
         maxLength: 255
         example: "A131234"
        accountType:
         $ref: '#/components/schemas/AccountType'
        rejectedBy:
          type: string
          description: check rejected by.
          example: "UNDEFINED"
        rejectedReason:
          type: integer
          description: reason for check rejection.
    OfacSearch:
      type: object
      required:
      - ofacMatchType
      properties:
        ofacMatchType:
          type: string
          maxLength: 255
          description: OFAC Match Type.
          example: "OFACAlias"
        ofacMatchRef:
          type: string
          maxLength: 255
          description: OFAC Match Reference ID.
          example: "L0305"
        id:
          type: string
          maxLength: 255
          description: OFAC ID.
          example: "6366"
        aliasID:
          type: string
          maxLength: 255
          description: OFAC alias ID.
          example: "4349"
        aliasName:
          type: string
          maxLength: 255
          description: OFAC alias name.
          example: "A.C.L."
        name:
          type: string
          maxLength: 255
          description: Full Name.
          example: "Alliance Corporation Limited "
        type:
          type: string
          maxLength: 255
          description: OFAC Type.
          example: "Unknown"
        program:
          type: string
          maxLength: 255
          description: OFAC Program.
          example: "FTO] [SDGT] [SDT"
        street:
          type: string
          maxLength: 255
          description: OFAC Street.
          example: "A.B. street"
        city:
          type: string
          maxLength: 255
          description: OFAC City.
          example: "New York"
        country:
          type: string
          maxLength: 255
          description: OFAC Country.
          example: "USA"
        remarks:
          type: string
          maxLength: 255
          description: Remarks for the transaction.
          example: "Search for ACCT XXXX 4567"
    AccountMovements:
      type: object
      required:
      - entryDate
      - transactionDate
      - amount
      - associatedAccount
      - accountRef
      properties:
        effectiveDate:
          $ref: '#/components/schemas/Date'
        transactionId:
          type: string
          description: Transaction Id
          example: "212423521525"
        type:
          type: string
          description: transaction Type
          example: "credit"
        transactionDate:
          $ref: '#/components/schemas/Date'
        primanota:
          type: string
          maxLength: 255
          description: "Primanota for this account movement"
          example: '87536789'
        amount:
          $ref: '#/components/schemas/Amount'
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        remarks:
          type: string
          maxLength: 255
          description: "information on the transaction."
          example: "Misc Debit with description."
    BusinessDate:
      type: object
      required:
      - cutOffTime
      - businessDate
      properties:
        cutOffTime:
          type: string
          format: time
          example: "12:30"
        businessDate:
          $ref: '#/components/schemas/Date'
    Cards:
      type: array
      items:
        $ref: '#/components/schemas/Card'
    AccountHold:
      type: object
      required:
        - id
        - effectiveDate
        - expiryDate
        - type
        - code
        - amount
      properties:
        id:
          type: string
          minLength: 1
          example: 123
        expiryDate:
          $ref: '#/components/schemas/Date'
        effectiveDate:
          $ref: '#/components/schemas/Date'
        type:
          type: string
          maxLength: 255
          example: "GENERAL PURPOSE HOLD"
        code:
          type: string
          maxLength: 255
          example: "HOLD"
        amount:
          $ref: '#/components/schemas/Amount'
        description:
          type: string
          maxLength: 255
          example: "Hold for this account"
    AccountStop:
      type: object
      required:
        - id
        - effectiveDate
        - expiryDate
        - type
        - code
        - checkNumberStart
        - checkNumberEnd
      properties:
        id:
          type: string
          minLength: 1
          example: 123
        expiryDate:
          $ref: '#/components/schemas/Date'
        effectiveDate:
          $ref: '#/components/schemas/Date'
        type:
          type: string
          maxLength: 255
          example: "STOP PAYMENT"
        code:
          type: string
          maxLength: 255
          example: "STOL"
        description:
          type: string
          maxLength: 255
          example: "Stop for this account"
        checkNumberStart:
          type: string
          maxLength: 255
          description: Check Number Start
          example: "123"
        checkNumberEnd:
          type: string
          maxLength: 255
          description: Check Number End
          example: "789"
    AccountRef:
      type: object
      required:
      - accountNumber
      - accountType
      properties:
        accountNumber:
          description: |
            The account number. The length varies greatly. In Europe defined by ISO 13616/2007
            See also:
            https://en.wikipedia.org/wiki/International_Bank_Account_Number
          type: string
          minLength: 5
          maxLength: 32
          example: A0123456789
        accountType:
          $ref: '#/components/schemas/AccountType'
    Amount:
      description: "The basic type of an amount."
      type: object
      required:
        - value
        - currency
      properties:
        value:
          description: "The amount value of the given currency. As defined by ISO 20022, CurrencyAndAmount."
          type: string
          pattern: '[0-9]{1,13}\.[0-9]{1,3}'
          minimum: 0
          example: 100.50
        currency:
          description: |
            The currency code as defined by ISO 20022, ActiveCurrencyCode
            See also: https://en.wikipedia.org/wiki/ISO_4217
          type: string
          minLength: 3
          maxLength: 3
          pattern: '[A-Z]{3,3}'
          example: USD
    ConsumerId:
      type: string
      minLength: 1
      description: >-
        A unique identifier of a consumer (within an external system), which is required to identify the consumer.
            Maybe the consumerId is moreover/also used to authorize the consumer against an external system
      example: "123456"
    accountListRequest:
      required:
      - pointOfInteraction
      - payload
      - transaction
      properties:
        pointOfInteraction:
          $ref: '#/components/schemas/PointOfInteraction'
        transaction:
          type: object
          required:
          - id
          - type
          - operation
          properties:
            id:
              type: string
              minLength: 1
              example: "212423521525"
            type:
              type: string
              minLength: 1
              example: "sbAccountOverview"
            operation:
              type: string
              minLength: 1
              example: "accountList"
        payload:
          properties:
            consumerId:
              $ref: '#/components/schemas/ConsumerId'
            card:
              $ref: "#/components/schemas/CardPan"
            pin:
              $ref: "#/components/schemas/Pin"
    transactionConfirmationResponse:
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          type: object
          properties:
            confirmationNumber:
              type: string
              minLength: 1
              description: Confirmation number of the transaction
              example: 998a87999
            additionalProperties:
              type: object
    transactionConfirmationWithoutAdditionalPropertiesResponse:
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          type: object
          properties:
            confirmationNumber:
              type: string
              minLength: 1
              description: Confirmation number of the transaction
              example: 998a87999
    accountListResponse:
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - accounts
          properties:
           accounts:
            type: array
            items:
              $ref: '#/components/schemas/AccountInfo'
    consumerIdentifyResponse:
      required:
      - responseCode
      - payload
      properties:
        responseCode:
          type: string
          example: OK
        payload:
          required:
          - consumerDetails
          properties:
            consumerDetails:
              type: array
              items:
                $ref: '#/components/schemas/ConsumerProfile'
    ConsumerLevel:
      type: string
      enum:
        - NORMAL
        - SENSITIVE
        - HIGHLY_SENSITIVE
      description: The consumer level
      example: "NORMAL"
    PhoneNumber:
      type: object
      required: 
        - number
        - phoneType
      properties:
        number:
          type: string
          example: "+919123456789"
        phoneType:
          type: string
          example: "HOME"
    ConsumerType:
      type: string
      enum:
        - INDIVIDUAL
        - BUSINESS
        - UNKNOWN
      description: Type of the consumer
      example: "INDIVIDUAL"
    ConsumerProfile:
      type: object
      required:
        - consumerId
        - firstname
        - taxId
      properties:
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        consumerLevel:
          $ref: '#/components/schemas/ConsumerLevel'
        firstName:
          type: string
          example: Betty
        lastName:
          type: string
          example: Adams
        name:
          type: string
          example: Betty Adams
        email:
          type: string
          format: email
          example: betty.adams123456@cmail.com
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        taxId:
          type: string
          description: The Tax Id of the account.
          example: 123
        address:
          $ref: '#/components/schemas/Address'
        isBankEmployee:
          type: boolean
        consumerType:
          $ref: '#/components/schemas/ConsumerType'
        consumerWarnings:
          type: array
          items:
            $ref: '#/components/schemas/Warning'
        additionalProperties:
          $ref: '#/components/schemas/AdditionalProperties'
    AccountType:
      type: string
      enum: 
        - "NOT_SPECIFIED"
        - "GIRO"
        - "SAVINGS"
        - "SECURITIES_DEPOSIT"
        - "SAVINGS_SECURITIES_DEPOSIT"
        - "GIRO_SECURITIES_DEPOSIT"
        - "FIXED_TERM_DEPOSIT"
        - "CREDIT_CARD"
        - "LOAN"
        - "MORTGAGE"
        - "FOREIGN_CURRENCY"
        - "EXTERNAL"
        - "CHECKING"
        - "UNIVERSAL"
        - "SPENDING_POWER"
        - "FEE_COLLECTION_ACCOUNT"
        - "ATM"
        - "VENDOR"
        - "SHAREHOLDER"
        - "GENERAL_LEDGER"
        - "CASH_RESERVE"
        - "LOAN_DENIAL"
        - "LEASE"
        - "CONSUMER_LOAN"
        - "COMMERCIAL_LOAN"
        - "RETIREMENT_LOAN"
        - "EXTERNAL_LOAN"
        - "SHARE"       
        - "INDIVIDUAL_RETIREMENT"
      example: "SAVINGS"
      description: >-
          | Symbolic name              | Comment                                                        |
          |----------------------------|----------------------------------------------------------------|
          | NOT_SPECIFIED              | Default value for unknowaccounts.                              |
          | GIRO                       | Giro account.                                                  |
          | SAVINGS                    | Savings account. (ISO 8583; MC DE.54->10 / VISA DE.54->10).    |
          | SECURITIES_DEPOSIT         | Depot of securities (shares and so on).                        |
          | SAVINGS_SECURITIES_DEPOSIT | Savings securities.                                            |
          | GIRO_SECURITIES_DEPOSIT    | Giro securities.                                               |
          | FIXED_TERM_DEPOSIT         | Fixed term deposit.                                            |
          | CREDIT_CARD                | Credit card account. (ISO 8583; MC DE.54->30 / VISA DE.54->30).|
          | LOAN                       | An account that covers a credit and its balance and movements. |
          | MORTGAGE                   | Security for a loan.                                           |
          | FOREIGN_CURRENCY           | An account that holds money in a foreign curreny.              |
          | EXTERNAL                   | An account that represents an account of a foreign institution.|
          | CHECKING                   | Checking account. (ISO 8583; MC DE.54->20 / VISA DE.54->20)    | 
          | UNIVERSAL                  | ISO 8583; VISA DE.54->40)                                      | 
          | SPENDING_POWER             | ISO 8583; VISA DE.54->64)                                      | 
          | FEE_COLLECTION_ACCOUNT     | used to collect fees                                           | 
          | ATM                        | ATM                                                            |
          | VENDOR                     | Vendor                                                         |
          | SHAREHOLDER                | Shareholder                                                    |
          | GENERAL_LEDGER             | General ledger                                                 |
          | CASH_RESERVE               | Cash Reserve Line of Credit                                    |
          | LOAN_DENIAL                | Load denial                                                    |
          | LEASE                      | Lease                                                          |
          | CONSUMER_LOAN              | Consumer loan                                                  |
          | COMMERCIAL_LOAN            | Cemercial loan                                                 |
          | RETIREMENT_LOAN            | Retirement loan                                                |
          | EXTERNAL_LOAN              | External loan                                                  |
          | SHARE                      | Share                                                          |
          | INDIVIDUAL_RETIREMENT      | Individual Retirement Account(IRA)                             |
    CheckType:
      type: string
      enum: 
        - "ON_US"
        - "OFF_US"
        - "GOVERNMENT"
        - "NOT_SPECIFIED"
      example: "ON_US"
      description: 'The Check Type value of the check'
    AccessPermission:
      type: string
      enum: 
        - "NO_PERMISSION"
        - "FULL_PERMISSION"
        - "DEPOSIT_ONLY_PERMISSION"
        - "WITHDRAWAL_ONLY_PERMISSION"
      example: "FULL_PERMISSION"
      description: 'The Access permission of the Account'
    AccountPermissions:
      type: object
      required:
        - accountId
        - accessPermission
      properties:
        accountId:
          type: string
          example: 123
        accessPermission:
          $ref: '#/components/schemas/AccessPermission'
        markedForDepositOnly:
          type: boolean
          example: false
    Conductor:
      type: object
      required:
        - conductorId
        - firstName
        - role
        - accountPermissions
      properties:
        conductorId:
          type: string
          example: 456
        firstName:
          type: string
          example: Betty
        lastName:
          type: string
          example: Adams
        role:
          type: string
          example: ROLE
        primaryIdentifier:
          type: integer
          example: 1
        accountPermissions:
          type: array
          items:
            $ref: '#/components/schemas/AccountPermissions'
    Amounts:
      type: object
      required:
      - AVAILABLE_BALANCE
      properties:
        LEDGER_BALANCE:
          $ref: '#/components/schemas/Amount'
        AVAILABLE_BALANCE:
          $ref: '#/components/schemas/Amount'
    LoanType:
      type: string
      enum:
        - "LOAN"
        - "CONSUMER_LOAN"
        - "COMMERCIAL_LOAN"
        - "MORTGAGE_LOAN"
        - "EXTERNAL_LOAN"
        - "LOAN_DENIAL"
      example: "MORTGAGE_LOAN"
      description: 'All the possible account types for LOAN Accounts'
    Loan:
      type: object
      required:
        - loanType
        - loanBalance
        - loanMaturityDate
      properties:
        loanType:
          $ref: '#/components/schemas/LoanType'
        loanBalance:
          $ref: '#/components/schemas/Amount'
        loanMaturityDate:
          $ref: '#/components/schemas/Date'
    Credit:
      type: object
      required:
        - totalCreditLimit
        - availableCreditLimit
        - interestRate
        - currentAmountDue
      properties:
        totalCreditLimit:
          $ref: '#/components/schemas/Amount'
        availableCreditLimit:
          $ref: '#/components/schemas/Amount'
        lateChargeDue:
          $ref: '#/components/schemas/Amount'
        interestPaidYearToDate:
          $ref: '#/components/schemas/Amount'
        interestPaidPreviousYearToDate:
          $ref: '#/components/schemas/Amount'
        interestAmount:
          $ref: '#/components/schemas/Amount'
        interestRate:  
          type: number
          format: double
          description: Interest rate for this account
          example: 2.34
        currentAmountDue:
          $ref: '#/components/schemas/Amount'
    Payment:
      type: object
      required:
        - principalBalance
        - payOffAmount
      properties:
        regularPaymentAmount:
          $ref: '#/components/schemas/Amount'
        regularPaymentDue:
          $ref: '#/components/schemas/Amount'
        regularPaymentDueDate:  
          $ref: '#/components/schemas/Date'
        regularPaymentFrequency:
          type: string
          description: Regular payment frequency. This can be ‘Monthly’, ‘Weekly’ etc, for some hosts it is Integer value.
          example: 4        
        principalBalance:
          $ref: '#/components/schemas/Amount'
        payOffAmount:
          $ref: '#/components/schemas/Amount'
        lastPaymentAmount:
          $ref: '#/components/schemas/Amount'
        lastPaymentDate:
          $ref: '#/components/schemas/Date'
        paymentMethod:
          type: string
          maxLength: 255
          description: The payment method of this account.
    AccountListWarning:
      type: object
      required:
      - accountRef
      - isBankEmployee
      - accountWarnings
      properties:
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        isBankEmployee:
          type: boolean
          description: Is Bank Employee.
        accountWarnings:
          items:
            $ref: '#/components/schemas/Warning'
    Warning:
      type: object
      required:
        - warningCode
        - effectiveDate
        - expirationDate
        - desccription
        - category
      properties:
        effectiveDate:
          $ref: '#/components/schemas/Date'
        expirationDate:
          $ref: '#/components/schemas/Date'
        warningCode:
          type: string
          example: 94
          description: The warning code for warning.
        description:
          type: string
          example: WARNING NUMBER 094
          description: The description for this warning.
        category:
          type: string
          example: "COL"
          description: The category for this hold or stop payment.
    AccountInfo:
      type: object
      required:
        - accountStatus
        - accountNumber
        - accountCurrency
        - accountType
        - amounts
      properties:
        accountOwnerName:
          type: string
          description: >-
            The owner of the account. 
          example: 'Bill Gates'
        accountOwnership:
          type: string
          description: >-
            The ownership of the account. 
          example: 'Bill Gates'
        accountStatus:
          type: string
          description: >-
            The status of the account. 
          example: 'Bill Gates'
        accountName:
          type: string
          maxLength: 255
          description: The account name/number which is displayed to the user.
          example: Your Savings account
        cardNumber:      
          type: string
          maxLength: 255
          description: Card number
          example: 3999821321
        accountNumber:
          description: |
            The account number. The length varies greatly. In Europe defined by ISO 13616/2007
            See also:
            https://en.wikipedia.org/wiki/International_Bank_Account_Number
          type: string
          minLength: 6
          maxLength: 255
          example: A0123456789
        accountCurrency:
           description: |
            The currency code as defined by ISO 20022, ActiveCurrencyCode
            See also: https://en.wikipedia.org/wiki/ISO_4217
            type: string
            minLength: 3
            maxLength: 3
            pattern: '[A-Z]{3,3}'
            example: USD
        accountType:
          $ref: '#/components/schemas/AccountType'  
        accountSubType:
          description: >-
            Returns the "original" backend type of the account. The value is taken from the backend response and put into the response to the client as it is!
          type: string
          maxLength: 255
          example: Savings account
        branchCode:
          description: The branch code of the bank
          type: string
          example: 1234
        bankCode:
          description: |
            Contains the BIC (aka. bank identifier code)
              The BIC - also known as SWIFT-code - as defined by ISO 9362 is required in/for cross border transfers/transactions.
              Please see: https://en.wikipedia.org/wiki/ISO_9362
              
              This field can also be used to send/receive an ABA RTN (ABA routing transit number) or Canadian TN (Canadian transit number).
              See also: https://en.wikipedia.org/wiki/Routing_transit_number
          type: string
          minLength: 8
          maxLength: 11
          example: ""
        instituteName:
          description: >
            The name of the institute, identified by the 'bankCode'. This field is
            always optional as long as it isn't marked as 'required'.
          type: string
          maxLength: 255
          example: Deutsche Bank
        nickName:
          type: string
          maxLength: 255
          description: NickName
          example: Nick
        openDate:
          $ref: '#/components/schemas/Date'
        accountMaturityDate:
          $ref: '#/components/schemas/Date'
        conductor:
          $ref: '#/components/schemas/Conductor'
        amounts:
          $ref: '#/components/schemas/Amounts'
        possibleTransactions:
          type: array
          items:
            $ref: '#/components/schemas/PossibleTransactions'
        loan:
          $ref: '#/components/schemas/Loan'
        credit:
          $ref: '#/components/schemas/Credit'
        payment:
          $ref: '#/components/schemas/Payment'
        accountWarnings:
          type: array
          items:
            $ref: '#/components/schemas/Warning'
        additionalProperties:
          $ref: '#/components/schemas/AdditionalProperties'
    AdditionalProperties:
      type: object
      description: >-
              Additional data can be provided within this object.
    Date:
      type: string
      pattern: '([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))'
      description: |
        The date pattern is defined "YYYY-MM-DD", with YYYY as 4-digit year, MM as 2-digit month and DD as 2-digit day of month.
        Date string as defined by date-time - RFC3339
        Please see: https://tools.ietf.org/html/rfc3339
      example: "2019-09-23"
    Address:
      type: object
      required:
        - street
        - streetno
        - city
        - zipcode
      properties:
        street:
          type: string
          maxLength: 255
          description: The name of the street.
          example: Mainstreet
        streetno:
          type: string
          maxLength: 255
          description: The street number of this address.
          example: '119'
        city:
          type: string
          maxLength: 255
          description: The name of the city.
          example: New York
        zipcode:
          type: string
          maxLength: 255
          description: The zip code of this city.
          example: N5467
        countrycode:
          type: string
          maxLength: 255
          description: |
            The ISO 3166 (alpha-3) country code of this address. 
            See also: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3
          example: USA
    TransactionMetaData:
      type: object
      required:
        - amount
      properties:        
        settlementType:
          type: string
          maxLength: 255
          description: The type of settlement.
          example: 'CASH'
        operationType:
          type: string
          maxLength: 255
          description: The type of operation.
          example: Credit
        accountRef:
            $ref: '#/components/schemas/AccountRef'
        amount:
            $ref: '#/components/schemas/Amount'
        transactionRef:
          type: string
          maxLength: 255
          description: Transaction reference.
          example: A12345
        transactionDescCode:
          type: string
          maxLength: 255
          description: Transaction description code
          example: Deposit
        beneficiaryConsumerId:
          type: string
          maxLength: 255
          description: Id of the beneficiary who is a consumer
          example: A000013    
        beneficiaryNonConsumerId:
          type: string
          maxLength: 255
          description: Id of the beneficiary who is a non-consumer
          example: 22343
        beneficiaryType:
          type: string
          maxLength: 255
          description: Type of the beneficiary
          example: Consumer
    PossibleTransactions:
      type: string
      enum:
        - ACCOUNT_MOVEMENT
        - ACCOUNT_OVERVIEW
        - CHECK_CASHING
        - DEPOSIT
        - MIXED_MEDIA_PAYMENT
        - TRANSFER_FUNDS_SB_TRANSACTION
        - WITHDRAWAL
        - ACCOUNT_SERVICE
        - CONSUMER_INFO
        - CONSUMER_SEARCH
        - PRESTAGED_CASHOUT
        - PRESTAGED_DEPOSIT_CASH
        - PRESTAGED_SERVICE
        - STANDING_ORDER_SERVICE
        - TRANSFER_FUNDS_SERVICE
    Channel:
      type: string
      enum:
      - selfService
      - network
      - teller
      - mobile
      - undefined
      description: Channel through which transaction is initiated.