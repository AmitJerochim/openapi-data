{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://prova.salonbooking.it/wp-json/salon/api/v1"
  } ],
  "info" : {
    "description" : "This is the Salon Booking Plugin API",
    "version" : "1-oas3",
    "title" : "Salon Booking Plugin API",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "tokens",
    "description" : "Create/revoke tokens calls"
  }, {
    "name" : "assistants",
    "description" : "Operations with assistants"
  }, {
    "name" : "services",
    "description" : "Operations with sevices"
  }, {
    "name" : "customers",
    "description" : "Operations with customers"
  }, {
    "name" : "discounts",
    "description" : "Operations with discounts"
  }, {
    "name" : "bookings",
    "description" : "Operations with bookings"
  }, {
    "name" : "availability",
    "description" : "Operations with availability"
  }, {
    "name" : "users",
    "description" : "Operations with users"
  }, {
    "name" : "shops",
    "description" : "Operations with shops"
  }, {
    "name" : "app",
    "description" : "Operations with app"
  } ],
  "paths" : {
    "/login" : {
      "get" : {
        "tags" : [ "tokens" ],
        "summary" : "Create/regenerate token",
        "operationId" : "login",
        "description" : "Create/regenerate token\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "name",
          "description" : "User login",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "password",
          "description" : "User password",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Access info",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "access_token" : {
                      "type" : "string",
                      "example" : "AIzaSyDFQnkXLwswGJ6TghAfTh_leQ61pJ-ohYV"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/logout" : {
      "post" : {
        "tags" : [ "tokens" ],
        "summary" : "Revoke token",
        "operationId" : "logout",
        "description" : "Revoke token\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Token revoked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/assistants" : {
      "get" : {
        "tags" : [ "assistants" ],
        "summary" : "Get all assistants",
        "operationId" : "assistantsAll",
        "description" : "Get all assistants\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "shop",
          "description" : "Shop id",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "orderby",
          "description" : "Order by name and id",
          "schema" : {
            "type" : "string",
            "enum" : [ "id", "name" ],
            "default" : "id"
          }
        }, {
          "in" : "query",
          "name" : "order",
          "description" : "Order",
          "schema" : {
            "type" : "string",
            "enum" : [ "asc", "desc" ],
            "default" : "asc"
          }
        }, {
          "in" : "query",
          "name" : "per_page",
          "description" : "Per page",
          "schema" : {
            "type" : "integer",
            "default" : 10
          }
        }, {
          "in" : "query",
          "name" : "page",
          "description" : "Page number",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "in" : "query",
          "name" : "offset",
          "description" : "Offset",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Assistants results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/AssistantItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "assistants" ],
        "summary" : "Create a new assistant",
        "operationId" : "addAssistant",
        "description" : "Create a new assistant\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : 309
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          },
          "409" : {
            "description" : "An existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssistantItem"
              }
            }
          },
          "description" : "Assistant item to add",
          "required" : true
        }
      }
    },
    "/assistants/{id}" : {
      "get" : {
        "tags" : [ "assistants" ],
        "summary" : "Get one assistants",
        "operationId" : "getAssistant",
        "description" : "Get one assistant\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Assistant id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Assistant results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/AssistantItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "put" : {
        "tags" : [ "assistants" ],
        "summary" : "Modify an assistant",
        "operationId" : "updateAssistant",
        "description" : "Modify an assistant\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Assistant id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssistantItem"
              }
            }
          },
          "description" : "Assistant item to add"
        }
      },
      "delete" : {
        "tags" : [ "assistants" ],
        "summary" : "Delete an assistant",
        "operationId" : "deleteAssistant",
        "description" : "Delete an assistant\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Assistant id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    },
    "/services" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Get all services",
        "operationId" : "servicesAll",
        "description" : "Get all services\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "shop",
          "description" : "Shop id",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "type",
          "description" : "Resource type of services (all, primary, secondary)",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "primary", "secondary" ],
            "default" : "all"
          }
        }, {
          "in" : "query",
          "name" : "orderby",
          "description" : "Order by name and id",
          "schema" : {
            "type" : "string",
            "enum" : [ "id", "name" ],
            "default" : "id"
          }
        }, {
          "in" : "query",
          "name" : "order",
          "description" : "Order",
          "schema" : {
            "type" : "string",
            "enum" : [ "asc", "desc" ],
            "default" : "asc"
          }
        }, {
          "in" : "query",
          "name" : "per_page",
          "description" : "Per page",
          "schema" : {
            "type" : "integer",
            "default" : 10
          }
        }, {
          "in" : "query",
          "name" : "page",
          "description" : "Page number",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "in" : "query",
          "name" : "offset",
          "description" : "Offset",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Services results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ServiceItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "services" ],
        "summary" : "Create a new service",
        "operationId" : "addService",
        "description" : "Create a new service\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : 309
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          },
          "409" : {
            "description" : "An existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceItem"
              }
            }
          },
          "description" : "Service item to add",
          "required" : true
        }
      }
    },
    "/services/{id}" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Get one service",
        "operationId" : "getService",
        "description" : "Get one service\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Service id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Service results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ServiceItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "put" : {
        "tags" : [ "services" ],
        "summary" : "Modify an service",
        "operationId" : "updateService",
        "description" : "Modify an service\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Service id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceItem"
              }
            }
          },
          "description" : "Service item to add"
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Delete an services",
        "operationId" : "deleteService",
        "description" : "Delete an service\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Service id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    },
    "/services/categories" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Get all services categories",
        "operationId" : "servicesCategoriesAll",
        "description" : "Get all services categories\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Services categories results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/CategoryItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "services" ],
        "summary" : "Create a new services category",
        "operationId" : "addServiceCategory",
        "description" : "Create a new services category\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : 309
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          },
          "409" : {
            "description" : "An existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryItem"
              }
            }
          },
          "description" : "Service item to add",
          "required" : true
        }
      }
    },
    "/services/categories/{id}" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Get one service category",
        "operationId" : "getServiceCategory",
        "description" : "Get one service category\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Service category id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Service category results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/CategoryItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "put" : {
        "tags" : [ "services" ],
        "summary" : "Modify an service category",
        "operationId" : "updateServiceCategory",
        "description" : "Modify an service category\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Service category id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryItem"
              }
            }
          },
          "description" : "Service category item to add"
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Delete an services category",
        "operationId" : "deleteServiceCategory",
        "description" : "Delete an service category\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Service category id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    },
    "/customers" : {
      "get" : {
        "tags" : [ "customers" ],
        "summary" : "Get all customers",
        "operationId" : "customersAll",
        "description" : "Get all customers\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "description" : "Search string",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Customers results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/CustomerItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "customers" ],
        "summary" : "Create a new customer",
        "operationId" : "addCustomer",
        "description" : "Create a new customer\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : 309
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          },
          "409" : {
            "description" : "An existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerItem"
              }
            }
          },
          "description" : "Customer item to add",
          "required" : true
        }
      }
    },
    "/customers/{id}" : {
      "get" : {
        "tags" : [ "customers" ],
        "summary" : "Get one customer",
        "operationId" : "getCustomer",
        "description" : "Get one customer\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Customer id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Customer results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/CustomerItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "put" : {
        "tags" : [ "customers" ],
        "summary" : "Modify an customer",
        "operationId" : "updateCustomer",
        "description" : "Modify an customer\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Customer id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerItem"
              }
            }
          },
          "description" : "Customer item to add"
        }
      },
      "delete" : {
        "tags" : [ "customers" ],
        "summary" : "Delete an customer",
        "operationId" : "deleteCustomer",
        "description" : "Delete an customer\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Customer id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    },
    "/discounts" : {
      "get" : {
        "tags" : [ "discounts" ],
        "summary" : "Get all discounts",
        "operationId" : "discountsAll",
        "description" : "Get all discounts\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Discounts results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DiscountItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "discounts" ],
        "summary" : "Create a new discount",
        "operationId" : "addDiscount",
        "description" : "Create a new discount\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : 309
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          },
          "409" : {
            "description" : "An existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountItem"
              }
            }
          },
          "description" : "Discount item to add",
          "required" : true
        }
      }
    },
    "/discounts/{id}" : {
      "get" : {
        "tags" : [ "discounts" ],
        "summary" : "Get one discount",
        "operationId" : "getDiscount",
        "description" : "Get one discount\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Discount id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Discount results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/DiscountItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "put" : {
        "tags" : [ "discounts" ],
        "summary" : "Modify an discount",
        "operationId" : "updateDiscount",
        "description" : "Modify an discount\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Discount id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountItem"
              }
            }
          },
          "description" : "Discount item to add"
        }
      },
      "delete" : {
        "tags" : [ "discounts" ],
        "summary" : "Delete an discount",
        "operationId" : "deleteDiscount",
        "description" : "Delete an discount\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Discount id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    },
    "/bookings" : {
      "get" : {
        "tags" : [ "bookings" ],
        "summary" : "Get all bookings",
        "operationId" : "bookingsAll",
        "description" : "Get all bookings\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "shop",
          "description" : "Shop id",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "description" : "Search string",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "in" : "query",
          "name" : "services",
          "description" : "Services ids",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "customers",
          "description" : "Customers ids",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "in" : "query",
          "name" : "start_date",
          "description" : "Date range start",
          "schema" : {
            "type" : "string",
            "format" : "YYYY-MM-DD"
          }
        }, {
          "in" : "query",
          "name" : "end_date",
          "description" : "Date range end",
          "schema" : {
            "type" : "string",
            "format" : "YYYY-MM-DD"
          }
        }, {
          "in" : "query",
          "name" : "orderby",
          "description" : "Order by date time and id",
          "schema" : {
            "type" : "string",
            "enum" : [ "id", "date_time" ],
            "default" : "id"
          }
        }, {
          "in" : "query",
          "name" : "order",
          "description" : "Order",
          "schema" : {
            "type" : "string",
            "enum" : [ "asc", "desc" ],
            "default" : "asc"
          }
        }, {
          "in" : "query",
          "name" : "per_page",
          "description" : "Per page",
          "schema" : {
            "type" : "integer",
            "default" : 10
          }
        }, {
          "in" : "query",
          "name" : "page",
          "description" : "Page number",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "in" : "query",
          "name" : "offset",
          "description" : "Offset",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Bookings results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/BookingItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "bookings" ],
        "summary" : "Create a new booking",
        "operationId" : "addBooking",
        "description" : "Create a new booking\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : 309
                    },
                    "customer_id" : {
                      "type" : "string",
                      "example" : 406
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          },
          "409" : {
            "description" : "An existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BookingItem"
              }
            }
          },
          "description" : "Booking item to add",
          "required" : true
        }
      }
    },
    "/bookings/{id}" : {
      "get" : {
        "tags" : [ "bookings" ],
        "summary" : "Get one booking",
        "operationId" : "getBooking",
        "description" : "Get one booking\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Booking id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Booking results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/BookingItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "put" : {
        "tags" : [ "bookings" ],
        "summary" : "Modify an booking",
        "operationId" : "updateBooking",
        "description" : "Modify an booking\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Booking id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : 309
                    },
                    "customer_id" : {
                      "type" : "string",
                      "example" : 406
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BookingItem"
              }
            }
          },
          "description" : "Booking item to add"
        }
      },
      "delete" : {
        "tags" : [ "bookings" ],
        "summary" : "Delete an booking",
        "operationId" : "deleteBooking",
        "description" : "Delete an booking\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Booking id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    },
    "/bookings/stats" : {
      "get" : {
        "tags" : [ "bookings" ],
        "summary" : "Get all bookings stats",
        "operationId" : "bookingsAllStats",
        "description" : "Get all bookings stats\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "shop",
          "description" : "Shop id",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "group_by",
          "description" : "Group by",
          "schema" : {
            "type" : "string",
            "enum" : [ "day", "month", "year" ]
          }
        }, {
          "in" : "query",
          "name" : "start_date",
          "description" : "Date range start",
          "schema" : {
            "type" : "string",
            "format" : "YYYY-MM-DD"
          }
        }, {
          "in" : "query",
          "name" : "end_date",
          "description" : "Date range end",
          "schema" : {
            "type" : "string",
            "format" : "YYYY-MM-DD"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Bookings stats results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "unit_type" : {
                            "type" : "string",
                            "enum" : [ "day", "month", "year" ],
                            "example" : "year"
                          },
                          "unit_value" : {
                            "type" : "string",
                            "example" : "2018"
                          },
                          "bookings_count" : {
                            "type" : "integer",
                            "example" : 11
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/bookings/upcoming" : {
      "get" : {
        "tags" : [ "bookings" ],
        "summary" : "Get all upcoming confirmed bookings next hours",
        "operationId" : "bookingsUpcoming",
        "description" : "Get all upcoming confirmed bookings next hours\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "hours",
          "description" : "Next hours",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Bookings results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/BookingItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/availability/intervals" : {
      "post" : {
        "tags" : [ "availability" ],
        "summary" : "Get all available bookings dates and times",
        "operationId" : "availabilityIntervals",
        "description" : "Get all available bookings date/time\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "date", "time", "services" ],
                "properties" : {
                  "shop" : {
                    "description" : "Shop id",
                    "type" : "integer"
                  },
                  "date" : {
                    "description" : "Date",
                    "type" : "string",
                    "format" : "YYYY-MM-DD",
                    "example" : "2018-10-21"
                  },
                  "time" : {
                    "description" : "Tim",
                    "type" : "string",
                    "format" : "HH:ii",
                    "example" : "14:00"
                  },
                  "services" : {
                    "description" : "Booking services",
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "service_id" ],
                      "properties" : {
                        "service_id" : {
                          "type" : "integer"
                        },
                        "assistant_id" : {
                          "type" : "integer"
                        }
                      }
                    },
                    "example" : [ {
                      "service_id" : 1,
                      "assistant_id" : 11
                    }, {
                      "service_id" : 2,
                      "assistant_id" : 12
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Availability dates/times result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "success" : {
                      "type" : "integer",
                      "enum" : [ 0, 1 ],
                      "example" : 1
                    },
                    "errors" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      },
                      "example" : [ ]
                    },
                    "intervals" : {
                      "$ref" : "#/components/schemas/AvailibilityIntervals"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/availability/services/primary" : {
      "get" : {
        "tags" : [ "availability" ],
        "summary" : "Check available primary services on date/time",
        "operationId" : "availabilityPrimaryServices",
        "description" : "Check available primary services on date/time\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "shop",
          "description" : "Shop id",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "date",
          "description" : "Date",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "YYYY-MM-DD",
            "example" : "2018-10-21"
          }
        }, {
          "in" : "query",
          "name" : "time",
          "description" : "Time",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "HH:ii",
            "example" : "14:00"
          }
        }, {
          "in" : "query",
          "name" : "primary_services",
          "description" : "Selected primary services ids",
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "default" : [ ],
            "example" : [ 1, 2 ]
          }
        }, {
          "in" : "query",
          "name" : "secondary_services",
          "description" : "Selected secondary services ids",
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "default" : [ ],
            "example" : [ 3, 4 ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Availability Primary Services Result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "services" : {
                      "$ref" : "#/components/schemas/AvailibilityServices"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/availability/services/secondary" : {
      "get" : {
        "tags" : [ "availability" ],
        "summary" : "Check available secondary services on date/time",
        "operationId" : "availabilitySecondaryServices",
        "description" : "Check available secondary services on date/time\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "shop",
          "description" : "Shop id",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "date",
          "description" : "Date",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "YYYY-MM-DD",
            "example" : "2018-10-22"
          }
        }, {
          "in" : "query",
          "name" : "time",
          "description" : "Time",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "HH:ii",
            "example" : "14:00"
          }
        }, {
          "in" : "query",
          "name" : "primary_services",
          "description" : "Selected primary services ids",
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "default" : [ ],
            "example" : [ 1, 2 ]
          }
        }, {
          "in" : "query",
          "name" : "secondary_services",
          "description" : "Selected secondary services ids",
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "default" : [ ],
            "example" : [ 3, 4 ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Availability Secondary Services Result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "services" : {
                      "$ref" : "#/components/schemas/AvailibilityServices"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/availability/assistants" : {
      "post" : {
        "tags" : [ "availability" ],
        "summary" : "Check available assistants on date/time",
        "operationId" : "availabilityAssistants",
        "description" : "Check available assistants on date/time\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "date", "time", "services" ],
                "properties" : {
                  "shop" : {
                    "description" : "Shop id",
                    "type" : "integer"
                  },
                  "date" : {
                    "description" : "Date",
                    "type" : "string",
                    "format" : "YYYY-MM-DD",
                    "example" : "2018-10-22"
                  },
                  "time" : {
                    "description" : "Tim",
                    "type" : "string",
                    "format" : "HH:ii",
                    "example" : "14:00"
                  },
                  "services" : {
                    "description" : "Booking services",
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "service_id" ],
                      "properties" : {
                        "service_id" : {
                          "type" : "integer"
                        },
                        "assistant_id" : {
                          "type" : "integer"
                        }
                      }
                    },
                    "example" : [ {
                      "service_id" : 1,
                      "assistant_id" : 2
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Availability Assistants Result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "is_valid" : {
                      "type" : "boolean",
                      "example" : true,
                      "description" : "Validation result of selected services and assistants"
                    },
                    "services" : {
                      "$ref" : "#/components/schemas/AvailibilityAssistants"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/availability/booking/date" : {
      "get" : {
        "tags" : [ "availability" ],
        "summary" : "Check available booking on date/time",
        "operationId" : "availabilityBookingDateTime",
        "description" : "Check available booking on date/time\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "shop",
          "description" : "Shop id",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "date",
          "description" : "Date",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "YYYY-MM-DD",
            "example" : "2018-10-22"
          }
        }, {
          "in" : "query",
          "name" : "time",
          "description" : "Time",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "HH:ii",
            "example" : "14:00"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Availability Booking DateTime Result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "success" : {
                      "type" : "integer",
                      "enum" : [ 0, 1 ],
                      "example" : 1
                    },
                    "errors" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      },
                      "example" : [ ]
                    },
                    "intervals" : {
                      "$ref" : "#/components/schemas/AvailibilityIntervals"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/availability/booking/services" : {
      "post" : {
        "tags" : [ "availability" ],
        "summary" : "Check available booking services on date/time",
        "operationId" : "availabilityBookingServices",
        "description" : "Check available booking services on date/time\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "date", "time" ],
                "properties" : {
                  "shop" : {
                    "description" : "Shop id",
                    "type" : "integer"
                  },
                  "booking_id" : {
                    "description" : "Booking ID",
                    "type" : "integer",
                    "example" : 504
                  },
                  "date" : {
                    "description" : "Date",
                    "type" : "string",
                    "format" : "YYYY-MM-DD",
                    "example" : "2018-10-22"
                  },
                  "time" : {
                    "description" : "Tim",
                    "type" : "string",
                    "format" : "HH:ii",
                    "example" : "14:00"
                  },
                  "is_all_services" : {
                    "description" : "Check all services",
                    "type" : "boolean",
                    "example" : true
                  },
                  "services" : {
                    "description" : "Already selected booking services and their assistants",
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "service_id" ],
                      "properties" : {
                        "service_id" : {
                          "type" : "integer"
                        },
                        "assistant_id" : {
                          "type" : "integer"
                        }
                      }
                    },
                    "example" : [ {
                      "service_id" : 1,
                      "assistant_id" : 2
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Availability Booking Services Result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "services" : {
                      "$ref" : "#/components/schemas/AvailibilityBookingServices"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/availability/booking/assistants" : {
      "post" : {
        "tags" : [ "availability" ],
        "summary" : "Check available booking assistants on date/time",
        "operationId" : "availabilityBookingAssistants",
        "description" : "Check available booking assistants on date/time\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "date", "time" ],
                "properties" : {
                  "shop" : {
                    "description" : "Shop id",
                    "type" : "integer"
                  },
                  "booking_id" : {
                    "description" : "Booking ID",
                    "type" : "integer",
                    "example" : 504
                  },
                  "date" : {
                    "description" : "Date",
                    "type" : "string",
                    "format" : "YYYY-MM-DD",
                    "example" : "2018-10-22"
                  },
                  "time" : {
                    "description" : "Tim",
                    "type" : "string",
                    "format" : "HH:ii",
                    "example" : "14:00"
                  },
                  "selected_service_id" : {
                    "description" : "Selected service id",
                    "type" : "integer",
                    "example" : 704
                  },
                  "services" : {
                    "description" : "Already selected booking services and their assistants",
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "service_id" ],
                      "properties" : {
                        "service_id" : {
                          "type" : "integer"
                        },
                        "assistant_id" : {
                          "type" : "integer"
                        }
                      }
                    },
                    "example" : [ {
                      "service_id" : 1,
                      "assistant_id" : 2
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Availability Booking Assistans Result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "assistants" : {
                      "$ref" : "#/components/schemas/AvailibilityBookingAssistants"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/users" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Modify the current user",
        "operationId" : "updateCurrentUser",
        "description" : "Modify an user\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : 309
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "onesignal_player_id" : {
                    "description" : "Onesignal player_id for notification",
                    "type" : "string",
                    "example" : "5fc2defc-0f65-47e2-9622-2c129aa97273"
                  }
                }
              }
            }
          },
          "description" : "User item update"
        }
      }
    },
    "/shops" : {
      "get" : {
        "tags" : [ "shops" ],
        "summary" : "Get shops list",
        "operationId" : "getShops",
        "description" : "Get shops list\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Shops list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ShopItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "shops" ],
        "summary" : "Create a new shop",
        "operationId" : "addShop",
        "description" : "Create a new shop\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : 309
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          },
          "409" : {
            "description" : "An existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShopItem"
              }
            }
          },
          "description" : "Shop item to add",
          "required" : true
        }
      }
    },
    "/shops/{id}" : {
      "get" : {
        "tags" : [ "shops" ],
        "summary" : "Get one shop",
        "operationId" : "getShop",
        "description" : "Get one shop\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Shop id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Shop results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ShopItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      },
      "put" : {
        "tags" : [ "shops" ],
        "summary" : "Modify a shop",
        "operationId" : "updateShop",
        "description" : "Modify a shop\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Shop id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShopItem"
              }
            }
          },
          "description" : "Shop item to add"
        }
      },
      "delete" : {
        "tags" : [ "shops" ],
        "summary" : "Delete a shop",
        "operationId" : "deleteShop",
        "description" : "Delete a shop\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "id",
          "description" : "Shop id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    },
    "/app/about" : {
      "get" : {
        "tags" : [ "app" ],
        "summary" : "Get app about info",
        "operationId" : "getAppAboutInfo",
        "description" : "Get app about info\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "App about info",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "info" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "type" : "string",
                          "example" : "Salon Booking Plugin"
                        },
                        "version" : {
                          "type" : "string",
                          "example" : "3.38"
                        },
                        "pro_version" : {
                          "type" : "boolean",
                          "description" : "Enabled Pro version of plugin",
                          "example" : true
                        },
                        "author" : {
                          "type" : "string",
                          "example" : "Salon Booking"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/app/settings" : {
      "get" : {
        "tags" : [ "app" ],
        "summary" : "Get app settings info",
        "operationId" : "getAppSettingsInfo",
        "description" : "Get app settings\n",
        "parameters" : [ {
          "in" : "header",
          "name" : "Access-Token",
          "description" : "Access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "App settings info",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "OK"
                    },
                    "settings" : {
                      "type" : "object",
                      "properties" : {
                        "attendant_enabled" : {
                          "type" : "boolean",
                          "description" : "Enabled assistants selection",
                          "example" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad input parameter"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AssistantItem" : {
        "type" : "object",
        "required" : [ "id", "name", "services" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 0
          },
          "name" : {
            "type" : "string",
            "example" : "Alex"
          },
          "services" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "description" : " Array of services ids. Empty for all services.",
            "example" : [ 6, 7 ]
          },
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "alex@salonbooking.it"
          },
          "phone" : {
            "type" : "string",
            "format" : "phone",
            "example" : "987-45-26"
          },
          "description" : {
            "type" : "string",
            "example" : "Very professional master"
          },
          "availabilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AvailabilityItem"
            }
          },
          "holidays" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HolidayItem"
            }
          },
          "image_url" : {
            "type" : "string",
            "format" : "url",
            "example" : ""
          },
          "shops" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : 0
                },
                "title" : {
                  "type" : "string",
                  "example" : "Shop"
                },
                "services" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  },
                  "description" : " Array of services ids. Empty for all services.",
                  "example" : [ 6, 7 ]
                },
                "email" : {
                  "type" : "string",
                  "format" : "email",
                  "example" : "alex@salonbooking.it"
                },
                "phone" : {
                  "type" : "string",
                  "format" : "phone",
                  "example" : "987-45-26"
                },
                "availabilities" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AvailabilityItem"
                  }
                },
                "holidays" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HolidayItem"
                  }
                }
              }
            }
          }
        }
      },
      "AvailabilityItem" : {
        "type" : "object",
        "required" : [ "days", "from", "to" ],
        "properties" : {
          "days" : {
            "type" : "object",
            "properties" : {
              "0" : {
                "type" : "integer",
                "example" : 0,
                "format" : "only 0 or 1",
                "description" : "sunday"
              },
              "1" : {
                "type" : "integer",
                "example" : 0,
                "format" : "only 0 or 1",
                "description" : "monday"
              },
              "2" : {
                "type" : "integer",
                "example" : 1,
                "format" : "only 0 or 1",
                "description" : "tuesday"
              },
              "3" : {
                "type" : "integer",
                "example" : 0,
                "format" : "only 0 or 1",
                "description" : "wednesday"
              },
              "4" : {
                "type" : "integer",
                "example" : 1,
                "format" : "only 0 or 1",
                "description" : "thursday"
              },
              "5" : {
                "type" : "integer",
                "example" : 0,
                "format" : "only 0 or 1",
                "description" : "friday"
              },
              "6" : {
                "type" : "integer",
                "example" : 1,
                "format" : "only 0 or 1",
                "description" : "saturday"
              }
            }
          },
          "from" : {
            "type" : "object",
            "properties" : {
              "0" : {
                "type" : "string",
                "example" : "09:00",
                "format" : "HH:ii"
              },
              "1" : {
                "type" : "string",
                "example" : "13:00",
                "format" : "HH:ii"
              }
            }
          },
          "to" : {
            "type" : "object",
            "properties" : {
              "0" : {
                "type" : "string",
                "example" : "12:30",
                "format" : "HH:ii"
              },
              "1" : {
                "type" : "string",
                "example" : "17:00",
                "format" : "HH:ii"
              }
            }
          },
          "always" : {
            "type" : "integer",
            "example" : 1,
            "description" : "0 or 1"
          },
          "from_date" : {
            "type" : "string",
            "example" : "2017-12-19",
            "format" : "YYYY-MM-DD"
          },
          "to_date" : {
            "type" : "string",
            "example" : "2017-12-24",
            "format" : "YYYY-MM-DD"
          }
        }
      },
      "HolidayItem" : {
        "type" : "object",
        "required" : [ "from_date", "to_date", "from_time", "to_time" ],
        "properties" : {
          "from_date" : {
            "type" : "string",
            "example" : "2017-12-25",
            "format" : "YYYY-MM-DD"
          },
          "to_date" : {
            "type" : "string",
            "example" : "2017-12-26",
            "format" : "YYYY-MM-DD"
          },
          "from_time" : {
            "type" : "string",
            "example" : "08:00",
            "format" : "HH:ii"
          },
          "to_time" : {
            "type" : "string",
            "example" : "14:00",
            "format" : "HH:ii"
          }
        }
      },
      "ServiceItem" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 0
          },
          "name" : {
            "type" : "string",
            "example" : "Massage"
          },
          "price" : {
            "type" : "number",
            "format" : "double",
            "example" : 10
          },
          "currency" : {
            "type" : "string",
            "example" : "$",
            "readOnly" : true,
            "description" : " Currency symbol."
          },
          "unit" : {
            "type" : "number",
            "description" : " Unit per hour.",
            "example" : 1,
            "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]
          },
          "duration" : {
            "type" : "string",
            "example" : "01:00"
          },
          "exclusive" : {
            "type" : "integer",
            "example" : 1,
            "enum" : [ 0, 1 ],
            "description" : " Is a exclusive service."
          },
          "secondary" : {
            "type" : "integer",
            "example" : 1,
            "enum" : [ 0, 1 ],
            "description" : " Is a secondary service."
          },
          "secondary_display_mode" : {
            "type" : "string",
            "enum" : [ "always", "category", "service" ],
            "example" : "always",
            "description" : " Display secondary if: always (always), belong to the same category (category), is child of selected service (service)"
          },
          "secondary_parent_services" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "description" : " Parent services ids for this secondary service",
            "example" : [ 1, 4 ]
          },
          "execution_order" : {
            "type" : "integer",
            "example" : 1,
            "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
          },
          "break" : {
            "type" : "string",
            "example" : "00:00",
            "enum" : [ "00:00", "01:00", "02:00", "03:00" ]
          },
          "empty_assistants" : {
            "type" : "integer",
            "example" : 1,
            "enum" : [ 0, 1 ],
            "description" : " No assistants required."
          },
          "description" : {
            "type" : "string",
            "example" : "The relax service"
          },
          "categories" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "description" : " Array of service catagories ids.",
            "example" : [ 6, 7 ]
          },
          "availabilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AvailabilityItem"
            }
          },
          "image_url" : {
            "type" : "string",
            "example" : ""
          },
          "shops" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : 0
                },
                "title" : {
                  "type" : "string",
                  "example" : "Shop"
                },
                "price" : {
                  "type" : "number",
                  "format" : "double",
                  "example" : 10
                },
                "unit" : {
                  "type" : "number",
                  "description" : " Unit per hour.",
                  "example" : 1,
                  "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]
                },
                "duration" : {
                  "type" : "string",
                  "example" : "01:00"
                },
                "secondary" : {
                  "type" : "integer",
                  "example" : 1,
                  "enum" : [ 0, 1 ],
                  "description" : " Is a secondary service."
                },
                "availabilities" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AvailabilityItem"
                  }
                }
              }
            }
          }
        }
      },
      "CategoryItem" : {
        "type" : "object",
        "required" : [ "id", "name", "slug" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 0
          },
          "name" : {
            "type" : "string",
            "example" : "Relax"
          },
          "slug" : {
            "type" : "string",
            "example" : "relax"
          },
          "description" : {
            "type" : "string",
            "example" : "The relax category"
          }
        }
      },
      "CustomerItem" : {
        "type" : "object",
        "required" : [ "id", "first_name", "last_name", "email" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 0
          },
          "first_name" : {
            "type" : "string",
            "example" : "Ivan"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Ivanov"
          },
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "ivan@salonbooking.it"
          },
          "phone" : {
            "type" : "string",
            "format" : "phone",
            "example" : "987-45-26"
          },
          "address" : {
            "type" : "string",
            "example" : " 3604 Sycamore Fork Road Ft Lauderdale, FL 7146, United States"
          },
          "note" : {
            "type" : "string",
            "example" : "The first customer"
          },
          "onesignal_player_id" : {
            "type" : "string",
            "description" : "Notification push id",
            "example" : "6392d91a-b206-4b7b-a620-cd68e32c3a76"
          },
          "bookings" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "description" : " Array of bookings ids.",
            "example" : [ 6, 7 ]
          }
        }
      },
      "BookingItem" : {
        "type" : "object",
        "required" : [ "id", "date", "time", "status" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 0
          },
          "created" : {
            "type" : "integer",
            "example" : 1528107879
          },
          "date" : {
            "type" : "string",
            "example" : "2017-12-24",
            "format" : "YYYY-MM-DD"
          },
          "time" : {
            "type" : "string",
            "example" : "13:00",
            "format" : "HH:ii"
          },
          "status" : {
            "type" : "string",
            "example" : "sln-b-pending",
            "enum" : [ "sln-b-pendingpayment", "sln-b-pending", "sln-b-paid", "sln-b-paylater", "sln-b-canceled", "sln-b-confirmed", "sln-b-error" ]
          },
          "customer_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 0
          },
          "customer_first_name" : {
            "type" : "string",
            "example" : "Ivan"
          },
          "customer_last_name" : {
            "type" : "string",
            "example" : "Ivanov"
          },
          "customer_email" : {
            "type" : "string",
            "format" : "email",
            "example" : "ivan@salonbooking.it"
          },
          "customer_phone" : {
            "type" : "string",
            "format" : "phone",
            "example" : "987-45-26"
          },
          "customer_address" : {
            "type" : "string",
            "example" : " 3604 Sycamore Fork Road Ft Lauderdale, FL 7146, United States"
          },
          "customer_onesignal_player_id" : {
            "type" : "string",
            "description" : "Customer notification push id",
            "example" : "6392d91a-b206-4b7b-a620-cd68e32c3a76"
          },
          "services" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "service_id", "assistant_id" ],
              "properties" : {
                "start_at" : {
                  "type" : "string",
                  "format" : "HH:ii",
                  "example" : "08:00",
                  "readOnly" : true
                },
                "end_at" : {
                  "type" : "string",
                  "format" : "HH:ii",
                  "example" : "09:00",
                  "readOnly" : true
                },
                "service_id" : {
                  "type" : "integer",
                  "format" : "uuid",
                  "example" : 0
                },
                "assistant_id" : {
                  "type" : "number",
                  "format" : "uuid",
                  "example" : 0
                }
              }
            }
          },
          "discounts" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "description" : " Array of disounts ids.",
            "example" : [ 6, 7 ]
          },
          "duration" : {
            "type" : "string",
            "format" : "HH:ii",
            "example" : "01:30",
            "readOnly" : true
          },
          "amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 10,
            "readOnly" : true
          },
          "deposit" : {
            "type" : "number",
            "format" : "double",
            "example" : 0,
            "readOnly" : true
          },
          "currency" : {
            "type" : "string",
            "example" : "$",
            "readOnly" : true,
            "description" : " Currency symbol."
          },
          "transaction_id" : {
            "type" : "string",
            "example" : "13712",
            "readOnly" : true
          },
          "note" : {
            "type" : "string",
            "example" : "The first booking"
          },
          "shop" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid",
                "example" : 0
              },
              "title" : {
                "type" : "string",
                "example" : "Shop"
              }
            }
          }
        }
      },
      "DiscountItem" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 0
          },
          "name" : {
            "type" : "string",
            "example" : "15% discount"
          },
          "amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 15,
            "description" : " Amount of discount."
          },
          "amount_type" : {
            "type" : "string",
            "enum" : [ "fixed", "percentage" ],
            "example" : "percentage",
            "description" : " Type of amount (fix or percent)."
          },
          "currency" : {
            "type" : "string",
            "example" : "$",
            "readOnly" : true,
            "description" : " Currency symbol."
          },
          "total_limit" : {
            "type" : "integer",
            "description" : " Limit of usage discount (unlimited if blank)."
          },
          "valid_from" : {
            "type" : "string",
            "example" : "2017-12-19",
            "format" : "YYYY-MM-DD"
          },
          "valid_to" : {
            "type" : "string",
            "example" : "2017-12-25",
            "format" : "YYYY-MM-DD"
          },
          "per_user_limit" : {
            "type" : "integer",
            "description" : " Limit of usage discount (unlimited if blank) per user."
          },
          "services" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "example" : [ 1, 2 ],
            "description" : " Apply discount only for these services. If empty - for all services."
          },
          "discount_type" : {
            "type" : "string",
            "enum" : [ "sln-d-coupon", "sln-d-auto" ],
            "example" : "sln-d-auto",
            "description" : " Type of discount: coupon code or auto by logic rules"
          },
          "discount_code" : {
            "type" : "string",
            "example" : "12718"
          },
          "discount_rules" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "mode" ],
              "properties" : {
                "mode" : {
                  "type" : "string",
                  "enum" : [ "bookings", "amount", "daterange", "weekdays" ],
                  "example" : "weekdays",
                  "description" : " Mode of logic rule"
                },
                "bookings_number" : {
                  "type" : "integer",
                  "example" : 1894231,
                  "description" : " Number of reservations."
                },
                "amount_number" : {
                  "type" : "number",
                  "format" : "double",
                  "example" : 100,
                  "description" : " Amount of reservations."
                },
                "daterange_from" : {
                  "type" : "string",
                  "example" : "2017-12-19",
                  "format" : "YYYY-MM-DD"
                },
                "daterange_to" : {
                  "type" : "string",
                  "example" : "2017-12-25",
                  "format" : "YYYY-MM-DD"
                },
                "weekdays" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "enum" : [ 0, 1, 2, 3, 4, 5, 6 ],
                    "example" : 0,
                    "description" : " Days of week by these order number"
                  }
                }
              }
            }
          }
        }
      },
      "AvailibilityIntervals" : {
        "type" : "object",
        "properties" : {
          "years" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "2018", "2019" ]
          },
          "months" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "Oct", "Nov" ]
          },
          "days" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "example" : [ 1, 2, 3, 4 ]
          },
          "times" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "HH:ii"
            },
            "example" : [ "11:00", "12:00" ]
          },
          "dates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "YYYY-MM-DD"
            },
            "example" : [ "2018-10-04", "2018-10-05" ]
          },
          "fullDays" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ ]
          },
          "suggestedDay" : {
            "type" : "string",
            "format" : "DD",
            "example" : "04"
          },
          "suggestedMonth" : {
            "type" : "string",
            "format" : "MM",
            "example" : "06"
          },
          "suggestedYear" : {
            "type" : "string",
            "format" : "YYYY",
            "example" : "2018"
          },
          "suggestedDate" : {
            "type" : "string",
            "format" : "YYYY-MM-DD",
            "example" : "2018-10-18"
          },
          "suggestedTime" : {
            "type" : "string",
            "format" : "HH:ii",
            "example" : "11:00"
          }
        }
      },
      "AvailibilityServices" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "service_id" : {
              "type" : "integer",
              "description" : "Service id",
              "example" : 1
            },
            "service_name" : {
              "type" : "string",
              "description" : "Service name",
              "example" : "Massage"
            },
            "available" : {
              "type" : "boolean",
              "description" : "Status of availability the service",
              "example" : true
            },
            "selected" : {
              "type" : "boolean",
              "description" : "Status of selection the service",
              "example" : false
            },
            "error" : {
              "type" : "string",
              "description" : "Error message if service can not be available or selected",
              "example" : ""
            }
          }
        },
        "example" : [ {
          "service_id" : 1,
          "service_name" : "Massage",
          "available" : true,
          "selected" : false,
          "error" : ""
        }, {
          "service_id" : 2,
          "service_name" : "Manicur",
          "available" : true,
          "selected" : true,
          "error" : ""
        } ]
      },
      "AvailibilityAssistants" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "service_id" : {
              "type" : "integer",
              "description" : "Service id",
              "example" : 1
            },
            "service_name" : {
              "type" : "string",
              "description" : "Service name",
              "example" : "Massage"
            },
            "assistants" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "assistant_id" : {
                    "type" : "integer",
                    "description" : "Assistant id",
                    "example" : 11
                  },
                  "assistant_name" : {
                    "type" : "string",
                    "description" : "Assistant name",
                    "example" : "Mario"
                  },
                  "available" : {
                    "type" : "boolean",
                    "description" : "Status of availability the assistant",
                    "example" : true
                  },
                  "selected" : {
                    "type" : "boolean",
                    "description" : "Status of selection the assistant",
                    "example" : false
                  },
                  "error" : {
                    "type" : "string",
                    "description" : "Error message if assistant can not be available or selected",
                    "example" : ""
                  }
                }
              }
            }
          }
        },
        "example" : [ {
          "service_id" : 1,
          "service_name" : "Massage",
          "assistants" : [ {
            "assistant_id" : 11,
            "assistant_name" : "Mario",
            "available" : true,
            "selected" : false,
            "error" : ""
          }, {
            "assistant_id" : 12,
            "assistant_name" : "Pablo",
            "available" : false,
            "selected" : false,
            "error" : ""
          } ]
        }, {
          "service_id" : 2,
          "service_name" : "Manicur",
          "assistants" : [ {
            "assistant_id" : 11,
            "assistant_name" : "Mario",
            "available" : false,
            "selected" : false,
            "error" : "This assistant is unavailable at 16:00"
          }, {
            "assistant_id" : 12,
            "assistant_name" : "Pablo",
            "available" : true,
            "selected" : true,
            "error" : ""
          } ]
        } ],
        "description" : "Array of map service_id and assistant_id with available data"
      },
      "AvailibilityBookingServices" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "required" : [ "id", "name" ],
          "properties" : {
            "id" : {
              "type" : "string",
              "format" : "uuid",
              "example" : 0
            },
            "name" : {
              "type" : "string",
              "example" : "Massage"
            },
            "available" : {
              "type" : "boolean",
              "description" : " Is available service",
              "example" : true
            },
            "price" : {
              "type" : "number",
              "format" : "double",
              "example" : 10
            },
            "currency" : {
              "type" : "string",
              "example" : "$",
              "readOnly" : true,
              "description" : " Currency symbol."
            },
            "unit" : {
              "type" : "number",
              "description" : " Unit per hour.",
              "example" : 1,
              "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]
            },
            "duration" : {
              "type" : "string",
              "example" : "01:00",
              "enum" : [ "00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00" ]
            },
            "exclusive" : {
              "type" : "integer",
              "example" : 1,
              "enum" : [ 0, 1 ],
              "description" : " Is a exclusive service."
            },
            "secondary" : {
              "type" : "integer",
              "example" : 1,
              "enum" : [ 0, 1 ],
              "description" : " Is a secondary service."
            },
            "secondary_display_mode" : {
              "type" : "string",
              "enum" : [ "always", "category", "service" ],
              "example" : "always",
              "description" : " Display secondary if: always (always), belong to the same category (category), is child of selected service (service)"
            },
            "secondary_parent_services" : {
              "type" : "array",
              "items" : {
                "type" : "integer"
              },
              "description" : " Parent services ids for this secondary service",
              "example" : [ 1, 4 ]
            },
            "execution_order" : {
              "type" : "integer",
              "example" : 1,
              "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
            },
            "break" : {
              "type" : "string",
              "example" : "00:00",
              "enum" : [ "00:00", "01:00", "02:00", "03:00" ]
            },
            "empty_assistants" : {
              "type" : "integer",
              "example" : 1,
              "enum" : [ 0, 1 ],
              "description" : " No assistants required."
            },
            "description" : {
              "type" : "string",
              "example" : "The relax service"
            },
            "categories" : {
              "type" : "array",
              "items" : {
                "type" : "integer"
              },
              "description" : " Array of service catagories ids.",
              "example" : [ 6, 7 ]
            },
            "availabilities" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AvailabilityItem"
              }
            },
            "image_url" : {
              "type" : "string",
              "example" : ""
            }
          }
        }
      },
      "AvailibilityBookingAssistants" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "required" : [ "id", "name", "services" ],
          "properties" : {
            "id" : {
              "type" : "string",
              "format" : "uuid",
              "example" : 0
            },
            "name" : {
              "type" : "string",
              "example" : "Alex"
            },
            "available" : {
              "type" : "boolean",
              "description" : " Is available service",
              "example" : true
            },
            "services" : {
              "type" : "array",
              "items" : {
                "type" : "integer"
              },
              "description" : " Array of services ids. Empty for all services.",
              "example" : [ 6, 7 ]
            },
            "email" : {
              "type" : "string",
              "format" : "email",
              "example" : "alex@salonbooking.it"
            },
            "phone" : {
              "type" : "string",
              "format" : "phone",
              "example" : "987-45-26"
            },
            "description" : {
              "type" : "string",
              "example" : "Very professional master"
            },
            "availabilities" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AvailabilityItem"
              }
            },
            "holidays" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/HolidayItem"
              }
            },
            "image_url" : {
              "type" : "string",
              "format" : "url",
              "example" : ""
            }
          }
        }
      },
      "ShopItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 704
          },
          "name" : {
            "type" : "string",
            "example" : "Mario's shop"
          },
          "email" : {
            "type" : "string",
            "example" : "marioshop@gmail.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "571-27-32"
          },
          "address" : {
            "type" : "string",
            "example" : "3604 Sycamore Fork Road Ft Lauderdale, FL 7146, United States"
          }
        }
      }
    }
  }
}