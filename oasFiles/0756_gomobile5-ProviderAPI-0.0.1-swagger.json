{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "This is an API used by Go Mobile to manage trips with a trip provider, e.g. a taxi company.\n",
    "version" : "0.0.1",
    "title" : "Provider API"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/gomobile5/ProviderAPI/1.0.0"
  }, {
    "url" : "https://petstore.swagger.io/v2"
  } ],
  "tags" : [ {
    "name" : "booking",
    "description" : "Managing trips"
  } ],
  "paths" : {
    "/offers/request" : {
      "post" : {
        "tags" : [ "booking" ],
        "summary" : "Requests a trip offer that may be confirmed at a later point.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OfferRequest"
              }
            }
          },
          "description" : "Request for a trip offer"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OfferResponse"
                }
              }
            },
            "description" : "A trip offer"
          }
        }
      }
    },
    "/offers/{id}/accept" : {
      "post" : {
        "tags" : [ "booking" ],
        "summary" : "Accepts a trip offer.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "The ID of the trip, which is also the ID of the offer that preceeded it."
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BookingRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookingResponse"
                }
              }
            },
            "description" : "Or any other 'success' status code. A vehicle must arrive and transport the passenger(s) as described in the offer barring an unexpected problem (in which case the booking must be cancelled as soon as possible)."
          },
          "400" : {
            "description" : "This or any other status code in the 4xx/5xx range means that the booking has not been accepted and that no vehicle will arrive. Valid reasons are for example that the offer has expired, or that the vehicle needed to transport the passengers has been booked by another user after the offer was presented"
          }
        }
      }
    },
    "/trips/{id}/statuses" : {
      "get" : {
        "tags" : [ "booking" ],
        "summary" : "Used to view a list of which statuses the order has transitioned through with a timestamp for each timestamp.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "The ID of the trip, which is also the ID of the offer that preceeded it."
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripStatusResponse"
                }
              }
            },
            "description" : "Or any other 'success' status code."
          }
        }
      }
    },
    "/trips/{id}/vehicle" : {
      "get" : {
        "tags" : [ "booking" ],
        "summary" : "Used to view information about the vehicle associated with the booking.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "The ID of the trip, which is also the ID of the offer that preceeded it."
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripVehicleResponse"
                }
              }
            },
            "description" : "Or any other 'success' status code."
          },
          "503" : {
            "description" : "The order does not have an associated vehicle, for example when the order has not yet been assigned one."
          }
        }
      }
    },
    "/trips/{id}/tracking" : {
      "get" : {
        "tags" : [ "booking" ],
        "summary" : "Used to view information about the location of vehicle associated with the booking.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "The ID of the trip, which is also the ID of the offer that preceeded it."
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripTrackingResponse"
                }
              }
            },
            "description" : "Or any other 'success' status code."
          },
          "503" : {
            "description" : "examples: a) the order does not have an associated vehicle (for example when the order has not yet been assigned one), b) the location of the vehicle is unknown, or c) the trip is not in a state that allows the location of the vehicle to be accessed (e.g. while exeucting a different order)"
          }
        }
      }
    },
    "/trips/{id}/report" : {
      "get" : {
        "tags" : [ "booking" ],
        "summary" : "Used to view information about the trip after it has been completed.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "The ID of the trip, which is also the ID of the offer that preceeded it."
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripReportResponse"
                }
              }
            },
            "description" : "Or any other 'success' status code."
          },
          "503" : {
            "description" : "The order does is still active."
          }
        }
      }
    },
    "/trips/{id}/cancel" : {
      "get" : {
        "tags" : [ "booking" ],
        "summary" : "Cancels an active trip before the passenger is on board.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "The ID of the trip, which is also the ID of the offer that preceeded it."
        } ],
        "responses" : {
          "200" : {
            "description" : "Or any other 'success' status code. The trip is canceled."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Person" : {
        "type" : "object",
        "required" : [ "phoneNumber" ],
        "properties" : {
          "phoneNumber" : {
            "type" : "string",
            "example" : "+4712345678"
          }
        }
      },
      "Point" : {
        "type" : "object",
        "required" : [ "latitude", "longitude" ],
        "properties" : {
          "latitude" : {
            "type" : "number",
            "example" : 58.147542
          },
          "longitude" : {
            "type" : "number",
            "example" : 7.994392
          }
        }
      },
      "OfferRequest" : {
        "type" : "object",
        "required" : [ "pickupTime", "from", "to", "numberOfPassengers" ],
        "properties" : {
          "pickupTime" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "ISO8601",
            "example" : "2020-05-18T10:57:21.2848663Z"
          },
          "from" : {
            "$ref" : "#/components/schemas/Point"
          },
          "to" : {
            "$ref" : "#/components/schemas/Point"
          },
          "numberOfPassengers" : {
            "type" : "integer",
            "example" : 3
          }
        }
      },
      "OfferResponse" : {
        "type" : "object",
        "required" : [ "id", "estimatedPickupTime", "estimatedArrivalTime", "maximumPrice", "currency", "timeOfExpiration", "supportedPaymentMethods" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID in arbitrary format as long at it can be put in a URL."
          },
          "estimatedPickupTime" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "ISO8601",
            "example" : "2020-05-18T10:57:21.2848663Z"
          },
          "estimatedArrivalTime" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "ISO8601",
            "example" : "2020-05-18T10:57:21.2848663Z"
          },
          "maximumPrice" : {
            "type" : "integer",
            "example" : 14900,
            "description" : "Fundamental unit of the currency, e.g. Ã¸re or cents, not kroner or euro. Includes the tax amount."
          },
          "currency" : {
            "type" : "string",
            "example" : "NOK",
            "description" : "ISO4217"
          },
          "timeOfExpiration" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "ISO8601. Time when the offer will no longer be accepted. E.g. 10 minutes in the future. Long enough for the user to decide whether to accept the offer and short enough for the dispatcher to not have to deal with outdated offers that may never be accepted.",
            "example" : "2020-05-18T10:57:21.2848663Z"
          },
          "supportedPaymentMethods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaymentMethod"
            }
          }
        }
      },
      "PaymentMethod" : {
        "type" : "string",
        "enum" : [ "InApp", "InCar" ]
      },
      "BookingRequest" : {
        "type" : "object",
        "required" : [ "traveller", "paymentMethod", "messageToDriver" ],
        "properties" : {
          "traveller" : {
            "$ref" : "#/components/schemas/Person"
          },
          "paymentMethod" : {
            "$ref" : "#/components/schemas/PaymentMethod"
          },
          "messageToDriver" : {
            "type" : "string",
            "example" : "Honk and I'll be there in a moment.",
            "description" : "Contains simple instructions or clarifications to the driver."
          }
        }
      },
      "BookingResponse" : {
        "type" : "object",
        "required" : [ "bookingNumber" ],
        "properties" : {
          "bookingNumber" : {
            "type" : "string",
            "description" : "A series of characters that will be used by the passenger to identify the trip with the driver and taxi central."
          }
        }
      },
      "TripStatusResponse" : {
        "type" : "object",
        "required" : [ "status" ],
        "properties" : {
          "status" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TripStatusesItem"
            }
          }
        }
      },
      "TripStatusesItem" : {
        "type" : "object",
        "required" : [ "status", "timestamp" ],
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/TripStatus"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "ISO8601. The time when the trip transitioned to this status.",
            "example" : "2020-05-18T10:57:21.2848663Z"
          }
        }
      },
      "TripStatus" : {
        "type" : "string",
        "enum" : [ "unassigned", "assigned", "onItsWay", "arrived", "passengerOnBoard", "finished", "noShow", "canceled" ]
      },
      "TripVehicleResponse" : {
        "type" : "object",
        "required" : [ "carId" ],
        "properties" : {
          "carId" : {
            "type" : "string",
            "description" : "The ID of the car's permit as shown on the taxi's lamp."
          }
        }
      },
      "TripTrackingResponse" : {
        "type" : "object",
        "required" : [ "position", "heading", "timestamp" ],
        "properties" : {
          "position" : {
            "$ref" : "#/components/schemas/Point"
          },
          "heading" : {
            "type" : "number",
            "example" : 123.4,
            "description" : "0-360, 0 is North"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "ISO8601. The time when the position and heading was current.",
            "example" : "2020-05-18T10:57:21.2848663Z"
          }
        }
      },
      "TripReportResponse" : {
        "type" : "object",
        "required" : [ "price", "taxAmount", "currency", "taxRate", "tripStart", "tripEnd", "distance", "driverId" ],
        "properties" : {
          "price" : {
            "type" : "integer",
            "example" : 14900,
            "description" : "Fundamental unit of the currency, e.g. Ã¸re or cents, not kroner or euro. The final price of the trip, smaller or the same as the amount communicated in the offer. Includes the tax amount."
          },
          "taxAmount" : {
            "type" : "number",
            "example" : 160
          },
          "currency" : {
            "type" : "string",
            "example" : "NOK",
            "description" : "ISO4217. Currency of the price and tax amount."
          },
          "taxRate" : {
            "type" : "number",
            "example" : 0.12,
            "description" : "Price * taxRate is taxAmount."
          },
          "tripStart" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "ISO8601. The time when the trip started.",
            "example" : "2020-05-18T10:57:21.2848663Z"
          },
          "tripEnd" : {
            "type" : "string",
            "format" : "datetime",
            "description" : "ISO8601. The time when the trip ended.",
            "example" : "2020-05-18T10:57:21.2848663Z"
          },
          "distance" : {
            "type" : "number",
            "example" : 1234,
            "description" : "The number of meters driven."
          },
          "driverId" : {
            "type" : "string",
            "description" : "The driver's permit ID."
          }
        }
      }
    },
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "X-API-KEY"
      }
    }
  },
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ]
}