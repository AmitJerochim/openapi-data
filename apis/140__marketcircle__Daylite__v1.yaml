openapi: 3.0.0
servers:
  - description: Daylite API
    url: 'https://api.marketcircle.net/v1'
info:
  version: v1
  description: Daylite API Documentation
  title: Daylite API Documentation
security:
  - oAuth2:
      - 'daylite:read'
      - 'daylite:write'
  - bearerAuth: []
tags:
  - name: Authentication
  - name: Contacts
  - name: Companies
  - name: Opportunities
  - name: Projects
  - name: Notes
  - name: Tasks
  - name: Appointments
  - name: Emails
  - name: Forms
  - name: Groups
  - name: Users
  - name: Teams
  - name: Extra Fields
paths:
  /:
    get:
      tags:
        - Authentication
      summary: Token verification
      description: Endpoint to test for network connectivity to the API and to check if an authentication token is valid.
      security:
        - oAuth2:
            - 'daylite:read'
      responses:
        '200':
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
  /info:
    get:
      tags:
        - Authentication
      summary: Token metadata
      description: 'This endpoint displays information about the authentication token. The application_identifier, ip_address, scopes, user, and customer are returned. '
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
  
  /contacts:
    get:
      tags:
        - Contacts
      summary: List all contacts
      description: This endpoint returns a list of all contacts
      security:
        - oAuth2:
            - 'daylite:read'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      x-tags: public
      tags:
        - Contacts
      summary: Create a new contact
      description: This endpoint creates a contact
      requestBody:
        description: A JSON object containing Contact information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      security:
        - oAuth2:
            - 'daylite:write'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
  '/contacts/{id}':
    get:
      tags:
        - Contacts
      summary: Retrieve a contact
      description: "This endpoint returns a contact's details"
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - oAuth2:
            - 'daylite:read'
      responses:
        '200':
          description: A Contact object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
    patch:
      tags:
        - Contacts
      summary: Update an existing contact
      description: "This endpoint updates a contact's details"
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: A JSON object containing Contact information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      security:
        - oAuth2:
            - 'daylite:write'
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
    delete:
      tags:
        - Contacts
      summary: Remove an existing contact
      description: 'This endpoint removes a contact. If it is not in the trash, it will be placed there. If it is in the trash, it will be permanently deleted. '
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - oAuth2:
            - 'daylite:write'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
  /contacts/extra_fields:
    get:
      tags:
        - Contacts
        - Extra Fields
      summary: Display contact extra field names
      description: Display contact extra field names
      security:
        - oAuth2:
            - 'daylite:read'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
  /contacts/emails:
    get:
      tags:
        - Contacts
      summary: List of email message links
      description: List of email message links
      security:
        - oAuth2:
            - 'daylite:read'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

  /companies:
    get:
      tags:
        - Companies
      summary: List all companies
      description: This endpoint returns a list of all companies
      security:
        - oAuth2:
            - 'daylite:read'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      x-tags: public
      tags:
        - Companies
      summary: Create a new company
      description: This endpoint creates a company
      requestBody:
        description: A JSON object containing Company information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      security:
        - oAuth2:
            - 'daylite:write'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
components:
  schemas:
    Contact:
      type: object
      title: Contact
      properties:
        self:
          type: string
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 128
        middle_name:
          type: string
          nullable: true
          maxLength: 128
        last_name:
          type: string
          nullable: true
          maxLength: 128
        prefix:
          type: string
          nullable: true
          maxLength: 64
        suffix:
          type: string
          nullable: true
          maxLength: 64
        alias:
          type: string
          nullable: true
          maxLength: 128
        nickname:
          type: string
          nullable: true
          maxLength: 128
        birthday:
          type: string
          nullable: true
          format: date-time
        anniversary:
          type: string
          nullable: true
          format: date-time
        category:
          type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/Owner'
        creator:
          $ref: '#/components/schemas/Creator'
        create_date:
          type: string
          format: date-time
        modify_date:
          type: string
          readOnly: true
          format: date-time
        trashed:
          type: boolean
        extra_fields:
          $ref: '#/components/schemas/ExtraField'
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URL'
        social_profiles:
          type: array
          items:
            $ref: '#/components/schemas/SocialProfile'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyRole'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskLink'
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentLink'
        email_messages:
          type: array
          items:
            $ref: '#/components/schemas/EmailLink'
          writeOnly: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/NoteLink'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupLink'
        forms:
          type: array
          items:
            $ref: '#/components/schemas/FormLink'
      x-tags:
        - major_object
    Company:
      title: Company
      type: object
      properties:
        self:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        create_date:
          type: string
          format: date-time
        modify_date:
          type: string
          format: date-time
          readOnly: true
        creator:
          type: string
          readOnly: true
        owner:
          type: string
        extra_fields:
          $ref: '#/components/schemas/ExtraField'
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URL'
        social_profiles:
          type: array
          items:
            $ref: '#/components/schemas/SocialProfile'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactRole'
        opportunities:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityRole'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRole'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskLink'
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentLink'
        email_messages:
          type: array
          items:
            $ref: '#/components/schemas/EmailLink'
          writeOnly: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/NoteLink'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupLink'
        forms:
          type: array
          items:
            $ref: '#/components/schemas/FormLink'
      x-tags:
        - major_object
    Opportunity:
      title: Opportunity
      type: object
      properties:
        self:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        details:
          type: string
          nullable: true
          maxLength: 500
        create_date:
          type: string
          format: date-time
        modify_date:
          type: string
          format: date-time
          readOnly: true
        creator:
          type: string
          readOnly: true
        owner:
          type: string
      x-tags:
        - major_object
    Project:
      title: Project
      type: object
      properties:
        self:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        details:
          type: string
          nullable: true
          maxLength: 1024
        create_date:
          type: string
          format: date-time
        modify_date:
          type: string
          format: date-time
          readOnly: true
        creator:
          type: string
          readOnly: true
        owner:
          type: string
      x-tags:
        - major_object
    Note:
      title: Note
      type: object
      properties:
        self:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
        details:
          type: string
          readOnly: true
        create_date:
          type: string
          format: date-time
        modify_date:
          type: string
          format: date-time
          readOnly: true
        creator:
          type: string
          readOnly: true
        owner:
          type: string
      required:
        - details
      x-tags:
        - major_object
    Task:
      title: Task
      type: object
      properties:
        self:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 256
        location:
          type: string
          maxLength: 256
          nullable: true
        details:
          type: string
          maxLength: 500
          nullable: true
        create_date:
          type: string
          format: date-time
        modify_date:
          type: string
          format: date-time
          readOnly: true
        creator:
          type: string
          readOnly: true
        owner:
          type: string
      required:
        - title
      x-tags:
        - major_object
    Group:
      title: Group
      type: object
      properties:
        self:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        details:
          type: string
          nullable: true
          maxLength: 512
        create_date:
          type: string
          format: date-time
        modify_date:
          type: string
          format: date-time
          readOnly: true
        creator:
          type: string
          readOnly: true
        owner:
          type: string
      required:
        - name
      x-tags:
        - major_object
    Appointment:
      title: Appointment
      type: object
      properties:
        self:
          type: string
          readOnly: true
        subject:
          type: string
          nullable: true
          maxLength: 256
        location:
          type: string
          maxLength: 256
          nullable: true
        details:
          type: string
          nullable: true
          maxLength: 8192
        timezone:
          type: string
        status:
          type: string
        show_as:
          type: string
          enum:
            - busy
            - free
        create_date:
          type: string
          format: date-time
        modify_date:
          type: string
          format: date-time
          readOnly: true
        creator:
          type: string
          readOnly: true
        owner:
          type: string
        trashed:
          type: boolean
      required:
        - subject
      x-tags:
        - major_object
    EmailAddress:
      title: EmailAddress
      type: object
      properties:
        address:
          type: string
        label:
          type: string
        note:
          type: string
          nullable: true
      required:
        - label
        - address
    URL:
      title: URL
      type: object
      properties:
        url:
          type: string
        label:
          type: string
        note:
          type: string
          nullable: true
      required:
        - label
        - url
    SocialProfile:
      title: SocialProfile
      type: object
      properties:
        service:
          type: string
        label:
          type: string
        username:
          type: string
      required:
        - service
        - label
        - username
    Address:
      title: Address
      type: object
      properties:
        street:
          type: string
          maxLength: 128
        city:
          type: string
          maxLength: 128
        state:
          type: string
          maxLength: 128
        postal_code:
          type: string
          maxLength: 32
        country:
          type: string
          maxLength: 128
        note:
          type: string
          maxLength: 500
      minProperties: 2
    ExtraField:
      title: ExtraField
      type: object
      properties:
        com.marketcircle.daylite/extra1:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra2:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra3:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra4:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra5:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra6:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra7:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra8:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra9:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra10:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra11:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra12:
          type: object
          properties:
            value:
              type: string
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra_date_1:
          type: object
          properties:
            value:
              type: string
              format: date-time
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra_date_2:
          type: object
          properties:
            value:
              type: string
              format: date-time
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra_date_3:
          type: object
          properties:
            value:
              type: string
              format: date-time
            display_name:
              type: string
              readOnly: true
        com.marketcircle.daylite/extra_date_4:
          type: object
          properties:
            value:
              type: string
              format: date-time
            display_name:
              type: string
              readOnly: true
    ContactLink:
      title: ContactLink
      type: object
      properties:
        contact:
          type: string
          pattern: "^\\/v1\\/contacts\\/[1-9][0-9]*$"
    CompanyLink:
      title: CompanyLink
      type: object
      properties:
        company:
          type: string
          pattern: "^\\/v1\\/companies\\/[1-9][0-9]*$"
    OpportunityLink:
      title: OpportunityLink
      type: object
      properties:
        opportunity:
          type: string
          pattern: "^\\/v1\\/opportunities\\/[1-9][0-9]*$"
    ProjectLink:
      title: ProjectLink
      type: object
      properties:
        project:
          type: string
          pattern: "^\\/v1\\/projects\\/[1-9][0-9]*$"
    NoteLink:
      title: NoteLink
      type: object
      properties:
        note:
          type: string
          pattern: "^\\/v1\\/notes\\/[1-9][0-9]*$"
    TaskLink:
      title: TaskLink
      type: object
      properties:
        task:
          type: string
          pattern: "^\\/v1\\/tasks\\/[1-9][0-9]*$"
    AppointmentLink:
      title: AppointmentLink
      type: object
      properties:
        appointment:
          type: string
          pattern: "^\\/v1\\/appointments\\/[1-9][0-9]*$"
    GroupLink:
      title: GroupLink
      type: object
      properties:
        group:
          type: string
          pattern: "^\\/v1\\/groups\\/[1-9][0-9]*$"
    EmailLink:
      title: EmailLink
      type: object
      properties:
        email_message:
          type: string
          pattern: "^\\/v1\\/emails\\/[1-9][0-9]*$"
    FormLink:
      title: FormLink
      type: object
      properties:
        form:
          type: string
          pattern: "^\\/v1\\/forms\\/[1-9][0-9]*$"
    ContactRole:
      title: ContactRole
      type: object
      properties:
        title:
          type: string
        role:
          type: string
        department:
          type: string
        contact:
          type: string
          pattern: "^\\/v1\\/contacts\\/[1-9][0-9]*$"
      required:
        - contact
    CompanyRole:
      title: CompanyRole
      type: object
      properties:
        title:
          type: string
        role:
          type: string
        department:
          type: string
        company:
          type: string
          pattern: "^\\/v1\\/companies\\/[1-9][0-9]*$"
      required:
        - company
    OpportunityRole:
      title: OpportunityRole
      type: object
      properties:
        title:
          type: string
        role:
          type: string
        department:
          type: string
        opportunity:
          type: string
          pattern: "^\\/v1\\/opportunities\\/[1-9][0-9]*$"
      required:
        - opportunity
    ProjectRole:
      title: ProjectRole
      type: object
      properties:
        title:
          type: string
        role:
          type: string
        department:
          type: string
        project:
          type: string
          pattern: "^\\/v1\\/projects\\/[1-9][0-9]*$"
      required:
        - project
    Creator:
      title: creator
      type: string
      readOnly: true
      pattern: "^\\/v1\\/users\\/[1-9][0-9]*$"
    Owner:
      title: owner
      type: string
      pattern: "^\\/v1\\/users\\/[1-9][0-9]*$"
  securitySchemes:
    oAuth2:
      type: oauth2
      description: 'For more information, see https://developer.marketcircle.com/docs/authentication'
      flows:
        authorizationCode:
          authorizationUrl: 'https://www.marketcircle.com/account/oauth/authorize'
          tokenUrl: 'https://www.marketcircle.com/account/oauth/token'
          refreshUrl: 'https://www.marketcircle.com/account/oauth/token'
          scopes:
            'daylite:read': Read user information
            'daylite:write': Modify user information
    bearerAuth:
      type: http
      scheme: bearer
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error
    Unauthorized:
      description: Unauthorized
      content:
        text/html:
          schema:
            type: string
          examples:
            text/html:
              value: '<html><head><title>401 Authorization Required</title></head><body><center><h1>401 Authorization Required</h1></center><hr><center>nginx/1.17.4</center></body></html>'
    TooManyRequests:
      description: Too Many Requests
    NoContent:
      description: No Content
    Created:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              location:
                type: string
            required:
              - location
    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
        description: object id
    limit:
      name: limit
      in: query
      schema:
        type: integer
        maximum: 250
        description: number of results to be returned per page
    start:
      name: start
      in: query
      schema:
        type: integer
        description: object id to return results from
    entity:
      name: entity
      in: query
      schema:
        type: string
        enum:
          - contact
          - company
          - project
          - opportunity
          - note
          - task
          - appointment
          - group
          - email
    include_trash:
      name: include_trash
      in: query
      schema:
        type: boolean
        description: include objects which are in the trashed
    full-records:
      name: full-records
      in: query
      schema:
        type: boolean
        description: return full objects in results