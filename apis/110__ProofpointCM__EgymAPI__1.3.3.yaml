openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:

# Added by API Auto Mocking Plugin
  - description: eGym Classes API
    url: https://adm.oms-suite.de/egym_api/v1
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ProofpointCM/EgymAPI/1.0.0
info:
  description: This is the Aciso eGym API to get information from Aciso for the INJOY and Aciso-Apps. Every request is secured with an Authorization Token. To provide your credentials add them to Authorize => Style "Token token={GENERATED_TOKEN}"
  version: "1.3.3"
  title: Aciso eGym API
  contact:
    email: christian.meggendorfer@proof-point.com
tags:
  - name: clubs
    description: General Information of the Clubs
  - name: sessions
    description: Details for Sessions and Booking
  - name: booking
    description: Booking Functions
  - name: schedule
    description: Schedule for Members
  - name: campaigns
    description: Campaigns shown in App
paths:
  /clubs:
    get:
      tags:
        - clubs
      summary: returns clubs
      parameters:
        - in: query
          name: kind
          description: kind of clubs that should be returned (aciso or injoy)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: get all clubs matching kind
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Club'
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        '422':
          description: No kind provided or wrong kind
  /sessions:
    get:
      tags:
        - sessions
      summary: returns sessions    
      parameters:
        - in: query
          name: club_id
          description: ID of the club
          required: true
          schema:
            type: string
            example: '_gup58b4d85fk809fk4b00k98d3k55dcc0f4e1ce-_gupfdda5ebdo30c0o4301oa0b5o86d672818b13'
        - in: query
          name: from_date
          description: "From Date UTC (every session scheduled >= from_date is returned). Important only date is used not the time."
          required: true
          schema:
            type: string 
            example: '2020-04-20T00:00+0200'  
        - in: query
          name: to_date
          description: "To Date UTC (every session scheduled < to_date is returned). Important only date is used not the time. Also pay attention it returns sesion '<' not '<='."
          required: true
          schema:
            type: string  
            example: '2020-04-27T00:00+0200'  
      responses:
        '200':
          description: get sessions of clubs matching from_date to to_date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        '422':
          description: 'Invalid or missing data'
        '404':
          description: 'Club or Course not found'
  /session_detail:
    get:
      tags:
        - sessions
      summary: returns the details for a session    
      parameters:
        - in: query
          name: club_id
          description: ID of the club
          required: true
          schema:
            type: string
            example: '_gup58b4d85fk809fk4b00k98d3k55dcc0f4e1ce-_gupfdda5ebdo30c0o4301oa0b5o86d672818b13'
        - in: query
          name: session_id
          description: ID of session
          required: true
          schema:
            type: string
            example: '_gup1e761ef8k2706k47b6k9d60kba1731822765'
        - in: query
          name: start_date_time
          description: Start DateTime of Course (URL encoded) - is needed because the session_id is not unique in our system (one session object several times)
          required: true
          schema:
            type: string
            example: '2020-04-20T13:00+0200'   
        - in: query
          name: end_date_time
          description: End DateTime of Course (URL encoded) -  - is needed because the session_id is not unique in our system (one session object several times)
          required: true
          schema:
            type: string
            example: '2020-04-20T14:00+0200'  
      responses:
        '200':
          description: get details for a session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        '422':
          description: 'Invalid or missing data'
        '404':
          description: 'Club or Course not found'     
        '423':
          description: 'Special Case: "Course does not exist with specified time, maybe the time changed" -> returnes the msg and session in a JSON object.'
  /is_session_bookable:
    get:
      tags:
        - booking
      summary: returns infos for the eligibility of a session    
      parameters:
        - in: query
          name: club_id
          description: ID of the club
          required: true
          schema:
            type: string
            example: '_gup58b4d85fk809fk4b00k98d3k55dcc0f4e1ce-_gupfdda5ebdo30c0o4301oa0b5o86d672818b13'
        - in: query
          name: session_id
          description: ID of session
          required: true
          schema:
            type: string
            example: '_gup1e761ef8k2706k47b6k9d60kba1731822765'
        - in: query
          name: start_date_time
          description: Start DateTime of Course (URL encoded) - is needed because the session_id is not unique in our system (one session object several times)
          required: true
          schema:
            type: string
            example: '2020-04-20T13:00+0200'   
        - in: query
          name: end_date_time
          description: End DateTime of Course (URL encoded) -  - is needed because the session_id is not unique in our system (one session object several times)
          required: true
          schema:
            type: string
            example: '2020-04-20T14:00+0200'  
        - in: query
          name: exerciser_id
          description: 'Unique ID of the exerciser / member'
          required: true
          schema:
            type: integer
            example: 12345
      responses:
        '200':
          description: get eligibility infos for session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityInfo'
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        '422':
          description: 'Invalid or missing data'
        '404':
          description: 'Club or Course not found'
  /add_member_to_session:
    post:
      tags:
        - booking
      summary: adds a member to a session   
      parameters:
        - in: query
          name: club_id
          description: ID of the club
          required: true
          schema:
            type: string
            example: '_gup58b4d85fk809fk4b00k98d3k55dcc0f4e1ce-_gupfdda5ebdo30c0o4301oa0b5o86d672818b13'
        - in: query
          name: session_id
          description: ID of session
          required: true
          schema:
            type: string
            example: '_gup1e761ef8k2706k47b6k9d60kba1731822765'
        - in: query
          name: start_date_time
          description: Start DateTime of Course (URL encoded) - is needed because the session_id is not unique in our system (one session object several times)
          required: true
          schema:
            type: string
            example: '2020-04-20T13:00+02:00'   
        - in: query
          name: end_date_time
          description: End DateTime of Course (URL encoded) -  - is needed because the session_id is not unique in our system (one session object several times)
          required: true
          schema:
            type: string
            example: '2020-04-20T14:00+02:00'  
        - in: query
          name: exerciser_id
          description: 'Unique ID of the exerciser / member'
          required: true
          schema:
            type: integer
            example: 12345
        - in: query
          name: firstname
          required: true
          description: 'Firstname of Member'
          schema:
            type: string
            example: 'John' 
        - in: query
          name: lastname
          required: true
          description: 'Lastname of Member'
          schema:
            type: string
            example: 'Doe' 
        - in: query
          name: email
          required: true
          description: 'Email of Member'
          schema:
            type: string
            format: email
            example: 'john@doe.de' 
        - in: query
          name: phone
          required: false
          description: 'Phone of Member'
          schema:
            type: string
            example: '+49123456789'     
      responses:
        '200':
          description: get eligibility infos for session
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: 'Response Text'
                    example: 'OK: Member was booked successfully.'
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        '422':
          description: 'Invalid or missing data; Member can not be enrolled or waitlisted'
        '404':
          description: 'Club or Course not found'        
  /remove_member_from_session:
    post:
      tags:
        - booking
      summary: removes a member from a session   
      parameters:
        - in: query
          name: club_id
          description: ID of the club
          required: true
          schema:
            type: string
            example: '_gup58b4d85fk809fk4b00k98d3k55dcc0f4e1ce-_gupfdda5ebdo30c0o4301oa0b5o86d672818b13'
        - in: query
          name: session_id
          description: ID of session
          required: true
          schema:
            type: string
            example: '_gup1e761ef8k2706k47b6k9d60kba1731822765'
        - in: query
          name: exerciser_id
          description: 'Unique ID of the exerciser / member'
          required: true
          schema:
            type: integer
            example: 12345
        - in: query
          name: start_date_time
          required: true
          schema:
            type: string
            example: '2020-04-20T13:00+02:00'   
        - in: query
          name: end_date_time
          required: true
          schema:
            type: string
            example: '2020-04-20T14:00+02:00' 
      responses:
        '200':
          description: remove a member from a booked or waitlisted session
          content:
            text/plain:
              schema:
                type: string
                example: 'Member successfully removed from session'
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        '422':
          description: 'Invalid or missing data'
        '404':
          description: 'Club or Course not found'           
  /get_member_schedule:
    get:
      tags:
        - schedule
      summary: returns the booked/waitlisted sessions including the booking_state for a member
      parameters:
        - in: query
          name: club_id
          description: ID of the club
          required: true
          schema:
            type: string
            example: '_gup58b4d85fk809fk4b00k98d3k55dcc0f4e1ce-_gupfdda5ebdo30c0o4301oa0b5o86d672818b13'
        - in: query
          name: exerciser_id
          description: 'Unique ID of the exerciser / member'
          required: true
          schema:
            type: integer
            example: 12345
        - in: query
          name: from_date
          description: "From Date UTC (every session scheduled >= from_date is returned) Important only date is used not the time."
          required: true
          schema:
            type: string 
            example: '2020-05-01T00:00+0200'  
        - in: query
          name: to_date
          description: "To Date UTC (every session scheduled < to_date is returned). Important only date is used not the time. Also pay attention it returns sesion '<' not '<='."
          required: true
          schema:
            type: string  
            example: '2020-06-01T00:00+0200'  
      responses:
        '200':
          description: 'Returns the booked/waitlisted sessions including the booking_state for a member'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        '422':
          description: 'Invalid or missing data'
        '404':
          description: 'Club not found'        
  /default_campaign:
    get:
      tags:
        - campaigns
      summary: returns the default campaign for club, shown for not logged in users
      parameters:
        - in: query
          name: club_id
          description: ID of the club
          required: true
          schema:
            type: string
            example: '_gup58b4d85fk809fk4b00k98d3k55dcc0f4e1ce-_gupfdda5ebdo30c0o4301oa0b5o86d672818b13'
      responses:
        '200':
          description: get campaign for the club
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultCampaign'
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        '422':
          description: 'Invalid or missing data'
        '404':
          description: 'Club or Campaign not found'        
  /current_campaign:
    get:
      tags:
        - campaigns
      summary: returns the current campaign for club, shown for logged in users
      parameters:
        - in: query
          name: club_id
          description: ID of the club
          required: true
          schema:
            type: string
            example: '_gup58b4d85fk809fk4b00k98d3k55dcc0f4e1ce-_gupfdda5ebdo30c0o4301oa0b5o86d672818b13'
      responses:
        '200':
          description: get campaign for the club
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentCampaign'
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        '422':
          description: 'Invalid or missing data'
        '404':
          description: 'Club or Campaign not found'
components:
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: Authorization  # name of the header, query parameter or cookie
  responses:
    UnauthorizedError:
      description: Bad credentials
      headers:
        WWW_Authenticate:
          schema:
            type: string    
  schemas:
    Club:
      type: object
      required:
        - id
        - name
        - address
        - city
        - country
        - zipcode
        - email
        - phone
        - website
        - logo
        - has_locations
      properties:
        id: 
          type: string
          format: uuid
          example: _gupcb7f1ae5o1d7eo44eco8119oe527809d9f89-_gupcb7f1ae5o1d7eo44eco8119oe527809d9f89
        name:
          type: string
          example: 'Testgym'
        address:
          type: string
          example: 'Teststraße 18'
        city:
          type: string
          example: 'Landshut'
        country:
          description: ISO 3166-1 Alpha 2 Codes for Example DE or AT.
          type: string
          example: 'DE'
        state:
          type: string
          example: 'Bayern'
        zipcode:
          type: string
          example: '84032'
        email:
          type: string
          format: email
          example: 'test@testgym.de'
        phone:
          type: string
          example: '089 45098130'
        website:
          type: string
          format: url
          example: 'https://www.aciso.com/'
        hours:
          type: string
          description:  HTML-Code
          example: '<p>&nbsp;</p><div style="text-align: left;">&Ouml;FFNUNGSZEITEN<br /><strong>Fitnessbereich:</strong></div><table><tbody><tr><td>Mo - Fr</td><td>06.00 - 22.00&nbsp;</td></tr><tr><td>Sa, So</td><td>09.00 - 19.00&nbsp;</td></tr><tr><td>Feiertag</td><td>09.00 - 19.00&nbsp;</td></tr></tbody></table><div style="text-align: left;"><strong>Wellnessbereich:</strong></div><table><tbody><tr><td>Mo - Fr</td><td>08.00 - 22.30&nbsp;</td></tr><tr><td>Sa, So</td><td>09.00 - 20.00&nbsp;</td></tr><tr><td>Feiertag</td><td>09.00 - 20.00</td></tr></tbody></table><p style="text-align: left;"><br /><br /></p>'
        logo:
          type: string
          format: url
          example: 'https://fit-plus.info/media/fit-plus.info/Logo/fitplus-logo.png'
        newsletter_url:
          type: string
          format: url
          example: 'https://www.injoy-med-grimma.de/newsletter'
        social_media_urls:
          type: array
          items:
            $ref: '#/components/schemas/SocialMediaURL'  
        has_locations:
          type: boolean
          example: true
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
    Location:
      type: object
      required:
        - id
        - name
        - image
        - sort_order
        - address
        - city
        - zipcode
      properties:
        id: 
          type: string
          format: uuid
          example: _gupcb7f1ae5o1d7eo44eco8119oe527809d9f89
        name:
          type: string
          example: 'Gym Location 1'
        sort_order:
          type: integer
          example: 0 
          description: Center owner can order the locations (ASC), default is 0
        image:
          type: string
          format: url
          example: 'https://fit-plus.info/media/fit-plus.info/Logo/fitplus-logo.png'  
        address:
          type: string
          example: 'Gymstreet 18'
        city:
          type: string
          example: 'Landshut'
        zipcode:
          type: string
          example: '84032'
        phone:
          type: string
          example: '089 45098130'
        fax:
          type: string
          example: '089 45098131'
        email:
          type: string
          format: email
          example: 'gym@location1.de'  
    SocialMediaURL:
      type: object
      properties:
        id: 
          type: string
          format: string
          description:  'Can be pintarest, facebook, youtube, xing, twitter, instagram'
          example: 'facebook'
        url:
          type: string
          format: url
          example: 'https://www.facebook.com/fitplus.fitnesscenter/'
    Session:
      type: object
      required:
        - id
        - name
        - bookable
        - external_booking
        - active
        - new
        - cancelled
        - start_date_time
        - end_date_time
        - image
        - short_description
        - description
        - room
      properties:
        booking_state:
          type: integer
          example: 1
          description: 'Only returned for request add_member_to_session; 1 means the member is booked for the course, 0 means the member is waitlisted.'
        id: 
          type: string
          format: uuid
          example: _gup1f2681b1k5a53k475fk88d8k20d3c8d26284
        name:
          type: string
          example: 'Pilates'
        bookable: 
          type: boolean
          description:  If bookable is true, the booking_infos will be in the response
          example: true
        external_booking:
          type: boolean
          description: 'Means client is using an external booking system for this course (maybe you can link this url)'
          example: false
        external_booking_url:
          type: string
          example: 'https://coursebookingsystem.com'
        booking_infos:
          $ref: '#/components/schemas/BookingInfo'
        active: 
          type: boolean
          example: true  
        new: 
          type: boolean
          example: true
        cancelled:
          type: boolean
          example: false
        start_date_time:
          type: string
          example: 2020-04-24T10:00+0200
        end_date_time:
          type: string
          example: 2020-04-24T11:00+0200
        trainer:
          type: string
          example: 'John Doe'
        level:
          type: string
          example: 'Basic'
        preview_image:
          format: url
          example: 'https://seminar01.oms-suite.de/media/seminar01.oms-suite.de/kurse/muenchen-kurs-rueckenfit.png'  
        image: 
          format: url
          example: 'https://seminar01.oms-suite.de/media/seminar01.oms-suite.de/kurse/muenchen-kurs-rueckenfit.png'  
        short_description:
          type: string
          description:  HTML-Code
          example: '<p><strong>Ein Programm f&uuml;r K&ouml;rper und Geist</strong></p>'
        description:
          type: string
          description:  HTML-Code
          example: '<p class="p1"><strong>in Programm f&uuml;r K&ouml;rper und Geist, bei dem speziell die Tiefenmuskulatur der K&ouml;rpermitte (Bauch, R&uuml;cken, Beckenboden) gekr&auml;ftigt und die Wirbels&auml;ule verl&auml;ngert wird. Bewusste Atmung und das Powerhouse, unser Kraftzentrum, stehen im Mittelpunkt jeder &Uuml;bung. Ideal gegen R&uuml;ckenschmerzen und Nackenverspannungen, zur Steigerung der K&ouml;rperwahrnehmung und Haltungsbesserung.</strong></p>'
        room:
          $ref: '#/components/schemas/Room'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Room:
      type: object
      required:
        - id
        - name
        - active
      properties:
        id: 
          type: string
          format: uuid
          example: _gupe8e94ba0ka0f8k493ck8eadkec885bdc1984
        name:
          type: string
          example: 'Studio 01'
        active:
          type: boolean
          example: true
    Category:
      type: object
      required:
        - id
        - name
        - active
      properties:
        id: 
          type: string
          format: uuid
          example: _gupe189b99ck83a1k41a0k886dkf33e402a0693
        name:
          type: string
          example: 'better Shape'
        active:
          type: boolean
          example: true
        color:
          type: string
          example: '#c75656'
        icon:
          type: string
          example: 'https://seminar01.oms-suite.de/media/seminar01.oms-suite.de/kurse/logo-five.png'
    BookingInfo:
      type: object
      required:
        - course_capacity
        - total_bookings
        - total_waitlisted
      properties:
        course_capacity: 
          type: integer
          example: 10
        total_bookings:
          type: integer
          example: 10
        total_waitlisted:
          type: integer
          example: 5
    EligibilityInfo:
      type: object
      required:
        - club_id
        - session_id
        - enrolled
        - eligibile
      properties:
        club_id:
          type: string
          format: uuid
          example: _gupcb7f1ae5o1d7eo44eco8119oe527809d9f89-_gupcb7f1ae5o1d7eo44eco8119oe527809d9f89
        session_id:
          type: string
          format: uuid
          example: _gup1f2681b1k5a53k475fk88d8k20d3c8d26284
        enrolled: 
          type: boolean
          example: false
        eligibile: 
          type: boolean
          example: true
        ineligible_state:
          type: integer
          example: 10
          description: 'States: 
            10 - already booked,
            11 - already waitlisted,
            21 - external booking tool,
            22 - cancelled,
            23 - inactive,
            24 - too late,
            25 - too early,
            26 - not bookable,
            27- center not enabled for booking
          '
        reason_for_ineligibility:
          type: string
          example: 'already booked'
    DefaultCampaign:
      type: object
      required:
        - title
        - description
        - landingpage_url
        - image
        - last_edited
      properties:
        title:
          type: string
          example: 'Default Campaign'
        description:
          type: string
          description: 'Blank Text - No HTML-Code'
          example: 'Default Campaign Description'
        claim:
          type: string
          example: 'Default Claim'
        landingpage_url:
          type: string
          format: url
          example: 'https://www.wir-machen-fitness.com/muster-fl-my-intense/'
        image:
          type: string
          format: url
          example: 'https://adm.oms-suite.de/media/media-db/img-ols-campaign/136.jpg'  
        last_edited:
          type: string
          example: 2020-04-24T10:00+0200
    CurrentCampaign:
      type: object
      required:
        - title
        - description
        - landingpage_url
        - image
        - last_edited
      properties:
        title:
          type: string
          example: 'Current Campaign'
        description:
          type: string
          description: 'Blank Text - No HTML-Code'
          example: 'Current Campaign Description'
        claim:
          type: string
          example: 'Currrent Claim'  
        landingpage_url:
          type: string
          format: url
          example: 'https://www.wir-machen-fitness.com/muster-fl-my-intense/'
        from_date: 
          type: string
          example: '2020-05-01T00:00+0200'
        till_date: 
          type: string
          example: '2020-06-30T00:00+0200'
        image:
          type: string
          format: url
          example: 'https://adm.oms-suite.de/media/media-db/img-ols-campaign/136.jpg'
        last_edited:
          type: string
          example: 2020-04-24T10:00+0200  
security:
  - ApiKeyAuth: []
