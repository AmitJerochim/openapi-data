{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "API for managing warehouse's inventories.\n\n__<u>User roles</u>__ \\\n__Root__: Use who has complete access to the app info. \\\n__User Business Creator or only UBC__: User who registered on the App and has complete access to all features of the app and can see all kind of available reports.\\\n__Administrator__: User who can manage products, brands, categories, units, entries and exits of products and see some reports.\\\n__Operators__: User who work in the warehouse and can create new entries or exits of products.\n",
    "version" : "1.0.0",
    "title" : "Stash API",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "jmarkstar.1991@gmail.com"
    }
  },
  "servers" : [ {
    "url" : "http://45.79.3.61/v1",
    "description" : "Production server"
  } ],
  "tags" : [ {
    "name" : "Authentication",
    "description" : "Authentication services."
  }, {
    "name" : "User",
    "description" : "User services."
  }, {
    "name" : "Entries and Exits",
    "description" : "Services of Entries and Exits' Products."
  }, {
    "name" : "Company",
    "description" : "Company services."
  }, {
    "name" : "Warehouse",
    "description" : "Warehouse services."
  }, {
    "name" : "Brand",
    "description" : "Brand services."
  }, {
    "name" : "Unit",
    "description" : "Unit services."
  }, {
    "name" : "Category",
    "description" : "Category services."
  }, {
    "name" : "Product",
    "description" : "Product services."
  }, {
    "name" : "Provider",
    "description" : "Provider services."
  } ],
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://stash.io"
  },
  "paths" : {
    "/register" : {
      "post" : {
        "operationId" : "register",
        "description" : "Creates a User business creator which will manage all information in the system created by him, his administrators and operators.",
        "summary" : "Creates a User business creator.",
        "tags" : [ "Authentication" ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/RegisterRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/UserLoggedInResponse"
          },
          "400" : {
            "description" : "Some required params are missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "summary" : "Login for all users.",
        "tags" : [ "Authentication" ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/LoginRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/UserLoggedInResponse"
          },
          "404" : {
            "description" : "Username not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized, usually happends when the user exists but password is wrong.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/logout" : {
      "get" : {
        "summary" : "Logout for all users.",
        "tags" : [ "Authentication" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Not content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/brands" : {
      "get" : {
        "summary" : "Gets all brands relate to the companies of the user business creator.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Brand" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetBrandsResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post" : {
        "summary" : "Creates a new Brand.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Brand" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OnlyNameRequest"
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/GetOneBrandResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/brands/{brandId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "brandId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Brand ID"
      } ],
      "get" : {
        "summary" : "Gets Brand according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Brand" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneBrandResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put" : {
        "summary" : "Updates Brand according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Brand" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OnlyNameRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneBrandResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes Brand according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Brand" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/units" : {
      "get" : {
        "summary" : "Gets all units relate to the companies of the user business creator.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Unit" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetUnitsResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post" : {
        "summary" : "Creates a new Unit.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Unit" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OnlyNameRequest"
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/GetOneUnitResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/units/{unitId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "unitId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Unit ID"
      } ],
      "get" : {
        "summary" : "Gets Unit according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Unit" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneUnitResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put" : {
        "summary" : "Updates Unit according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Unit" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OnlyNameRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneUnitResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes Unit according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Unit" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Succeed"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "summary" : "Gets all categories relate to the companies of the user business creator.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Category" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetCategoriesResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post" : {
        "summary" : "Creates a new Category.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Category" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OnlyNameRequest"
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/GetOneCategoryResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/categories/{categoryId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "categoryId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Category ID"
      } ],
      "get" : {
        "summary" : "Gets Category according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Category" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneCategoryResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put" : {
        "summary" : "Updates Category according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Category" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OnlyNameRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneCategoryResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes Category according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Category" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "summary" : "Gets all products relate to the companies of the user business creator.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Product" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetProductsResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post" : {
        "summary" : "Creates a new Product.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Product" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProductRequest"
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/GetOneProductResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/products/{productId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "productId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Product ID"
      } ],
      "get" : {
        "summary" : "Gets Product according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Product" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneProductResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put" : {
        "summary" : "Updates Product according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Product" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProductRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneProductResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes Product according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Product" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/companies" : {
      "get" : {
        "summary" : "Gets all companies relate to the the user business creator.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Company" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetCompaniesResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post" : {
        "summary" : "Creates a new Company.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Company" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CompanyRequest"
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/GetOneCompanyResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/companies/{companyId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "companyId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Company ID"
      } ],
      "get" : {
        "summary" : "Gets Company according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Company" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneCompanyResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put" : {
        "summary" : "Updates Company according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Company" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CompanyRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneCompanyResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes Company according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Company" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/providers" : {
      "get" : {
        "summary" : "Gets all providers relate to the the user business creator.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Provider" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetProvidersResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post" : {
        "summary" : "Creates a new Provider.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Provider" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProviderRequest"
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/GetOneProviderResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/providers/{providerId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "providerId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Provider ID"
      } ],
      "get" : {
        "summary" : "Gets Provider according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Provider" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneProviderResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put" : {
        "summary" : "Updates Provider according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Provider" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProviderRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneProviderResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes Provider according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Provider" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/warehouses" : {
      "get" : {
        "summary" : "Gets all warehouses relate to the the user business creator.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Warehouse" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetWarehousesResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post" : {
        "summary" : "Creates a new Warehouse.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Warehouse" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WarehouseRequest"
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/GetOneWarehouseResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/warehouse/{warehouseId}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "warehouseId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "Warehouse ID"
      } ],
      "get" : {
        "summary" : "Gets Warehouse according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "Warehouse" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneWarehouseResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put" : {
        "summary" : "Updates Warehouse according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Warehouse" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WarehouseRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneWarehouseResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes Warehouse according ID.",
        "description" : "This endpoint could be used only by __adminstrators__, __the user business creators__ and __root__.\n",
        "tags" : [ "Warehouse" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "summary" : "Gets all users(admins and operators) relate to the the user business creator.",
        "description" : "This endpoint could be used only by __the user business creator__.\n",
        "tags" : [ "User" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetUsersResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post" : {
        "summary" : "Creates a new User.",
        "description" : "This endpoint could be used only by __the user business creator__.\n",
        "tags" : [ "User" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserRequest"
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/NewUserResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/users/{userId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/UserId"
      } ],
      "get" : {
        "summary" : "Gets User according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "User" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GetOneUserResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes User according ID.",
        "description" : "This endpoint could be used only by __the user business creator__.\n",
        "tags" : [ "User" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/users/{userId}/fullname" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/UserId"
      } ],
      "put" : {
        "summary" : "Updates User's fullname according ID.",
        "description" : "This endpoint could be used by __all user roles__.\n",
        "tags" : [ "User" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserUpdateFullnameRequest"
        },
        "responses" : {
          "204" : {
            "description" : "Not content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/users/{userId}/role" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/UserId"
      } ],
      "put" : {
        "summary" : "Updates User's role according ID.",
        "description" : "This endpoint could be used only by __the user business creator__.\n",
        "tags" : [ "User" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserUpdateRoleRequest"
        },
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFoundResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/users/password" : {
      "put" : {
        "summary" : "Updates the password of the logged in user.",
        "description" : "This endpoint could be used by __all user roles__.\\\n\\\nThis functionality is very important because when the __UBC__ creates a new     administrator or operator, the __UBC__ will get a random password for that new user, he will provide the password to the user for use it in th first time. Then, He will need to change it by a better password.\n",
        "tags" : [ "User" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserPasswordRequest"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/UserLoggedInResponse"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequestResponse"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalErrorResponse"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Company" : {
        "type" : "object",
        "description" : "Product manufacturer.",
        "properties" : {
          "id" : {
            "description" : "Company ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "a" : {
            "type" : "string",
            "format" : "text",
            "example" : "Tambo",
            "description" : "Alias or Company's public name."
          },
          "in" : {
            "type" : "string",
            "format" : "text",
            "description" : "Identity name or Company's Real name.",
            "example" : "Tiendas Tambo S.A.C"
          },
          "it" : {
            "type" : "string",
            "format" : "text",
            "description" : "Company's identity type.",
            "example" : "RUC"
          },
          "inb" : {
            "type" : "string",
            "format" : "text",
            "description" : "Company's identity number.",
            "example" : 20563529378
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 0
          }
        },
        "xml" : {
          "name" : "Company"
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "idu" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "User id"
          },
          "un" : {
            "type" : "string",
            "format" : "text",
            "description" : "Username"
          },
          "fn" : {
            "type" : "string",
            "format" : "text",
            "description" : "Fullname"
          },
          "idr" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Id role, values (1 = Operator, 2 = Admin, 3 = User business creator and 4 = root)."
          },
          "idcu" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "User creator id"
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation date"
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date"
          },
          "s" : {
            "type" : "integer",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "User"
        }
      },
      "Warehouse" : {
        "type" : "object",
        "properties" : {
          "idw" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Warehouse ID"
          },
          "n" : {
            "type" : "string",
            "format" : "text",
            "description" : "Name or Alias of the warehouse"
          },
          "a" : {
            "type" : "string",
            "format" : "text",
            "description" : "Address of the warehouse."
          },
          "pn" : {
            "type" : "string",
            "format" : "text",
            "description" : "Phonenumber of the warehouse."
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Warehouse"
        }
      },
      "Warehouse Company Match" : {
        "description" : "This object links the companies which will store their products in the related warehouse.",
        "type" : "object",
        "properties" : {
          "idwhc" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Warehouse Company match ID"
          },
          "idw" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Warehouse ID"
          },
          "idc" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Company ID"
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Warehouse Company match"
        }
      },
      "Warehouse Supervidor Match" : {
        "type" : "object",
        "description" : "This object links the warehouse and the user who works in this warehouse.",
        "properties" : {
          "idm" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Warehouse Supervisor match ID"
          },
          "idw" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Warehouse ID"
          },
          "idu" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "User ID who works in the warehouse"
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Warehouse Company match"
        }
      },
      "Brand" : {
        "description" : "A type of product manufactured by a particular company under a particular name.",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "Brand's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "n" : {
            "type" : "string",
            "format" : "text",
            "example" : "Alicorp",
            "description" : "Brand's name."
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Brand"
        }
      },
      "Category" : {
        "description" : "A kind of sale item; such as soft drinks, cookies, alcohols, snacks and so on.",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "Category's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "n" : {
            "type" : "string",
            "format" : "text",
            "example" : "Alicorp, Victoria, Perpsico, ...",
            "description" : "Category's name."
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Category"
        }
      },
      "Unit" : {
        "description" : "A unit is a kind of storage unit of the sale items which could be a Box, Package, Bag, etc.",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "Unit's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "n" : {
            "type" : "string",
            "format" : "text",
            "example" : "Box, Bag, Pack...",
            "description" : "Unit's name."
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Unit"
        }
      },
      "Product" : {
        "description" : "A product is a sale item.",
        "type" : "object",
        "properties" : {
          "idp" : {
            "description" : "Product's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "idb" : {
            "description" : "Brand's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "idc" : {
            "description" : "Category's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "n" : {
            "type" : "string",
            "format" : "text",
            "example" : "Coca Cola 3L, Inka kola 1.5L, ...",
            "description" : "Product's name."
          },
          "b" : {
            "type" : "string",
            "format" : "text",
            "example" : "121133424424, 23243434343, 3434343434",
            "description" : "Product's barcode."
          },
          "i" : {
            "type" : "string",
            "format" : "text",
            "example" : "https://.../image.png",
            "description" : "Product's big image."
          },
          "t" : {
            "type" : "string",
            "format" : "text",
            "example" : "https://.../image_thumb.png",
            "description" : "Product's small image usually used on item's list."
          },
          "d" : {
            "type" : "string",
            "format" : "text",
            "example" : "La coca cola de 3 litros viene en un paquete de 4 botellas.",
            "description" : "Product's description."
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Product"
        }
      },
      "Provider" : {
        "description" : "A provider is a person who represents a company which provide many products.",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "Provider's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "cpn" : {
            "type" : "string",
            "format" : "text",
            "example" : "Distribuidores Unidos S.A.C, Pepsico S.A.C.",
            "description" : "Provider's company name."
          },
          "cn" : {
            "type" : "string",
            "format" : "text",
            "example" : "Jorge Perez",
            "description" : "Contact's name; Person who represents the provider company."
          },
          "cp" : {
            "type" : "string",
            "format" : "text",
            "example" : 51976453345,
            "description" : "Contact's phone; Phonenumber of the person who represents the provider company."
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Provider"
        }
      },
      "Product Unit Match" : {
        "description" : "One Product could have many units. For example, Casino(Cookies) could be stored by Box or Packs. This object links the product and its units.",
        "type" : "object",
        "properties" : {
          "idpum" : {
            "description" : "ID of product unit match.",
            "type" : "integer",
            "format" : "int64"
          },
          "idp" : {
            "description" : "Product's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "idu" : {
            "description" : "Unit's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "isd" : {
            "description" : "Default unit of the product. If it's true, that means this unit is going to be selected automatically every time the user registry entries or exits of the product. It will makes the registration faster.",
            "type" : "boolean",
            "example" : "true or false."
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Product and Unit Match"
        }
      },
      "Product Provider Match" : {
        "description" : "One provider could provides many products and also different brand of products. This object links a provider and its products.",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "ID of product provider match.",
            "type" : "integer",
            "format" : "int64"
          },
          "idprov" : {
            "description" : "Provider's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "idprod" : {
            "description" : "Product's ID.",
            "type" : "integer",
            "format" : "int64"
          },
          "cuid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creator user's ID."
          },
          "cd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Creation Date."
          },
          "lud" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Last update date."
          },
          "s" : {
            "type" : "integer",
            "format" : "int",
            "description" : "Status where 0 means Deleted and 1 means Actived.",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "Product and Unit Match"
        }
      },
      "Error" : {
        "description" : "Error generated by the server.",
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "description" : "Is it an error?"
          },
          "reason" : {
            "type" : "string",
            "format" : "text",
            "description" : "Description of the error."
          }
        },
        "required" : [ "error", "reason" ]
      }
    },
    "parameters" : {
      "UserId" : {
        "in" : "path",
        "name" : "userId",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "User ID"
      }
    },
    "requestBodies" : {
      "RegisterRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "username" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "New Username"
                },
                "password" : {
                  "type" : "string",
                  "format" : "password",
                  "description" : "Password"
                },
                "fullname" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "User's Fullname(Optional)"
                }
              },
              "required" : [ "username", "password" ]
            }
          }
        },
        "description" : "User information that needs to be added to the system.",
        "required" : true
      },
      "LoginRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "username" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Username"
                },
                "password" : {
                  "type" : "string",
                  "format" : "password",
                  "description" : "Password"
                }
              },
              "required" : [ "username", "password" ],
              "example" : {
                "username" : "mestrella",
                "password" : "abc123"
              }
            }
          }
        },
        "description" : "Login request.",
        "required" : true
      },
      "OnlyNameRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "n" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Name"
                }
              },
              "required" : [ "n" ]
            }
          }
        }
      },
      "ProductRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "idb" : {
                  "description" : "Brand's ID.",
                  "type" : "integer",
                  "format" : "int64"
                },
                "idc" : {
                  "description" : "Category's ID.",
                  "type" : "integer",
                  "format" : "int64"
                },
                "n" : {
                  "type" : "string",
                  "format" : "text",
                  "example" : "Coca Cola 3L, Inka kola 1.5L, ...",
                  "description" : "Product's name."
                },
                "b" : {
                  "type" : "string",
                  "format" : "text",
                  "example" : "121133424424, 23243434343, 3434343434",
                  "description" : "Product's barcode."
                },
                "i" : {
                  "type" : "string",
                  "format" : "text",
                  "example" : "https://.../image.png",
                  "description" : "Product's big image."
                },
                "t" : {
                  "type" : "string",
                  "format" : "text",
                  "example" : "https://.../image_thumb.png",
                  "description" : "Product's small image usually used on item's list."
                },
                "d" : {
                  "type" : "string",
                  "format" : "text",
                  "example" : "La coca cola de 3 litros viene en un paquete de 4 botellas.",
                  "description" : "Product's description."
                }
              },
              "required" : [ "idb", "idc", "n" ]
            }
          }
        }
      },
      "CompanyRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "a" : {
                  "type" : "string",
                  "format" : "text",
                  "example" : "Tambo",
                  "description" : "Alias or Company's public name."
                },
                "in" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Identity name or Company's Real name.",
                  "example" : "Tiendas Tambo S.A.C"
                },
                "it" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Company's identity type.",
                  "example" : "RUC"
                },
                "inb" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Company's identity number.",
                  "example" : 20563529378
                }
              },
              "required" : [ "in", "it", "inb" ]
            }
          }
        }
      },
      "ProviderRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "cpn" : {
                  "type" : "string",
                  "format" : "text",
                  "example" : "Distribuidores Unidos S.A.C, Pepsico S.A.C.",
                  "description" : "Provider's company name."
                },
                "cn" : {
                  "type" : "string",
                  "format" : "text",
                  "example" : "Jorge Perez",
                  "description" : "Contact's name; Person who represents the provider company."
                },
                "cp" : {
                  "type" : "string",
                  "format" : "text",
                  "example" : 51976453345,
                  "description" : "Contact's phone; Phonenumber of the person who represents the provider company."
                }
              },
              "required" : [ "cpn", "cn" ]
            }
          }
        }
      },
      "UserRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "un" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Username"
                },
                "fn" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Fullname"
                },
                "idr" : {
                  "type" : "integer",
                  "format" : "int64",
                  "description" : "Id role, values (1 = Operator, 2 = Admin, 3 = User business creator and 4 = root)."
                }
              },
              "required" : [ "un", "fn" ]
            }
          }
        }
      },
      "UserUpdateFullnameRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "un" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Username"
                },
                "fn" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Fullname"
                }
              },
              "required" : [ "un", "fn" ]
            }
          }
        }
      },
      "UserUpdateRoleRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "idr" : {
                  "type" : "integer",
                  "format" : "int64",
                  "description" : "Id role, values (1 = Operator, 2 = Admin, 3 = User business creator and 4 = root)."
                }
              }
            }
          }
        }
      },
      "UserPasswordRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "opw" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Old password"
                },
                "npw" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "New Password"
                }
              },
              "required" : [ "opw", "npw" ]
            }
          }
        }
      },
      "WarehouseRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "n" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Name or Alias of the warehouse"
                },
                "a" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Address of the warehouse."
                },
                "pn" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Phonenumber of the warehouse."
                }
              },
              "required" : [ "n" ]
            }
          }
        }
      }
    },
    "responses" : {
      "NotFoundResponse" : {
        "description" : "The specified resource was not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "UnauthorizedResponse" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequestResponse" : {
        "description" : "Token, ID or some required params are missing.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalErrorResponse" : {
        "description" : "Something went wrong on the server.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "UserLoggedInResponse" : {
        "description" : "User Logged in response",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "t" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Token"
                },
                "u" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "GetBrandsResponse" : {
        "description" : "List of brands",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Brand"
              }
            }
          }
        }
      },
      "GetOneBrandResponse" : {
        "description" : "Brand entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Brand"
            }
          }
        }
      },
      "GetUnitsResponse" : {
        "description" : "List of units",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Unit"
              }
            }
          }
        }
      },
      "GetOneUnitResponse" : {
        "description" : "Unit entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Unit"
            }
          }
        }
      },
      "GetCategoriesResponse" : {
        "description" : "List of categories",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Category"
              }
            }
          }
        }
      },
      "GetOneCategoryResponse" : {
        "description" : "Category entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Category"
            }
          }
        }
      },
      "GetProductsResponse" : {
        "description" : "List of products",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          }
        }
      },
      "GetOneProductResponse" : {
        "description" : "Product entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Product"
            }
          }
        }
      },
      "GetProvidersResponse" : {
        "description" : "List of providers",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Provider"
              }
            }
          }
        }
      },
      "GetOneProviderResponse" : {
        "description" : "Provider entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Provider"
            }
          }
        }
      },
      "GetCompaniesResponse" : {
        "description" : "List of companies",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Company"
              }
            }
          }
        }
      },
      "GetOneCompanyResponse" : {
        "description" : "Company entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Company"
            }
          }
        }
      },
      "GetWarehousesResponse" : {
        "description" : "List of warehouses",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Warehouse"
              }
            }
          }
        }
      },
      "GetOneWarehouseResponse" : {
        "description" : "Warehouse entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Warehouse"
            }
          }
        }
      },
      "GetUsersResponse" : {
        "description" : "List of users relate to the user company creator",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        }
      },
      "GetOneUserResponse" : {
        "description" : "User entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        }
      },
      "NewUserResponse" : {
        "description" : "New User with temp password response",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "tp" : {
                  "type" : "string",
                  "format" : "text",
                  "description" : "Temporal password"
                },
                "u" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    }
  }
}