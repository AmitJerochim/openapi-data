{"openapi":"3.0.0","info":{"title":"PawDiet Spectrum API","description":"API developed to be used by Spectrum Veterinary LLC. Usage of this API is subject to the signed agreement between both parties.","version":"1.0.0"},"servers":[{"url":"https://api.pawdiet.com/spectrum-v1/","description":"PawDiet Spectrum API"}],"tags":[{"name":"Developers"}],"paths":{"/reports":{"get":{"tags":["Developers"],"operationId":"reports","parameters":[{"name":"limit","in":"query","description":"<p>Number of reports to return <b>(default 500, max 1000, min 0)</b></p>","required":false,"schema":{"type":"integer","format":"int32","default":500,"maximum":1000,"minimum":0}},{"name":"offset","in":"query","description":"<p><b>If offset + limit < count</b>, results have been truncated.</p> <p>To consume all data, make multiple calls using offset to paginate through the result set.</p>","required":false,"schema":{"type":"integer","format":"int32","default":0,"minimum":0}}],"responses":{"200":{"description":"return reports","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"count":{"type":"integer","format":"int32","example":1},"limit":{"type":"integer","format":"int32","example":500},"offset":{"type":"integer","format":"int32","example":0},"reports":{"type":"array","items":{"type":"object","properties":{"lab_number":{"type":"integer","format":"int64","example":201820172},"patient_owner_last_name":{"type":"string","example":"Jones"},"patient_owner_last_name_slug":{"type":"string","example":"jones"},"order_date":{"type":"string","example":"May 12, 2018"},"patient_name":{"type":"string","example":"Ruff Jones"},"patient_sex":{"type":"string","example":"M"},"patient_age":{"type":"string","example":"3 Yrs"},"patient_breed":{"type":"string","example":"Terrier"},"patient_allergens":{"type":"array","items":{"type":"string"},"example":["Rice","Flax","White Potato","Alfalfa","Sweet Potato","Beef","Soybean"]},"office_name":{"type":"string","example":"ABC Veterinary Clinic"},"doctor_name":{"type":"string","example":"Dr. Doctor"},"office_address_line_1":{"type":"string","example":"123 N. Main St"},"office_address_line_2":{"type":"string","example":"Anywhere, USA 12345"},"office_address_line_3":{"type":"string","example":""},"office_phone_number":{"type":"string","example":"(303)555-1212"},"first_created":{"type":"string","example":"2019-10-15 18:52:23.131857+00:00"}}}}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}}},"security":[{"api_key":[]}]}},"/reports/create":{"post":{"tags":["Developers"],"operationId":"reportsCreate","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lab_number":{"type":"integer","format":"int64","example":201820172},"patient_owner_last_name":{"type":"string","example":"Jones"},"patient_allergens":{"type":"array","items":{"type":"string"},"example":["Corn","Rice","Flax","White Potato","Alfalfa","Sweet Potato","Beef","Soybean"]},"order_date":{"type":"string","example":"May 12, 2018"},"patient_name":{"type":"string","example":"Ruff Jones"},"patient_sex":{"type":"string","example":"M"},"patient_age":{"type":"string","example":"3 Yrs"},"patient_breed":{"type":"string","example":"Terrier"},"office_name":{"type":"string","example":"ABC Veterinary Clinic"},"doctor_name":{"type":"string","example":"Dr. Doctor"},"office_address_line_1":{"type":"string","example":"123 N Main St"},"office_address_line_2":{"type":"string","example":"Anywhere, Anywhere 12345"},"office_address_line_3":{"type":"string","example":""},"office_phone_number":{"type":"string","example":"(303) 555-1212"}}}}},"description":"<p><b>lab_number</b> (integer, <b>REQUIRED</b>)<p> <p><b>patient_owner_last_name</b> (string, <b>REQUIRED</b>)<p> <hr> <p><b>patient_allergens</b> (array of strings)<p> <p><b>order_date</b> (string)<p> <p><b>patient_name</b> (string)<p> <p><b>patient_sex</b> (string)<p> <p><b>patient_age</b> (string)<p> <p><b>patient_owner</b> (string)<p> <p><b>patient_breed</b> (string)<p> <p><b>office_name</b> (string)<p> <p><b>doctor_name</b> (string)<p> <p><b>office_address_line_1</b> (string)<p> <p><b>office_address_line_2</b> (string)<p> <p><b>office_address_line_3</b> (string)<p> <p><b>office_phone_number</b> (string)<p>","required":true},"responses":{"200":{"description":"Report page created","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"lab_number":{"type":"integer","format":"int64","example":201820172},"patient_owner_last_name_slug":{"type":"string","example":"jones"},"report_url":{"type":"string","example":"https://spectrum.pawdiet.com/201820172/jones/"}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}}},"security":[{"api_key":[]}]}},"/reports/update":{"post":{"tags":["Developers"],"operationId":"reportsUpdate","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lab_number":{"type":"integer","format":"int64","example":201820172},"patient_allergens":{"type":"array","items":{"type":"string"},"example":["Corn","Rice","Flax","White Potato","Alfalfa","Sweet Potato","Beef","Soybean"]},"order_date":{"type":"string","example":"May 12, 2018"},"patient_name":{"type":"string","example":"Ruff Jones"},"patient_sex":{"type":"string","example":"M"},"patient_age":{"type":"string","example":"3 Yrs"},"patient_breed":{"type":"string","example":"Terrier"},"office_name":{"type":"string","example":"ABC Veterinary Clinic"},"doctor_name":{"type":"string","example":"Dr. Doctor"},"office_address_line_1":{"type":"string","example":"123 N Main St"},"office_address_line_2":{"type":"string","example":"Anywhere, Anywhere 12345"},"office_address_line_3":{"type":"string","example":""},"office_phone_number":{"type":"string","example":"(303) 555-1212"}}}}},"description":"<p><b>lab_number</b> (integer, <b>REQUIRED</b>)<p> <hr> <p><b>patient_allergens</b> (array of strings)<p> <p><b>order_date</b> (string)<p> <p><b>patient_name</b> (string)<p> <p><b>patient_sex</b> (string)<p> <p><b>patient_age</b> (string)<p> <p><b>patient_breed</b> (string)<p> <p><b>office_name</b> (string)<p> <p><b>doctor_name</b> (string)<p> <p><b>office_address_line_1</b> (string)<p> <p><b>office_address_line_2</b> (string)<p> <p><b>office_address_line_3</b> (string)<p> <p><b>office_phone_number</b> (string)<p>","required":true},"responses":{"200":{"description":"Report updated","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"updated":{"type":"integer","format":"int64","example":201820172}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}},"404":{"description":"report does not exist","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"report does not exist"}}}}}}},"security":[{"api_key":[]}]}},"/reports/delete":{"post":{"tags":["Developers"],"operationId":"reportsDelete","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lab_number":{"type":"integer","format":"int64","example":201820172}}}}},"description":"<p><b>lab_number</b> (integer, <b>REQUIRED</b>)<p> <hr> <p>Product Lists associated with lab_number will also be deleted.</p>","required":true},"responses":{"200":{"description":"report page deleted","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"deleted":{"type":"integer","format":"int64","example":201820172}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}},"404":{"description":"report does not exist","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"report does not exist"}}}}}}},"security":[{"api_key":[]}]}},"/product-lists":{"get":{"tags":["Developers"],"operationId":"productLists","parameters":[{"name":"lab_number","in":"query","description":"<p><b>Spectrum Lab Number</b><p>","required":true,"schema":{"type":"integer","format":"int64","example":201820172}}],"responses":{"200":{"description":"returns product lists associated with a specific lab number.","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"product_lists":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"type":"string"},"first_created":{"type":"string"}}},"example":[{"id":70,"label":"Dry Food Recipes","first_created":"2019-10-15 18:52:23.625623+00:00"},{"id":71,"label":"Wet Food Recipes","first_created":"2019-10-15 18:52:25.058343+00:00"},{"id":72,"label":"Treats For Ruff Jones","first_created":"2019-10-15 18:52:26.695867+00:00"}]}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}},"404":{"description":"report does not exist","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"report does not exist"}}}}}}},"security":[{"api_key":[]}]}},"/product-lists/delete":{"post":{"tags":["Developers"],"operationId":"productListsDelete","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"integer","format":"int32","example":7}}}}},"description":"<p><b>id</b> (integer, <b>REQUIRED</b>)<p>","required":true},"responses":{"200":{"description":"product list deleted","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"deleted":{"type":"integer","format":"int32","example":7}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}},"404":{"description":"product list does not exist","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"product list does not exist"}}}}}}},"security":[{"api_key":[]}]}},"/products":{"get":{"tags":["Developers"],"operationId":"products","parameters":[{"name":"id","in":"query","description":"<p>PawDiet Product ID(s) - (max length 25, min length 1)</p>","required":true,"schema":{"type":"array","items":{"type":"integer","format":"int32"},"minItems":1,"maxItems":25,"example":[8260]}}],"responses":{"200":{"description":"detailed information for product ID(s)","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"count":{"type":"integer","format":"int32","example":1},"products":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","format":"int32","example":8260},"brand":{"type":"object","properties":{"id":{"type":"integer","format":"int32","example":7},"name":{"type":"string","example":"Blue Buffalo"}}},"company":{"type":"object","properties":{"id":{"type":"integer","format":"int32","example":1},"name":{"type":"string","example":"Blue Buffalo"}}},"product_line":{"type":"string","example":"Carnivora"},"name":{"type":"string","example":"Coastal Blend For Adult Cats"},"species":{"type":"string","example":"cat"},"product_type":{"type":"string","example":"formula"},"product_form":{"type":"string","example":"dry"},"implied_life_stage":{"type":"object","properties":{"lower_bound":{"type":"integer","format":"int32","example":12},"upper_bound":{"type":"integer","format":"int32","example":600}}},"implied_pet_size":{"type":"object","properties":{"lower_bound":{"type":"integer","format":"int32","example":0},"upper_bound":{"type":"integer","format":"int32","example":200}}},"aafco_ftc":{"type":"boolean","example":false},"aafco_life_stage":{"type":"string","example":"maintenance"},"image":{"type":"string","example":"https://static.pawdiet.com/product-images/lg/blue-buffalo-carnivora-coastal-blend-for-adult-cats-dry-cat-food.png"},"ingredients":{"type":"string","example":"Deboned Pollock, Deboned Sole, Deboned Halibut, Dried Chicken, Herring Meal, Chicken Fat (preserved with Mixed Tocopherols), Tapioca Starch, Dried Egg Product, Dried Tomato Pomace, Dried Tuna, Flaxseed (source of Omega 6 Fatty Acids), Dried Pollock, Dried Sole, Dried Halibut, Dried Cod, Gelatin, Fava Beans, Menhaden Fish Meal, Deboned Cod, Natural Flavor, Fish Oil (source of Omega 3 Fatty Acids), Lentils, Potassium Sulfate, Choline Chloride, Dried Pork Liver, Dried Sardine, Chicken Cartilage, Cod Liver, Minerals [Calcium Carbonate, Iron Amino Acid Chelate, Zinc Amino Acid Chelate, Copper Amino Acid Chelate, Manganese Amino Acid Chelate, Calcium Iodate, Sodium Selenite], Vitamins [Vitamin E Supplement, Niacin (Vitamin B3), Thiamine Mononitrate (Vitamin B1), Biotin (Vitamin B7), Vitamin A Supplement, Pyridoxine Hydrochloride (Vitamin B6), Calcium Pantothenate (Vitamin B5), Riboflavin (Vitamin B2), Vitamin D3 Supplement, Vitamin B12 Supplement, Folic Acid (Vitamin B9)], Dried Chicory Root, Taurine, Salt, preserved with Mixed Tocopherols, Turmeric, Blueberries, Cranberries, Apples, Blackberries, Pomegranate, Spinach, Pumpkin, Carrots, Dried Kale, Sunflower Seeds, Pumpkin Seeds, L-Carnitine, Dried Kelp, Barley Grass, Parsley, Yucca Schidigera Extract, Dried Yeast, Dried Enterococcus faecium fermentation product, Dried Lactobacillus acidophilus fermentation product, Dried Aspergillus niger fermentation extract, Dried Trichoderma longibrachiatum fermentation extract, Dried Bacillus subtilis fermentation extract), Oil of Rosemary"},"price_per_kcal":{"type":"number","format":"double","example":0.0034536},"grain_free":{"type":"boolean","example":false},"gluten_free":{"type":"boolean","example":true},"raw_food":{"type":"boolean","example":false},"weight_control":{"type":"boolean","example":false},"prescription_diet":{"type":"boolean","example":false},"free_of_anonymous_meat":{"type":"boolean","example":true},"free_of_animal_by_product":{"type":"boolean","example":true},"free_of_artificial_color":{"type":"boolean","example":true},"free_of_artificial_preservative":{"type":"boolean","example":true},"nutrition":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"quantity":{"type":"number","format":"double"},"unit":{"type":"string"},"basis":{"type":"string"}}},"example":[{"name":"Crude Protein (min)","quantity":45,"unit":"%","basis":"as-fed"},{"name":"Crude Fat (min)","quantity":20,"unit":"%","basis":"as-fed"},{"name":"Crude Fiber (max)","quantity":4,"unit":"%","basis":"as-fed"},{"name":"Moisture (max)","quantity":9,"unit":"%","basis":"as-fed"},{"name":"Calories","quantity":3966,"unit":"kg","basis":"as-fed"},{"name":"Carbohydrate","quantity":18,"unit":"%","basis":"as-fed"}]}}}}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}}},"security":[{"api_key":[]}]}},"/products/search":{"post":{"tags":["Developers"],"operationId":"productsSearch","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"species":{"type":"array","items":{"type":"string"},"example":["dog"]},"product_types":{"type":"array","items":{"type":"string"},"example":["formula","treat","dental","supplemental"]},"product_forms":{"type":"array","items":{"type":"string"},"example":["dry","wet","frozen","freeze-dried","dehydrated","liquid"]},"brands":{"type":"array","items":{"type":"string"},"example":["Blue Buffalo","Royal Canin","Primal","Stella and Chewy's","Nutro","Wellness","Nulo","Pedigree","Purina Beyond","Purina One","Fromm","Merrick","Instinct"]},"aafco_feeding_trials":{"type":"boolean","example":false},"aafco_life_stages":{"type":"array","items":{"type":"string"},"example":["growth","maintenance","reproduction"]},"pets_age":{"type":"integer","format":"int32","example":24},"pets_weight":{"type":"integer","format":"int32","example":17},"activity_factor":{"type":"string","example":"neutered adult"},"monthly_budget":{"type":"integer","format":"int32","example":285},"exclude_ingredients":{"type":"array","items":{"type":"string"},"example":["chicken","turkey","corn"]},"protein_range":{"type":"array","items":{"type":"integer","format":"int32"},"example":[0,100]},"fat_range":{"type":"array","items":{"type":"integer","format":"int32"},"example":[0,100]},"fiber_range":{"type":"array","items":{"type":"integer","format":"int32"},"example":[0,100]},"moisture_range":{"type":"array","items":{"type":"integer","format":"int32"},"example":[0,100]},"exclude_rx":{"type":"boolean","example":false},"exclude_otc":{"type":"boolean","example":false},"lab_number":{"type":"integer","format":"int64","example":201820172},"create_new_product_list":{"type":"boolean","example":true},"product_list_label":{"type":"string","example":"Dog Food Recommendations"},"limit":{"type":"integer","format":"int32","example":100},"offset":{"type":"integer","format":"int32","example":0}}}}},"description":"<p>All parameters are optional, provide as many filter options as you'd like:</p>\n<hr>\n<p><b>species</b> (array of strings)<p> <p>valid values:</p> <ul> <li>dog</li> <li>cat</li> </ul>\n<hr>\n<p><b>product_types</b> (array of strings)<p> <p>valid values:</p> <ul> <li>formula</li> <li>treat</li> <li>dental</li> <li>supplemental</li> </ul>\n<hr>\n<p><b>product_forms</b> (array of strings)<p> <p>valid values:</p> <ul> <li>dry</li> <li>wet</li> <li>frozen</li> <li>freeze-dried</li> <li>dehydrated</li> <li>liquid</li> </ul>\n<hr>\n<p><b>brands</b> (array of strings)<p> <p>valid values:</p> <p>for valid values, use the /brands endpoint</p> <p>names must match exactly (<b>Stella and Chewy's != Stella & Chewy's != stella & chewy's</b>).</p>\n<hr>\n<p><b>aafco_feeding_trials</b> (boolean)<p> <p>false - do not REQUIRE feeding trials</p> <p>true - REQUIRE feeding trials</p>\n<hr>\n<p><b>aafco_life_stages</b> (array of strings)<p> <p>valid values:</p> <ul> <li>growth</li> <li>maintenance</li> <li>reproduction</li> </ul> <p>Selections match with nutritional adequacy statements</p> <ul> <li>All Life Stages <b>will always be returned</b></li> <li>Reproduction matches the terms <b>\"Gestation\" and \"Lactation\"</b></li> <li>Selecting one option doesn't always exclude the other options (see examples)</li> </ul> <p>Here are some examples (not exhaustive):</p> <ul> <li><b>[growth] will match</b></li> <ul> <li>growth</li> <li>growth and maintenance</li> <li>growth, gestation and lactation</li> <li>growth, gestation, lactation and maintenance</li> <li>all life stages (always returned, regardless of selection)</li> </ul> <li><b>[maintenance] will match</b></li> <ul> <li>maintenance</li> <li>growth and maintenance</li> <li>growth, gestation, lactation and maintenance</li> <li>all life stages (always returned, regardless of selection)</li> </ul> <li><b>[reproduction] will match</b></li> <ul> <li>gestation and lactation</li> <li>growth, gestation and lactation</li> <li>growth, gestation, lactation and maintenance</li> <li>all life stages (always returned, regardless of selection)</li> </ul> </ul>\n<hr>\n<p><b>pets_age</b> (integer)<p> <p>Pet's age <b>in months</b>.</p>\n<hr>\n<p><b>pets_weight</b> (integer)<p> <p>Pet's weight <b>in pounds</b>.</p>\n<hr>\n<p><b>activity_factor</b> (string)<p> <p>valid values:</p> <ul> <li>neutered adult</li> <li>intact adult</li> <li>inactive or obese prone</li> <li>weight loss</li> <li>weight gain</li> <li>active or working</li> <li>puppy or kitten less than 4 months</li> <li>puppy or kitten more than 4 months</li> </ul>\n<hr>\n<p><b>monthly_budget</b> (integer)<p> <p>provide monthly budget in U.S. Dollars.</p> <p>To use this filter, you must also provide <b>pets_weight</b> and <b>acitivty_factor</b>.</p>\n<hr>\n<p><b>exclude_ingredients</b> (array of strings)<p> <p>exclude products that contain the ingredient(s) + any descendant(s). For example,</p> <ul> <li>[chicken] will exclude the following ingredients</li> <ul> <li>chicken</li> <li>chicken liver</li> <li>boneless chicken</li> <li>chicken broth</li> <li>etc...</li> </ul> </ul> <p>For a list of possible ingredient names to include in this field, query the /ingredients endpoint.</p> <p>For a list of descendants for an ingredient, query the /ingredients/descendants endpoint.</p> <p>You <b>MUST</b> input the name(s) <b>EXACTLY</b> as they are returned by the ingredients endpoint.</p> <p>To emphasize, if the /ingredients endpoint returns \"chicken\", but you supply \"chickens\" or 'Chicken\", the API will <b>ignore your request</b>.</p> <p>There is no need to include an ingredient name <b>if the parent is included</b>. For example, you don't need to include \"chicken liver\" if \"chicken liver\" is a descendant of \"chicken\".</p>\n<hr>\n<p><b>exclude_ingredients_map</b> (array of strings)<p> <p>This parameter accepts ingredient names commonly used by Spectrum. It will attempt to map the ingredient names to valid PawDiet Ingredient Names.</p>\n<p>If all provided ingredients cannot be mapped, an error will be returned. Otherwise, the mapped ingredient names will be appended to the <b>exclude_ingredients</b> parameter</p>\n<p>If there is an ingredient that does not have a valid mapping, please send us an email, we will add the correct mapping as soon as possible.</p>\n<hr>\n<p><b>protein_range</b> (array of integers)<p> <p>search for products where the <b>minimum crude protein</b> percentage guaranteed falls within a specific range. For example,</p> <ul> <li>[0,100] - the entire range (same as ommiting parameter altogether)</li> <li>[15,45] - between 15% and 45%</li> <li>[0,25] - between 0% and 25%</li> <li>[15] - same as [15,100]</li> </ul>\n<hr>\n<p><b>fat_range</b> (array of integers)<p> <p>search for products where the <b>minimum crude fat</b> percentage guaranteed falls within a specific range. For example,</p> <ul> <li>[0,100] - the entire range (same as ommiting parameter altogether)</li> <li>[15,45] - between 15% and 45%</li> <li>[0,25] - between 0% and 25%</li> <li>[15] - same as [15,100]</li> </ul>\n<hr>\n<p><b>fiber_range</b> (array of integers)<p> <p>search for products where the <b>maximum crude fiber</b> percentage guaranteed falls within a specific range. For example,</p> <ul> <li>[0,100] - the entire range (same as ommiting parameter altogether)</li> <li>[15,45] - between 15% and 45%</li> <li>[0,25] - between 0% and 25%</li> <li>[15] - same as [15,100]</li> </ul>\n<hr>\n<p><b>moisture_range</b> (array of integers)<p> <p>search for products where the <b>maximum moisture</b> percentage guaranteed falls within a specific range. For example,</p> <ul> <li>[0,100] - the entire range (same as ommiting parameter altogether)</li> <li>[15,45] - between 15% and 45%</li> <li>[0,25] - between 0% and 25%</li> <li>[15] - same as [15,100]</li> </ul>\n<hr>\n<p><b>exclude_rx</b> (boolean)</p> <p>Exclude Rx products.</p>\n<hr>\n<p><b>exclude_otc</b> (boolean)</p> <p>Exclude OTC products.</p>\n<hr>\n<p><b>lab_number</b> (integer)<p> <p>Spectrum Lab Number</p> <p>If you'd like to create a Product List, lab_number is required.\n<hr>\n<p><b>product_list_id</b> (integer)<p> <p>Product List ID</p> <p>If you'd like to re-create an existing product list, provide a valid Product List ID. You can retrieve valid Product List ID values from the /product-lists endpoint.</p>\n<hr>\n<p><b>create_new_product_list</b> (boolean, <b>default is false</b>)<p> <p>When true, a Product List will be added to the Report page associated with the lab_number provided.</p>\n<hr>\n<p><b>product_list_label</b> (string)<p> <p>Label to associate with Product List.</p>\n<hr>\n<p><b>limit</b> (integer, <b>default 100, maximum 150, minimum 0</b>)<p> <p>number of products to return</p>\n<hr>\n<p><b>offset</b> (integer, default 0)<p> <p><b>If offset + limit < count</b>, results have been truncated.</p> <p>To consume all data, make multiple calls using offset to paginate through the result set.</p>","required":true},"responses":{"200":{"description":"search results matching criteria","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"count":{"type":"integer","format":"int32","example":382},"limit":{"type":"integer","format":"int32","example":100},"offset":{"type":"integer","format":"int32","example":0},"products":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"brand":{"type":"string"},"full_name":{"type":"string"},"product_type":{"type":"string"},"product_form":{"type":"string"},"prescription_diet":{"type":"boolean"},"raw_food":{"type":"boolean"}}},"example":[{"id":1751,"brand":"Royal Canin","full_name":"Royal Canin Veterinary Diet Canine Selected Protein Adult PD","product_type":"formula","product_form":"dry","prescription_diet":true,"raw_food":false},{"id":1744,"brand":"Royal Canin","full_name":"Royal Canin Veterinary Diet Canine Hydrolyzed Protein Adult PS","product_type":"formula","product_form":"dry","prescription_diet":true,"raw_food":false},{"id":"etc...","brand":"etc...","full_name":"etc...","product_type":"etc...","product_form":"etc...","prescription_diet":"etc...","raw_food":"etc..."}]}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}}},"security":[{"api_key":[]}]}},"/ingredients":{"get":{"tags":["Developers"],"operationId":"ingredients","parameters":[{"name":"limit","in":"query","description":"<p>Number of ingredients to return <b>(default 500, max 1000, min 0)</b></p>","required":false,"schema":{"type":"integer","format":"int32","default":500,"maximum":1000,"minimum":0}},{"name":"offset","in":"query","description":"<p><b>If offset + limit < count</b>, results have been truncated.</p> <p>To consume all data, make multiple calls using offset to paginate through the result set.</p>","required":false,"schema":{"type":"integer","format":"int32","default":0,"minimum":0}}],"responses":{"200":{"description":"returns available ingredient names and associated numerical IDs.","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"count":{"type":"integer","format":"int32","example":2617},"limit":{"type":"integer","format":"int32","example":500},"offset":{"type":"integer","format":"int32","example":0},"ingredients":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"}}},"example":[{"id":706,"name":"agar-agar"},{"id":182,"name":"alfalfa"},{"id":201,"name":"algae"},{"id":1617,"name":"alligator"},{"id":210,"name":"almond"},{"id":785,"name":"aloe vera"},{"id":1149,"name":"anchovy"},{"id":"etc...","name":"etc..."}]}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}}},"security":[{"api_key":[]}]}},"/ingredients/descendents":{"get":{"tags":["Developers"],"operationId":"ingredientsDescendents","parameters":[{"name":"id","in":"query","description":"<p>PawDiet Ingredient Node ID</p> <p><b>Must provide name or id (not both).</b></p>","required":false,"schema":{"type":"integer","format":"int32","example":1586}},{"name":"name","in":"query","description":"<p>PawDiet Ingredient Node Name</p> <p><b>Must provide name or id (not both).</b></p>","required":false,"schema":{"type":"string","example":"chicken"}}],"responses":{"200":{"description":"returns the descendants of an ingredient.","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"ingredient":{"type":"object","properties":{"id":{"type":"integer","format":"int32","example":182},"name":{"type":"string","example":"alfalfa"}}},"descendants":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"}}},"example":[{"id":2338,"name":"dried alfalfa"},{"id":2135,"name":"alfalfa extract"},{"id":2530,"name":"alfalfa leaf"},{"id":2624,"name":"organic ground alfalfa"},{"id":2190,"name":"dehydrated alfalfa"},{"id":200,"name":"alfalfa sprouts"},{"id":191,"name":"alfalfa meal"},{"id":733,"name":"alfalfa nutrient concentrate"},{"id":839,"name":"organic alfalfa"},{"id":"etc...","name":"etc..."}]}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}},"404":{"description":"ingredient does not exist","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"ingredient does not exist"}}}}}}},"security":[{"api_key":[]}]}},"/ingredients/statistics":{"get":{"tags":["Developers"],"operationId":"ingredientsStatistics","parameters":[{"name":"id","in":"query","description":"<p>PawDiet Ingredient Node ID</p> <p><b>Must provide name or id (not both).</b></p>","required":false,"schema":{"type":"integer","format":"int32","example":1586}},{"name":"name","in":"query","description":"<p>PawDiet Ingredient Node Name</p> <p><b>Must provide name or id (not both).</b></p>","required":false,"schema":{"type":"string","example":"chicken"}}],"responses":{"200":{"description":"returns the frequency of an ingredient in dog and cat food formulas.","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"ingredient":{"type":"object","properties":{"id":{"type":"integer","format":"int32","example":1586},"name":{"type":"string","example":"chicken"}}},"statistics":{"type":"object","properties":{"with_descendents":{"type":"object","properties":{"dog_frequency":{"type":"number","format":"double","example":0.6875420875420876},"cat_frequency":{"type":"number","format":"double","example":0.7330357142857142}}},"without_descendents":{"type":"object","properties":{"dog_frequency":{"type":"number","format":"double","example":0.4228956228956229},"cat_frequency":{"type":"number","format":"double","example":0.5580357142857143}}}}}}}}}}}},"400":{"description":"bad input parameters","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"helpful msg to descibe the error"}}}}}},"404":{"description":"ingredient does not exist","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"message":{"type":"string","example":"ingredient does not exist"}}}}}}},"security":[{"api_key":[]}]}},"/brands":{"get":{"tags":["Developers"],"operationId":"brands","responses":{"200":{"description":"returns available brand names and associated numerical IDs.","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"response":{"type":"object","properties":{"brands":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"}}},"example":[{"id":67,"name":"9 Lives"},{"id":45,"name":"Acana"},{"id":43,"name":"Addiction"},{"id":1,"name":"Alpo"},{"id":103,"name":"American Journey"},{"id":116,"name":"Annamaet"},{"id":115,"name":"Authority"},{"id":"etc...","name":"etc..."}]}}}}}}}}},"security":[{"api_key":[]}]}}},"components":{"securitySchemes":{"api_key":{"type":"apiKey","in":"header","name":"x-api-key"}}}}