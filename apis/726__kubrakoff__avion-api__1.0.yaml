openapi: 3.0.0
info:
  title: Avion API
  version: '1.0'
  description: "Для использования API необходимо послать корректный json на указанный url. JSON всегда состоит из параметров action, в котором задается название метода, а также key, в котором содержиться ваш api ключ. \n\nОсновные методы и порядок их использования:\n\n1) getRegionsList позволяет получить список возможных регионов. Данные регионы полезны в получение гео ориентированных подсказок для адреса.\n2) getHints позволяет получить подсказки для адреса. Кроме самой подсказки приходит еще и тип адреса - аэропорт, вокзал, адрес, которые потом используется в методе для просчета стоимости.\n3) calc позволяет просчитать стоимость, а также получить регион, в котором был осуществлен просчет\n4) getOptions позволяет получить инфо по классам и доп. услугам для конкретного региона\n5) addOrder позволяет внести заказ в CRM.\n\nНа выходе API также отдает json. В случае ошибки выполнения выдается json с параметрами  status = error, code с кодом ошибки и description с кратким описанием ошибки. \n\nСписок кодов ошибок и их описания:\n\n    1: 'Некорректный json обьект'\n    2: 'Некорректный параметр action'\n    3: 'Не передан параметр hint'\n    4: 'Ошибка в определении координаты для адреса'\n    5: 'Маршрут не обслуживается'\n    6: 'Не передан параметр адрес отправления'\n    7: 'Не передан параметр тип адреса отправления'\n    8: 'Не передан параметр адрес назначения'\n    9: 'Не передан параметр тип адреса назначения'\n    10: 'Не удалось найти аэропорта или вокзала с таким названием. Проверьте корректность типа адреса'\n    11: 'Ошибка получения координаты'\n    12: 'Некорректный api ключ'\n    13: 'Подсказки не найдены'\n    14: 'Не передан параметр geo'\n    15: 'Нет инфо по данному региону'\n    16: 'Не удалось получить расстояние по маршруту'\n"
servers:
  - url: 'http://www.avion.com.ua/api/api.php'
paths:
  'action: getRegionsList':
    post:
      summary: Получение списка регионов
      tags: []
      responses:
        '200':
          description: 'Возвращает массив с обьектами с именами и id регионов. В случае ошибки выдает json c параметром status = error, а также кодом ошибки и ее описанием.'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    termID:
                      type: string
                    nameTerm:
                      type: string
              examples:
                Список регионов:
                  value:
                    - termID: '280'
                      nameTerm: Москва
                    - termID: '281'
                      nameTerm: Санкт-Петербург
                    - termID: '287'
                      nameTerm: Калининградская область
                    - termID: '290'
                      nameTerm: Крым
                    - termID: '307'
                      nameTerm: Черногория
                    - termID: '311'
                      nameTerm: Турция
                    - termID: '312'
                      nameTerm: Чехия
                    - termID: '313'
                      nameTerm: Испания
                    - termID: '314'
                      nameTerm: Австрия
                    - termID: '315'
                      nameTerm: Италия
                    - termID: '316'
                      nameTerm: Греция
                    - termID: '317'
                      nameTerm: Франция
                    - termID: '318'
                      nameTerm: Англия
                    - termID: '319'
                      nameTerm: Болгария
                    - termID: '320'
                      nameTerm: Хорватия
                    - termID: '321'
                      nameTerm: Беларусь
                    - termID: '322'
                      nameTerm: Германия
                    - termID: '323'
                      nameTerm: Тайланд. Пхукет
                    - termID: '324'
                      nameTerm: Тайланд. Краби
                    - termID: '325'
                      nameTerm: Тайланд. Бангкок
                    - termID: '326'
                      nameTerm: Словения
                    - termID: '327'
                      nameTerm: ОАЭ
                    - termID: '328'
                      nameTerm: Польша
                    - termID: '329'
                      nameTerm: Латвия
                    - termID: '330'
                      nameTerm: Литва
                    - termID: '331'
                      nameTerm: Эстония
                    - termID: '332'
                      nameTerm: Финляндия
                    - termID: '333'
                      nameTerm: Венгрия
                    - termID: '448'
                      nameTerm: Сочи
                Некорректный action:
                  value:
                    status: error
                    code: 2
                    description: Некорректный параметр action
                Некорректный API ключ:
                  value:
                    status: error
                    code: 12
                    description: Некорректный api ключ
            application/xml:
              schema:
                type: object
                properties:
                  '':
                    type: string
              examples:
                Список регионов.:
                  value:
                    - termID: '280'
                      nameTerm: Москва
                    - termID: '281'
                      nameTerm: Санкт-Петербург
                    - termID: '287'
                      nameTerm: Калининградская область
                    - termID: '290'
                      nameTerm: Крым
                    - termID: '307'
                      nameTerm: Черногория
                    - termID: '311'
                      nameTerm: Турция
                    - termID: '312'
                      nameTerm: Чехия
                    - termID: '313'
                      nameTerm: Испания
                    - termID: '314'
                      nameTerm: Австрия
                    - termID: '315'
                      nameTerm: Италия
                    - termID: '316'
                      nameTerm: Греция
                    - termID: '317'
                      nameTerm: Франция
                    - termID: '318'
                      nameTerm: Англия
                    - termID: '319'
                      nameTerm: Болгария
                    - termID: '320'
                      nameTerm: Хорватия
                    - termID: '321'
                      nameTerm: Беларусь
                    - termID: '322'
                      nameTerm: Германия
                    - termID: '323'
                      nameTerm: Тайланд. Пхукет
                    - termID: '324'
                      nameTerm: Тайланд. Краби
                    - termID: '325'
                      nameTerm: Тайланд. Бангкок
                    - termID: '326'
                      nameTerm: Словения
                    - termID: '327'
                      nameTerm: ОАЭ
                    - termID: '328'
                      nameTerm: Польша
                    - termID: '329'
                      nameTerm: Латвия
                    - termID: '330'
                      nameTerm: Литва
                    - termID: '331'
                      nameTerm: Эстония
                    - termID: '332'
                      nameTerm: Финляндия
                    - termID: '333'
                      nameTerm: Венгрия
                    - termID: '448'
                      nameTerm: Сочи
      operationId: post-getRegionsList
      description: |-
        Запрос на получение списка всех регионов. Результат: json строка с массивом обьектов регионов. termID - id региона для последующих запросов. nameTerm - название региона.

        ID региона используется в дальнейшем для получения гео ориентированных подсказок для адресов, получения инфо по классам авто, доп. услугам и т.д. для конкретного региона.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: 'Название метода: getRegionsList'
                  example: getRegionsList
                key:
                  type: string
                  description: Ваш api ключ
              required:
                - action
                - key
            examples:
              Пример:
                value:
                  action: getRegionsList
                  key: '{ваш api ключ}'
    parameters: []
  'action: getHints':
    post:
      summary: Получение подсказок для адреса
      tags: []
      responses:
        '200':
          description: 'В случае нахождения релятивных подсказок выдает массив обьектов, который содержит название подсказки и тип ключевой зоны. В случае ошибки выдает json c параметром status = error, а также кодом ошибки и ее описанием.'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    suggestion:
                      type: string
                    type:
                      type: string
              examples:
                'Пример подсказок для "вну" для Москвы':
                  value:
                    - suggestion: Внуково Аэропорт
                      type: airport
                    - suggestion: 'Внуково, Московская область, Россия'
                      type: address
                    - suggestion: 'Внуково, Москва, Россия'
                      type: address
                    - suggestion: 'Внуковская Большая улица, Внуково, Москва, Россия'
                      type: address
                    - suggestion: 'Внуковское шоссе, Дачи Писателей, Московская область, Россия'
                      type: address
                    - suggestion: 'Внуковское , Поселение, Москва, Россия'
                      type: address
                Некорректный api ключ:
                  value:
                    status: error
                    code: 12
                    description: Некорректный api ключ
                Некорректный параметр action:
                  value:
                    status: error
                    code: 2
                    description: Некорректный параметр action
                Не передан параметр hint:
                  value:
                    status: error
                    code: 3
                    description: Не передан параметр hint
                Подсказки не найдены:
                  value:
                    status: error
                    code: 13
                    description: Подсказки не найдены
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: ''
      description: "Выдает список ключевых зон (аэропортов и вокзалов), а также подсказок в зависимости от ключевых слов и опционального параметра региона. \nОбязательный параметры hint содержит ключевые слова для поиска для подсказок. key также обязательный api ключ. geo - опциональный параметр с id региона, под который будут выдаваться более приоритетные подсказки (получить список регионов с их id и названиями можно с помощью метода getRegionsList). \nПодсказка состоит из самой подсказки, а также типа зоны: airport, railway, address. Данный тип потом используется при расчете стоимости."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: Ваш api ключ
                hint:
                  type: string
                  description: ключевые слова для подсказки
                geo:
                  type: string
                  description: регион для гео ориентированных подсказок
                action:
                  type: string
                  description: 'название метода: getHints'
              required:
                - key
                - hint
                - action
            examples:
              'Пример подсказок для "вну" для Москвы':
                value:
                  action: getHints
                  key: '{ваш api ключ}'
                  geo: '280'
                  hint: вну
    parameters: []
  'action: calc':
    post:
      summary: Просчет стоимости между двумя точками
      tags: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  price:
                    type: object
                    properties:
                      econom:
                        type: integer
                        description: перечень тарифов с стоимостью по каждому
                  geo:
                    type: string
                    description: id региона
                required:
                  - price
                  - geo
              examples:
                из Внуково в ЦАО:
                  value:
                    price:
                      econom: 1200
                      comfort: 1400
                      premium: 5000
                      universal: 1500
                      business: 2000
                      businessPlus: 2500
                      minivan: 2000
                      minibus: 2500
                      minibusPlus: 5000
                      minibusVip: 5000
                    geo: 280
      operationId: ''
      description: "Для просчета необходимо передать action: calc, key: ваш api ключ, а также два обьекта с именем точки, а также ее типом. Имя и тип необходимо получить методом: getHints.\n\nСуществуют 3 типа точек: airport, railway, address. \n\nДля аэропортов и вокзалов нужно передать не только тип airport и railway, а также само имя должно быть точно таким же как и полученным в подсказках getHints. \nДля любой произвольной точки необходимо указать тип address. \n\nРезультат:\njson обьект с базовым тарифом по маршруту, а также id региона, который в дальнейшем можно использовать для получения служебной инфо по региону (имена классов, условия поездки, доп. услуги)."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: 'имя метода: calc'
                key:
                  type: string
                  description: ваш api ключ
                from:
                  type: object
                  required:
                    - fullAddress
                    - type
                  properties:
                    fullAddress:
                      type: string
                    type:
                      type: string
                      description: 'airport, railway, address'
                to:
                  type: object
                  required:
                    - fullAddress
                    - type
                  properties:
                    fullAddress:
                      type: string
                    type:
                      type: string
                      description: 'airport, railway, address'
              required:
                - action
                - key
                - from
                - to
            examples:
              Просчет из аэропорта Внуково:
                value:
                  action: calc
                  key: '{Ваш ключ}'
                  from:
                    fullAddress: Внуково Аэропорт
                    type: airport
                  to:
                    fullAddress: 'Тверской бульвар, 35, Москва, Россия'
                    type: address
              Просчет из Курского вокзала:
                value:
                  action: calc
                  key: '{Ваш ключ}'
                  from:
                    fullAddress: Курский вокзал
                    type: railway
                  to:
                    fullAddress: 'Тверской бульвар, 35, Москва, Россия'
                    type: address
        description: ''
    parameters: []
  'action: addOrder':
    post:
      summary: Добавление заказа в CRM
      tags: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Успешное внесение:
                  value:
                    success: true
                    id: 1203937471
                Ошибка:
                  value:
                    success: false
                    id: 1164
      operationId: ''
      description: "Добавление заказа в CRM. Структура json:\ndate: дата в формате 06.02.2020\ntime: время в формате 08:00\ntarif: класс авто для заказа. Возможные варианты -\n\n    'econom' - эконом\n    'comfort' - комфорт\n    'business' - бизнес\n    'businessPlus' - бизнес плюс\n    'premium' - премиум\n    'universal' - универсал\n    'minivan' - минивен\n    'minibus' - микроавтобус \n    'minibusPlus' - микроавтобус 10+  \n    'minibusVip' - минибус vip\n    \n  from - адрес откуда\n  to - адрес куда\n  comments_to_the_driver - комментарии водителю\n  user_phone - телефон\n  nameOrder - имя клиента\n  options - обьект с указанными доп. услугами. \n  \n    ['options']['driver_language']['english'] - водитель со знанием английского\n    ['options']['driver_language']['german'] - немецкий\n    ['options']['driver_language']['spain'] - испанский\n    ['options']['driver_language']['italian'] - итальянский\n    ['options']['driver_language']['russian'] - русский\n    \n    pet_transportation - перевозка животного\n    oversized_baggage - негабаритный багаж\n    invoice_for_company - БСО\n    smoking_salon - курящий салон\n    car_with_yellow_plates машина с желтыми номерами\n    meeting_with_a_table - встреча с табличкой\n    \n    total_price - цена\n    flight_number - рейс для отслеживания\n    departing_from - город отправления\n    train_number - номер поезда\n    carriage_number - номер вагона\n    \n    ['options']['child_seat']['booster_seat'] - бустер\n    ['options']['child_seat']['car_cradle'] - люлька\n    ['options']['child_seat']['child_safety_seat'] - детское кресло"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Пример заказа:
                value:
                  action: addOrder
                  key: '{ваш api ключ}'
                  cartotime: false
                  comments_to_the_driver: Тестовый заказ
                  date: 07.02.2020
                  departing_from: Архангельск
                  flight_number: SU 1333
                  from: аэропорт Внуково
                  nameOrder: ''
                  options:
                    car_with_yellow_plates: false
                    child_seat:
                      booster_seat: 0
                      car_cradle: 0
                      child_safety_seat: 1
                    driver_language:
                      english: false
                      german: false
                      spain: false
                    invoice_for_company: false
                    oversized_baggage: false
                    pet_transportation: false
                    smoking_salon: false
                  parking_price: 200
                  region: '280'
                  status: 0
                  tarif: universal
                  time: '15:00'
                  to: аэропорт Домодедово
                  total_price: 1800
                  user_phone: '+380734446366'
    parameters: []
  'action: getOptions':
    post:
      summary: Получение инфо по классам авто и доп. услугам
      tags: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Список по Москве:
                  value:
                    additionalOptions:
                      waitingPrice: '100'
                      waitingActive: 'true'
                      waitingName: Доп. ожидание 15 мин
                      kresloPrice: '100'
                      kresloActive: 'true'
                      kresloName: Детское удерживающее устройство
                      vstrechaPrice: '200'
                      vstrechaActive: 'true'
                      vstrechaName: Встреча с табличкой
                      bsoPrice: '100'
                      bsoActive: 'true'
                      bsoName: Фискальный чек/БСО
                      languagePrice: '500'
                      languageActive: 'true'
                      languageName: Водитель со знанием ин.яз.
                      yellowNumbersPrice: '300'
                      yellowNumbersActive: 'true'
                      yellowNumbersName: Машина с желтыми номерами
                      animalPrice: '200'
                      animalActive: 'true'
                      animalName: Перевозка питомца
                      baggagePrice: '200'
                      baggageActive: 'true'
                      baggageName: Негабаритный багаж
                      smokingPrice: '300'
                      smokingActive: 'true'
                      smokingName: Курящий салон
                    class:
                      - classNameRu: Эконом
                        classNameEn: Economy
                        minPrice_0_10: '600'
                        minKm_0_10: '10'
                        overPrice_0_10: '24'
                        minPrice_150_plus: '600'
                        minKm_150_plus: '10'
                        overPrice_150_plus: '24'
                        freeAdressTime: '10'
                        payAdressTime: '12'
                        freeTableTime: '60'
                        payTableTime: '12'
                        freeRailwayTime: '20'
                        payRailwayTime: '12'
                        freeStopTime: '0'
                        payStopTime: '12'
                        passengers: '3'
                        baggage: '3'
                      - classNameRu: Комфорт
                        classNameEn: Comfort
                        minPrice_0_10: '700'
                        minKm_0_10: '10'
                        overPrice_0_10: '26'
                        minPrice_150_plus: '700'
                        minKm_150_plus: '10'
                        overPrice_150_plus: '26'
                        freeAdressTime: '10'
                        payAdressTime: '15'
                        freeTableTime: '60'
                        payTableTime: '15'
                        freeRailwayTime: '20'
                        payRailwayTime: '15'
                        freeStopTime: '0'
                        payStopTime: '15'
                        passengers: '4'
                        baggage: '3'
                      - classNameRu: Универсал
                        classNameEn: Station wagon
                        minPrice_0_10: '800'
                        minKm_0_10: '10'
                        overPrice_0_10: '28'
                        minPrice_150_plus: '800'
                        minKm_150_plus: '10'
                        overPrice_150_plus: '28'
                        freeAdressTime: '10'
                        payAdressTime: '15'
                        freeTableTime: '60'
                        payTableTime: '15'
                        freeRailwayTime: '20'
                        payRailwayTime: '15'
                        freeStopTime: '0'
                        payStopTime: '15'
                        passengers: '4'
                        baggage: '4'
                      - classNameRu: Бизнес
                        classNameEn: Business
                        minPrice_0_10: '1200'
                        minKm_0_10: '10'
                        overPrice_0_10: '33'
                        minPrice_150_plus: '1200'
                        minKm_150_plus: '10'
                        overPrice_150_plus: '33'
                        freeAdressTime: '10'
                        payAdressTime: '20'
                        freeTableTime: '60'
                        payTableTime: '20'
                        freeRailwayTime: '20'
                        payRailwayTime: '20'
                        freeStopTime: '0'
                        payStopTime: '20'
                        passengers: '4'
                        baggage: '3'
                      - classNameRu: Бизнес Плюс
                        classNameEn: Business Plus
                        minPrice_0_10: '1700'
                        minKm_0_10: '10'
                        overPrice_0_10: '40'
                        minPrice_150_plus: '1700'
                        minKm_150_plus: '10'
                        overPrice_150_plus: '40'
                        freeAdressTime: '10'
                        payAdressTime: '25'
                        freeTableTime: '60'
                        payTableTime: '25'
                        freeRailwayTime: '20'
                        payRailwayTime: '25'
                        freeStopTime: '0'
                        payStopTime: '25'
                        passengers: '4'
                        baggage: '3'
                      - classNameRu: Минивэн
                        classNameEn: Minivan
                        minPrice_0_10: '1200'
                        minKm_0_10: '10'
                        overPrice_0_10: '33'
                        minPrice_150_plus: '1200'
                        minKm_150_plus: '10'
                        overPrice_150_plus: '33'
                        freeAdressTime: '10'
                        payAdressTime: '20'
                        freeTableTime: '60'
                        payTableTime: '20'
                        freeRailwayTime: '20'
                        payRailwayTime: '20'
                        freeStopTime: '0'
                        payStopTime: '20'
                        passengers: '6'
                        baggage: '6'
                      - classNameRu: Минибус
                        classNameEn: Minibus
                        minPrice_0_10: '1700'
                        minKm_0_10: '10'
                        overPrice_0_10: '40'
                        minPrice_150_plus: '1700'
                        minKm_150_plus: '10'
                        overPrice_150_plus: '40'
                        freeAdressTime: '10'
                        payAdressTime: '20'
                        freeTableTime: '60'
                        payTableTime: '20'
                        freeRailwayTime: '20'
                        payRailwayTime: '20'
                        freeStopTime: '0'
                        payStopTime: '20'
                        passengers: '7'
                        baggage: '8'
                      - classNameRu: Минибус VIP
                        classNameEn: Minibus VIP
                        minPrice_0_10: '2500'
                        minKm_0_10: '10'
                        overPrice_0_10: '70'
                        minPrice_150_plus: '2500'
                        minKm_150_plus: '10'
                        overPrice_150_plus: '70'
                        freeAdressTime: '10'
                        payAdressTime: '30'
                        freeTableTime: '60'
                        payTableTime: '30'
                        freeRailwayTime: '20'
                        payRailwayTime: '30'
                        freeStopTime: '0'
                        payStopTime: '30'
                        passengers: '7'
                        baggage: '8'
                      - classNameRu: 'Минибус 10 '
                        classNameEn: 'Minibus 10 '
                        minPrice_0_10: '5000'
                        minKm_0_10: '70'
                        overPrice_0_10: '60'
                        minPrice_150_plus: '5000'
                        minKm_150_plus: '70'
                        overPrice_150_plus: '60'
                        freeAdressTime: '10'
                        payAdressTime: '25'
                        freeTableTime: '60'
                        payTableTime: '25'
                        freeRailwayTime: '20'
                        payRailwayTime: '25'
                        freeStopTime: '0'
                        payStopTime: '25'
                        passengers: '20'
                        baggage: '16'
                      - classNameRu: Премиум
                        classNameEn: Premium
                        minPrice_0_10: '2500'
                        minKm_0_10: '10'
                        overPrice_0_10: '70'
                        minPrice_150_plus: '2500'
                        minKm_150_plus: '10'
                        overPrice_150_plus: '70'
                        freeAdressTime: '10'
                        payAdressTime: '30'
                        freeTableTime: '60'
                        payTableTime: '30'
                        freeRailwayTime: '20'
                        payRailwayTime: '30'
                        freeStopTime: '0'
                        payStopTime: '30'
                        passengers: '4'
                        baggage: '3'
      operationId: ''
      description: "Обязательные параметры action = getOptions, а также geo с id Региона. ID региона возможно получить либо с помощью метода getRegionsList либо в ответе от метода calc. \n\nРезультатом будет обьект, который содержит в себе список активных доп. услуг с их названиями и стоимостью. Также в данном обьекте есть инфо по всем включенным классам. В инфо по классам авто основные поля это -\n\n\"classNameRu\" - название класса авто на русском\n\"classNameEn\" - название класса авто на английском\n\"freeAdressTime\" - бесплатное время ожидания по адресу\n\"payAdressTime\" - стоимость ожидания свыше бесплатного по адресу\n\"freeTableTime\" - бесплатное время ожидания в аэропорту\n\"payTableTime\" - стоимость ожидания свыше бесплатного в аэропорту\n\"freeRailwayTime\" - бесплатное время ожидания на вокзале\n\"payRailwayTime\" - стоимость ожидания свыше бесплатного на вокзале\n\"freeStopTime\" - бесплатное время ожидания при остановках в пути\n\"payStopTime\" - стоимость ожидания при остановках в пути\n\"passengers\" - количество пассажиров\n\"baggage\" - количество багажа"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Поиск классов и доп. услуг по Московскому региону:
                value:
                  action: getOptions
                  key: '{ваш api ключ}'
                  geo: '280'
    parameters: []
components:
  schemas: {}
