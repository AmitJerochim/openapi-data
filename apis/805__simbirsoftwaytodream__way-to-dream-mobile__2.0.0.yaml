openapi: 3.0.0
info:
  version: '2.0.0'
  title: 'Way To Dream Mobile API'
  description: ''
paths:
  /api/{version}/mobile/register:
    parameters:
      - $ref: '#/components/parameters/version'
    post:
      description: Register user by email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: pa$$word
      responses:
        '200':
          description: Receive tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refresh_token:
                    type: string
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
  /api/{version}/mobile/resetting:
    parameters:
      - $ref: '#/components/parameters/version'
    post:
      description: Reset user password by email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
      responses:
        '200':
          description: Receive status
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
  /api/{version}/mobile/send-temp-code:
    parameters:
      - $ref: '#/components/parameters/version'
    post:
      description: Sends temp code on email for change password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
      responses:
        '200':
          description: Receive status
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
  /api/{version}/mobile/password-change:
    parameters:
      - $ref: '#/components/parameters/version'
    post:
      description: Changes user password by password temp code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                passwordCode:
                  type: string
                  example: 1234
                passwordNew:
                  type: string
                  example: abc1234
                passwordNewRepeat:
                  type: string
                  example: abc1234
      responses:
        '200':
          description: Receive status
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
  /api/{version}/mobile/auth:
    parameters:
      - $ref: '#/components/parameters/version'
    post:
      description: Auth user by email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: pa$$word
      responses:
        '200':
          description: Receive tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refresh_token:
                    type: string
        '401':
          description: Bad credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
  /api/v2/mobile/token/refresh:
    parameters:
      - $ref: '#/components/parameters/version'
    post:
      description: Refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: refresh token
      responses:
        '200':
          description: Receive tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refresh_token:
                    type: string
        '401':
          description: Bad credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
  /api/{version}/mobile/rations:
    parameters:
      - $ref: '#/components/parameters/version'
    get:
      tags:
        - RationsList - "Режимы питания"
      summary: Get list of ration items
      responses:
        '200':
          description: success request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ration'
        '403':
          description: authorization required
      security:
        - bearerAuth: []
  /api/{version}/mobile/task-groups:
    parameters:
      - $ref: '#/components/parameters/version'
    get:
      tags:
        - TaskGroups - "Группы задач"
      summary: Get list of task group items
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskGroup'
      security:
        - bearerAuth: []
    post:
      tags:
        - TaskGroups - "Группы задач"
      summary: Create task group item
      requestBody:
        $ref: '#/components/requestBodies/TaskGroup'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGroup'
      security:
        - bearerAuth: []
  /api/{version}/mobile/task-groups/{groupId}:
    parameters:
      - $ref: '#/components/parameters/version'
      - in: path
        name: groupId
        schema:
          type: integer
        required: true
        description: ID of task group item
    put:
      tags:
        - TaskGroups - "Группы задач"
      summary: Update task group item
      requestBody:
        $ref: '#/components/requestBodies/TaskGroup'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGroup'
        '404':
          description: Ration with given ID not found
        '422':
          description: Validation exception
      security:
        - bearerAuth: []
    delete:
      tags:
        - TaskGroups - "Группы задач"
      summary: Delete task group
      responses:
        '200':
          description: Success task group deletion
        '404':
          description: Task group with given ID not found
      security:
        - bearerAuth: []
  /api/{version}/mobile/task-groups/{groupId}/tasks:
    parameters:
      - $ref: '#/components/parameters/version'
      - in: path
        name: groupId
        schema:
          type: integer
        required: true
        description: ID of task group item
    get:
      tags:
        - Task - "Задачи"
      summary: Get task list for task group
      responses:
        '200':
          description: Task list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: Task group with given ID not found
      security:
        - bearerAuth: []
    post:
      tags:
        - Task - "Задачи"
      summary: Create task item
      requestBody:
        $ref: '#/components/requestBodies/Task'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      security:
        - bearerAuth: []
  /api/{version}/mobile/tasks/{taskId}:
    parameters:
      - $ref: '#/components/parameters/version'
      - in: path
        name: taskId
        schema:
          type: integer
        required: true
        description: ID of task item
    put:
      tags:
        - Task - "Задачи"
      summary: Update task item
      requestBody:
        $ref: '#/components/requestBodies/Task'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task with given ID not found
        '422':
          description: Validation exception
      security:
        - bearerAuth: []
    delete:
      tags:
        - Task - "Задачи"
      summary: Delete task
      responses:
        '200':
          description: Success task deletion
        '404':
          description: Task with given ID not found
      security:
        - bearerAuth: []
  /api/{version}/mobile/profile:
    parameters:
      - $ref: '#/components/parameters/version'
    get:
      tags:
        - Profile
      summary: Get current user profile
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
        - bearerAuth: []
  /api/{version}/mobile/profile/images/before:
    parameters:
      - $ref: '#/components/parameters/version'
    post:
      tags:
        - Profile
      summary: upload profile before image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
        - bearerAuth: []
  /api/{version}/mobile/profile/images/after:
    parameters:
      - $ref: '#/components/parameters/version'
    post:
      tags:
        - Profile
      summary: upload profile after image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
        - bearerAuth: []
  /api/{version}/mobile/motivations:
    parameters:
      - $ref: '#/components/parameters/version'
    get:
      tags:
        - Motivation - "Мотивация"
      summary: Get motivations list
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              example:
                - id: 1
                  name: Основное видео
                  motivations:
                    - id: 1
                      video: http://example.com/video1.mp4
                      sort: 400
                      name: Тренировка 1
                      videoPreview: http::/example.com/videoPreview.png
                    - id: 2
                      video: http://example.com/video2.mp4
                      sort: 100
                      name: Тренировка 2
                      videoPreview: null
                  video: http::/example.com/video.mp4
                  description: Тренировка
                  videoPreview: http::/example.com/video.png
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []
  /api/{version}/mobile/workouts:
    parameters:
      - $ref: '#/components/parameters/version'
    get:
      tags:
        - Workouts - "Тренировки"
      summary: Get workouts courses
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCourse'
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []
  /api/{version}/mobile/user/progress/workouts:
    parameters:
      - $ref: '#/components/parameters/version'
    get:
      tags:
        - Workouts - "Тренировки"
      summary: Get workouts courses
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingCourseProgressPreview'
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []
  /api/{version}/mobile/user/progress/workouts/{workoutCourseId}/plans/{workoutPlanId}:
    parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/workoutCourseId'
      - $ref: '#/components/parameters/workoutPlanId'
    delete:
      tags:
        - Workouts - "Тренировки"
      summary: Clear user workout plan progress
      responses:
        '200':
          description: Successful operation. Workout plan progress cleared.
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
    get:
      tags:
        - Workouts - "Тренировки"
      summary: Get workout progress course' plans
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingPlanProgress'
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []
  /api/{version}/mobile/workouts/{workoutCourseId}/plans/{workoutPlanId}:
    parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/workoutCourseId'
      - $ref: '#/components/parameters/workoutPlanId'
    get:
      parameters:
        - in: path
          name: workoutCourseId
          schema:
            type: integer
          required: true
          description: Numeric ID of workout course for selected week
      tags:
        - Workouts - "Тренировки"
      summary: Get workout course' plans
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingPlan'
      security:
        - bearerAuth: []  
  /api/{version}/mobile/user/progress/training-category/{trainingCategoryId}:
    parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/trainingCategoryId'
    get:
      tags:
        - Workouts - "Тренировки"
      summary: Get workout course plans for selected day
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCategoryProgress'
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []
  /api/{version}/mobile/user/progress/workouts/{workoutCourseId}/trainings/{trainingId}:
    parameters:
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/trainingId'
      - $ref: '#/components/parameters/workoutCourseId'
    put:
      tags:
        - Workouts - "Тренировки"
      summary: Set training or rest isComplete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingLevelProgress'
      responses:
        '200':
          description: successful operation. Response for completing rest is isCompleted true
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []
components:
  schemas:
    TrainingCourseProgressPreview: 
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        isCompleted:
          type: boolean
        workoutCourseId:
          type: integer
          example: 1
        plans:
          type: array
          items:
            $ref: '#/components/schemas/TrainingPlanProgressPreview'
    TrainingPlanProgressPreview: 
      type: object
      properties:
        id:
          type: integer
        workoutPlanId:
          type: integer
          example: 1
        isCompleted:
          type: boolean
        isAvailable:
          type: boolean
    Ration:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        videoPreview:
          type: string
          description: link to video preview image
        video:
          type: string
          description: link to video
        portions:
          type: array
          items:
            $ref: '#/components/schemas/Portion'
    Portion:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        image:
          type: string
          description: link to image
        meals:
          type: array
          items:
            $ref: '#/components/schemas/Meal'
    Meal:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        calories:
          type: integer
        videoPreview:
          type: string
          description: link to video preview image
        video:
          type: string
          description: link to video
    TaskGroup:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        isCompleted:
          type: boolean
    Task:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        isCompleted:
          type: boolean
    Image:
      type: object
      properties:
        before:
          type: string
        after:
          type: string
    Profile:
      type: object
      properties:
        email:
          type: string
        images:
          $ref: '#/components/schemas/Image'
    TrainingDayProgress:
      type: object
      properties:
        id:
          type: integer
        isCompleted:
          type: boolean
        isCurrent:
          type: boolean
        isAvailable:
          type: boolean
        index:
          type: integer
        trainingCategories:
          type: array
          items:
            $ref: '#/components/schemas/TrainingCategoryProgressForDay'
    TrainingWeekProgress:
      type: object
      properties:
        id:
          type: integer
        index:
          type: integer
        workoutWeekId:
          type: integer
          example: 1
        isCompleted:
          type: boolean
        isCurrent:
          type: boolean
        isAvailable:
          type: boolean
        days:
          type: array
          items:
            $ref: '#/components/schemas/TrainingDayProgress'
    TrainingPlanProgress:
      type: object
      properties:
        id:
          type: integer
        workoutPlanId:
          type: integer
          example: 1
        isCompleted:
          type: boolean
        weeks:
          type: array
          items:
            $ref: '#/components/schemas/TrainingWeekProgress'
    TrainingCourseProgress:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        isCompleted:
          type: boolean
        workoutCourseId:
          type: integer
          example: 1
        plans:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/TrainingPlanProgress'
    TrainingCategoryProgress:
      type: object
      properties:
        id:
          type: integer
          example: 1
        isCompleted:
          type: boolean
          example: false
        workoutTrainingCategoryId:
          type: integer
          example: 1
        trainings:
          type: array
          items:
            $ref: '#/components/schemas/TrainingLevelProgress'
    TrainingCategoryProgressForDay:
      type: object
      properties:
        id:
          type: integer
          example: 1
        workoutTrainingCategoryId:
          type: integer
          example: 1
        isCompleted:
          type: boolean
          example: false
    TrainingSetProgress:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        sequence:
          type: integer
          example: 0
          description: "Индекс завершенного подхода"
        previous:
          type: integer
          example: 0
          readOnly: true
        current:
          type: integer
          example: 10
        previousWeight:
          type: integer
          example: 0
          readOnly: true
        currentWeight:
          type: integer
          example: 0
    TrainingLevelProgress:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        trainingId:
          type: integer
          example: 1
          readOnly: true
        isCompleted:
          type: boolean
          example: true
          readOnly: true
        isCurrent:
          type: boolean
          example: true
          readOnly: true
        sets:
          type: array
          items:
            $ref: '#/components/schemas/TrainingSetProgress'
    TrainingPlan:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: 'Максимальный Рост'
        image:
          type: string
          example: https://example.com/static/images/plan/1.png
        description:
          type: string
          example: 'Описание базового курса'
        videoPreview:
          type: string
          example: 'https://example.com/static/videoPreview/1.png'
        video:
          type: string
          example: 'http://example.com/video.mp4'
        weeks:
          type: array
          items:
            $ref: '#/components/schemas/TrainingWeek'
        extraDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/ExtraDescription'
    ExtraDescription:
      type: object
      properties:
        title:
          type: string
          example: 'Заголовок'
        description:
          type: string
          example: 'Описание'
        image:
          type: string
          example: 'http://example.com/static/extraDescriptions/foo.png'
    TrainingWeek:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'Неделя 1'
        days:
          type: array
          items:
            $ref: '#/components/schemas/TrainingDay'
    TrainingDay:
      type: object
      properties:
        index:
          type: integer
        name:
          type: string
          example: 'День ног'
        nameDefault:
          type: string
          example: 'День 1'
        trainingCategories:
          type: array
          items:
            $ref: '#/components/schemas/TrainingCategory'
    TrainingLevel:
      type: object
      properties:
        id:
          type: integer
          example: 1
        setsCount:
          type: integer
          example: 10
        repeatsCount:
          type: integer
        restTime:
          type: integer
          example: 300
        exercise:
          $ref: '#/components/schemas/TrainingExercise'
    TrainingExercise:
      type: object
      properties:
        name:
          type: string
          example: 'Подтягивания на одной руке'
        level:
          type: integer
          example: 1
        video:
          type: string
          example: 'https://example.com/video1.pm4'
        videoPreview:
          type: string
          example: 'http://example.com/static/videos/foo1.png'
        withWeight:
          type: boolean
        description:
          type: string
          nullable: true
          example: 'Описание для упражения, возвращается только для упражнений из категории Отдых'

    TrainingCategory:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
          example: 'http://example.com/static/images/foo.png'
        name:
          type: string
          example: 'Приседания'
        type:
          type: string
          example: 'training'
        trainings:
          type: array
          items:
            $ref: '#/components/schemas/TrainingLevel'
    TrainingPlanPreview:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: 'Максимальный Рост'
        image:
          type: string
          example: https://example.com/static/images/plan/1.png
        description:
          type: string
          example: 'Описание базового курса'
        videoPreview:
          type: string
          example: 'https://example.com/static/videoPreview/1.png'
        video:
          type: string
          example: 'http://example.com/video.mp4'
        sort:
          type: integer
        extraDescriptions:
          type: object
          properties:
            title:
              type: string
              example: 'Заголовок'
            description:
              type: string
              example: 'Описание'
            image:
              type: string
              example: 'http://example.com/static/extraDescriptions/foo.png'
    TrainingCourse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'Вступление'
        sort:
          type: integer
          example: 0
        image:
          type: string
          example: 'http://example.com/workoutCourseImage/1.jpeg'
        subName:
          type: string
          example: 'Что тебя ждет?'
        description:
          type: string
          example: 'Выбери программу для себя и вперед становиться лучше!'
        video:
          type: string
          example: 'http://example.com/video/course.mp4'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/TrainingPlanPreview'
  requestBodies:
    TaskGroup:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
      required: true
    Task:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              isCompleted:
                type: boolean
                example: true
      required: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    version:
      in: path
      name: version
      description: api version
      schema:
        type: string
        enum:
          - 'v2'
      required: true
    workoutCourseId:
      in: path
      name: workoutCourseId
      description: Numeric ID of workout course
      schema:
        type: integer
        example: 1
      required: true
    workoutPlanId:
      in: path
      name: workoutPlanId
      description: Numeric ID of workout plan
      schema:
        type: integer
        example: 1
      required: true
    workoutWeekId:
      in: path
      name: workoutWeekId
      description: Numeric ID of workout week
      schema:
        type: integer
        example: 1
      required: true
    trainingCategoryId:
      in: path
      name: trainingCategoryId
      description: Numeric ID of training category
      schema:
        type: integer
        example: 1
      required: true
    workoutDayId:
      in: path
      name: workoutDayId
      description: Numeric ID of workout day
      schema:
        type: integer
        example: 1
      required: true
    trainingId:
      in: path
      name: trainingId
      schema:
        type: integer
      required: true
      description: Numeric ID of workout training or rest
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/simbirsoftwaytodream/way-to-dream-mobile/0.0.1