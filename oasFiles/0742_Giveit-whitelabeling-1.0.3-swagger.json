{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "Giveit Whitelabeling",
    "url" : "https://whitelabeling.giveit.app/api/app"
  }, {
    "description" : "MPS",
    "url" : "https://mps.giveit.app/api/app"
  } ],
  "info" : {
    "description" : "",
    "version" : "1.0.3",
    "title" : "Giveit Whitelabeling API"
  },
  "tags" : [ {
    "name" : "unsecured",
    "description" : "public calls"
  }, {
    "name" : "secured",
    "description" : "secured calls (requires auth)"
  } ],
  "paths" : {
    "/request/submit" : {
      "post" : {
        "tags" : [ "secured" ],
        "summary" : "submit a donation request",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "donation request submitted successfully"
          },
          "400" : {
            "description" : "missing field or invalid data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "missing or invalid auth token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DonationRequest"
              }
            }
          }
        }
      }
    },
    "/user/history" : {
      "get" : {
        "tags" : [ "secured" ],
        "summary" : "retrieve donation history",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "history retrieved successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DonationHistory"
                }
              }
            }
          },
          "401" : {
            "description" : "missing or invalid auth token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/change_password" : {
      "post" : {
        "tags" : [ "secured" ],
        "summary" : "change user password",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "password changed successfully"
          },
          "400" : {
            "description" : "missing field, new password invalid, or old password incorrect",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "missing or invalid auth token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        }
      }
    },
    "/user/contact_info" : {
      "get" : {
        "tags" : [ "secured" ],
        "summary" : "get user contact info",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "contact info retrieved successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "missing or invalid auth token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/{postal_code}" : {
      "get" : {
        "tags" : [ "secured" ],
        "summary" : "get scheduling info for a postal code",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        }, {
          "name" : "postal_code",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "schedule information retrieved successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleInfo"
                }
              }
            }
          },
          "400" : {
            "description" : "could not find schedule information for postal code",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "missing or invalid auth token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/authentication" : {
      "post" : {
        "tags" : [ "unsecured" ],
        "summary" : "get a user auth token",
        "responses" : {
          "200" : {
            "description" : "login success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "missing field, or invalid username and/or password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthenticationRequest"
              }
            }
          }
        }
      }
    },
    "/facebook" : {
      "post" : {
        "tags" : [ "unsecured" ],
        "summary" : "use facebook login to get user auth token",
        "description" : "The access_token that you pass will be the user_token from Facebook. note that Facebook auth does not differentiate between registering a new user and an existing user logging in. If the user does not exist, a new one will be created as part of the auth process.",
        "responses" : {
          "200" : {
            "description" : "facebook login success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "error while trying to sign in with Facebook",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FacebookAuthenticationRequest"
              }
            }
          }
        }
      }
    },
    "/apple" : {
      "post" : {
        "tags" : [ "unsecured" ],
        "summary" : "use Sign in with Apple login to get user auth token",
        "description" : "This will endpoint should be called for both first-time registrations and returning users. If the user does not exist, a new one will be created as part of the auth process.",
        "responses" : {
          "200" : {
            "description" : "apple login success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "error while trying to sign in with Apple",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppleAuthenticationRequest"
              }
            }
          }
        }
      }
    },
    "/user/registration" : {
      "post" : {
        "tags" : [ "unsecured" ],
        "summary" : "register a new user",
        "responses" : {
          "200" : {
            "description" : "registration success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "missing field, or invalid username and/or password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegistrationRequest"
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "DonationRequest" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "example" : "UT"
          },
          "postal_code" : {
            "type" : "string",
            "example" : 99999
          },
          "phone_number" : {
            "type" : "string",
            "example" : 18015551212
          },
          "comment" : {
            "type" : "string"
          },
          "device" : {
            "type" : "string"
          }
        }
      },
      "DonationHistoryItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "phone_number" : {
            "type" : "string",
            "example" : "+18015551212"
          },
          "city" : {
            "type" : "string"
          },
          "organization_name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "example" : "UT"
          },
          "postal_code" : {
            "type" : "string",
            "example" : "99999"
          },
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "status_id" : {
            "type" : "integer"
          },
          "comment" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-05-08T08:41:36Z"
          },
          "pickup_date" : {
            "type" : "string",
            "example" : "2019-05-16"
          }
        }
      },
      "DonationHistory" : {
        "type" : "object",
        "properties" : {
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DonationHistoryItem"
            }
          }
        }
      },
      "ChangePasswordRequest" : {
        "type" : "object",
        "properties" : {
          "old_password" : {
            "type" : "string"
          },
          "new_password" : {
            "type" : "string"
          }
        }
      },
      "ContactInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "example" : "UT"
          },
          "postal_code" : {
            "type" : "string",
            "example" : "99999"
          },
          "phone_number" : {
            "type" : "string",
            "example" : "+18015551212"
          },
          "email_address" : {
            "type" : "string",
            "format" : "email"
          }
        }
      },
      "ScheduleInfo" : {
        "type" : "object",
        "properties" : {
          "pickup_date" : {
            "type" : "string",
            "example" : "2019-05-16"
          },
          "charity_id" : {
            "type" : "integer"
          },
          "charity_name" : {
            "type" : "string"
          }
        }
      },
      "AuthenticationRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "FacebookAuthenticationRequest" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          }
        }
      },
      "AppleAuthenticationRequest" : {
        "type" : "object",
        "properties" : {
          "identity_token" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          }
        }
      },
      "AuthenticationResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "user_key" : {
            "type" : "string",
            "description" : "pass in Authorization header"
          }
        }
      },
      "RegistrationRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "password" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          }
        }
      },
      "RegistrationResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          }
        }
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          }
        }
      }
    }
  }
}