{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "Profile Appointment API",
    "description" : "API to get available timeslots for appointments and able to create appointments",
    "contact" : {
      "name" : "Robert van MÃ¶lken",
      "email" : "robert.van.molken@amis.nl"
    }
  },
  "tags" : [ {
    "name" : "AppointmentManagement",
    "description" : "All resources to manage appointments"
  } ],
  "servers" : [ {
    "description" : "Azure Api Management DEV",
    "url" : "https://apim-profile-d.azure-api.net/gms"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/robertvanmolken/ProfileAppointmentAPI/1.0.0"
  } ],
  "security" : [ {
    "TokenAuth" : [ ]
  } ],
  "paths" : {
    "/appointments" : {
      "post" : {
        "tags" : [ "AppointmentManagement" ],
        "summary" : "Create a new appointment",
        "operationId" : "createAppointment",
        "requestBody" : {
          "description" : "Appointment to create",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/appointment"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Appointment created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/createAppointmentResponse"
                },
                "example" : {
                  "success" : true,
                  "appointmentID" : "123abc",
                  "appointmentDurationMinutes" : 30
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requestError"
                },
                "example" : {
                  "success" : false,
                  "serviceError" : {
                    "statusCode" : 400,
                    "name" : "Bad Request",
                    "message" : "Attribute shopId: must not be null"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "timeslot no longer available, or other conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requestError"
                },
                "example" : {
                  "success" : false,
                  "serviceError" : {
                    "statusCode" : 409,
                    "name" : "Conflict",
                    "message" : "The requested timeslot is no longer available"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requestError"
                },
                "example" : {
                  "success" : false,
                  "serviceError" : {
                    "statusCode" : 500,
                    "name" : "Internal Server Error",
                    "message" : "An unexpected error occurred"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timeslots" : {
      "get" : {
        "summary" : "Gets available timeslots",
        "tags" : [ "AppointmentManagement" ],
        "operationId" : "get available timeslots",
        "parameters" : [ {
          "$ref" : "#/components/parameters/shopId"
        }, {
          "$ref" : "#/components/parameters/serviceIds"
        }, {
          "$ref" : "#/components/parameters/startDate"
        }, {
          "$ref" : "#/components/parameters/endDate"
        } ],
        "responses" : {
          "200" : {
            "description" : "available timeslots",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/getTimeslotsResponse"
                },
                "example" : {
                  "success" : true,
                  "timeslots" : [ "2019-01-01T10:30:00", "2019-01-01T11:00:00", "2019-01-01T11:30:00" ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requestError"
                },
                "example" : {
                  "success" : false,
                  "serviceError" : {
                    "statusCode" : 400,
                    "name" : "Bad Request",
                    "message" : "Attribute endDateTime: must not be null"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Generic fault",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/requestError"
                },
                "example" : {
                  "success" : false,
                  "serviceError" : {
                    "statusCode" : 500,
                    "name" : "Internal Server Error",
                    "message" : "An unexpected error occurred"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "appointment" : {
        "type" : "object",
        "required" : [ "source", "shopID", "serviceIds", "appointmentDate", "appointmentTime", "licensePlate", "mileageKm" ],
        "properties" : {
          "source" : {
            "type" : "string",
            "maxLength" : 30,
            "example" : "OLP"
          },
          "shopID" : {
            "type" : "string",
            "example" : "olp101"
          },
          "serviceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "108", "121", "567" ]
          },
          "appointmentDate" : {
            "type" : "string",
            "format" : "date"
          },
          "appointmentTime" : {
            "$ref" : "#/components/schemas/time"
          },
          "licensePlate" : {
            "type" : "string",
            "maxLength" : 8,
            "example" : "LLTZ50"
          },
          "mileageKm" : {
            "type" : "integer",
            "maxLength" : 6,
            "default" : 0,
            "example" : 22785
          },
          "customerInfo" : {
            "$ref" : "#/components/schemas/customerInfo"
          },
          "tyreSize" : {
            "$ref" : "#/components/schemas/tyreSize"
          },
          "tyresOnOtherLocation" : {
            "type" : "boolean",
            "example" : false
          },
          "pickUpAndReturn" : {
            "$ref" : "#/components/schemas/pickUpAndReturn"
          },
          "webshopOrder" : {
            "$ref" : "#/components/schemas/webshopOrder"
          },
          "maintenanceOfferReference" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          }
        }
      },
      "time" : {
        "type" : "string",
        "pattern" : "(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)",
        "example" : "16:30:00"
      },
      "address" : {
        "type" : "object",
        "required" : [ "postalCode", "houseNumber", "houseNumberAddition", "street", "city" ],
        "properties" : {
          "street" : {
            "type" : "string",
            "maxLength" : 30,
            "example" : "Dorpsstraat"
          },
          "houseNumber" : {
            "type" : "integer",
            "maxLength" : 4,
            "example" : 10
          },
          "houseNumberAddition" : {
            "type" : "string",
            "maxLength" : 2,
            "example" : "B"
          },
          "postalCode" : {
            "type" : "string",
            "maxLength" : 8,
            "example" : "1234AB"
          },
          "city" : {
            "type" : "string",
            "maxLength" : 30,
            "example" : "Amsterdam"
          }
        }
      },
      "customerInfo" : {
        "type" : "object",
        "required" : [ "name", "phoneNumber", "email" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "maxLength" : 30,
            "example" : "John Doe"
          },
          "phoneNumber" : {
            "type" : "string",
            "pattern" : "^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$",
            "maxLength" : 20,
            "example" : "+31610112122"
          },
          "email" : {
            "type" : "string",
            "pattern" : "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$",
            "maxLength" : 30,
            "example" : "name@example.com"
          },
          "address" : {
            "$ref" : "#/components/schemas/address"
          }
        }
      },
      "pickUpAndReturn" : {
        "type" : "object",
        "required" : [ "usePickUpAndReturn" ],
        "properties" : {
          "usePickUpAndReturn" : {
            "type" : "boolean",
            "example" : true
          },
          "pickUpTime" : {
            "$ref" : "#/components/schemas/time"
          },
          "returnTime" : {
            "$ref" : "#/components/schemas/time"
          },
          "companyName" : {
            "type" : "string",
            "maxLength" : 30
          },
          "address" : {
            "$ref" : "#/components/schemas/address"
          }
        }
      },
      "tyreSize" : {
        "type" : "object",
        "required" : [ "width", "height", "inches" ],
        "properties" : {
          "width" : {
            "type" : "number",
            "maxLength" : 3
          },
          "height" : {
            "type" : "number",
            "maxLength" : 3
          },
          "inches" : {
            "type" : "number",
            "maxLength" : 2
          }
        }
      },
      "webshopOrder" : {
        "type" : "object",
        "required" : [ "reference", "paid" ],
        "properties" : {
          "reference" : {
            "type" : "string"
          },
          "paid" : {
            "type" : "boolean"
          }
        }
      },
      "serviceError" : {
        "type" : "object",
        "properties" : {
          "statusCode" : {
            "type" : "integer",
            "description" : "The status code as a number"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the error as a \"bumpy case\", i.e. NotFound or  InternalServerError."
          },
          "message" : {
            "type" : "string",
            "description" : "The traditional error message, which should be kept short and  all single line"
          },
          "code" : {
            "type" : "string",
            "description" : "The application error code"
          },
          "details" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "description" : "The application error details"
          }
        },
        "required" : [ "statusCode", "name" ]
      },
      "createAppointmentResponse" : {
        "type" : "object",
        "required" : [ "success" ],
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "appointmentID" : {
            "type" : "string"
          },
          "appointmentDurationMinutes" : {
            "type" : "integer"
          },
          "serviceError" : {
            "$ref" : "#/components/schemas/serviceError"
          }
        }
      },
      "getTimeslotsResponse" : {
        "type" : "object",
        "required" : [ "success" ],
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "availableTimeslots" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "date-time"
            }
          },
          "serviceError" : {
            "$ref" : "#/components/schemas/serviceError"
          }
        }
      },
      "requestError" : {
        "type" : "object",
        "required" : [ "success", "serviceError" ],
        "properties" : {
          "success" : {
            "type" : "boolean",
            "default" : false
          },
          "serviceError" : {
            "$ref" : "#/components/schemas/serviceError"
          }
        }
      }
    },
    "parameters" : {
      "shopId" : {
        "name" : "shopId",
        "in" : "query",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "serviceIds" : {
        "name" : "serviceIds",
        "in" : "query",
        "style" : "form",
        "explode" : false,
        "required" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "example" : "123,345,567"
        }
      },
      "startDate" : {
        "name" : "startDate",
        "in" : "query",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "date"
        }
      },
      "endDate" : {
        "name" : "endDate",
        "in" : "query",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "securitySchemes" : {
      "TokenAuth" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "Ocp-Apim-Subscription-Key"
      }
    }
  }
}