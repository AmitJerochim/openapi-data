{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://api.omnivigil.com/"
  } ],
  "info" : {
    "description" : "The OMNItotal API uses BasicAuth with Token in HTTP header for almost all commands.Don't forget to add \\\"Bearer \\\" before your token in the header!",
    "version" : "1.0.4",
    "title" : "OMNItotal Platform API",
    "contact" : {
      "name" : "OMNItotal Platform",
      "url" : "https://www.omnitotal.com",
      "email" : "support@omnivigil.com"
    },
    "license" : {
      "name" : "OMNItotal License Agreement and Terms of Use",
      "url" : "https://www.omnitotal.com/"
    }
  },
  "tags" : [ {
    "name" : "API Info",
    "description" : " "
  }, {
    "name" : "Token",
    "description" : " "
  }, {
    "name" : "Active calls",
    "description" : " "
  }, {
    "name" : "Account Provisioning",
    "description" : " "
  }, {
    "name" : "Call Log",
    "description" : " "
  }, {
    "name" : "CallOut",
    "description" : "Call-out to destinations"
  }, {
    "name" : "Contact Centre",
    "description" : "Get information about the Contact Centre and its activities"
  }, {
    "name" : "Subscription",
    "description" : " "
  } ],
  "paths" : {
    "/restapi" : {
      "get" : {
        "tags" : [ "API Info" ],
        "summary" : "Get API Versions",
        "description" : "Returns current API version(s) and server info.",
        "operationId" : "getAllVersions",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVersionsResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Failure"
          }
        },
        "x-api-group" : "restapi",
        "x-auth-required" : false,
        "x-throttling-group" : "NoThrottling",
        "x-metered-api" : true,
        "x-metering-group" : "Free",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/{apiVersion}" : {
      "get" : {
        "tags" : [ "API Info" ],
        "summary" : "Get Version Info",
        "description" : "Returns current API version info by apiVersion.",
        "operationId" : "getApiVersion",
        "parameters" : [ {
          "name" : "apiVersion",
          "in" : "path",
          "description" : "API version to be requested, for example 'v1.0'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVersionResponse"
                },
                "examples" : {
                  "response" : {
                    "value" : {
                      "uri" : "https.../restapi/v1.0",
                      "versionString" : "1.0.14",
                      "releaseDate" : "2017-10-31T00:00:00.000Z",
                      "uriString" : "v1.0"
                    }
                  }
                }
              }
            }
          }
        },
        "x-api-group" : "restapi/version",
        "x-auth-required" : false,
        "x-throttling-group" : "NoThrottling",
        "x-metered-api" : true,
        "x-metering-group" : "Free",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/token" : {
      "post" : {
        "tags" : [ "Token" ],
        "summary" : "Log into the API",
        "description" : "Returns a token that will be needed to do about any other call to the API along with a list of accounts for which this token has access.",
        "operationId" : "getToken",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "The username to login in the system",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password for the matching username",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "password"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetToken"
                }
              }
            }
          }
        },
        "x-api-group" : "token",
        "x-auth-required" : false,
        "x-throttling-group" : "NoThrottling",
        "x-metered-api" : true,
        "x-metering-group" : "Free",
        "x-access-level" : "Basic"
      },
      "delete" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Token" ],
        "summary" : "Logout from the API",
        "description" : "Logout from the API and destroy the provided token.",
        "operationId" : "deleteToken",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-api-group" : "token",
        "x-auth-required" : false,
        "x-throttling-group" : "NoThrottling",
        "x-metered-api" : true,
        "x-metering-group" : "Free",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Token" ],
        "summary" : "Get Accounts",
        "description" : "Returns a list of account to which this token has access.",
        "operationId" : "getAccounts",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountListResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "token",
        "x-throttling-group" : "Heavy",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account/{accountId}/call-log" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Call Log" ],
        "summary" : "List all call log records",
        "description" : "Returns filtered call log records.",
        "operationId" : "listCallLogs",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "extensionId",
          "in" : "query",
          "description" : "Extension id (internal identifier). If specified, returns call log for a particular extension only. Cannot be specified together with the phoneNumber filter",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "phoneNumber",
          "in" : "query",
          "description" : "Phone number of a caller/call recipient in E.164 format. If specified, returns all calls (both incoming and outcoming) with the mentioned phone number. Cannot be specified together with the extensionId filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "Inbound", "Outbound" ]
          }
        }, {
          "name" : "sessionId",
          "in" : "query",
          "description" : "Internal identifier of a call session. Cannot be specified along with parameters 'dateTo'/'dateFrom'",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "Voice", "Fax" ]
          }
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "The start datetime for resulting records in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is dateTo minus 24 hours",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "The end datetime for resulting records in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is current time",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Indicates the page number to retrieve. Only positive number values are allowed. The default value is '1'",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "perPage",
          "in" : "query",
          "description" : "Indicates the page size (number of items). If not specified, the value is '100' by default.",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCallLogs"
                }
              }
            }
          }
        }
      }
    },
    "/restapi/v1.0/account/{accountId}/subscription" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Subscription" ],
        "summary" : "List all callbacks you subscribed to",
        "description" : "Returns a list of all the callbacks",
        "operationId" : "listSubscriptions",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListSubscriptions"
                }
              }
            }
          }
        },
        "x-api-group" : "subscription",
        "x-auth-required" : false,
        "x-throttling-group" : "NoThrottling",
        "x-metered-api" : true,
        "x-metering-group" : "Free",
        "x-access-level" : "Basic"
      },
      "put" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Subscription" ],
        "summary" : "Subscribe to a callback",
        "description" : "Subscribe to an event so the needed information is sent to an URI of your choice",
        "operationId" : "addSubscription",
        "callbacks" : {
          "Call events" : {
            "On InboundCallInitiated" : {
              "post" : {
                "requestBody" : {
                  "description" : "Someone is calling one of your numbers",
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "type" : "object",
                        "properties" : {
                          "from" : {
                            "type" : "string",
                            "description" : "The calling phone number or extension",
                            "example" : "+15551234567"
                          },
                          "to" : {
                            "type" : "string",
                            "description" : "The called phone number",
                            "example" : "+15558018888"
                          },
                          "callId" : {
                            "type" : "string",
                            "description" : "The sip call id",
                            "example" : "123abc"
                          }
                        }
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            },
            "On InboundCallEnded" : {
              "post" : {
                "requestBody" : {
                  "description" : "A call to one of your numbers ended",
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "type" : "object",
                        "properties" : {
                          "from" : {
                            "type" : "string",
                            "description" : "The calling phone number or extension",
                            "example" : "+15551234567"
                          },
                          "to" : {
                            "type" : "string",
                            "description" : "The called phone number",
                            "example" : "+15554446822"
                          },
                          "callId" : {
                            "type" : "string",
                            "description" : "The sip call id",
                            "example" : "123abc"
                          }
                        }
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            },
            "On InboundCallExtInitiated" : {
              "post" : {
                "requestBody" : {
                  "description" : "Someone is calling one of your extensions",
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "type" : "object",
                        "properties" : {
                          "from" : {
                            "type" : "string",
                            "description" : "The calling phone number or extension",
                            "example" : "+15551234567"
                          },
                          "to" : {
                            "type" : "string",
                            "description" : "The called extension",
                            "example" : "201"
                          },
                          "toExtensionId" : {
                            "type" : "integer",
                            "description" : "The called extension id",
                            "example" : 304556
                          },
                          "callId" : {
                            "type" : "string",
                            "description" : "The sip call id",
                            "example" : "123abc"
                          }
                        }
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            },
            "On InboundCallExtEnded" : {
              "post" : {
                "requestBody" : {
                  "description" : "A call to one of your extensions ended",
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "type" : "object",
                        "properties" : {
                          "from" : {
                            "type" : "string",
                            "description" : "The calling phone number or extension",
                            "example" : "+15551234567"
                          },
                          "to" : {
                            "type" : "string",
                            "description" : "The called extension",
                            "example" : "201"
                          },
                          "toExtensionId" : {
                            "type" : "integer",
                            "description" : "The called extension id",
                            "example" : 304556
                          },
                          "callId" : {
                            "type" : "string",
                            "description" : "The sip call id",
                            "example" : "123abc"
                          }
                        }
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            },
            "On OutboundCallInitiated" : {
              "post" : {
                "requestBody" : {
                  "description" : "A user called from it's extension",
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "type" : "object",
                        "properties" : {
                          "from" : {
                            "type" : "string",
                            "description" : "The calling extension",
                            "example" : "201"
                          },
                          "fromExtensionId" : {
                            "type" : "integer",
                            "description" : "The calling extension id",
                            "example" : 304556
                          },
                          "to" : {
                            "type" : "string",
                            "description" : "The called phone number or extension",
                            "example" : "+15551234567"
                          },
                          "callId" : {
                            "type" : "string",
                            "description" : "The sip call id",
                            "example" : "123abc"
                          },
                          "personId" : {
                            "type" : "integer",
                            "description" : "The id of the person who did the call (if there is one)",
                            "example" : 304555
                          }
                        }
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            },
            "On OutboundCallEnded" : {
              "post" : {
                "requestBody" : {
                  "description" : "A call from an extension ended",
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "type" : "object",
                        "properties" : {
                          "from" : {
                            "type" : "string",
                            "description" : "The calling extension",
                            "example" : "201"
                          },
                          "fromExtensionId" : {
                            "type" : "integer",
                            "description" : "The calling extension id",
                            "example" : 304556
                          },
                          "to" : {
                            "type" : "string",
                            "description" : "The called phone number or extension",
                            "example" : "+15551234567"
                          },
                          "callId" : {
                            "type" : "string",
                            "description" : "The sip call id",
                            "example" : "123abc"
                          },
                          "personId" : {
                            "type" : "integer",
                            "description" : "The id of the person who did the call (if there is one)",
                            "example" : 304555
                          }
                        }
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "Person events" : {
            "On PersonCreated" : {
              "post" : {
                "requestBody" : {
                  "description" : "A new person as been created",
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "type" : "object",
                        "description" : "Information sent for a PersonCreate event",
                        "properties" : {
                          "personId" : {
                            "type" : "integer",
                            "description" : "The created person id",
                            "example" : 2347545
                          }
                        }
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            },
            "On PersonUpdated" : {
              "post" : {
                "requestBody" : {
                  "description" : "A person as been updated",
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "type" : "object",
                        "description" : "Information sent for a PersonUpdate event",
                        "properties" : {
                          "personId" : {
                            "type" : "integer",
                            "description" : "The updated person id",
                            "example" : 2347545
                          }
                        }
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            },
            "On PersonRemoved" : {
              "post" : {
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "type" : "object",
                        "description" : "Information sent for a PersonRemove event",
                        "properties" : {
                          "personId" : {
                            "type" : "integer",
                            "description" : "The removed person id",
                            "example" : 2347545
                          }
                        }
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          }
        },
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "event",
          "in" : "query",
          "description" : "The event to subscribe to:\n  * InboundCallInitiated - Someone is calling one of your numbers\n  * InboundCallEnded - A call to one of your numbers ended\n  * InboundCallExtInitiated - Someone is calling one of your extensions\n  * InboundCallExtEnded - A call to one of your extensions ended\n  * OutboundCallInitiated - A user called from it's extension\n  * OutboundCallEnded - A call from an extension ended\n  * PersonCreated - A new person as been created\n  * PersonUpdated - A person as been updated\n  * PersonRemoved - A person as been removed\n  \n  <b>For more details see the <i>Callbacks</i> tab</b>\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "InboundCallInitiated", "InboundCallEnded", "InboundCallExtInitiated", "InboundCallExtEnded", "OutboundCallInitiated", "OutboundCallEnded", "PersonCreated", "PersonUpdated", "PersonRemoved" ]
          }
        }, {
          "name" : "method",
          "in" : "query",
          "description" : "The method used to send the information to the subscriber",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "webhook" ]
          }
        }, {
          "name" : "target",
          "in" : "query",
          "description" : "The target where to send the callback information (for a webhook it\\'s an URL)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "on success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "The subscription id",
                      "example" : 34567775
                    }
                  }
                }
              }
            }
          }
        },
        "x-api-group" : "subscription",
        "x-auth-required" : false,
        "x-throttling-group" : "NoThrottling",
        "x-metered-api" : true,
        "x-metering-group" : "Free",
        "x-access-level" : "Basic"
      },
      "delete" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Subscription" ],
        "summary" : "Unsubscribe to a callback",
        "description" : "Unsubscribe to an event",
        "operationId" : "delSubscription",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "The subscription callback to unsubscribe from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-api-group" : "subscription",
        "x-auth-required" : false,
        "x-throttling-group" : "NoThrottling",
        "x-metered-api" : true,
        "x-metering-group" : "Free",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-out" : {
      "post" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "CallOut" ],
        "summary" : "Make CallOut Call",
        "description" : "Makes a 2-leg CallOut call.",
        "operationId" : "makeCallOutCallNew",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the account logged-in within the current session",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "extensionId",
          "in" : "path",
          "description" : "Internal identifier of an extension",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "in" : "query",
          "name" : "to",
          "description" : "The phone number to call out in E.164 format (+{phone number}x{extension})",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCallOutStatusResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "extension/callout",
        "x-throttling-group" : "Heavy",
        "x-metered-api" : true,
        "x-metering-group" : "Time-based",
        "x-app-permission" : "CallOut",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-out/{calloutId}" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "CallOut" ],
        "summary" : "Get Status of CallOut Call",
        "description" : "Returns the status of a 2-leg CallOut call.",
        "operationId" : "getCallOutCallStatusNew",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "extensionId",
          "in" : "path",
          "description" : "Internal identifier of an extension",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "calloutId",
          "in" : "path",
          "description" : "Internal identifier of a CallOut call",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCallOutStatusResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "extension/callout",
        "x-throttling-group" : "Light",
        "x-metered-api" : true,
        "x-metering-group" : "Time-based",
        "x-app-permission" : "CallOut",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account/{accountId}/active-calls" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Active calls" ],
        "summary" : "Get active calls",
        "description" : "The current active calls",
        "operationId" : "listActiveCalls",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Used to filter the results by id, and/or type (Extension, ParkingSpot, QuickQueue)",
          "required" : false,
          "schema" : {
            "type" : "object",
            "default" : null,
            "properties" : {
              "ids" : {
                "type" : "array",
                "description" : "The ids of the Extension, ParkingSpot, QuickQueue involved in the active calls",
                "items" : {
                  "type" : "integer"
                },
                "example" : [ 457778, 543356 ]
              },
              "types" : {
                "type" : "array",
                "description" : "The types (Extension, ParkingSpot, QuickQueue) involved in the active calls",
                "items" : {
                  "type" : "string"
                },
                "example" : [ "Extension", "ParkingSpot" ]
              }
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetActiveCallsResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "active-calls"
      }
    },
    "/restapi/v1.0/account/{accountId}/active-calls/{srcCallId}/bridge" : {
      "post" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Active calls" ],
        "summary" : "Bridge two active calls",
        "description" : "Bridge two active calls together",
        "operationId" : "bridgeActiveCalls",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "srcCallId",
          "in" : "path",
          "description" : "The id of the call to bridge",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destCallId",
          "in" : "query",
          "description" : "The id of the call to bridge with srcCallId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-api-group" : "active-calls"
      }
    },
    "/restapi/v1.0/account/{accountId}/active-calls/{callId}/hangup" : {
      "post" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Active calls" ],
        "summary" : "Hangup an active call",
        "description" : "Ends an active call",
        "operationId" : "hangupActiveCall",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "callId",
          "in" : "path",
          "description" : "The id of the call to hangup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-api-group" : "active-calls"
      }
    },
    "/restapi/v1.0/account/{accountId}/active-calls/{callId}/transfer" : {
      "post" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Active calls" ],
        "summary" : "Transfer an active call",
        "description" : "Transfer an active call to another destination",
        "operationId" : "transferActiveCall",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "callId",
          "in" : "path",
          "description" : "The id of the call to transfer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destId",
          "in" : "query",
          "description" : "The id of the destination (Extension, ParkingSpot, QuickQueue, etc.)",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-api-group" : "active-calls"
      }
    },
    "/restapi/v1.0/account/{accountId}/active-calls/{callId}/transfer-with-park" : {
      "post" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Active calls" ],
        "summary" : "Transfer an active call with park",
        "description" : "Transfer an active call to another destination and park it if the destination does not answer",
        "operationId" : "transferActiveCallWithPark",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "callId",
          "in" : "path",
          "description" : "The id of the call to transfer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destId",
          "in" : "query",
          "description" : "The id of the destination Extension",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-api-group" : "active-calls"
      }
    },
    "/restapi/v1.0/account/{accountId}/active-calls/{callId}/unhold" : {
      "post" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Active calls" ],
        "summary" : "Bring back an active call on hold",
        "description" : "If an active call is on hold, The call will be brought back to normal",
        "operationId" : "unholdActiveCall",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "callId",
          "in" : "path",
          "description" : "The id of the call to unhold",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-api-group" : "active-calls"
      }
    },
    "/restapi/v1.0/account/{accountId}/extension" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Account Provisioning" ],
        "summary" : "Get Extensions",
        "description" : "Returns the list of extensions created for a particular account. All types of extensions are included in this list.",
        "operationId" : "listExtensions",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetExtensionListResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "extension",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadExtensions",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Account Provisioning" ],
        "summary" : "Get Extension",
        "description" : "Returns an extensions created for a particular account.",
        "operationId" : "getExtension",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "extensionId",
          "in" : "path",
          "description" : "The id of the extension",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetExtensionResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "extension",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadExtensions",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account/{accountId}/parking-spot" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Account Provisioning" ],
        "summary" : "Get Parkings on extension",
        "description" : "Returns the list of parkings on extension created for a particular account.",
        "operationId" : "listParkingSpots",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetParkingSpotsListResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "parkingSpot",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadParkingSpots",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account/{accountId}/parking-spot/{parkingSpotId}" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Account Provisioning" ],
        "summary" : "Get Parking on extension",
        "description" : "Returns a parking on extension created for a particular account.",
        "operationId" : "getParkingSpot",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "parkingSpotId",
          "in" : "path",
          "description" : "The id of the parking on extension",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetParkingSpotResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "parkingSpot",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadParkingSpots",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account/{accountId}/quick-queue" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Account Provisioning" ],
        "summary" : "Get quick queues",
        "description" : "Returns the list of quick queues created for a particular account.",
        "operationId" : "listQuickQueues",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetParkingSpotsListResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "quickQueue",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadQuickQueues",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/account/{accountId}/quick-queue/{quickQueueId}" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Account Provisioning" ],
        "summary" : "Get quick queue",
        "description" : "Returns a quick queue created for a particular account.",
        "operationId" : "getQuickQueue",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "quickQueueId",
          "in" : "path",
          "description" : "The id of the quick queue",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetParkingSpotResponse"
                }
              }
            }
          }
        },
        "x-api-group" : "quickQueue",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadQuickQueues",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/accounts/{accountId}/contact-centres/{contactCentreId}/queues" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Get contact queues",
        "description" : "Returns the list of contact queues created for a particular account.",
        "operationId" : "listContactQueues",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactCentreQueue"
                  }
                }
              }
            }
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/accounts/{accountId}/contact-centres/{contactCentreId}/queues/{queueId}" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Get contact queue",
        "description" : "Returns the details of a contact queue.",
        "operationId" : "getContactQueue",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "queueId",
          "in" : "path",
          "description" : "The id of the contact queue",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactCentreQueue"
                }
              }
            }
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/accounts/{accountId}/contact-centres/{contactCentreId}/agents" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Get agents",
        "description" : "Returns the list of agents created for a particular account.",
        "operationId" : "listAgents",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactCentreAgent"
                  }
                }
              }
            }
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/accounts/{accountId}/contact-centres/{contactCentreId}/agents/{agentId}" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Get agent",
        "description" : "Returns the details of an agent",
        "operationId" : "getAgent",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "agentId",
          "in" : "path",
          "description" : "The id of the agent",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactCentreAgent"
                }
              }
            }
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      },
      "put" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Update agent",
        "description" : "Sets the details of an agent",
        "operationId" : "updateAgent",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "agentId",
          "in" : "path",
          "description" : "The id of the agent",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "required" : true,
          "description" : "The new status to set for the agent",
          "schema" : {
            "type" : "string",
            "enum" : [ "Available", "Work", "Break", "SuperviserApproved" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success"
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/accounts/{accountId}/contact-centres/{contactCentreId}/agents/{agentId}/assignments" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Get agent's assignments",
        "description" : "Returns the list of assignments for an agent",
        "operationId" : "getAgentAssignments",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "agentId",
          "in" : "path",
          "description" : "The id of the agent",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of results to return",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset of the first result returned",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Unix timestamp. Only get assignments with timestamp >= start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "Unix timestamp. Only get assignments with timestamp <= end",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactCentreAssignment"
                  }
                }
              }
            }
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/accounts/{accountId}/contact-centres/{contactCentreId}/activities" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Get contact activities",
        "description" : "Returns the list of current and past activities in the Contact Centre. The list can be filtered using query parameters. Returned activities will match all filtering criterias.",
        "operationId" : "listContactActivities",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "ids",
          "in" : "query",
          "description" : "Return only the activities with the specified ids",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of activities to return",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset of the first activity returned",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Return only the activities that have the specified status",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactCentreActivity"
                  }
                }
              }
            }
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/accounts/{accountId}/contact-centres/{contactCentreId}/activities/{activityId}" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Get contact activity",
        "description" : "Returns the details of an activity",
        "operationId" : "getContactActivity",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "activityId",
          "in" : "path",
          "description" : "The id of the contact activity",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactCentreActivity"
                }
              }
            }
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/accounts/{accountId}/contact-centres/{contactCentreId}/activities/{activityId}/assignments" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Get activity assignments",
        "description" : "Returns a list of assignments for a particular contact activity",
        "operationId" : "getContactActivityAssignments",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "activityId",
          "in" : "path",
          "description" : "The id of the contact activity",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of results to return",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset of the first result returned",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "timestampAfter",
          "in" : "query",
          "description" : "Unix timestamp. Only get assignments with timestamp >= timestampAfter",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "timestampBefore",
          "in" : "query",
          "description" : "Unix timestamp. Only get assignments with timestamp <= timestampBefore",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactCentreAssignment"
                  }
                }
              }
            }
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      }
    },
    "/restapi/v1.0/accounts/{accountId}/contact-centres/{contactCentreId}/activities/{activityId}/assignments/{assignmentId}" : {
      "get" : {
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "tags" : [ "Contact Centre" ],
        "summary" : "Get assignment info",
        "description" : "Returns the details of an assignment",
        "operationId" : "getContactActivityAssignment",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Internal identifier of an OMNIVIGIL account or tilde (~) to indicate the primary account associated to the given authentication token",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : null
          }
        }, {
          "name" : "contactCentreId",
          "in" : "path",
          "description" : "Id of the Contact Centre",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "activityId",
          "in" : "path",
          "description" : "The id of the contact activity",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "assignmentId",
          "in" : "path",
          "description" : "The id of the assignment",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactCentreAssignment"
                }
              }
            }
          }
        },
        "x-api-group" : "contactCentre",
        "x-throttling-group" : "Medium",
        "x-metered-api" : true,
        "x-metering-group" : "System",
        "x-app-permission" : "ReadAccounts",
        "x-user-permission" : "ReadContactCentre",
        "x-access-level" : "Basic"
      }
    }
  },
  "x-auth-required" : true,
  "x-blacklisting-strategy" : "Off",
  "x-internal-api" : false,
  "x-metered-api" : true,
  "x-metering-group" : "System",
  "x-service-interface" : "rest",
  "x-service-name" : "pas",
  "x-service-version" : "v1",
  "x-tagGroups" : [ {
    "name" : "General",
    "tags" : [ "API Info" ]
  }, {
    "name" : "Data",
    "tags" : [ "Call Log" ]
  }, {
    "name" : "Voice",
    "tags" : [ "CallOut", "Presence" ]
  }, {
    "name" : "Configuration",
    "tags" : [ "Call Handling Settings", "User Settings", "Company Settings" ]
  }, {
    "name" : null,
    "tags" : [ "Reporting" ]
  }, {
    "name" : "Telephony API",
    "tags" : [ "VoIPCalling" ]
  } ],
  "components" : {
    "schemas" : {
      "GetToken" : {
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "The token needed to make almost any API query"
          },
          "accounts" : {
            "type" : "array",
            "description" : "Accounts that are accessible with this token",
            "items" : {
              "$ref" : "#/components/schemas/Account"
            }
          }
        },
        "example" : {
          "token" : "12345678abcdefg"
        },
        "type" : "object"
      },
      "Account" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Internal account identifier that is used in the API uris"
          }
        },
        "example" : {
          "id" : 1234567,
          "Name" : "Zone name"
        },
        "type" : "object"
      },
      "GetAccountListResponse" : {
        "properties" : {
          "accounts" : {
            "type" : "array",
            "description" : "Accounts that are accessible for the current token",
            "items" : {
              "$ref" : "#/components/schemas/Account"
            }
          }
        },
        "type" : "object"
      },
      "GetActiveCallsResponse" : {
        "properties" : {
          "Extension" : {
            "type" : "array",
            "description" : "List of active calls involving an extension",
            "items" : {
              "type" : "object",
              "example" : {
                "4556678" : {
                  "id" : "ABC4EDC4",
                  "local" : 15557859893,
                  "remove" : 202,
                  "state" : "confirmed",
                  "ts" : 344567678
                },
                "5889988" : {
                  "id" : "ABC4E4G4",
                  "local" : 15555882255,
                  "remove" : 432,
                  "state" : "terminated",
                  "ts" : 344567655
                }
              }
            }
          },
          "ParkingSpot" : {
            "type" : "array",
            "description" : "List of active calls involving a parking on extension",
            "items" : {
              "type" : "object"
            },
            "example" : {
              "4556670" : {
                "id" : "FGR4455FS",
                "local" : 15554582568,
                "remove" : 558,
                "state" : "trying",
                "ts" : 344567658
              }
            }
          },
          "QuickQueue" : {
            "type" : "array",
            "description" : "List of active calls involving a quick queue",
            "items" : {
              "type" : "object"
            },
            "example" : {
              "4556643" : {
                "id" : "DD3D4564A",
                "local" : 15558487896,
                "remove" : 677,
                "state" : "early",
                "ts" : 344567678
              }
            }
          }
        }
      },
      "ListCallLogs" : {
        "properties" : {
          "records" : {
            "type" : "array",
            "description" : "List of call log records",
            "items" : {
              "$ref" : "#/components/schemas/CallLogRecord"
            }
          },
          "paging" : {
            "type" : "object",
            "description" : "Information on paging",
            "properties" : {
              "page" : {
                "type" : "integer",
                "description" : "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)"
              },
              "perPage" : {
                "type" : "integer",
                "description" : "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied"
              },
              "totalPages" : {
                "type" : "integer",
                "description" : "The total number of pages in a dataset. May be omitted for some resources due to performance reasons"
              },
              "totalElements" : {
                "type" : "integer",
                "description" : "The total number of elements in a dataset. May be omitted for some resource due to performance reasons"
              }
            }
          }
        },
        "example" : {
          "records" : [ {
            "sessionId" : 1,
            "from" : {
              "phoneNumber" : "+15555555555",
              "extensionId" : null,
              "extensionNumber" : null,
              "location" : "Canada"
            },
            "to" : {
              "phoneNumber" : null,
              "extensionId" : 1234567,
              "extensionNumber" : 202,
              "location" : "Canada"
            },
            "type" : "Voice",
            "direction" : "Inbound",
            "startTime" : "2016-03-10T18:07:52.534Z",
            "duration" : 100
          } ],
          "paging" : {
            "page" : 1,
            "perPage" : 100,
            "totalPages" : 3,
            "totalElements" : 288
          }
        },
        "type" : "object"
      },
      "CallLogRecord" : {
        "properties" : {
          "sessionId" : {
            "type" : "integer",
            "description" : "Internal identifier of a call session"
          },
          "from" : {
            "$ref" : "#/components/schemas/CallerInfo"
          },
          "to" : {
            "$ref" : "#/components/schemas/CallerInfo"
          },
          "type" : {
            "type" : "string",
            "description" : "Call type",
            "enum" : [ "Voice", "Fax" ]
          },
          "direction" : {
            "type" : "string",
            "description" : "Call direction",
            "enum" : [ "Inbound", "Outbound" ]
          },
          "startTime" : {
            "type" : "string",
            "description" : "The call start datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z"
          },
          "duration" : {
            "type" : "integer",
            "description" : "Call duration in seconds"
          }
        },
        "type" : "object"
      },
      "CallerInfo" : {
        "properties" : {
          "phoneNumber" : {
            "type" : "string",
            "description" : "Phone number of a party. The phone numbers are all stored in E.164 format. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMSes."
          },
          "extensionId" : {
            "type" : "integer",
            "description" : "Extension id. This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message.  It corresponds to an extension identifier."
          },
          "location" : {
            "type" : "string",
            "description" : "Contains country location"
          }
        },
        "example" : {
          "phoneNumber" : "+15551239876",
          "extensionNumber" : null,
          "location" : "Canada"
        },
        "type" : "object"
      },
      "ListSubscriptions" : {
        "properties" : {
          "subscriptions" : {
            "type" : "array",
            "description" : "The list of active subscriptions",
            "items" : {
              "$ref" : "#/components/schemas/Subscription"
            }
          }
        },
        "example" : {
          "subscriptions" : [ {
            "id" : 345212,
            "event" : "InboundCall",
            "target" : "mytoken12345",
            "method" : "FCM"
          }, {
            "id" : 345211,
            "event" : "PersonCreated",
            "target" : "https://mysite.com/userHungUp",
            "method" : "webhook"
          } ]
        },
        "type" : "object"
      },
      "Subscription" : {
        "properties" : {
          "id" : {
            "description" : "Subscription identifier that can be used to delete a subscription.",
            "type" : "string"
          },
          "event" : {
            "description" : "Event to which we are subscribed",
            "type" : "string"
          },
          "uri" : {
            "description" : "The callback URI where this event will be delivered (webhook) or the client token (FCM).",
            "type" : "string"
          }
        },
        "example" : {
          "id" : 34243243,
          "event" : "onCall",
          "uri" : "https://yourapp.com/",
          "fcm" : false
        },
        "type" : "object"
      },
      "GetVersionsResponse" : {
        "properties" : {
          "uri" : {
            "type" : "string",
            "description" : "Canonical URI of the API version"
          },
          "apiVersions" : {
            "type" : "array",
            "description" : "Full API version information: uri, number, release date",
            "items" : {
              "$ref" : "#/components/schemas/VersionInfo"
            }
          },
          "serverRevision" : {
            "type" : "string",
            "description" : "Server revision"
          }
        },
        "example" : {
          "uri" : "uri",
          "apiVersions" : [ {
            "versionString" : "versionString",
            "releaseDate" : "releaseDate",
            "uriString" : "uriString",
            "uri" : "uri"
          }, {
            "versionString" : "versionString",
            "releaseDate" : "releaseDate",
            "uriString" : "uriString",
            "uri" : "uri"
          } ],
          "serverRevision" : "serverRevision"
        },
        "type" : "object"
      },
      "GetVersionResponse" : {
        "properties" : {
          "uri" : {
            "type" : "string",
            "description" : "Canonical URI of the version info resource"
          },
          "versionString" : {
            "type" : "string",
            "description" : "Version of the OMNItotal REST API"
          },
          "releaseDate" : {
            "type" : "string",
            "description" : "Release date of this version"
          },
          "uriString" : {
            "type" : "string",
            "description" : "URI part determining the current version"
          }
        },
        "example" : {
          "uri" : "https://api.omnivigil.com/",
          "versionString" : "versionString",
          "releaseDate" : "releaseDate",
          "uriString" : "uriString"
        },
        "type" : "object"
      },
      "VersionInfo" : {
        "properties" : {
          "uri" : {
            "type" : "string",
            "description" : "Canonical URI of API versions"
          },
          "versionString" : {
            "type" : "string",
            "description" : "Version of the OMNItotal REST API"
          },
          "releaseDate" : {
            "type" : "string",
            "description" : "Release date of this version"
          },
          "uriString" : {
            "type" : "string",
            "description" : "URI part determining the current version"
          }
        },
        "example" : {
          "versionString" : "versionString",
          "releaseDate" : "releaseDate",
          "uriString" : "uriString",
          "uri" : "uri"
        },
        "type" : "object"
      },
      "GetCallOutStatusResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Internal identifier of a CallOut call"
          },
          "uri" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/CallOutStatusInfo"
          }
        },
        "example" : {
          "id" : "id",
          "status" : "In progress"
        }
      },
      "CallOutStatusInfo" : {
        "type" : "object",
        "properties" : {
          "callStatus" : {
            "type" : "string",
            "description" : "Status of a call",
            "enum" : [ "Invalid", "Success", "InProgress", "Busy", "NoAnswer", "Rejected", "GenericError", "Finished", "InternationalDisabled", "DestinationBlocked", "NotEnoughFunds", "NoSuchUser" ]
          },
          "callerStatus" : {
            "type" : "string",
            "description" : "Status of a calling party",
            "enum" : [ "Invalid", "Success", "InProgress", "Busy", "NoAnswer", "Rejected", "GenericError", "Finished", "InternationalDisabled", "DestinationBlocked", "NotEnoughFunds", "NoSuchUser" ]
          },
          "calleeStatus" : {
            "type" : "string",
            "description" : "Status of a called party",
            "enum" : [ "Invalid", "Success", "InProgress", "Busy", "NoAnswer", "Rejected", "GenericError", "Finished", "InternationalDisabled", "DestinationBlocked", "NotEnoughFunds", "NoSuchUser" ]
          }
        },
        "example" : {
          "calleeStatus" : "Invalid",
          "callStatus" : "Invalid",
          "callerStatus" : "Invalid"
        }
      },
      "GetExtensionListResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The id of the extension (used in the URI)"
          },
          "extensionNumber" : {
            "type" : "integer",
            "description" : "The extension number"
          },
          "personId" : {
            "type" : "integer",
            "description" : "The id of the Person the extension is assigned to"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the extension"
          }
        },
        "example" : [ {
          "id" : 3987654,
          "extensionNumber" : 201,
          "personId" : 2987654,
          "name" : "FirstName LastName"
        }, {
          "id" : 3123456,
          "extensionNumber" : 202,
          "personId" : 2123456,
          "name" : "FirstName LastName"
        } ]
      },
      "GetExtensionResponse" : {
        "type" : "object",
        "properties" : {
          "extensionNumber" : {
            "type" : "integer",
            "description" : "The extension number"
          },
          "personId" : {
            "type" : "integer",
            "description" : "The id of the Person the extension is assigned to"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the extension"
          }
        },
        "example" : {
          "extensionNumber" : 201,
          "personId" : 2987654,
          "name" : "FirstName LastName"
        }
      },
      "GetParkingSpotsListResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "number" : {
            "type" : "integer",
            "description" : "The number to contact it"
          },
          "name" : {
            "type" : "string"
          }
        },
        "example" : [ {
          "id" : 3987654,
          "number" : 201,
          "name" : "Example name 1"
        }, {
          "id" : 3123456,
          "number" : 202,
          "name" : "Example name 2"
        } ]
      },
      "GetParkingSpotResponse" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "description" : "The number to contact it"
          },
          "name" : {
            "type" : "string"
          }
        },
        "example" : {
          "number" : 201,
          "name" : "Example name"
        }
      },
      "ContactCentreQueue" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 3571917
          },
          "name" : {
            "type" : "string",
            "example" : "SupportQueue"
          },
          "members" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "example" : [ 3571926, 3571931 ]
            }
          }
        }
      },
      "ContactCentreAgent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 3571926
          },
          "name" : {
            "type" : "string",
            "example" : "John Doe"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "Disconnected", "Startup", "Available", "Work", "Break", "SuperviserApproved", "Call", "OutboundCall", "AfterCallWork" ],
            "description" : "Current status of the agent",
            "example" : "Available"
          },
          "stats" : {
            "type" : "object",
            "properties" : {
              "calls" : {
                "type" : "object",
                "properties" : {
                  "inbound" : {
                    "type" : "object",
                    "properties" : {
                      "answered" : {
                        "type" : "integer",
                        "description" : "Number of calls answered by the agent in the last 24h"
                      },
                      "missed" : {
                        "type" : "integer",
                        "description" : "Number of calls missed by the agent in the last 24h"
                      },
                      "totalTime" : {
                        "type" : "integer",
                        "description" : "Number of seconds spent in calls in the last 24h"
                      },
                      "maxTime" : {
                        "type" : "integer",
                        "description" : "Longest call answered by the agent in the last 24h"
                      },
                      "averageTime" : {
                        "type" : "integer",
                        "description" : "Average number of seconds of calls answered by the agent in the last 24h"
                      }
                    }
                  },
                  "outbound" : {
                    "type" : "object",
                    "properties" : {
                      "nbCalls" : {
                        "type" : "integer",
                        "description" : "Number of outbound calls made by the agent"
                      },
                      "totalTime" : {
                        "type" : "integer",
                        "description" : "Number of seconds spent on outbound calls in the last 24h"
                      },
                      "maxTime" : {
                        "type" : "integer",
                        "description" : "Duration (in seconds) of the longest outbound call made by the agent in the last 24h"
                      },
                      "averageTime" : {
                        "type" : "integer",
                        "description" : "Average duration of outbound calls made by the agent in the last 24h"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ContactCentreActivity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Id of the activity"
          },
          "queueId" : {
            "type" : "integer",
            "description" : "Id of the queue in which this activity is"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "call" ],
            "description" : "Type of activity"
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "inbound", "outbound" ],
            "description" : "Direction of the activity (inbound or outbound)"
          },
          "contact" : {
            "type" : "string",
            "description" : "Contact information"
          },
          "creationTime" : {
            "type" : "string",
            "description" : "Unix timestamp when the activity entered the queue"
          },
          "waitDuration" : {
            "type" : "integer",
            "description" : "How many seconds the contact waited before an agent was assigned to the activity"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "waiting", "pending", "assigned", "abandoned", "completed" ],
            "description" : "Current status of the activity"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Priority given to the activity"
          },
          "skill" : {
            "type" : "integer",
            "description" : "Id of the skill required to complete the activity"
          },
          "language" : {
            "type" : "string",
            "description" : "Language of the activity"
          }
        },
        "example" : {
          "id" : 1063829,
          "queueId" : 328015,
          "type" : "call",
          "contact" : "+15146879966",
          "creationTime" : 1573135967,
          "waitDuration" : null,
          "status" : "pending",
          "priority" : 1,
          "skill" : "Sales",
          "language" : "fr"
        }
      },
      "ContactCentreAssignment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Id of the assignment"
          },
          "activityId" : {
            "type" : "integer",
            "description" : "Id of the activity assigned to an agent"
          },
          "agentId" : {
            "type" : "integer",
            "description" : "Id of the agent assigned to the activity"
          },
          "action" : {
            "type" : "string",
            "description" : "Action taken",
            "enum" : [ "requested", "accepted", "rejected", "reassigned", "timeout", "completed" ]
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "Unix timestamp when the action happened"
          }
        }
      }
    },
    "securitySchemes" : {
      "Bearer" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    }
  },
  "security" : [ {
    "Bearer" : [ ]
  } ]
}