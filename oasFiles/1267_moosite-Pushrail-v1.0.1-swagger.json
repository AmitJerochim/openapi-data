{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Pushrail API for publishers - JSON Feed",
    "description" : "This is our API for publishers. You can find out more about Pushrail at [https://pushrail.com](https://pushrail.com)",
    "termsOfService" : "http://pushrail.com/terms/",
    "contact" : {
      "email" : "hello@pushrail.com"
    },
    "version" : "v1.0.1"
  },
  "servers" : [ {
    "url" : "http://pushrail.com/api/v1"
  }, {
    "url" : "https://pushrail.com/api/v1"
  } ],
  "tags" : [ {
    "name" : "publishers",
    "description" : "Pushrail API for publishers. Remember to authorize your requests with the data we've just provided you."
  } ],
  "paths" : {
    "/publisher" : {
      "get" : {
        "tags" : [ "publishers" ],
        "summary" : "Hello world for publishers",
        "description" : "Allows you to check the API and test the authentication",
        "operationId" : "getIndex",
        "responses" : {
          "200" : {
            "description" : "ok response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HelloResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "publisher_id" : [ ]
        }, {
          "api_key" : [ ]
        } ]
      }
    },
    "/publisher/campaigns" : {
      "get" : {
        "tags" : [ "publishers" ],
        "summary" : "Get available campaigns JSON FEED",
        "description" : "Returns an array of available campaigns that can be sent in a webpush notification to your provided subscriptor. Campaigns will be sorted by bid (descending). For fastest response please use the HTTP protocol instead of HTTPS.",
        "operationId" : "getCampaigns",
        "parameters" : [ {
          "name" : "ip",
          "in" : "query",
          "description" : "Web-push subscription IP address. IPv4 or IPv6.",
          "schema" : {
            "type" : "string",
            "example" : "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
          },
          "required" : true
        }, {
          "name" : "ua",
          "in" : "query",
          "description" : "Web-push subscription user agent string.",
          "schema" : {
            "type" : "string",
            "example" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
          },
          "required" : true
        }, {
          "name" : "ref",
          "in" : "query",
          "description" : "Web-push subscription referer url. The website base url which is subscribed to. Must be a valid url.",
          "schema" : {
            "type" : "string",
            "example" : "https://www.your-website.com"
          },
          "required" : true
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "(Optional) Related keywords to try to get a suitable campaign [0-128 chars]",
          "schema" : {
            "type" : "string",
            "example" : "platform games"
          }
        }, {
          "name" : "sid",
          "in" : "query",
          "description" : "(Optional) Publisher sub-id. Allows you get custom stats per each one submitted. Do not overuse it. Do not send random sub-ids.",
          "schema" : {
            "type" : "string",
            "example" : "my-website-1"
          }
        }, {
          "name" : "icon",
          "in" : "query",
          "description" : "(Optional) Only retrieve campaigns with icon? Defaults to false (recommended)",
          "schema" : {
            "type" : "boolean",
            "example" : false
          }
        }, {
          "name" : "timeout",
          "in" : "query",
          "description" : "(Optional) Max time in seconds for retrieving campaigns. Defaults to 2.0 [0.5 - 3.0]",
          "required" : false,
          "schema" : {
            "type" : "number",
            "format" : "float",
            "example" : 2.0,
            "minimum" : 0.5,
            "maximum" : 3
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "(Optional) Max number of campaigns to retrieve. Defaults to 2 [1 - 5]",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2,
            "minimum" : 1,
            "maximum" : 8
          }
        }, {
          "name" : "test",
          "in" : "query",
          "description" : "(Optional) Retrieve UNPAID TEST campaigns. Used only for development. Defaults to false.",
          "schema" : {
            "type" : "boolean",
            "example" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CampaignsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request error / Invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "publisher_id" : [ ]
        }, {
          "api_key" : [ ]
        } ]
      }
    },
    "/publisher/report" : {
      "get" : {
        "tags" : [ "publishers" ],
        "summary" : "Get earnings report",
        "description" : "Returns an object of days with the earnings report break down by the specified field. Omit any parameter to get the current month total earnings. First day marked as 'TOTAL' is the total of the month.",
        "operationId" : "getReport",
        "parameters" : [ {
          "name" : "month",
          "in" : "query",
          "description" : "(Optional) Report month. Defaults to current month if not specified.",
          "schema" : {
            "type" : "string",
            "example" : "2020-05"
          },
          "required" : false
        }, {
          "name" : "breakdown",
          "in" : "query",
          "description" : "(Optional) Report breakdown. Defaults to none per day.",
          "schema" : {
            "type" : "string",
            "enum" : [ "none", "country", "os", "browser" ],
            "example" : "none"
          },
          "required" : false
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "(Optional) Include data matching the filter.\n\nAdd multiple (or) filters separated by |\n\nAdd multiple (must) filters separated by comma.\n",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "examples" : {
            "all" : {
              "value" : [ "" ]
            },
            "country-one" : {
              "value" : [ "country-es" ]
            },
            "country-many" : {
              "value" : [ "country-es|country-mx|country-us" ]
            },
            "os-one" : {
              "value" : [ "os-apple" ]
            },
            "browser-one" : {
              "value" : [ "os-chrome" ]
            },
            "multiple-and-filters" : {
              "value" : [ "country-es|country-mx|country-us", "os-windows", "browser-chrome" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "legacy",
          "in" : "query",
          "description" : "(Optional) Legacy mode. For retrieving reports with data older than 2020-05-05. Defaults to false",
          "schema" : {
            "type" : "boolean",
            "example" : false
          },
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request error / Invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "publisher_id" : [ ]
        }, {
          "api_key" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "BaseResponse" : {
        "type" : "object",
        "properties" : {
          "statusType" : {
            "type" : "string",
            "example" : "OK"
          },
          "statusCode" : {
            "type" : "integer",
            "example" : 200
          },
          "success" : {
            "type" : "boolean"
          },
          "date" : {
            "type" : "object",
            "properties" : {
              "dateStart" : {
                "type" : "string",
                "example" : "2017-01-01 15:01:02"
              },
              "dateEnd" : {
                "type" : "string",
                "example" : "2017-01-01 15:01:03"
              },
              "serverDate" : {
                "type" : "string",
                "example" : "2017-01-01 15:01:03"
              }
            }
          }
        }
      },
      "ErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "statusType" : {
              "type" : "string",
              "example" : "ERROR_TYPE"
            },
            "statusCode" : {
              "type" : "integer",
              "example" : 0
            },
            "success" : {
              "type" : "boolean",
              "example" : false
            },
            "errorMessage" : {
              "type" : "string",
              "example" : "Sample error message"
            },
            "errorCode" : {
              "type" : "string",
              "example" : "0"
            },
            "errorType" : {
              "type" : "string",
              "example" : "ERROR_TYPE"
            }
          }
        } ]
      },
      "SuccessResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "apiVersion" : {
              "type" : "number",
              "example" : 1
            },
            "actionPerformed" : {
              "type" : "string",
              "nullable" : true,
              "example" : ""
            },
            "tookms" : {
              "type" : "integer",
              "example" : 230
            },
            "successMessage" : {
              "type" : "string",
              "nullable" : true,
              "example" : ""
            }
          }
        } ]
      },
      "HelloResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SuccessResponse"
        }, {
          "type" : "object",
          "properties" : {
            "actionPerformed" : {
              "example" : "hi-publisher"
            },
            "successMessage" : {
              "type" : "string",
              "example" : "Welcome to the Pushrail API for publishers"
            },
            "data" : {
              "type" : "object",
              "properties" : {
                "authPublisherOk" : {
                  "type" : "boolean",
                  "description" : "Is the provided publisher_id ok?"
                },
                "authKeyOk" : {
                  "type" : "boolean",
                  "description" : "Is the provided api_key ok?"
                },
                "methodsAvailable" : {
                  "type" : "object",
                  "nullable" : true
                }
              }
            }
          }
        } ]
      },
      "CampaignsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SuccessResponse"
        }, {
          "type" : "object",
          "properties" : {
            "actionPerformed" : {
              "type" : "string",
              "example" : "campaigns-search"
            },
            "successMessage" : {
              "type" : "string",
              "example" : "Here are your campaings!"
            },
            "data" : {
              "type" : "object",
              "properties" : {
                "campaigns" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Campaign"
                  }
                }
              }
            }
          }
        } ]
      },
      "ReportResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SuccessResponse"
        }, {
          "type" : "object",
          "properties" : {
            "actionPerformed" : {
              "type" : "string",
              "example" : "report"
            },
            "successMessage" : {
              "type" : "string",
              "example" : "Here is your report!"
            },
            "data" : {
              "type" : "object",
              "properties" : {
                "queryDateFrom" : {
                  "type" : "string"
                },
                "queryDateTo" : {
                  "type" : "string"
                },
                "queryBreakdown" : {
                  "type" : "string"
                },
                "queryLegacyMode" : {
                  "type" : "boolean"
                },
                "summary" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/ReportDayBucket"
                  }
                },
                "report" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/ReportDay"
                  }
                }
              }
            }
          }
        } ]
      },
      "Campaign" : {
        "type" : "object",
        "properties" : {
          "bid" : {
            "type" : "number",
            "format" : "float",
            "example" : 0.0042408,
            "description" : "NET CPC bid in USD currency"
          },
          "campaignId" : {
            "type" : "string",
            "example" : "pubcpg.MDE5MzU5YzljdjY2MzRm",
            "description" : "Pushrail campaign unique id"
          },
          "campaignTitle" : {
            "type" : "string",
            "nullable" : true
          },
          "campaignBody" : {
            "type" : "string",
            "nullable" : true
          },
          "urlClick" : {
            "type" : "string",
            "description" : "Destination url when the subscriptor clicks on the web push notification. It will track the clicks to calculate the revenue. Validations will be performed in order to prevent fraud."
          },
          "urlImage" : {
            "type" : "string",
            "description" : "Image url for the web push notification."
          },
          "urlIcon" : {
            "type" : "string",
            "description" : "Icon url for the web push notification if not-null. It will be used to track the displays. Make sure you ALWAYS send the icon.",
            "nullable" : true
          },
          "isSimulatedCampaign" : {
            "type" : "boolean",
            "description" : "Is it a test campaign? Will be true if test campaigns were requested. These kind of campaigns wont be paid.",
            "example" : false
          }
        }
      },
      "ReportDay" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/ReportDayBucket"
        }
      },
      "ReportDayBucket" : {
        "type" : "object",
        "properties" : {
          "displays" : {
            "type" : "number",
            "format" : "int",
            "description" : "Displays"
          },
          "clicks" : {
            "type" : "number",
            "format" : "int",
            "description" : "Valid clicks"
          },
          "bad_clicks" : {
            "type" : "number",
            "format" : "int",
            "description" : "Bad clicks"
          },
          "usd_total" : {
            "type" : "string",
            "example" : "10.42",
            "description" : "Total earnings in USD"
          },
          "usd_avg" : {
            "type" : "string",
            "example" : "0.005",
            "description" : "Total earnings average per click in USD"
          },
          "ctr" : {
            "type" : "string",
            "example" : "0.005",
            "description" : "Click through ratio percentage (clicks/displays) * 100"
          }
        }
      }
    },
    "securitySchemes" : {
      "publisher_id" : {
        "type" : "apiKey",
        "name" : "publisher_id",
        "in" : "query"
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "query"
      }
    }
  }
}