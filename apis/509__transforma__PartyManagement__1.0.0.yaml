openapi: 3.0.0
info:
  title: Party Management
  description: "## TMF API Reference : TMF 632 - Party \n \n\n ### Release : 19.0 \n\n\
    
    The party API provides standardized mechanism for party management."
  contact: {}
  version: "1.0.0"
servers:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/transforma/PartyManagement/1.0.0
- url: https://serverRoot/tmf-api/party/v1/
tags:
- name: individual
  description: "List of Individual (Contact) methods"
- name: organization
  description: "List of Organization (Client) methods"
paths:
  /individual:
    get:
      tags:
      - individual
      summary: listIndividual
      description: This operation list or find Individual entities
      operationId: listIndividual
      parameters:
      - name: Authorization
        in: header
        description: A secure token chain that indicates that it is an authorized
          request.
        schema:
          type: string
      - name: correlatorId
        in: header
        description: Identifier used to match the request with its corresponding asynchronous
          notification
        schema:
          type: string
      - name: messageId
        in: header
        description: Transaction identity for each request
        schema:
          type: string
      - name: requestDate
        in: header
        description: Time and date the request is sent
        schema:
          type: string
          format: date-time
      - name: targetSystem
        in: header
        description: The system where targets the request.
        schema:
          type: string
      - name: originSystem
        in: header
        description: The system where is originated the request.
        schema:
          type: string
      - name: country
        in: header
        description: 'Indicates the country to route. ISO 1366 – 3 character Example:
          MEX'
        schema:
          type: string
      - name: partyRef.id
        in: query
        description: Party identifier Id
        required: true
        schema:
          type: string
      - name: partyRef.role
        in: query
        description: Role of the party
        required: true
        schema:
          type: string
      - name: partyRef.identifierType
        in: query
        description: Type of identifier used to the party
        required: true
        schema:
          type: string
      - name: id
        in: query
        description: Identifier of the Individual
        schema:
          type: string
      responses:
        200:
          description: Success
          headers:
            country:
              schema:
                type: string
            originSystem:
              schema:
                type: string
            messageId:
              schema:
                type: string
            correlatorId:
              schema:
                type: string
            responseDate:
              schema:
                type: string
            targetSystem:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Individual'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        405:
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
      deprecated: false
    post:
      tags:
      - individual
      summary: createIndividual
      description: This operation creates a Individual entity.
      operationId: createIndividual
      parameters:
      - name: Authorization
        in: header
        description: A secure token chain that indicates that it is an authorized
          request.
        schema:
          type: string
      - name: correlatorId
        in: header
        description: Identifier used to match the request with its corresponding asynchronous
          notification
        schema:
          type: string
      - name: messageId
        in: header
        description: Transaction identity for each request
        schema:
          type: string
      - name: requestDate
        in: header
        description: Time and date the request is sent
        schema:
          type: string
          format: date-time
      - name: targetSystem
        in: header
        description: The system where targets the request.
        schema:
          type: string
      - name: originSystem
        in: header
        description: The system where is originated the request.
        schema:
          type: string
      - name: country
        in: header
        description: 'Indicates the country to route. ISO 1366 – 3 character Example:
          MEX'
        schema:
          type: string
      requestBody:
        description: The Individual to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Individual'
        required: true
      responses:
        201:
          description: Created
          headers:
            country:
              schema:
                type: string
            originSystem:
              schema:
                type: string
            messageId:
              schema:
                type: string
            correlatorId:
              schema:
                type: string
            responseDate:
              schema:
                type: string
            targetSystem:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        405:
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
      deprecated: false
      x-codegen-request-body-name: body
  /individual/{id}:
    patch:
      tags:
      - individual
      summary: patchIndividual
      description: This operation updates partially a Individual entity.
      operationId: patchIndividual
      parameters:
      - name: Authorization
        in: header
        description: A secure token chain that indicates that it is an authorized
          request.
        schema:
          type: string
      - name: correlatorId
        in: header
        description: Identifier used to match the request with its corresponding asynchronous
          notification
        schema:
          type: string
      - name: messageId
        in: header
        description: Transaction identity for each request
        schema:
          type: string
      - name: requestDate
        in: header
        description: Time and date the request is sent
        schema:
          type: string
          format: date-time
      - name: targetSystem
        in: header
        description: The system where targets the request.
        schema:
          type: string
      - name: originSystem
        in: header
        description: The system where is originated the request.
        schema:
          type: string
      - name: country
        in: header
        description: 'Indicates the country to route. ISO 1366 – 3 character Example:
          MEX'
        schema:
          type: string
      - name: id
        in: path
        description: Identifier of the Individual
        required: true
        schema:
          type: string
      requestBody:
        description: The Individual to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Individual'
        required: true
      responses:
        200:
          description: Updated
          headers:
            country:
              schema:
                type: string
            originSystem:
              schema:
                type: string
            messageId:
              schema:
                type: string
            correlatorId:
              schema:
                type: string
            responseDate:
              schema:
                type: string
            targetSystem:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        405:
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericFault'
      deprecated: false
      x-codegen-request-body-name: body
  /organization:
    get:
      tags:
      - organization
      summary: listOrganization
      description: This operation list or find Organization entities
      operationId: listOrganization
      parameters:
      - name: Authorization
        in: header
        description: A secure token chain that indicates that it is an authorized
          request.
        schema:
          type: string
      - name: correlatorId
        in: header
        description: Identifier used to match the request with its corresponding asynchronous
          notification
        schema:
          type: string
      - name: messageId
        in: header
        description: Transaction identity for each request
        schema:
          type: string
      - name: requestDate
        in: header
        description: Time and date the request is sent
        schema:
          type: string
          format: date-time
      - name: targetSystem
        in: header
        description: The system where targets the request.
        schema:
          type: string
      - name: originSystem
        in: header
        description: The system where is originated the request.
        schema:
          type: string
      - name: country
        in: header
        description: 'Indicates the country to route. ISO 1366 – 3 character Example:
          MEX'
        schema:
          type: string
      - name: partyRef.id
        in: query
        description: Party identifier Id
        required: true
        schema:
          type: string
      - name: partyRef.role
        in: query
        description: Role of the party
        required: true
        schema:
          type: string
      - name: partyRef.identifierType
        in: query
        description: Type of identifier used to the party
        required: true
        schema:
          type: string
      - name: partyRef.externalReference.name
        in: query
        description: External reference name
        required: true
        schema:
          type: string
      - name: partyRef.externalReference.externalReferenceType
        in: query
        description: Type of the external reference
        required: true
        schema:
          type: string
      - name: organizationIdentification.identificationId
        in: query
        description: Identifier of identity for an organization
        required: true
        schema:
          type: string
      - name: organizationIdentification.identificationType
        in: query
        description: Type of identification information used to identify the company
          in a country or internationally
        required: true
        schema:
          type: string
      - name: organizationIdentification.checkDigit
        in: query
        description: Check digit
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers:
            country:
              schema:
                type: string
            originSystem:
              schema:
                type: string
            messageId:
              schema:
                type: string
            correlatorId:
              schema:
                type: string
            responseDate:
              schema:
                type: string
            targetSystem:
              schema:
                type: string
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
      deprecated: false
    post:
      tags:
      - organization
      summary: createOrganization
      description: This operation creates a Organization entity.
      operationId: createOrganization
      parameters:
      - name: Authorization
        in: header
        description: A secure token chain that indicates that it is an authorized
          request.
        schema:
          type: string
      - name: correlatorId
        in: header
        description: Identifier used to match the request with its corresponding asynchronous
          notification
        schema:
          type: string
      - name: messageId
        in: header
        description: Transaction identity for each request
        schema:
          type: string
      - name: requestDate
        in: header
        description: Time and date the request is sent
        schema:
          type: string
          format: date-time
      - name: targetSystem
        in: header
        description: The system where targets the request.
        schema:
          type: string
      - name: originSystem
        in: header
        description: The system where is originated the request.
        schema:
          type: string
      - name: country
        in: header
        description: 'Indicates the country to route. ISO 1366 – 3 character Example:
          MEX'
        schema:
          type: string
      requestBody:
        description: The Organization to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        201:
          description: Created
          headers:
            country:
              schema:
                type: string
            originSystem:
              schema:
                type: string
            messageId:
              schema:
                type: string
            correlatorId:
              schema:
                type: string
            responseDate:
              schema:
                type: string
            targetSystem:
              schema:
                type: string
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Organization'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
      deprecated: false
      x-codegen-request-body-name: body
  /organization/{id}:
    patch:
      tags:
      - organization
      summary: patchOrganization
      description: This operation updates partially a Organization entity.
      operationId: patchOrganization
      parameters:
      - name: Authorization
        in: header
        description: A secure token chain that indicates that it is an authorized
          request.
        schema:
          type: string
      - name: id
        in: path
        description: Identifier of the Organization
        required: true
        schema:
          type: string
      - name: correlatorId
        in: header
        description: Identifier used to match the request with its corresponding asynchronous
          notification
        schema:
          type: string
      - name: messageId
        in: header
        description: Transaction identity for each request
        schema:
          type: string
      - name: requestDate
        in: header
        description: Time and date the request is sent
        schema:
          type: string
          format: date-time
      - name: targetSystem
        in: header
        description: The system where targets the request.
        schema:
          type: string
      - name: originSystem
        in: header
        description: The system where is originated the request.
        schema:
          type: string
      - name: country
        in: header
        description: 'Indicates the country to route. ISO 1366 – 3 character Example:
          MEX'
        schema:
          type: string
      requestBody:
        description: The Organization to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        200:
          description: Updated
          headers:
            country:
              schema:
                type: string
            originSystem:
              schema:
                type: string
            messageId:
              schema:
                type: string
            correlatorId:
              schema:
                type: string
            responseDate:
              schema:
                type: string
            targetSystem:
              schema:
                type: string
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Organization'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenericFault'
      deprecated: false
      x-codegen-request-body-name: body
  
components:
  schemas:
    Individual:
      title: Individual
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the individual
        href:
          type: string
          description: Hyperlink to access the individual
        birthDate:
          type: string
          description: Birth date
          format: date-time
        familyName:
          type: string
          description: Contains the non-chosen or inherited name. Also known as last
            name in the Western context
        gender:
          type: string
          description: Gender
        givenName:
          type: string
          description: First name of the individual
        maritalStatus:
          type: string
          description: Marital status (married, divorced, widow ...)
        secondLastName:
          type: string
          description: Second Last Name
        nationality:
          type: string
          description: Nationality
        title:
          type: string
          description: Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium'
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        individualIdentification:
          type: array
          items:
            $ref: '#/components/schemas/IndividualIdentification'
        languageAbility:
          type: array
          items:
            $ref: '#/components/schemas/LanguageAbility'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        partyRef:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        status:
          type: string
          description: Status of the individual
        partyProfileType:
          type: array
          items:
            $ref: '#/components/schemas/PartyProfileType'
        createDateTime:
          type: string
          description: Date when the resource was create
          format: date-time
        lastUpdateDateTime:
          type: string
          description: Date when the resource was updated by last time
          format: date-time
        createdBy:
          type: string
          description: the user that creates the resource
        lastUpdateBy:
          type: string
          description: the user that updates the resource by last time
      description: Individual represents a single human being (a man, woman or child).
        The individual can be a customer, an employee or any other person that the
        organization needs to store information about.
    LanguageAbility:
      title: LanguageAbility
      type: object
      properties:
        isFavouriteLanguage:
          type: boolean
          description: A “true” value specifies whether the language is considered
            by the individual as his favourite one
        languageCode:
          type: string
          description: Language code (RFC 5646)
        languageName:
          type: string
          description: Language name
        listeningProficiency:
          type: string
          description: Listening proficiency evaluated for this language
        readingProficiency:
          type: string
          description: Reading proficiency evaluated for this language
        speakingProficiency:
          type: string
          description: Speaking proficiency evaluated for this language
        writingProficiency:
          type: string
          description: Writing proficiency evaluated for this language
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: Ability of an individual to understand or converse in a language.
    Organization:
      title: Organization
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the organization
        isHeadOffice:
          type: boolean
          description: If value is true, the organization is the head office
        isLegalEntity:
          type: boolean
          description: If value is true, the organization is a legal entity known
            by a national referential.
        name:
          type: string
          description: Organization name (department name for example)
        nameType:
          type: string
          description: 'Type of the name : Co, Inc, Ltd,…'
        organizationType:
          type: string
          description: Type of Organization (company, department...)
        tradingName:
          type: string
          description: Name that the organization (unit) trades under
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium'
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        organizationChildRelationship:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationChildRelationship'
        organizationIdentification:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationIdentification'
        organizationParentRelationship:
          $ref: '#/components/schemas/OrganizationParentRelationship'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        partyRef:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        partyProfileType:
          type: array
          items:
            $ref: '#/components/schemas/PartyProfileType'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        status:
          type: string
          description: Status of the organization
        createDateTime:
          type: string
          description: Date when the resource was create
          format: date-time
        lastUpdateDateTime:
          type: string
          description: Date when the resource was updated by last time
          format: date-time
        createdBy:
          type: string
          description: the user that creates the resource
        lastUpdateBy:
          type: string
          description: the user that updates the resource by last time
      description: Organization represents a group of people identified by shared
        interests or purpose. Examples include business, department and enterprise.
        Because of the complex nature of many businesses, both organizations and organization
        units are represented by the same data.
    ContactMedium:
      title: ContactMedium
      type: object
      properties:
        mediumType:
          type: string
          description: 'Type of the contact medium, such as: email address, telephone
            number, postal address'
        preferred:
          type: boolean
          description: If true, indicates that is the preferred contact medium
        characteristic:
          $ref: '#/components/schemas/MediumCharacteristic'
        address:
          $ref: '#/components/schemas/GeographicAddressRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: Indicates the contact medium that could be used to contact the
        party.
    MediumCharacteristic:
      title: MediumCharacteristic
      type: object
      properties:
        city:
          type: string
          description: The city
        contactType:
          type: string
          description: 'The type of contact, for example: phone number such as mobile,
            fixed home, fixed office. postal address such as shipping instalation…'
        country:
          type: string
          description: The country
        emailAddress:
          type: string
          description: Full email address in standard format
        faxNumber:
          type: string
          description: The fax number of the contact
        phoneNumber:
          type: string
          description: The primary phone number of the contact
        mobileNumber:
          type: string
          description: The primary mobile number of the contact
        postCode:
          type: string
          description: Postcode
        webSite:
          type: string
          description: WebSite
        stateOrProvince:
          type: string
          description: State or province
        street1:
          type: string
          description: Describes the street
        street2:
          type: string
          description: Complementary street description
        calendar:
          type: array
          items:
            $ref: '#/components/schemas/CalendarPeriod'
      description: Describes the contact medium characteristics that could be used
        to contact a party (an individual or an organization)
    CalendarPeriod:
      title: CalendarPeriod
      type: object
      properties:
        day:
          type: string
          description: 'Day where the calendar status applies (e.g.: monday, mon-to-fri,
            weekdays, weekend, all week, ...)'
        status:
          type: string
          description: 'Indication of the availability of the resource (e.g.: open)'
        comment:
          type: string
          description: "Comment text about the entry \n Note: COMMENT [iCalendar]"
        timeZone:
          type: string
          description: 'Indication of the timezone applicable to the calendar information
            (e.g.: Paris, GMT+1)'
        hourPeriod:
          type: array
          items:
            $ref: '#/components/schemas/HourPeriod'
    HourPeriod:
      title: HourPeriod
      type: object
      properties:
        endHour:
          type: string
          description: The time when the status ends applying
        startHour:
          type: string
          description: The time when the status starts applying
    TimePeriod:
      title: TimePeriod
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format. If you
            define a start, you must also define an end
          format: date-time
      description: A period of time, either as a deadline (endDateTime only) a startDateTime
        only, or both
    ExternalReference:
      title: ExternalReference
      type: object
      properties:
        externalReferenceType:
          type: string
          description: Type of the external reference
        name:
          type: string
          description: External reference name
      description: External reference of the individual or reference in other system
    OrganizationChildRelationship:
      title: OrganizationChildRelationship
      type: object
      properties:
        relationshipType:
          type: string
          description: Type of the relationship. Could be juridical, hierarchical,
            geographical, functional for example.
        organization:
          $ref: '#/components/schemas/OrganizationRef'
      description: Child references of an organization in a structure of organizations.
    OrganizationRef:
      title: OrganizationRef
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
    OrganizationIdentification:
      title: OrganizationIdentification
      type: object
      properties:
        identificationId:
          type: string
          description: Identifier
        identificationType:
          type: string
          description: Type of identification information used to identify the company
            in a country or internationally
        issuingAuthority:
          type: string
          description: Authority which has issued the identifier (chamber of commerce...)
        issuingDate:
          type: string
          description: Date at which the identifier was issued
          format: date-time
        checkDigit:
          type: string
          description: Check digit
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: Represents our registration of information used as proof of identity
        by an organization
    IndividualIdentification:
      title: IndividualIdentification
      type: object
      properties:
        identificationId:
          type: string
          description: Identifier
        identificationType:
          type: string
          description: Identification type (passport, national identity card, drivers
            license, social security number, birth certificate)
        issuingAuthority:
          type: string
          description: 'Authority which has issued the identifier, such as: social
            security, town hall'
        checkDigit:
          type: string
          description: Check digit
        issuingDate:
          type: string
          description: Date at which the identifier was issued
          format: date-time
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: Represents our registration of information used as proof of identity
        by an individual (passport, national identity card, drivers license, social
        security number, birth certificate)
    OrganizationParentRelationship:
      title: OrganizationParentRelationship
      type: object
      properties:
        relationshipType:
          type: string
          description: Type of the relationship. Could be juridical, hierarchical,
            geographical, functional for example.
        organization:
          $ref: '#/components/schemas/OrganizationRef'
      description: Parent references of an organization in a structure of organizations.
    Characteristic:
      title: Characteristic
      required:
      - name
      - value
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        value:
          type: string
          description: Value of the characteristic
      description: Describes a given characteristic of an object or entity through
        a name/value pair.
    PartyRef:
      title: PartyRef
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        identifierType:
          type: string
          description: Type of identifier used to the party
        partyRank:
          type: string
          description: Degree of importance relative to other partys.
        partyProfileType:
          type: array
          items:
            $ref: '#/components/schemas/PartyProfileType'
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        partyIdentification:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentification'
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        isLegalEntity:
          type: boolean
          description: If value is true, the party is a legal entity.
      description: Referes a party related with party information and not only the
        related Party Information. Defines party or party role linked to a specific
        entity.
    PartyProfileType:
      title: PartyProfileType
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for the PartyProfileType.
        description:
          type: string
          description: A narrative that explains what the PartyProfileType is.
        name:
          type: string
          description: A word, term, or phrase by which the characteristic is known
            and distinguished from characteristics.
        category:
          type: string
          description: A classification that groups PartyProfileTypes together because
            of common characteristics.
      description: Characteristics used to group Parties for the formulation and targeting
        of MarketingCampaigns. ProfileTypes can be based on PartyDemographics, GeographicAreas,
        ProductOfferings, and MarketSegments. User-defined DataPoints can also be
        specified.
    Note:
      title: Note
      type: object
      properties:
        id:
          type: string
          description: Identifier of the note within its containing entity (may or
            may not be globally unique, depending on provider implementation).
        author:
          type: string
          description: Author of the note.
        text:
          type: string
          description: Text of the note.
        date:
          type: string
          description: Date of the note
          format: date-time
      description: Extra information about a given entity.
    DetailResType:
      title: DetailResType
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Application related code
        severityLevel:
          type: string
          description: Ifentifies the severity of the transaction
        description:
          type: string
          description: Text that explains the reason for error.
        actor:
          type: string
          description: Response Actor.
        businessMeaning:
          type: string
          description: Meaning of the response.
      description: Error defined for detail the fault
    GenericFault:
      title: GenericFault
      required:
      - latency
      - messageUUID
      - responseDate
      type: object
      properties:
        messageUUID:
          type: string
          description: ID of message
        responseDate:
          type: string
          description: Date of the response
          format: date-time
        latency:
          type: integer
          description: Time of the operation execution in milliseconds
          format: int32
        errorList:
          $ref: '#/components/schemas/ErrorListType'
      description: Error defined for detail the fault
    ErrorListType:
      title: ErrorListType
      type: object
      properties:
        error:
          type: array
          items:
            $ref: '#/components/schemas/DetailResType'
      description: List with the detail of the faults
    GeographicAddressRef:
      title: GeographicAddressRef
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the address
        externalId:
          type: string
          description: Unique identifier of the address in an external system
        href:
          type: string
          description: An URI used to access to the address resource
        type:
          $ref: '#/components/schemas/Area'
        streetNr:
          type: string
          description: Number identifying a specific property on a public street.
            It may be combined with streetNrLast for ranged addresses
        streetName:
          type: string
          description: Name of the street or other street type
        streetType:
          $ref: '#/components/schemas/Area'
        postcode:
          type: string
          description: Descriptor for a postal delivery area, used to speed and simplify
            the delivery of mail (also known as zipcode)
        locality:
          $ref: '#/components/schemas/Area'
        city:
          $ref: '#/components/schemas/Area'
        stateOrProvince:
          $ref: '#/components/schemas/Area'
        country:
          $ref: '#/components/schemas/Area'
        '@type':
          type: string
          description: Indicates the type of the resource. Here can be 'UrbanPropertyAddress',
            ‘FormattedAddress’, ‘JapanesePropertyAddress’ , ‘AustralianPropertyAddress’,
            etc…
        '@schemaLocation':
          type: string
          description: A Link to the schema describing this REST Resource. The resource
            described 'UrbanPropertyAddress' but a schema could be used for other
            property address description.
        geographicLocation:
          $ref: '#/components/schemas/GeographicLocation'
        geographicSubAddress:
          type: array
          items:
            $ref: '#/components/schemas/GeographicSubAddress'
        area:
          type: array
          items:
            $ref: '#/components/schemas/Area'
        characteristic:
          type: array
          items:
            $ref: '#/components/schemas/LocationCharacteristic'
      description: Reference to an address resource. This reference includes the complete
        address specification that was requested by the provider (Claro Chile/Ericson)
    Area:
      title: Area
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of an Area
        name:
          type: string
          description: The defined name of the municipality
        type:
          type: string
          description: SUBURB, LOCALITY, CITY, TOWN, BOROUGH, ....
      description: Area corresponds to a geographic area as a city, a locality, a
        district, etc
    GeographicLocation:
      title: GeographicLocation
      required:
      - accuracy
      - spatialRef
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier of a GeoLocation
        href:
          type: string
          description: href of the GeoLocation
        name:
          type: string
          description: Name of a GeoLocation
        geometryType:
          type: string
          description: 'Type allows describing Geolocation form: it could be a point,
            a line, a polygon, a cylinder, etc....'
        accuracy:
          type: string
        spatialRef:
          type: string
        '@type':
          type: string
          description: Indicates the type of resource
        '@schemaLocation':
          type: string
          description: A link to the schema describing this REST Resource
        geometry:
          type: array
          items:
            $ref: '#/components/schemas/GeographicPoint'
      description: A GeographicLocation allows describing through coordinate(s) a
        point, a line or a space
    GeographicPoint:
      title: GeographicPoint
      type: object
      properties:
        x:
          type: string
          description: x coordinate (usually latitude)
        y:
          type: string
          description: y coordinate (usually longitude)
        z:
          type: string
          description: z coordinate (usually elevation)
      description: A GeographicPoint defines a geographic point through coordinates.
    GeographicSubAddress:
      title: GeographicSubAddress
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier of the subAddress
        type:
          type: string
          description: 'Type of subAddress : it can be a subunit or a private street'
        name:
          type: string
          description: Name of the subAddress to identify it with a meaningful identification
        subUnitType:
          type: string
          description: |-
            The type of subunit
            e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
        subUnitNumber:
          type: string
          description: |-
            The discriminator used for the subunit
            often just a simple number e.g. FLAT 5, may also be a range
        levelType:
          type: string
          description: Describes level types within a building
        levelNumber:
          type: string
          description: Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT
            2
        buildingName:
          type: string
          description: Allows for buildings that have well-known names
        privateStreetNumber:
          type: string
          description: Private streets numbers internal to a private street
        privateStreetName:
          type: string
          description: Private streets internal to a property (e.g. a university)
            may have internal names that are not recorded by the land title office
        '@type':
          type: string
          description: Type of the resource for this subAdress
        '@schemaLocation':
          type: string
          description: A link to the schema describing this REST Resource
      description: It is used for addressing within a property in an urban area (country
        properties are often defined differently). It may refer to a building, a building
        cluster, or a floor of a multistory building.
    LocationCharacteristic:
      title: LocationCharacteristic
      type: object
      properties:
        id:
          type: string
          description: Identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        value:
          type: string
          description: Value of the characteristic
      description: Name/value pairs, used to extra characterized the Area
    Money:
      title: Money
      required:
      - amount
      - units
      type: object
      properties:
        amount:
          type: number
          description: Amount of money
          format: double
        units:
          type: string
          description: Currency
      description: Representation of a monetary value
    PartyIdentification:
      title: PartyIdentification
      type: object
      properties:
        identificationId:
          type: string
          description: Identifier
        identificationType:
          type: string
          description: Type of identification information used to identify the party
        issuingAuthority:
          type: string
          description: Authority which has issued the identifier
        issuingDate:
          type: string
          description: Date at which the identifier was issued
          format: date-time
        checkDigit:
          type: string
          description: Check digit
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: Represents our registration of information used as proof of identity
        by a party
    QuoteRef:
      title: QuoteRef
      type: object
      properties:
        id:
          type: string
          description: Unique identifier - attributed by quoting system
        href:
          type: string
          description: Hyperlink to access the quote
        category:
          type: string
          description: Used to categorize the quote from a business perspective that
            can be useful for the CRM system (e.g. "enterprise", "residential", ...)
        description:
          type: string
          description: Description of the quote
        externalId:
          type: string
          description: ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        quoteItem:
          minItems: 1
          type: array
          description: An item of the quote - it is used to descirbe an operation
            on a product to be quoted
          items:
            $ref: '#/components/schemas/QuoteItem'
        quoteTotalPrice:
          type: array
          description: Quote total price
          items:
            $ref: '#/components/schemas/QuotePrice'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: Quote can be used to negotiate service and product acquisition
        or modification between a customer and a service provider. Quote contain list
        of quote items, a reference to customer (partyRole), a list of productOffering
        and attached prices and conditions.
    QuotePrice:
      title: QuotePrice
      type: object
      properties:
        description:
          type: string
          description: Description of the quote/quote item price
        name:
          type: string
          description: Name of the quote /quote item price
        priceType:
          type: string
          description: indicate if the price is for recurrent or no-recurrent charge
        recurringChargePeriod:
          type: string
          description: Used for recurring charge to indicate period (month, week,
            etc..)
        price:
          $ref: '#/components/schemas/Price'
      description: Description of price and discount awarded
    Price:
      title: Price
      type: object
      properties:
        percentage:
          type: number
          description: Percentage to apply for ProdOfferPriceAlteration
          format: double
        taxRate:
          type: number
          description: Tax rate
          format: double
        dutyFreeAmount:
          $ref: '#/components/schemas/Money'
        taxIncludedAmount:
          $ref: '#/components/schemas/Money'
      description: Provides all amounts (tax included, duty free, tax rate), used
        currency and percentage to apply for Price Alteration.
    QuoteItem:
      title: QuoteItem
      type: object
      properties:
        id:
          type: string
          description: Identifier of the quote item (generally it is a sequence number
            01, 02, 03, ...)
        action:
          type: string
          description: Action to be performed on this quote item (add, modify, remove,
            etc.)
        quantity:
          type: integer
          description: Quantity asked for this quote item
          format: int32
        state:
          type: string
          description: 'State of the quote item : described in the state machine diagram'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        quoteItemPrice:
          type: array
          description: Price for this quote item
          items:
            $ref: '#/components/schemas/QuotePrice'
      description: A quote items describe an action to be performed on a productOffering
        or a product in order to get pricing elements and condition.
    ProductOfferingRef:
      title: ProductOfferingRef
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        description:
          type: string
          description: Description of the productOffering
        isBundle:
          type: boolean
          description: isBundle determines whether a productOffering represents a
            single productOffering (false), or a bundle of productOfferings (true).
        lastUpdate:
          type: string
          description: Date and time of the last update
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status
        productOfferingPrice:
          type: array
          items:
            $ref: '#/components/schemas/ProductOfferingPriceRef'
        category:
          type: array
          description: The category resource is used to group product offerings, service
            and resource candidates in logical containers. Categories can contain
            other categories and/or product offerings, resource or service candidates.
          items:
            $ref: '#/components/schemas/CategoryRef'
        productSpecification:
          type: array
          items:
            $ref: '#/components/schemas/ProductSpecificationRef'
        bundledProductOffering:
          type: array
          items:
            $ref: '#/components/schemas/ProductOfferingRef'
        prodSpecCharValueUse:
          type: array
          items:
            $ref: '#/components/schemas/ProdSpecCharValueUse'
        realizingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
      description: ProductOffering reference. A product offering represents entities
        that are orderable from the provider of the catalog, this resource includes
        pricing information.
    ProductOfferingPriceRef:
      title: ProductOfferingPriceRef
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        priceType:
          type: string
          description: A category that describes the price, such as recurring, discount,
            allowance, penalty, and so forth.
        recurringChargePeriodType:
          type: string
          description: |-
            The period to repeat the application of the price
            Could be month, week...
        recurringChargePeriodLength:
          type: integer
          description: 'the period of the recurring charge:  1, 2, ... .It sets to
            zero if it is not applicable'
          format: int32
        unitOfMeasure:
          $ref: '#/components/schemas/Money'
        price:
          $ref: '#/components/schemas/Price'
      description: ProductPriceOffering reference. An amount, usually of money, that
        is asked for or allowed when a ProductOffering is bought, rented, or leased
    CategoryRef:
      title: CategoryRef
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        subCategory:
          type: array
          description: The category resource is used to group product offerings, service
            and resource candidates in logical containers. Categories can contain
            other (sub-)categories and/or product offerings.
          items:
            $ref: '#/components/schemas/CategoryRef'
      description: The category for grouping recommendations
    ProdSpecCharValueUse:
      title: ProdSpecCharValueUse
      type: object
      properties:
        id:
          type: string
          description: Identifier of the associated productSpecCharacteristic
        name:
          type: string
          description: Name of the associated productSpecCharacteristic
        description:
          type: string
          description: A narrative that explains in detail what the productSpecCharacteristic
            is
        valueType:
          type: string
          description: A kind of value that the characteristic can take on, such as
            numeric, text and so forth
        value:
          type: string
          description: Value that the characteristi
      description: A use of the ProdSpecCharacteristicValue by a ProductOffering to
        which additional properties (attributes) apply or override the properties
        of similar properties contained in ProdSpecCharacteristicValue. It should
        be noted that characteristics which their value(s) addressed by this object
        must exist in corresponding product specification. The available characteristic
        values for a ProductSpecCharacteristic in a Product specification can be modified
        at the ProductOffering level. For example, a characteristic 'Color' might
        have values White, Blue, Green, and Red. But, the list of values can be restricted
        to e.g. White and Blue in an associated product offering. It should be noted
        that the list of values in 'ProdSpecCharValueUse' is a strict subset of the
        list of values as defined in the corresponding product specification characteristics.
    ProductSpecificationRef:
      title: ProductSpecificationRef
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Version of the product specification
        productOffering:
          type: array
          items:
            $ref: '#/components/schemas/ProductOfferingRef'
        productConfigSpec:
          type: array
          items:
            $ref: '#/components/schemas/ProductConfigSpec'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        characteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
      description: 'Product specification reference: A ProductSpecification is a detailed
        description of a tangible or intangible object made available externally in
        the form of a ProductOffering to customers or other parties playing a party
        role.'
    ProductConfigSpec:
      title: ProductConfigSpec
      type: object
      properties:
        description:
          type: string
          description: A narrative that explains in detail what the ConfigurationSpecification
            is.
        name:
          type: string
          description: A word, term, or phrase by which the ConfigurationSpecification
            is known and distinguished from other ConfigurationSpecifications.
        value:
          type: string
          description: Value of the ConfigurationSpecification
      description: The definition of how a Product operates or functions in terms
        of CharacteristicSpecification(s) and related ResourceSpec(s), ProductSpec(s),
        ServiceSpec(s).
    ResourceRef:
      title: ResourceRef
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the resource
        value:
          type: string
          description: 'The resource value that can be used to identify a resource
            with a public key (e.g.: a tel nr, an msisdn)'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.