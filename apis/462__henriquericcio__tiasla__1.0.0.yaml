openapi: 3.0.0
info:
  description: This is a essay for a shopping list application
  version: "1.0.0"
  title: tiasla
  contact:
    email: henrique.riccio@gmail.com
    name: Henrique Riccio
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - description: SwaggerHub API Auto Mocking
    url: 'https://virtserver.swaggerhub.com/henriquericcio/tiasla/1.0.0'
tags:
  - name: open
    description: Open operations for shopping list resource
paths:
  /lists:
    get:
      tags:
        - open
      summary: get all shopping lists
      operationId: getAllShoppingLists
      description: Returns all shopping lists available in the system
      responses:
        '200':
          description: list of shopping lists available in the system
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingList'
    post:
      tags:
        - open
      summary: adds a new shopping list
      operationId: addShoppingList
      description: Adds an item to shopping list collection
      responses:
        '201':
          description: shopping list created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an shopping list already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingList'
        description: ShoppingList object that should be added
  '/lists/{listId}':
    get:
      tags:
        - open
      summary: Get shopping list by ID
      operationId: getShoppingListById
      description: Returns a single shopping list
      parameters:
        - in: path
          name: listId
          description: ID of shopping list to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: a shopping list matching given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingList'
        '400':
          description: bad input parameter
    delete:
      tags:
        - open
      summary: Delete an existing shopping list
      operationId: deleteShopping
      description: delete an item of shopping list collection
      parameters:
        - in: path
          name: listId
          description: ID of shopping list to be deleted
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: shopping list deleted
        '400':
          description: invalid input
  '/lists/{listId}/items':
    get:
      tags:
        - open
      summary: get all shopping list items
      operationId: getAllShoppingListItems
      description: Returns all shopping list items of a specific item
      parameters:
        - in: path
          name: listId
          description: ID of shopping list to be handled
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: list of shopping list items of a specific item
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingListItem'
    post:
      tags:
        - open
      summary: adds a new shopping list item
      operationId: addShoppingItemList
      description: Adds an item to shopping list collection
      parameters:
        - in: path
          name: listId
          description: ID of shopping list to be handled
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: shopping list item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an shopping list item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingListItem'
        description: ShoppingListItem object that should be added
  '/lists/{listId}/items/{itemId}':
    get:
      tags:
        - open
      summary: Get shopping list item by ID
      operationId: getShoppingListItemById
      description: Returns a single shopping list item
      parameters:
        - in: path
          name: listId
          description: ID of shopping list item to return
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: itemId
          description: ID of shopping list item to be deleted
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: a shopping list item matching given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingListItem'
        '400':
          description: bad input parameter
    delete:
      tags:
        - open
      summary: Delete an existing shopping list item
      operationId: deleteShoppingListItem
      description: delete an item of shopping list collection
      parameters:
        - in: path
          name: listId
          description: ID of shopping list item to return
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: itemId
          description: ID of shopping list item to be deleted
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: shopping list deleted
        '400':
          description: invalid input
components:
  schemas:
    ShoppingList:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Friday Shopping
    ShoppingListItem:
      type: object
      required:
        - id
        - name
        - done
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Tshirt
        done:
          type: boolean
          example: true
