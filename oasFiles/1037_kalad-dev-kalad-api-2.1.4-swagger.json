{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://api.nakarta.com/api/v1",
    "description" : "Production server (uses live data)"
  }, {
    "url" : "https://api.nakarta.com/",
    "description" : "root api"
  } ],
  "info" : {
    "description" : "RESTful API for web/mobile clients for api.kalad.cc",
    "version" : "2.1.4",
    "title" : "Kalad API",
    "contact" : {
      "email" : "ayankousky@elilink.com"
    }
  },
  "tags" : [ {
    "name" : "Offers",
    "description" : "Everything related to offers\n- get categories\n- get offers"
  }, {
    "name" : "Coupons",
    "description" : "Coupons API"
  }, {
    "name" : "Other"
  } ],
  "paths" : {
    "/categories" : {
      "get" : {
        "tags" : [ "Offers" ],
        "summary" : "Get categories",
        "description" : "Get all categories for offers to get specific offers. Region for categories will be selected based on your IP address or query parameter (region)",
        "parameters" : [ {
          "in" : "query",
          "name" : "region",
          "schema" : {
            "type" : "string",
            "enum" : [ "DE", "BR", "NL" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns categories of offers for region",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "categories" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "if client app sends malformed data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/BadRequestError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{category_id}/offers" : {
      "get" : {
        "tags" : [ "Offers" ],
        "summary" : "Get offers of category",
        "description" : "Get offers of the selected category",
        "parameters" : [ {
          "name" : "category_id",
          "in" : "path",
          "description" : "category_id of selected category from /api/categories",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "example" : "Elektronik"
          }
        }, {
          "in" : "query",
          "name" : "region",
          "schema" : {
            "type" : "string",
            "enum" : [ "DE", "BR", "NL" ]
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "specifies how much results will be returned from api",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "example" : 48
          }
        }, {
          "name" : "cursor",
          "in" : "query",
          "description" : "Property is required for navigation throught offers â€” get next or prev bunch of offers\nThis property comes from _queue_ property of offer or _nextCursor_/_prevCursor_ of this endpoint's response",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "example" : -9002786572481803
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns offers of specified category",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "offers" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Offer"
                      }
                    },
                    "category" : {
                      "description" : "selected category",
                      "$ref" : "#/components/schemas/Category"
                    },
                    "offersCount" : {
                      "type" : "integer",
                      "description" : "total offers count in selected category",
                      "example" : 23104
                    },
                    "nextCursor" : {
                      "type" : "integer",
                      "description" : "value to use in _cursor_ query parameter to get next offers in selected category",
                      "example" : -8998756883387523
                    },
                    "prevCursor" : {
                      "type" : "integer",
                      "description" : "value to use in _cursor_ query parameter to get previous offers in selected category",
                      "example" : -9006932985975707
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "if client app sends malformed data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "$ref" : "#/components/schemas/BadRequestError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/merchants" : {
      "get" : {
        "tags" : [ "Coupons" ],
        "summary" : "Get merchants",
        "description" : "Get all merchants",
        "parameters" : [ {
          "in" : "query",
          "name" : "region",
          "schema" : {
            "type" : "string",
            "enum" : [ "DE", "BR", "NL" ]
          },
          "description" : "Region to search merchants"
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 100
          },
          "description" : "Limit count returned from backend (Minimum: 1, Maximum: 100, Default: 10)"
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "integer"
          },
          "description" : "Number of page. Use with _limit_ for pagination (Default: 0)"
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string",
            "enum" : [ "name" ]
          },
          "description" : "Sort the results"
        }, {
          "in" : "query",
          "name" : "letter",
          "schema" : {
            "type" : "string",
            "example" : "a,b,c,0-9"
          },
          "description" : "Search merchants by their name (include number pattern)"
        }, {
          "in" : "query",
          "name" : "containsCoupons",
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 1
          },
          "description" : "If set to 1 API will return only merchants with at least one coupon (Default: 0)"
        }, {
          "in" : "query",
          "name" : "containsCouponsOrMonetizedLink",
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 1
          },
          "description" : "If set to 1 API will return merchants with coupons and merchants without coupons but with monetized_link (Default: 0)"
        }, {
          "in" : "query",
          "name" : "httpsOnly",
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 1
          },
          "description" : "If set to 1 API will return only merchants with logo which use https protocol (Default: 0)"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of merchants",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "merchants" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/SimpleCouponMerchant"
                        }
                      },
                      "merchantsCount" : {
                        "type" : "number",
                        "example" : 466
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "merchants" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        },
                        "example" : [ ]
                      },
                      "merchantsCount" : {
                        "type" : "number",
                        "example" : 0
                      },
                      "merchantsByLetters" : {
                        "anyOf" : [ {
                          "type" : "object",
                          "properties" : {
                            "a" : {
                              "type" : "object",
                              "properties" : {
                                "merchants" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/components/schemas/SimpleCouponMerchant"
                                  }
                                },
                                "merchantsCount" : {
                                  "type" : "number",
                                  "example" : 466
                                }
                              }
                            }
                          }
                        }, {
                          "type" : "object",
                          "properties" : {
                            "b" : {
                              "type" : "object",
                              "properties" : {
                                "merchants" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/components/schemas/SimpleCouponMerchant"
                                  }
                                },
                                "merchantsCount" : {
                                  "type" : "number",
                                  "example" : 466
                                }
                              }
                            }
                          }
                        }, {
                          "type" : "object",
                          "properties" : {
                            "0-9" : {
                              "type" : "object",
                              "properties" : {
                                "merchants" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/components/schemas/SimpleCouponMerchant"
                                  }
                                },
                                "merchantsCount" : {
                                  "type" : "number",
                                  "example" : 466
                                }
                              }
                            }
                          }
                        } ]
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestError"
                },
                "example" : {
                  "code" : "400,",
                  "message" : "Limit must be greater than or equal to 1 and less then or equal 100"
                }
              }
            }
          }
        }
      }
    },
    "/merchants/{domain}/coupons" : {
      "get" : {
        "tags" : [ "Coupons" ],
        "summary" : "Get coupons by merchant",
        "description" : "Get all coupons by domain of merchant \n\n Custom error codes: \n\n * 600 - If merchant by domain is not found",
        "parameters" : [ {
          "in" : "path",
          "name" : "domain",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "Merchant domain from _store_url_ property from GET /merchants request"
        }, {
          "in" : "query",
          "name" : "region",
          "schema" : {
            "type" : "string",
            "enum" : [ "DE", "BR", "NL" ]
          },
          "description" : "Region to search coupons"
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 100
          },
          "description" : "Limit count returned from backend (Minimum: 1, Maximum: 100, Default: 10)"
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "integer"
          },
          "description" : "Number of page. Use with _limit_ for pagination (Default: 0)"
        } ],
        "responses" : {
          "200" : {
            "description" : "Merchant with a coupons or a custom error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "merchant" : {
                        "$ref" : "#/components/schemas/CouponMerchant"
                      },
                      "coupons" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Coupon"
                        }
                      },
                      "couponsCount" : {
                        "type" : "integer",
                        "description" : "count of coupons",
                        "example" : 50
                      }
                    }
                  }, {
                    "$ref" : "#/components/schemas/BadRequestError",
                    "example" : {
                      "code" : "600,",
                      "message" : "Merchant is not found"
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestError"
                },
                "example" : {
                  "code" : "400,",
                  "message" : "Limit must be greater than or equal to 1 and less then or equal 100"
                }
              }
            }
          }
        }
      }
    },
    "/merchants/top" : {
      "get" : {
        "tags" : [ "Coupons" ],
        "summary" : "Get top coupons",
        "description" : "Get last updated coupons",
        "parameters" : [ {
          "in" : "query",
          "name" : "region",
          "schema" : {
            "type" : "string",
            "enum" : [ "DE", "BR", "NL" ]
          },
          "description" : "Region to search a coupons"
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 50
          },
          "description" : "Limit count returned from backend (Minimum: 1, Maximum: 50, Default: 10)"
        }, {
          "in" : "query",
          "name" : "containsCoupons",
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 1
          },
          "description" : "If set to 1 API will return only merchants with at least one coupon (Default: 0)"
        }, {
          "in" : "query",
          "name" : "containsCouponsOrMonetizedLink",
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 1
          },
          "description" : "If set to 1 API will return merchants with coupons and merchants without coupons but with monetized_link (Default: 0)"
        }, {
          "in" : "query",
          "name" : "httpsOnly",
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 1
          },
          "description" : "If set to 1 API will return only merchants with logo which use https protocol (Default: 0)"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of last updated merchants",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "merchants" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/SimpleCouponMerchant"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestError"
                },
                "example" : {
                  "code" : "400,",
                  "message" : "Limit must be greater than or equal to 1 and less then or equal 50"
                }
              }
            }
          }
        }
      }
    },
    "/merchants/letters" : {
      "get" : {
        "tags" : [ "Coupons" ],
        "summary" : "Get available starting letters",
        "description" : "Get available starting letters of merchants which have coupons \n\n Custom error codes: \n\n * 601 - The server did not import a letters",
        "parameters" : [ {
          "in" : "query",
          "name" : "region",
          "schema" : {
            "type" : "string",
            "enum" : [ "DE", "BR", "NL" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of letters or a custom error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "letters" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "example" : [ "z", "w", "a", "o", "l", "e", "d", "m", "p", "x", "h", "s", "y", "t", "u", "i", "k", "b", "v", "0-9", "f", "c", "g", "j", "r", "n", "q" ]
                        }
                      }
                    }
                  }, {
                    "$ref" : "#/components/schemas/BadRequestError",
                    "example" : {
                      "code" : "601,",
                      "message" : "Letters were not imported to the database"
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestError"
                },
                "example" : {
                  "code" : "400,",
                  "message" : "Allowed only DE, BR, NL regions"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found letters by region",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestError"
                },
                "example" : {
                  "code" : "404,",
                  "message" : "Letters not found by current region"
                }
              }
            }
          }
        }
      }
    },
    "/coupons" : {
      "get" : {
        "tags" : [ "Coupons" ],
        "summary" : "Get coupons",
        "description" : "Get all coupons",
        "parameters" : [ {
          "in" : "query",
          "name" : "region",
          "schema" : {
            "type" : "string",
            "enum" : [ "DE", "BR", "NL" ]
          },
          "description" : "Region to search coupons"
        }, {
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "free", "newest", "best" ]
          },
          "description" : "Enum to filter a coupons. Free - coupons with \"gratis\" in title/description. Newest - fresh coupons. Best - coupons with best discounts. By default - all coupons"
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "number",
            "minimum" : 1,
            "maximum" : 100
          },
          "required" : false,
          "description" : "Limit count returned from backend (Minimum: 1, Maximum: 100, Default: 10)"
        }, {
          "in" : "query",
          "name" : "cursor",
          "schema" : {
            "type" : "number"
          },
          "required" : false,
          "description" : "Property is required for navigation throught coupons â€” get next or prev bunch of coupons. This property comes from nextCursor (if you want next coupons)/prevCursor (if you want previous copons) of this endpoint's response"
        } ],
        "responses" : {
          "200" : {
            "description" : "Coupons with merchants",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "coupons" : {
                      "type" : "array",
                      "items" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Coupon"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "merchant" : {
                              "$ref" : "#/components/schemas/CouponMerchant"
                            }
                          }
                        } ]
                      }
                    },
                    "couponsCount" : {
                      "type" : "integer",
                      "example" : 2765
                    },
                    "nextCursor" : {
                      "type" : "integer",
                      "nullable" : true,
                      "description" : "cursor to move to the next page",
                      "example" : 2114889216100778
                    },
                    "prevCursor" : {
                      "type" : "integer",
                      "nullable" : true,
                      "description" : "cursor to move to the next page",
                      "example" : 261716954435616
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestError"
                },
                "example" : {
                  "code" : "400,",
                  "message" : "Limit must be greater than or equal to 1 and less then or equal 100"
                }
              }
            }
          }
        }
      }
    },
    "/coupons/top" : {
      "get" : {
        "tags" : [ "Coupons" ],
        "summary" : "Get top coupons",
        "description" : "Get top coupons",
        "parameters" : [ {
          "in" : "query",
          "name" : "region",
          "schema" : {
            "type" : "string",
            "enum" : [ "DE", "BR", "NL" ]
          },
          "description" : "Region to search coupons"
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 50
          },
          "description" : "Limit count returned from backend (Minimum: 1, Maximum: 50, Default: 10)"
        }, {
          "in" : "query",
          "name" : "exclude",
          "schema" : {
            "type" : "string"
          },
          "description" : "Parameter for ignore top filtered coupons (free, newest, best). Must be separated by commas. Example: free,best"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of top coupons by filters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "free" : {
                      "type" : "array",
                      "items" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Coupon"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "merchant" : {
                              "$ref" : "#/components/schemas/CouponMerchant"
                            }
                          }
                        } ]
                      }
                    },
                    "newest" : {
                      "type" : "array",
                      "items" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Coupon"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "merchant" : {
                              "$ref" : "#/components/schemas/CouponMerchant"
                            }
                          }
                        } ]
                      }
                    },
                    "best" : {
                      "type" : "array",
                      "items" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Coupon"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "merchant" : {
                              "$ref" : "#/components/schemas/CouponMerchant"
                            }
                          }
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestError"
                },
                "example" : {
                  "code" : "400,",
                  "message" : "Limit must be greater than or equal to 1 and less then or equal 50"
                }
              }
            }
          }
        }
      }
    },
    "/server-time" : {
      "get" : {
        "tags" : [ "Other" ],
        "summary" : "Get server date",
        "description" : "Return server current date",
        "responses" : {
          "200" : {
            "description" : "Current server date",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "currentDateTime" : {
                      "type" : "string",
                      "example" : "2018-11-06T12:13:27.471Z",
                      "description" : "date of server"
                    },
                    "timeZoneName" : {
                      "type" : "string",
                      "example" : "UTC",
                      "description" : "timezone of server date"
                    },
                    "dayOfTheWeek" : {
                      "type" : "string",
                      "example" : "Tuesday"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/main" : {
      "get" : {
        "tags" : [ "Coupons" ],
        "summary" : "Get data for website main page",
        "description" : "Ð¡ombination of several separate requests for website main page",
        "parameters" : [ {
          "in" : "query",
          "name" : "region",
          "schema" : {
            "type" : "string",
            "enum" : [ "DE", "BR", "NL" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of merchants for banner, top merchants, top coupons",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "banner_merchants" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "merchant" : {
                            "$ref" : "#/components/schemas/CouponMerchant"
                          },
                          "coupons" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/components/schemas/Coupon"
                            }
                          },
                          "couponsCount" : {
                            "type" : "integer",
                            "description" : "count of coupons",
                            "example" : 1
                          },
                          "banner_images" : {
                            "type" : "object",
                            "description" : "static images for banner",
                            "properties" : {
                              "left" : {
                                "type" : "string",
                                "example" : "https://api.kalad.cc/api/v1/static/images/reifen_l.jpg"
                              },
                              "right" : {
                                "type" : "string",
                                "example" : "https://api.kalad.cc/api/v1/static/images/reifen_r.jpg"
                              }
                            }
                          }
                        }
                      }
                    },
                    "top_merchants" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/SimpleCouponMerchant"
                      }
                    },
                    "top_coupons" : {
                      "type" : "object",
                      "properties" : {
                        "free" : {
                          "type" : "array",
                          "items" : {
                            "allOf" : [ {
                              "$ref" : "#/components/schemas/Coupon"
                            }, {
                              "type" : "object",
                              "properties" : {
                                "merchant" : {
                                  "$ref" : "#/components/schemas/CouponMerchant"
                                }
                              }
                            } ]
                          }
                        },
                        "newest" : {
                          "type" : "array",
                          "items" : {
                            "allOf" : [ {
                              "$ref" : "#/components/schemas/Coupon"
                            }, {
                              "type" : "object",
                              "properties" : {
                                "merchant" : {
                                  "$ref" : "#/components/schemas/CouponMerchant"
                                }
                              }
                            } ]
                          }
                        },
                        "best" : {
                          "type" : "array",
                          "items" : {
                            "allOf" : [ {
                              "$ref" : "#/components/schemas/Coupon"
                            }, {
                              "type" : "object",
                              "properties" : {
                                "merchant" : {
                                  "$ref" : "#/components/schemas/CouponMerchant"
                                }
                              }
                            } ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-info" : {
      "get" : {
        "tags" : [ "Other" ],
        "summary" : "Get user location",
        "description" : "Return user location data",
        "responses" : {
          "200" : {
            "description" : "Current user location",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "proposedRegion" : {
                      "type" : "string",
                      "example" : "DE",
                      "description" : "This is a proposed region for current user based on his location ( IP ). Is user is not from DE, BR, NL â€” DE will be selected automatically"
                    },
                    "userRegion" : {
                      "type" : "string",
                      "example" : "FR",
                      "description" : "User region"
                    },
                    "location" : {
                      "type" : "string",
                      "example" : "France",
                      "description" : "User country name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/encrypted_link" : {
      "get" : {
        "tags" : [ "Other" ],
        "summary" : "Get encrypt link to replace referer",
        "description" : "Use whenever you need to navigate user to a webpage with api.nakarta.com referer\n\nApi takes \"link\" query parameter which is encoded url of requested link. f.i. https://www.awin1.com/cread.php?s=2333002&v=16121&q=356462&r=577997 will be turned into https%3A%2F%2Fwww.awin1.com%2Fcread.php%3Fs%3D2333002%26v%3D16121%26q%3D356462%26r%3D577997 (use encodeURIComponent) . \n\nPlease try \"Try it out\" button and check the Request URL\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "link",
          "schema" : {
            "type" : "string",
            "example" : "https://www.awin1.com/cread.php?s=2333002&v=16121&q=356462&r=577997"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns encrypted link",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "link" : {
                      "type" : "string",
                      "example" : "https://api.nakarta.com/away_enc?p=b4cb1638a2fd2822e768f17365e3c3a7e7738735e93a475d7fc097d1fb077941313851e062f384af3e0a1a17f2486064fd40634ca290e59a78c4af0578faf378fe1ebb",
                      "description" : "encrypted link you should put on your website"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "BadRequestError" : {
        "type" : "object",
        "description" : "Occurred when request is not correct",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "status code",
            "example" : 400
          },
          "message" : {
            "type" : "string",
            "description" : "additional info about error",
            "example" : "Check the input data"
          }
        }
      },
      "BaseError" : {
        "type" : "object",
        "description" : "null if no errors occurred during request",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "status code",
            "example" : 1
          },
          "message" : {
            "type" : "string",
            "description" : "This info should be show to user",
            "example" : "Something wrong happened. You have to know about it"
          }
        }
      },
      "NotAuthorizedError" : {
        "type" : "object",
        "description" : "Unauthorized error",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "status code",
            "example" : 401
          },
          "message" : {
            "type" : "string",
            "description" : "Additional info about error",
            "example" : "Not authorized"
          }
        }
      },
      "Category" : {
        "type" : "object",
        "properties" : {
          "category_id" : {
            "type" : "string",
            "description" : "Category ID",
            "example" : "Elektronik"
          },
          "name" : {
            "type" : "string",
            "description" : "Category title",
            "example" : "Elektronik"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "ISO date of category creation/update",
            "example" : "2018-10-14T20:37:54.533Z"
          },
          "updateddAt" : {
            "type" : "string",
            "description" : "ISO date of category update",
            "example" : "2018-10-14T20:37:54.533Z"
          }
        }
      },
      "Offer" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "offer ID",
            "example" : "connexity:6120240248"
          },
          "queue" : {
            "type" : "integer",
            "description" : "value to use in /categories/{category_id}/offers as _cursor_ query parameter to get next offers starting from this one",
            "example" : -9002786572481803
          },
          "createdAt" : {
            "type" : "string",
            "description" : "ISO date of offer's creation/update",
            "example" : "2018-10-14T20:37:54.533Z"
          },
          "updateddAt" : {
            "type" : "string",
            "description" : "ISO date of offer's update",
            "example" : "2018-10-14T20:37:54.533Z"
          },
          "image_url_large" : {
            "type" : "string",
            "description" : "url to a large size image of the offer",
            "example" : "http://d4.cnnx.io/image/obj/6120240248;sq=400"
          },
          "image_url_small" : {
            "type" : "string",
            "description" : "url to a small size image of the offer",
            "example" : "http://d4.cnnx.io/image/obj/6120240248;sq=400"
          },
          "store_name" : {
            "type" : "string",
            "description" : "the store's name where offer is attached",
            "example" : "louis.de"
          },
          "store_url" : {
            "type" : "string",
            "description" : "the store's url where offer is attached",
            "example" : "louis.de"
          },
          "url" : {
            "type" : "string",
            "description" : "url to offer",
            "example" : "https://api.kalad.cc/out_offer?p=bfd00c26b4bf6e79e925b06c36a498fde66fd062"
          },
          "regular_price" : {
            "type" : "string",
            "description" : "price of the offer",
            "example" : 29.99
          },
          "old_price" : {
            "type" : "string",
            "description" : "old price of the offer",
            "example" : 125
          },
          "currency" : {
            "type" : "string",
            "description" : "currency of the regular_price / old_price",
            "example" : "EUR"
          },
          "description" : {
            "type" : "string",
            "description" : "offer's description",
            "example" : "Nordkap - Nordkap Tornio - Extra Breit Sehr komfortabel Stabile Schlaflage"
          },
          "title" : {
            "type" : "string",
            "description" : "offer's title (name)",
            "example" : "Nordkap Tornio"
          },
          "region" : {
            "type" : "string",
            "description" : "offer's region",
            "example" : "DE"
          },
          "networkId" : {
            "type" : "string",
            "description" : "network where offer came from",
            "example" : "connexity"
          }
        }
      },
      "SimpleCouponMerchant" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "merchant id",
            "example" : "zoro.de"
          },
          "name" : {
            "type" : "string",
            "description" : "merchant name",
            "example" : "Zoro.de - Ihr Werkzeug Onlineshop"
          },
          "description" : {
            "type" : "string",
            "description" : "merchant name",
            "example" : "Unsere Mission: Alles fÃ¼r Ihr Handwerk Zoro bietet Ã¼ber 350.000 Produkte fÃ¼r Handwerker- und Betriebsbedarf sowie Ersatz-und ZubehÃ¶rteile zu absoluten Spitzenpreisen!"
          },
          "logo" : {
            "type" : "string",
            "description" : "merchant logo url",
            "example" : "http://logos.affili.net/120x40/15151.gif"
          },
          "store_url" : {
            "type" : "string",
            "description" : "the store's url where merchant is attached",
            "example" : "zoro.de"
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "merchant regions",
            "example" : [ "DE" ]
          },
          "monetized_link" : {
            "type" : "string",
            "description" : "merchant monetized link url",
            "example" : "https://api.kalad.cc/api/v1/out-merchant?p=a5d60724b58c6e79aa65e92f6bbaceacec3f8168b22342492f93929db35b3c18746700b664f885fa354d5c1da2496466f45c5634"
          }
        }
      },
      "CouponMerchant" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "merchant id",
            "example" : "yieldKit:zoro.de:56ff626ee4b0bfcbc8882b13:DE"
          },
          "networkId" : {
            "type" : "string",
            "description" : "network where coupon came from",
            "example" : "yieldKit"
          },
          "mid" : {
            "type" : "string",
            "description" : "merchant id from network",
            "example" : "56ff626ee4b0bfcbc8882b13"
          },
          "name" : {
            "type" : "string",
            "description" : "merchant name",
            "example" : "Zoro.de - Ihr Werkzeug Onlineshop"
          },
          "description" : {
            "type" : "string",
            "description" : "merchant name",
            "example" : "Unsere Mission: Alles fÃ¼r Ihr Handwerk Zoro bietet Ã¼ber 350.000 Produkte fÃ¼r Handwerker- und Betriebsbedarf sowie Ersatz-und ZubehÃ¶rteile zu absoluten Spitzenpreisen!"
          },
          "store_url" : {
            "type" : "string",
            "description" : "the store's url where merchant is attached",
            "example" : "zoro.de"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "ISO date of merchant creation",
            "example" : "2018-10-18T14:42:30.923Z"
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "ISO date of merchant update",
            "example" : "2018-10-18T14:59:47.808Z"
          },
          "logo" : {
            "type" : "string",
            "description" : "merchant logo url",
            "example" : "http://logos.affili.net/120x40/15151.gif"
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "merchant regions",
            "example" : [ "DE" ]
          },
          "monetized_link" : {
            "type" : "string",
            "description" : "merchant monetized link url",
            "example" : "https://api.kalad.cc/api/v1/out-merchant?p=a5d60724b58c6e79aa65e92f6bbaceacec3f8168b22342492f93929db35b3c18746700b664f885fa354d5c1da2496466f45c5634"
          }
        }
      },
      "Coupon" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "coupon ID",
            "example" : "yieldKit:c05f1b4b105b4b869fdd9dca37aeaa40"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "ISO date of coupon creation/update",
            "example" : "2018-10-14T20:37:54.533Z"
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "ISO date of offer update",
            "example" : "2018-10-14T20:37:54.533Z"
          },
          "coupon_value" : {
            "type" : "object",
            "description" : "value of the coupon",
            "properties" : {
              "value" : {
                "type" : "number",
                "example" : 25
              },
              "sign" : {
                "type" : "string",
                "example" : "$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "currency", "percent" ],
                "example" : "percent"
              }
            }
          },
          "coupon_type" : {
            "type" : "string",
            "description" : "type of the coupon",
            "example" : "free"
          },
          "queue_id" : {
            "type" : "integer",
            "description" : "value to use as cursor query parameter to get next offers starting from this one",
            "example" : 1111069205791334
          },
          "ends" : {
            "type" : "string",
            "description" : "end time of the coupon",
            "example" : "2018-11-01T00:00:00.000Z"
          },
          "starts" : {
            "type" : "string",
            "description" : "start time of the coupon",
            "example" : "2018-10-01T00:00:00.000Z"
          },
          "coupon_code" : {
            "type" : "string",
            "description" : "code of coupon",
            "example" : "15BELA"
          },
          "store_url" : {
            "type" : "string",
            "description" : "the store's url where coupon is attached",
            "example" : "zoro.de"
          },
          "url" : {
            "type" : "string",
            "description" : "url to coupon",
            "example" : "https://api.kalad.cc/out_coupon?p=a5d60724b58c6e79aa79b16b34f79badef3e8163b72110187c98c4c6b90d6b49216757e067f18ca869"
          },
          "description" : {
            "type" : "string",
            "description" : "coupon description",
            "example" : "Sichern Sie sich nur fÃ¼r kurze Zeit einen 15 â‚¬ Gutscheincode fÃ¼r ALLE Artikel aus der Kategorie Betriebs- und Lagerausstattung!"
          },
          "title" : {
            "type" : "string",
            "description" : "coupon title (name)",
            "example" : "15 â‚¬-Rabatt auf die Kategorie Betriebs- und Lagerausstattung!"
          },
          "merchant_id" : {
            "type" : "string",
            "description" : "id of merchant whose provide a coupon",
            "example" : "yieldKit:zoro.de:56ff626ee4b0bfcbc8882b13:DE"
          },
          "network_id" : {
            "type" : "string",
            "description" : "network where coupon came from",
            "example" : "yieldKit"
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "coupon regions",
            "example" : [ "DE" ]
          }
        }
      }
    }
  }
}