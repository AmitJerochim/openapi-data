{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/muon/processingService/1.0.0"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/muon/processingServer/1.0.0"
  } ],
  "info" : {
    "version" : "1.0.0",
    "title" : "DGP processingService"
  },
  "paths" : {
    "/guarantees" : {
      "get" : {
        "operationId" : "searchGuarantees",
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "pass an optional search string for looking up guarantee",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "principal",
          "description" : "filter by principal",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Principal's cnum"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "in" : "query",
          "name" : "page",
          "description" : "page number",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "description" : "records per page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "exclude",
          "required" : false,
          "description" : "excludes fields from response",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "body"
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Guarantee"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "summary" : "adds a guarantee",
        "operationId" : "addGuarantee",
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guarantee"
              }
            }
          },
          "description" : "Guarantee to create"
        }
      }
    },
    "/agreements" : {
      "get" : {
        "operationId" : "searchAgreements",
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "pass an optional search string for looking up agreements",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "principal",
          "description" : "filter by principal",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Principal's cnum"
            }
          }
        }, {
          "in" : "query",
          "name" : "page",
          "description" : "page number",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "description" : "records per page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "exclude",
          "required" : false,
          "description" : "excludes fields from response",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "body"
            }
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GuaranteeAgreement"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "summary" : "adds an agreement",
        "operationId" : "addAgreement",
        "responses" : {
          "202" : {
            "description" : "request accepted"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuaranteeAgreement"
              }
            }
          },
          "description" : "Agreement to create"
        }
      }
    },
    "/agreements/{number}" : {
      "get" : {
        "operationId" : "getAgreement",
        "parameters" : [ {
          "in" : "path",
          "name" : "number",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns Agreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GuaranteeAgreement"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad input parameter"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Guarantee" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "number" : {
            "type" : "string"
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "principal" : {
            "$ref" : "#/components/schemas/Principal"
          },
          "isThirdParty" : {
            "type" : "boolean"
          },
          "applicant" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Organization"
            }
          },
          "beneficiary" : {
            "$ref" : "#/components/schemas/Beneficiary"
          },
          "isCounter" : {
            "type" : "boolean"
          },
          "amount" : {
            "$ref" : "#/components/schemas/MoneyAmount"
          },
          "isRollover" : {
            "type" : "boolean"
          },
          "effectiveOptions" : {
            "$ref" : "#/components/schemas/EffectiveOptions"
          },
          "terminateOptions" : {
            "$ref" : "#/components/schemas/TerminateOptions"
          },
          "bookCode" : {
            "type" : "string"
          },
          "loanId" : {
            "type" : "string",
            "description" : "Идентификатор loan в Midas"
          },
          "application" : {
            "type" : "string",
            "description" : "Связь с Соглашением"
          }
        }
      },
      "Currency" : {
        "type" : "string"
      },
      "Beneficiary" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Client"
        } ]
      },
      "MoneyAmount" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer"
          },
          "currency" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "TerminateOptions" : {
        "type" : "string"
      },
      "EffectiveOptions" : {
        "type" : "object",
        "properties" : {
          "customOptions" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "FROM_ISSUE_DATE", "FROM_DATE", "FROM_DATE_OF_ADVANCE_PAYMENT" ]
          }
        }
      },
      "Principal" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Client"
        }, {
          "properties" : {
            "id" : {
              "type" : "integer",
              "format" : "int64"
            },
            "isResident" : {
              "type" : "boolean"
            },
            "kppLargestTaxPayer" : {
              "type" : "string"
            },
            "oktmo" : {
              "type" : "string"
            },
            "postalAddress" : {
              "type" : "string"
            },
            "spark" : {
              "$ref" : "#/components/schemas/Organization"
            },
            "sparkId" : {
              "type" : "string"
            },
            "taxRegistrationDate" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GuaranteeAgreement" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string"
          },
          "principal" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/SimplePrincipal"
            }, {
              "$ref" : "#/components/schemas/UmbrellaPrincipal"
            } ],
            "discriminator" : {
              "propertyName" : "type"
            }
          },
          "limit" : {
            "type" : "object",
            "properties" : {
              "beginDate" : {
                "type" : "string",
                "format" : "date"
              },
              "endDate" : {
                "type" : "string",
                "format" : "date"
              },
              "isRevolving" : {
                "type" : "boolean"
              },
              "isBlocked" : {
                "type" : "boolean"
              },
              "lusLimitId" : {
                "type" : "string"
              },
              "isMultiCurrency" : {
                "type" : "boolean"
              }
            }
          },
          "creditAdmin" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 2
          },
          "creditSupervisor" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 2
          },
          "manager" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 2
          },
          "creditLineType" : {
            "type" : "string",
            "enum" : [ "R", "U" ],
            "title" : "Тип кредитной линии"
          },
          "creditLineId" : {
            "type" : "string",
            "description" : "Идентификатор кредитной линии: CNUM + FACILITY_TYPE + FACILITY_SEQ"
          },
          "facilitySequence" : {
            "type" : "integer"
          },
          "lineType" : {
            "type" : "string",
            "enum" : [ "U", "С" ],
            "title" : "Тип линии"
          },
          "facilityType" : {
            "type" : "string",
            "pattern" : "^\\d{3}$"
          },
          "isShareToBKI" : {
            "type" : "boolean"
          },
          "lpc" : {
            "type" : "string"
          },
          "products" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "collateral" : {
                  "type" : "object",
                  "properties" : {
                    "collateralType" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AgreementPrincipal" : {
        "type" : "object",
        "properties" : {
          "segment" : {
            "type" : "string"
          },
          "profitCenter" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/Region"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "SIMPLE", "UMBRELLA" ]
          }
        }
      },
      "UmbrellaPrincipal" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AgreementPrincipal"
        }, {
          "type" : "object",
          "properties" : {
            "cnum" : {
              "type" : "string"
            },
            "subPrincipal" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Principal"
              }
            },
            "region" : {
              "$ref" : "#/components/schemas/Region"
            }
          }
        } ]
      },
      "SimplePrincipal" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AgreementPrincipal"
        }, {
          "$ref" : "#/components/schemas/Principal"
        } ]
      },
      "Organization" : {
        "type" : "object",
        "properties" : {
          "baseBranch" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "currentAddress" : {
            "type" : "string"
          },
          "fullNameEng" : {
            "type" : "string"
          },
          "fullNameRus" : {
            "type" : "string"
          },
          "inn" : {
            "type" : "string"
          },
          "isResident" : {
            "type" : "boolean"
          },
          "kio" : {
            "type" : "string"
          },
          "kpp" : {
            "type" : "string"
          },
          "kppLargestTaxPayer" : {
            "type" : "string"
          },
          "ogrn" : {
            "type" : "string"
          },
          "oktmo" : {
            "type" : "string"
          },
          "postalAddress" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/Region"
          },
          "status" : {
            "type" : "string"
          },
          "taxRegistrationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "tin" : {
            "type" : "string"
          }
        },
        "title" : "OrganizationDTO"
      },
      "Region" : {
        "type" : "string",
        "minLength" : 3,
        "maxLength" : 3,
        "pattern" : "^\\d{3}$",
        "example" : "001",
        "description" : "branch, filial"
      },
      "Client" : {
        "type" : "object",
        "properties" : {
          "cnum" : {
            "type" : "string"
          },
          "organization" : {
            "$ref" : "#/components/schemas/Organization"
          }
        }
      }
    }
  }
}