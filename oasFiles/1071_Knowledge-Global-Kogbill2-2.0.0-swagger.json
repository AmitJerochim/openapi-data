{
  "openapi" : "3.0.0",
  "servers" : [ ],
  "info" : {
    "version" : "2.0.0",
    "title" : "Accurassi - KogBill Electricity PDF Comparison API",
    "contact" : {
      "email" : "ciaran.mccormack@accurassi.com"
    }
  },
  "paths" : {
    "/kogbill/api/2.0.0" : {
      "post" : {
        "summary" : "Upload a PDF residential electricity bill for comparison",
        "description" : "All data will be extracted from the uploaded bill for comparison against all in market plans. A list of plan and their estimated savings will be returned",
        "responses" : {
          "200" : {
            "description" : "The request was valid and able to be processed. Results may or may not be successful. See Response for further details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/Response"
                  }, {
                    "$ref" : "#/components/schemas/Error"
                  } ]
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised"
          }
        },
        "parameters" : [ {
          "name" : "clientCode",
          "in" : "header",
          "description" : "This value will be provided by Accurassi during on-boarding.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clientID",
          "in" : "header",
          "description" : "This value will be provided by Accurassi during on-boarding. The clientID us paired with clientCode and used for authentication. This value should never be published on a public facing site.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "outputFormat",
          "in" : "header",
          "description" : "0: Return terse output for retailers and plans. Only id's are returned. No name, description or details are returned.\n1: Return verbose output for retailers and plans. As well as the retailer/plan id, names, descriptions, benefits, rates, contract details etc... are returned where relavent.\n",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "default" : 0
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Request"
              }
            }
          },
          "description" : "Bill to compare"
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Request" : {
        "type" : "object",
        "required" : [ "correlationId", "ebillBase64" ],
        "properties" : {
          "correlationId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "User generated, unique identifer for comparison. This ID allows you to match the comparison against a record in your system",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "ebillBase64" : {
            "type" : "string",
            "format" : "base64",
            "description" : "Base64 encoded PDF"
          },
          "planLimit" : {
            "type" : "number",
            "default" : 30,
            "description" : "The maximum number of plans to return"
          },
          "previousCorrelationId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "correlationId used in original request. Passing this will allow a fresh comparison using the original uploaded data without the overhead of having to upload the pdf again. (Only supported if configured for your client)",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "required" : [ "correlationId", "comparisonDate", "errorCode", "errorMessage", "version" ],
        "properties" : {
          "correlationId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The correlationId as passed in the request",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "comparisonDate" : {
            "type" : "string",
            "format" : "date/time",
            "description" : "Timestamp of when the attempted comparison took place"
          },
          "errorCode" : {
            "type" : "number",
            "description" : "* `1000` - Document not recognised (i.e. not valid pdf or image)\n* `1001` - Bill is not SME or Domestic\n* `1004` - Bill is gas (if to be excluded)\n* `1005` - Template Not Found – The document was a pdf but kogbill did not recognise the uploaded document against any of it’s templates\n* `1008` - Unsupported distributor – bill is from jurisdiction that is unsupported\n* `1009` - Unsupported distributor – bill is from jurisdiction that is unsupported\n* `1030` - Invoice from date is missing\n* `1031` - Invoice to date is missing\n* `1033` - Supply address is missing\n* `1039` - NMI is missing\n* `1041` - Bill is a predictive plan making comparison hard\n* `1044` - Bill is on embedded network\n* `1045` - Incompatible charge item – manual comparison needed\n* `1062` - C&I Bill loaded\n* `1080` - API failed to reconcile bill usually meaning that not all cost items were picked up\n",
            "enum" : [ "200", "1000", "1001", "1004", "1005", "1008", "1009", "1030", "1031", "1033", "1039", "1041", "1044", "1045", "1062", "1080" ]
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Description of error that can be displayed as user feedback. e.g. \"Uploaded document not a PDF\""
          },
          "version" : {
            "type" : "string",
            "description" : "Version of the API on which the error took place. This value should be reported with any issue raised."
          }
        }
      },
      "Response" : {
        "required" : [ "correlationId", "comparisonDate", "plans", "currentBillData", "maximumSaving", "defaultOffer", "version" ],
        "properties" : {
          "correlationId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The correlationId as passed in the request",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "comparisonDate" : {
            "type" : "string",
            "format" : "date/time",
            "description" : "Timestamp of when the comparison took place"
          },
          "plans" : {
            "type" : "array",
            "description" : "Array of plans, sorted from best to worst saving, for the uploaded bill",
            "items" : {
              "$ref" : "#/components/schemas/Plan"
            }
          },
          "currentBillData" : {
            "$ref" : "#/components/schemas/CurrentBillData"
          },
          "maximumSaving" : {
            "type" : "number",
            "description" : "What is the maximum saving that can be achieved if the user switches to a new plan. This number may be negative if the user is already on the best plan for their comsumption and no saving can be found."
          },
          "defaultOffer" : {
            "$ref" : "#/components/schemas/DefaultOffer"
          },
          "version" : {
            "type" : "string",
            "description" : "Version of the API on which the comparison took place. This value should be reported with any issue raised."
          }
        },
        "type" : "object"
      },
      "Plan" : {
        "required" : [ "id", "name", "retailer", "estimatedBaseCost", "estimatedTotalCost", "estimatedSaving", "rates", "contract", "type", "url", "defaultOfferMessage", "payOnTimeRequired", "directDebitRequired" ],
        "properties" : {
          "id" : {
            "type" : "number",
            "description" : "Unique identifier for this plan. This ID is passed when calling the switch API."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the plan"
          },
          "retailer" : {
            "$ref" : "#/components/schemas/Retailer"
          },
          "estimatedTotalCost" : {
            "type" : "number",
            "description" : "Estimated cost of this plan, based on the usage from uploaded bill, with all conditional discounts applied."
          },
          "estimatedBaseCost" : {
            "type" : "number",
            "description" : "Estimated cost of this plan, based on the usage from the uploaded bill, with no conditional discounts applied. If this plan offers no conditional discounts the estimatedTotalCost and the estimatedBaseCost will be the same."
          },
          "estimatedSaving" : {
            "type" : "number",
            "description" : "The estimated saving the customer could have realised if they had been on this plan during the billing period"
          },
          "rates" : {
            "$ref" : "#/components/schemas/Rates"
          },
          "contract" : {
            "$ref" : "#/components/schemas/Contract"
          },
          "type" : {
            "type" : "string",
            "description" : "* `Single Rate`\n* `TOU` - Time of Use\n",
            "enum" : [ "Single Rate", "TOU" ]
          },
          "url" : {
            "type" : "string",
            "description" : "Link to plan on goverment site",
            "example" : "https://www.energymadeeasy.gov.au/offer/1008406?postcode=2067"
          },
          "defaultOfferMessage" : {
            "type" : "string",
            "description" : "Default Offer (DMO/VDO) text to be displayed for this plan",
            "example" : "The annualised price of this plan is $1,764 and is 14% less than the Reference Price."
          },
          "payOnTimeRequired" : {
            "type" : "boolean",
            "description" : "Is pay on time required in order to subscribe to this plan"
          },
          "directDebitRequired" : {
            "type" : "boolean",
            "description" : "Is payment by direct debit required in order to subscribe to this plan"
          }
        },
        "type" : "object"
      },
      "CurrentBillData" : {
        "type" : "object",
        "description" : "Data from uploaded bill",
        "required" : [ "accountName", "accountAddress", "supplyAddress", "retailer", "nmi", "accountNumber", "fuelType", "billDateFrom", "billDateTo", "days", "actualPlanTotalCost", "discount", "periods" ],
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "Customer name."
          },
          "accountAddress" : {
            "type" : "string",
            "description" : "Account (Billing) address."
          },
          "supplyAddress" : {
            "type" : "string",
            "description" : "Supply address. This may differ from account address if bill payers address is different from account address."
          },
          "retailer" : {
            "$ref" : "#/components/schemas/Retailer"
          },
          "nmi" : {
            "type" : "string",
            "description" : "National Meter identifier (NMI)"
          },
          "accountNumber" : {
            "type" : "string",
            "description" : "Customer account number"
          },
          "fuelType" : {
            "type" : "string",
            "description" : "* `E` - Electricity\n",
            "enum" : [ "E" ]
          },
          "billDateFrom" : {
            "type" : "string",
            "format" : "date/time",
            "description" : "Start date for billing period"
          },
          "billDateTo" : {
            "type" : "string",
            "format" : "date/time",
            "description" : "End date for billing period"
          },
          "days" : {
            "type" : "number",
            "description" : "Number of days in billing period (billDateTo - billDateFrom)"
          },
          "actualPlanTotalCost" : {
            "type" : "number",
            "description" : "Recalculated cost of the plan based on users comsumption and plan rates including discounts, rebates, concessions etc... Additional fees such as credit card processing fees are ignored."
          },
          "discount" : {
            "type" : "number",
            "description" : "Total value of all unconditional discounts applied to the bill"
          },
          "periods" : {
            "type" : "array",
            "description" : "Rates and charges for each period on the bill",
            "items" : {
              "$ref" : "#/components/schemas/Period"
            }
          }
        }
      },
      "DefaultOffer" : {
        "type" : "object",
        "description" : "Default offer message based on the state the uploaded bill is from",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "* `Default Market Offer (DMO)`\n* `Victorial Default Offer (VDO)`\n",
            "enum" : [ "Default Market Offer (DMO)", "Victorial Default Offer (VDO)" ]
          },
          "message" : {
            "type" : "string",
            "example" : "1.) For an average household in the AUSGRID network using 3,900kWh/year on a flat rate tariff.\n2.) Amounts do not include any concessions or rebates, feed in tariffs, or green energy charges. Amounts include all other benefits (including discounts) that you're eligible for, and GST (unless otherwise stated).\nYour actual bill will vary depending on your actual usage, tariff type and distributor."
          }
        }
      },
      "Retailer" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "number",
            "description" : "Unique identifier for the retailer"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the retailer"
          },
          "phone" : {
            "type" : "string",
            "description" : "Contact phone number for retailer customer support/queries"
          },
          "email" : {
            "type" : "string",
            "description" : "Contact email address for retailer cusomter support/queries"
          }
        }
      },
      "Rates" : {
        "type" : "object",
        "properties" : {
          "peak" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "step1" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "step2" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "step3" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "offpeak" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "control1" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "control2" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "supplyCharge" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "control1Supply" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "control2Supply" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "solarFeedInTariff" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "supplyDiscount" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          },
          "usageDiscount" : {
            "$ref" : "#/components/schemas/UnitFriendlyValue"
          }
        }
      },
      "Contract" : {
        "type" : "object",
        "properties" : {
          "greenOptions" : {
            "$ref" : "#/components/schemas/FriendlyValues"
          },
          "coolingOffPeriod" : {
            "$ref" : "#/components/schemas/FriendlyValues"
          },
          "paymentOptions" : {
            "$ref" : "#/components/schemas/FriendlyValues"
          },
          "contractTerm" : {
            "$ref" : "#/components/schemas/FriendlyValues"
          },
          "billFrequency" : {
            "$ref" : "#/components/schemas/FriendlyValues"
          },
          "eligibilityRestrictions" : {
            "$ref" : "#/components/schemas/FriendlyValues"
          }
        }
      },
      "Period" : {
        "type" : "object",
        "properties" : {
          "peak" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "peakStep1" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "peakStep2" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "peakStep3" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "offPeak" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "offPeakStep1" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "offPeakStep2" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "shoulder" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "controlledLoad1" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "controlledLoad2" : {
            "$ref" : "#/components/schemas/RateValue"
          },
          "supplyCharge" : {
            "$ref" : "#/components/schemas/RateValue"
          }
        }
      },
      "FriendlyValues" : {
        "type" : "object",
        "required" : [ "values", "friendly" ],
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "Values of this property",
            "items" : {
              "type" : "string"
            },
            "example" : [ "Paper Bill", "Direct debit", "BPay", "Credit card" ]
          },
          "friendly" : {
            "type" : "string",
            "description" : "Friendly name, suitable for rendering, of this property",
            "example" : "Payment options"
          }
        }
      },
      "UnitFriendlyValue" : {
        "type" : "object",
        "required" : [ "unit", "friendly", "value" ],
        "properties" : {
          "unit" : {
            "type" : "string",
            "description" : "Unit of measure for this property.",
            "example" : "cents per HW hour"
          },
          "value" : {
            "type" : "string",
            "description" : "Quantity of this property",
            "example" : 12
          },
          "friendly" : {
            "type" : "string",
            "description" : "Friendly name, suitable for rendering, of this property",
            "example" : "Controlled Load 2 Rate"
          }
        }
      },
      "RateValue" : {
        "type" : "object",
        "required" : [ "rate", "value" ],
        "properties" : {
          "rate" : {
            "type" : "number"
          },
          "value" : {
            "type" : "number"
          }
        }
      }
    }
  }
}