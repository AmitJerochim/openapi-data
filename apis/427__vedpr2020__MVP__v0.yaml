openapi: 3.0.1
info:
  title: MVP OpenAPI definition
  version: v0
paths:
  /patients/upload:
    post:
      operationId: uploadForBulkPatientRegistration
      parameters:
        - name: file
          in: query
          required: true
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: string
      tags:
        - Registration
  '/patients/localid/{id}':
    get:
      operationId: getPatientByPatientLocalId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientEntity'
      tags:
        - Registration
  '/patients/uhid/{id}':
    get:
      operationId: getPatientByPatientUHID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientEntity'
      tags:
        - Registration
  /patients:
    get:
      operationId: getAllPatients
      parameters:
        - name: pageNo
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            default: patientName
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientEntity'
      tags:
        - Registration
    put:
      operationId: updateOrDeactivatePatient
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PatientEntity'
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientEntity'
      tags:
        - Registration
    post:
      operationId: createPatient
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PatientEntity'
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientEntity'
      tags:
        - Registration
components:
  schemas:
    PatientEntity:
      type: object
      properties:
        uhid:
          type: string
        localId:
          type: string
        patientName:
          type: string
        patientAge:
          type: string
        addressType:
          type: integer
          format: int32
        address:
          type: integer
          format: int32
        mobileNumber:
          type: string
        email:
          type: string
        id:
          type: integer
          format: int64
        patientLocalId:
          type: string
          writeOnly: true
tags:
  - name: Registration
    description: "Open API specification for registration microservice "
servers:
  - url: https://api.example1.com
    description: New Server 1
