penapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/AxelGanter/BankService/1.0.0
info:
  description: Bank Backend API
  version: "1.0.0"
  title: Bank Backend API
  contact:
    email: mail@axelganter.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: advisors
    description: Operations available for bank-internal frontend
  - name: users
    description: Operations available to our customer frontend
paths:
  /users/{id}:
    get:
      tags:
        - advisors
      summary: Get a user by ID
      operationId: getUser
#      description: 
      parameters:
        - name: id
          in: path
          description: the id of the user
          required: true
          schema:
            type: integer
   
      responses:
        '200':
          description: the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: user not found
  /users:
    post:
      tags:
        - advisors
      summary: add new user
      operationId: newUser
      requestBody:
        description: new user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: new user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: user with same data already exists
  /accounts:
    post:
      tags:
        - advisors
      summary: add new account
      operationId: newAccount
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        description: new account
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
  /transactions:
    post:
      tags:
        - users
      summary: create a transaction
      operationId: newTransaction
      responses:
        '200':
          description: transaction request recieved
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction'
        '201':
          description: transaction successful
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        required: true
        description: new transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
              
components:
  schemas:
    User:
      type: object
      required:
        - surname
        - firstName
        - dateOfBirth
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 6800012345
        surname:
          type: string
          example: Mustermann
        firstName:
          type: string
          example: Max
        dateOfBirth:
          type: string
          format: date
          example: "1991-09-19"
        sex:
          type: string
          example: 'M'
        accounts:
          type: array
          readOnly: true
          items:
            type: integer
            format: int64
            description: the key to a user, who has rights
    Account:
      type: object
      required:
        - creditLine
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 120002
        accountType:
          type: string
          enum: [checking, timeDeposit, creditCard]
          example: creditCard
        name:
          type: string
          example: "Student Zero Plus"
          enum: ["Student Zero Plus", "The Free Account", "Business-Card Gold"]
        credit:
          type: number
          format: currency
          example: 123,45
          default: 0,00
        PIN:
          type: string
          format: password
          example: 434343
          writeOnly: true
        creditLine: # same field for creditCardLimit 
          type: number
          format: currency
          example: 1000,00
          default: 0,00
        interest:
          type: number
          format: float
          example: 0,5
        reference:
          type: integer
          format: int64
          nullable: true
          example: 120001
          description: if this is a credit-card-account then reference is a ref to a checking account
        users:
          description: ids of users who manage this account       
          type: array
          readOnly: true
          items: 
            type: integer
            format: int64
    Transaction:
      type: object
      required:
        - user
        - account
        - amount
      properties:
        id:
          type: integer
          format: int64
        user:
          description: id of the user
          type: integer
          format: int64
          example: 6800012345
        account:
          description: id of the account
          type: integer
          format: int64
          example: 120002
        amount:
          type: number
          format: currency
          example: 123,45
        date:
          readOnly: true
          type: string
          format: date
          example: "2020-03-16"