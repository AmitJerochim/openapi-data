openapi: 3.0.1
info:
  title: Swift Api
  description: |-
    An API for accessing Swift Employment Solution.

    All requests made to this API must include the following headers:

        Date: $currentdate
        Authentication: hmac $username:$noncetoken:$digest

    Additionally, if you are making a POST/PUT request, you must include the following headers:

        Content-Type: application/json
        Content-Length: length($data)

    Where the variables are defined as follows:

        $data: The JSON-encoded array containing your request. See the documentation below for the format this should take.
        
        $currentdate: The current date and time in the following format 'Mon, 12 Mar 2018 13:04:24 GMT’.
        
        $username: Your username for the API service, as supplied by Swift.
        
        $password: Your password for the API service, as supplied by Swift.
        
        $method: The method you are using to submit this request(GET/POST/PUT)
        
        $URL: The URL you are sending this request to (e.g. http://api.swiftemployment.co.uk/v2/user/JD1000)
        
        $noncetoken: The token supplied to you after making a GET call to /token/. If you are making a request to receive a token, use the value ‘1’ in here.
        
        $requestinfo: A string to be hashed for authentication, composed like: '$method+$url+$currentdate+$noncetoken' including the +’s.
        
        $digest: A hash to authenticate your request. Created as follows:
        Use a hmac hashing function (such as http://php.net/manual/en/function.hash-hmac.php) to create your hash, using the SHA512 algorithm, $requestinfo as the data to be encoded and $password as the encyption key.
        Take the output of the above function and Base64 encode it.

  version: "2.1.5"
servers:
  - url: http://api.swiftemployment.co.uk
paths:

  /v2/token:
    get:
      description: Returns a token
      responses:
        '200':
          description: The token being returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
              examples:
                '0':
                  value: |-
                    {
                      "message":"Fetch a nonce token",
                      "token":"25f62fb8-4a43-4182-a1d1-a39cf611eb6c"
                    }
      tags:
        - Token

  /v2/users:
    get:
      description: |
        Returns a list of users. If no search parameters are provided, returns all users.
      parameters:
          - in: query
            name: name
            schema:
              type: string
            description: The name of a user to search against
            example: feli
          - in: query
            name: address
            schema:
              type: string
            description: The address of a user to search against
            example: road
          - in: query
            name: email
            schema:
              type: string
            description: The email of a user to search against
            example: feli@example

      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: All users data
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserResponse'
              examples:
                '0':
                  value: >-
                    {
                      "message":"All users data",
                      "users":
                        [
                          {
                            "user_ref":"felitest",
                            "first_name":"Felicity",
                            "last_name":"Fauxname",
                            "email":"felicity2@example.com",
                            "contact_number":07777111111,
                            "dob":"1983-03-15",
                            "ni_number":"AA111111A",
                            "address_1":"17 False Road",
                            "address_2":"Buzzer 3",
                            "city":"Southampton",
                            "postcode":"SO11 1AA",
                            "bank_name":"Mega Bank",
                            "bank_account_name":"Felicity Fauxname",
                            "timesheets":
                              [
                                {
                                  "timesheet_ref":"felitest-1",
                                  "gross_val":1604.22,
                                  "net_due":1069.41,
                                  "time_payment_sent":"2020-03-03 15:30:08.535738",
                                  "time_received_payment":"2020-03-03 15:30:08.535738",
                                  "time_approved":"2020-03-03 15:30:08.535738",
                                  "user_ref":"felitest",
                                  "client_ref":"stevetest"
                                },
                                {
                                  "timesheet_ref":"felitest-2",
                                  "gross_val":1627.30,
                                  "net_due":756.08,
                                  "time_payment_sent":"2020-03-03 15:30:08.535738",
                                  "time_received_payment":"2020-03-03 15:30:08.535738",
                                  "time_approved":"2020-03-03 15:30:08.535738",
                                  "user_ref":"felitest",
                                  "client_ref":"stevetest"
                                },
                                {
                                  "timesheet_ref":"felitest-3",
                                  "gross_val":1627.30,
                                  "net_due":806.24,
                                  "time_payment_sent":"2020-03-03 15:30:08.535738",
                                  "time_received_payment":"2020-03-03 15:30:08.535738",
                                  "time_approved":"2020-03-03 15:30:08.535738",
                                  "user_ref":"felitest",
                                  "client_ref":"stevetest"
                                }
                              ],
                            "clients":
                            [
                              {
                                "name":"Steve Testwoman",
                                "address_1":"123 Fake Street",
                                "address_2":"Flat 42",
                                "postcode":"SW1 1AA",
                                "city":"London",
                                "contact_name":"James Madeupname",
                                "contact_phone":07777555555,
                                "contact_fax":0181555555,
                                "contact_email":"james@example.com",
                                "payroll_contact_name":"Andrew Fictional",
                                "payroll_contact_phone":07777777777,
                                "payroll_contact_fax":01816666666,
                                "payroll_contact_email":"andrew@example.com",
                                "client_ref":"stevetest",
                                "hirer":"",
                                "timesheets":
                                  [
                                    {
                                      "timesheet_ref":"felitest-1",
                                      "gross_val":1604.22,
                                      "net_due":1069.41,
                                      "time_payment_sent":null,
                                      "time_received_payment":null,
                                      "time_approved":null,
                                      "user_ref":"felitest",
                                      "client_ref":"stevetest"
                                    },
                                    {
                                      "timesheet_ref":"felitest-2",
                                      "gross_val":1627.30,
                                      "net_due":756.08,
                                      "time_payment_sent":null,
                                      "time_received_payment":null,
                                      "time_approved":null,
                                      "user_ref":"felitest",
                                      "client_ref":"stevetest"
                                    },
                                    {
                                      "timesheet_ref":"felitest-3",
                                      "gross_val":1627.30,
                                      "net_due":806.24,
                                      "time_payment_sent":null,
                                      "time_received_payment":null,
                                      "time_approved":null,
                                      "user_ref":"felitest",
                                      "client_ref":"stevetest"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "user_ref":"justtest",
                              "first_name":"Just",
                              "last_name":"Testing",
                              "email":"justtesting@example.com",
                              "contact_number":0,
                              "dob":null,
                              "ni_number":"",
                              "address_1":"",
                              "address_2":"",
                              "city":"",
                              "postcode":"",
                              "timesheets":[],
                              "clients":[]
                            }
                          ]
                        }
      tags:
        - Users

  /v2/user/{user_ref}:
    get:
      description: Fetch a specific users details
      parameters:
        - in: path
          name: user_ref
          required: true
          schema:
            type: string
          description: The reference of the user
          example: felitest
      responses:
        '200':
          description: The users details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User data
                  user: 
                    $ref: '#/components/schemas/UserResponse'
              examples:
                '0':
                  value: >-
                    {
                      "message":"User data",
                      "user":{
                        "user_ref":"felitest",
                        "first_name":"Felicity",
                        "last_name":"Fauxname",
                        "email":"felicity2@example.com",
                        "contact_number":07777111111,
                        "dob":"1983-03-15",
                        "ni_number":"AA111111A",
                        "address_1":"17 False Road",
                        "address_2":"Buzzer 3",
                        "city":"Southampton",
                        "postcode":"SO11 1AA",
                        "bank_name":"Mega Bank",
                        "bank_account_name":"Felicity Fauxname",
                        "bank_account_number":12345678,
                        "bank_sort_code":112233,
                        "timesheets":
                          [
                            {
                              "timesheet_ref":"felitest-1",
                              "gross_val":1604.22,
                              "net_due":1069.41,
                              "time_payment_sent":null,
                              "time_received_payment":null,
                              "time_approved":null,
                              "user_ref":"felitest",
                              "client_ref":"stevetest"
                            },
                            {
                              "timesheet_ref":"felitest-2",
                              "gross_val":1627.30,
                              "net_due":756.08,
                              "time_payment_sent":null,
                              "time_received_payment":null,
                              "time_approved":null,
                              "user_ref":"felitest",
                              "client_ref":"stevetest"
                            },
                            {
                              "timesheet_ref":"felitest-3",
                              "gross_val":1627.30,
                              "net_due":806.24,
                              "time_payment_sent":null,
                              "time_received_payment":null,
                              "time_approved":null,
                              "user_ref":"felitest",
                              "client_ref":"stevetest"
                            }
                          ],
                        "clients":[
                          {
                            "name":"Steve Testwoman",
                            "address_1":"123 Fake Street",
                            "address_2":"Flat 42",
                            "postcode":"SW1 1AA",
                            "city":"London",
                            "contact_name":"James Madeupname",
                            "contact_phone":07777555555,
                            "contact_fax":0181555555,
                            "contact_email":"james@example.com",
                            "payroll_contact_name":"Andrew Fictional",
                            "payroll_contact_phone":07777777777,
                            "payroll_contact_fax":01816666666,
                            "payroll_contact_email":"andrew@example.com",
                            "client_ref":"stevetest",
                            "hirer":"",
                            "timesheets":
                              [
                                {
                                  "timesheet_ref":"felitest-1",
                                  "gross_val":1604.22,
                                  "net_due":1069.41,
                                  "time_payment_sent":"2020-03-03 15:30:08.535738",
                                  "time_received_payment":"2020-03-03 15:30:08.535738",
                                  "time_approved":"2020-03-03 15:30:08.535738",
                                  "user_ref":"felitest",
                                  "client_ref":"stevetest"
                                },
                                {
                                  "timesheet_ref":"felitest-2",
                                  "gross_val":1627.30,
                                  "net_due":756.08,
                                  "time_payment_sent":"2020-03-03 15:30:08.535738",
                                  "time_received_payment":"2020-03-03 15:30:08.535738",
                                  "time_approved":"2020-03-03 15:30:08.535738",
                                  "user_ref":"felitest",
                                  "client_ref":"stevetest"
                                },
                                {
                                  "timesheet_ref":"felitest-3",
                                  "gross_val":1627.30,
                                  "net_due":806.24,
                                  "time_payment_sent":"2020-03-03 15:30:08.535738",
                                  "time_received_payment":"2020-03-03 15:30:08.535738",
                                  "time_approved":"2020-03-03 15:30:08.535738",
                                  "user_ref":"felitest",
                                  "client_ref":"stevetest"
                                }
                              ]
                          }
                        ]
                      }
                    }
      tags:
        - Users

  /v2/user/:
    put:
      description: Allows adding/removing clients for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPut'
            examples:
              '0':
                value: |-
                  {
                      "user_ref": "stevetest",
                      "add_client_ref": [
                          "stevetest"
                      ]
                  }
      responses:
        '200':
          description: The user_ref of the edited user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_ref:
                    type: integer
              examples:
                '0':
                  value: |-
                    {
                      "message":"User updated",
                      "user_ref":"1"
                    }
      tags:
        - Users
    post:
      description: Submit a new users details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPost'
            examples:
              '0':
                value: |-
                  {
                      "first_name": "Felicity",
                      "last_name": "Fauxname",
                      "email": "felicity@example.com",
                      "contact_number": "07777111111",
                      "user_ref": "felitest",
                      "password": "pa55w0rd",
                      "dob": "15/03/1983",
                      "ni_number": "AA111111A",
                      "address_1": "17 False Road",
                      "address_2": "Buzzer 3",
                      "city": "Southampton",
                      "postcode": "SO11 1AA",
                      "bank_name": "Mega Bank",
                      "bank_account_name": "Felicity Fauxname",
                      "bank_sort_code": "112233",
                      "bank_account_number": "12345678",
                      "client_ref": [
                          "stevetest"
                      ]
                  }
      responses:
        '200':
          description: The user_ref of the new user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_ref:
                    type: string
              examples:
                '0':
                  value: |-
                    {
                      "message":"User created",
                      "user_ref":"felitest"
                    }
      tags:
        - Users

  /v2/clients:
    get:
      description: |
        Returns a list of clients. If no search parameters are provided, returns all clients.

      parameters:
          - in: query
            name: name
            schema:
              type: string
            description: The name of a client to search against
            example: steve
          - in: query
            name: address
            schema:
              type: string
            description: The address of a client to search against
            example: street
          - in: query
            name: email
            schema:
              type: string
            description: The email of a client to search against
            example: james@example

      responses:
        '200':
          description: A list of clients
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: All clients data
                  clients:
                    type: array
                    items:
                      $ref: '#/components/schemas/ClientResponse'
              examples:
                '0':
                  value: >-
                    {
                      "message":"All clients data",
                      "clients":[
                        {
                          "name":"Steve Testwoman",
                          "address_1":"123 Fake Street",
                          "address_2":"Flat 42",
                          "postcode":"SW1 1AA",
                          "city":"London",
                          "contact_name":"James Madeupname",
                          "contact_phone":07777555555,
                          "contact_fax":0181555555,
                          "contact_email":"james@example.com",
                          "payroll_contact_name":"Andrew Fictional",
                          "payroll_contact_phone":07777777777,
                          "payroll_contact_fax":01816666666,
                          "payroll_contact_email":"andrew@example.com",
                          "client_ref":"stevetest",
                          "hirer":"",
                          "timesheets":[
                            {
                              "timesheet_ref":"felitest-1",
                              "gross_val":1604.22,
                              "net_due":1069.41,
                              "time_payment_sent":null,
                              "time_received_payment":null,
                              "time_approved":null,
                              "user_ref":"felitest",
                              "client_ref":"stevetest"
                            },
                            {
                              "timesheet_ref":"felitest-2",
                              "gross_val":1627.31,
                              "net_due":756.08,
                              "time_payment_sent":null,
                              "time_received_payment":null,
                              "time_approved":null,
                              "user_ref":"felitest",
                              "client_ref":"stevetest"
                            },
                            {
                              "timesheet_ref":"felitest-3",
                              "gross_val":1627.31,
                              "net_due":806.24,
                              "time_payment_sent":null,
                              "time_received_payment":null,
                              "time_approved":null,
                              "user_ref":"felitest",
                              "client_ref":"stevetest"
                            }
                          ]
                        }
                      ]
                    }
      tags:
        - Clients

  /v2/client/{client_ref}:
    get:
      description: Fetch a specific clients details
      parameters:
        - in: path
          name: client_ref
          required: true
          schema:
            type: string
          description: The reference of the client
          example: stevetest
      responses:
        '200':
          description: The clients details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Client data
                  client: 
                    $ref: '#/components/schemas/ClientResponse'              
              examples:
                '0':
                  value: >-
                    {
                      "message":"Client data",
                      "client":{
                        "name":"Steve Testwoman",
                        "address_1":"123 Fake Street",
                        "address_2":"Flat 42",
                        "postcode":"SW1 1AA",
                        "city":"London",
                        "contact_name":"James Madeupname",
                        "contact_phone":07777555555,
                        "contact_fax":0181555555,
                        "contact_email":"james@example.com",
                        "payroll_contact_name":"Andrew Fictional",
                        "payroll_contact_phone":07777777777,
                        "payroll_contact_fax":01816666666,
                        "payroll_contact_email":"andrew@example.com",
                        "client_ref":"stevetest",
                        "hirer":"",
                        "timesheets":[
                          {
                            "timesheet_ref":"felitest-1",
                            "gross_val":1604.22,
                            "net_due":1069.41,
                            "time_payment_sent":null,
                            "time_received_payment":null,
                            "time_approved":null,
                            "user_ref":"felitest",
                            "client_ref":"stevetest"
                          },
                          {
                            "timesheet_ref":"felitest-2",
                            "gross_val":1627.30,
                            "net_due":756.08,
                            "time_payment_sent":null,
                            "time_received_payment":null,
                            "time_approved":null,
                            "user_ref":"felitest",
                            "client_ref":"stevetest"
                          },
                          {
                            "timesheet_ref":"felitest-3",
                            "gross_val":1627.30,
                            "net_due":806.24,
                            "time_payment_sent":null,
                            "time_received_payment":null,
                            "time_approved":null,
                            "user_ref":"felitest",
                            "client_ref":"stevetest"
                          }
                        ]
                      }
                    }
      tags:
        - Clients

  /v2/client/:
    put:
      description: Allows editing of a client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientPut'
            examples:
              '0':
                value: |-
                  {
                      "name": "Steve Testerman",
                      "address_1": "123 Fake Street",
                      "address_2": "Flat 42",
                      "postcode": "SW1 1AA",
                      "city": "London",
                      "contact_name": "James Madeupname",
                      "contact_phone": "07777555555",
                      "contact_fax": "0181555555",
                      "contact_email": "james@example.com",
                      "payroll_contact_name": "Andrew Fictional",
                      "payroll_contact_phone": "07777777777",
                      "payroll_contact_fax": "01816666666",
                      "payroll_contact_email": "andrew@example.com",
                      "client_ref": "stevetest"
                  }
      responses:
        '200':
          description: The edited clients client_ref
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_ref:
                    type: string
                  message:
                    type: string
              examples:
                '0':
                  value: |-
                    {
                      "message":"Client updated",
                      "client_ref":"stevetest"
                    }
      tags:
        - Clients
    post:
      description: Submit a new clients details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientPost'
            examples:
              '0':
                value: |-
                  {
                      "name": "Steve Testerman",
                      "address_1": "123 Fake Street",
                      "address_2": "Flat 42",
                      "postcode": "SW1 1AA",
                      "city": "London",
                      "contact_name": "James Madeupname",
                      "contact_phone": "07777555555",
                      "contact_fax": "0181555555",
                      "contact_email": "james@example.com",
                      "payroll_contact_name": "Andrew Fictional",
                      "payroll_contact_phone": "07777777777",
                      "payroll_contact_fax": "01816666666",
                      "payroll_contact_email": "andrew@example.com",
                      "client_ref": "stevetest"
                  }
      responses:
        '200':
          description: The new clients client_ref
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_ref:
                    type: string
                  message:
                    type: string
              examples:
                '0':
                  value: |-
                    {
                      "message":"Client created",
                      "client_ref":"stevetest"
                    }
      tags:
        - Clients

  /v2/timesheets:
    get:
      description: |
        Returns a list of timesheets. If no search parameters are provided, returns all timesheets.
      parameters:
          - in: query
            name: ref
            schema:
              type: string
            description: The reference of a timesheet to search for
            example: CM10-1
          - in: query
            name: grossgreater
            schema:
              type: number
            description: Search for timesheets where the gross value is greater than this number
            example: 537.25
          - in: query
            name: grossless
            schema:
              type: number
            description: Search for timesheets where the gross value is less than this number
            example: 537.25
          - in: query
            name: netgreater
            schema:
              type: number
            description: Search for timesheets where the net value is greater than this number
            example: 537.25
          - in: query
            name: netless
            schema:
              type: number
            description: Search for timesheets where the net value is less than this number
            example: 537.25
          - in: query
            name: sentbefore
            schema:
              type: string
            description: Search for timesheets where payment was sent before this date (DD/MM/YYYY)
            example: 23/01/2020
          - in: query
            name: sentafter
            schema:
              type: string
            description: Search for timesheets where payment was sent after this date (DD/MM/YYYY)
            example: 23/01/2020
          - in: query
            name: receivedbefore
            schema:
              type: string
            description: Search for timesheets where payment was received before this date (DD/MM/YYYY)
            example: 23/01/2020
          - in: query
            name: receivedafter
            schema:
              type: string
            description: Search for timesheets where payment was received after this date (DD/MM/YYYY)
            example: 23/01/2020
          - in: query
            name: approvedbefore
            schema:
              type: string
            description: Search for timesheets which were approved before this date (DD/MM/YYYY)
            example: 23/01/2020
          - in: query
            name: approvedafter
            schema:
              type: string
            description: Search for timesheets which were approved after this date (DD/MM/YYYY)
            example: 23/01/2020

      responses:
        '200':
          description: A list of timesheets
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: All timesheets data
                  timesheets:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimesheetResponse'
              examples:
                '0':
                  value: >-
                    {
                      "message":"All timesheets data",
                      "timesheets":[
                        {
                          "timesheet_ref":"felitest-1",
                          "gross_val":1604.22,
                          "net_due":1069.41,
                          "time_payment_sent":null,
                          "time_received_payment":null,
                          "time_approved":null,
                          "user_ref":"felitest",
                          "client_ref":"stevetest"
                        },
                        {
                          "timesheet_ref":"felitest-2",
                          "gross_val":1627.30,
                          "net_due":756.08,
                          "time_payment_sent":null,
                          "time_received_payment":null,
                          "time_approved":null,
                          "user_ref":"felitest",
                          "client_ref":"stevetest"
                        },
                        {
                          "timesheet_ref":"felitest-3",
                          "gross_val":1627.30,
                          "net_due":806.24,
                          "time_payment_sent":null,
                          "time_received_payment":null,
                          "time_approved":null,
                          "user_ref":"felitest",
                          "client_ref":"stevetest"
                        }
                      ]
                    }
      tags:
        - Timesheets

    put:
      description: Allows approving of timesheets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetPut'
            examples:
              '0':
                value: |-
                  {
                      "timesheets": [
                          "felitest-1"
                      ]
                  }
      responses:
        '200':
          description: The client_invoice_ref for the approved timesheets
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_invoice_ref:
                    type: string
                  message:
                    type: string
              examples:
                '0':
                  value: |-
                    {
                      "message":"Timesheets Approved",
                      "client_invoice_ref":"stevetest-1"
                    }
      tags:
        - Timesheets

  /v2/timesheet/:
    post:
      description: Submit a new timesheet details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetPost'
            examples:
              '0':
                value: |-
                  {
                      "user_ref": "felitest",
                      "client_ref": "stevetest",
                      "start_date": "14/01/2020",
                      "end_date": "20/01/2020",
                      "total_paid_hours": "30",
                      "hours": "10",
                      "overtime": "20",
                      "overtime_2": "1",
                      "overtime_3": "2",
                      "overtime_4": "3",
                      "overtime_5": "4",
                      "half_days": "5",
                      "rate": "43.15",
                      "overtime_rate": "11",
                      "overtime_rate_2": "22",
                      "overtime_rate_3": "33",
                      "overtime_rate_4": "44",
                      "overtime_rate_5": "55",
                      "half_day_rate": "66",
                      "client_rate": "12",
                      "client_overtime_rate": "23",
                      "client_overtime_rate_2": "34",
                      "client_overtime_rate_3": "45",
                      "client_overtime_rate_4": "56",
                      "client_overtime_rate_5": "67",
                      "client_half_day_rate": "78",
                      "notes": "This is a timesheet for work done by our very fine worker felicity on behalf of our client steve."
                  }
      responses:
        '200':
          description: A successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  timesheet_ref:
                    type: string
                  message:
                    type: string
              examples:
                '0':
                  value: |-
                    {
                      "message":"Time-sheet created",
                      "timesheet_ref":"felitest-1"
                    }
      tags:
        - Timesheets

  /v2/timesheet/{timesheet_ref}:
    get:
      description: Fetch a specific timesheet as a PDF
      parameters:
        - in: path
          name: timesheet_ref
          required: true
          schema:
            type: string
          description: The reference of the timesheet
          example: felitest-1
      responses:
        '200':
          description: A specific timesheet as a PDF
          content:
            application/pdf:
              schema:
                type: object
              examples: {}
      tags:
        - Timesheets

  /v2/client_invoices:
    get:
      description: Returns a list of all client invoices
      responses:
        '200':
          description: A list of client invoices
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_invoices:
                    type: array
                    items:
                      type: string
                  message:
                    type: string
              examples:
                '0':
                  value: |-
                    {
                      "message":"All client invoice data",
                      "client_invoices":[
                        "stevetest-1",
                        "stevetest-2"
                        ]
                    }
      tags:
        - Client Invoices



  /v2/client_invoice/{client_invoice_ref}:
    get:
      description: Fetch a specific client invoice details
      parameters:
        - in: path
          name: client_invoice_ref
          required: true
          schema:
            type: string
          description: The reference of the invoice
          example: stevetest-1
      responses:
        '200':
          description: A specific client invoice as a pdf
          content:
            application/pdf:
              schema:
                type: object
              examples: {}
      tags:
        - Client Invoices




        
components:
  schemas:

    UserPut:
      description: A JSON object containing information on clients to add/remove from a user
      type: object
      required:
      - user_ref
      properties:
        user_ref:
          type: string
          description: The reference of the user (max 10 chars)
          example: "felitest"
        add_client_ref:
          type: array
          description: An array containing the references of clients (max 10 chars) you wish to add to this user
          items:
            type: string
            example: ["stevetest", "bobtest"]
        delete_client_ref:
          type: array
          description: An array containing the references of clients (max 10 chars) you wish to remove from this user
          items:
            type: string
            example: ["shauntest", "andrewtest"]

    UserPost:
      description: A JSON object containing user information
      type: object
      required:
        - first_name
        - last_name
        - email
        - contact_number
      properties:
        first_name:
          type: string
          description: The users first name (max 20 chars)
          example: John
        last_name:
          type: string
          description: The users last name (max 20 chars)
          example: Williams
        email:
          type: string
          description: The users email address (max 50 chars)
          example: johnwilliams@example.com
        contact_number:
          type: string
          description: The users contact number (max 20 digits)
          example: 0181 555 1111
        user_ref:
          type: string
          description: A reference to describe the user - when creating a user, if one is not provided, it will be generated automatically (max 10 chars)
          example: johnuser
        password:
          type: string
          description: A password for the user (min 6 characters)
          example: pa55w0rd
        dob:
          type: string
          description: The users date of birth (YYYY-MM-DD)
          example: 1970-01-20
        ni_number:
          type: string
          description: The users national insurance number (exactly 9 characters)
          example: AA123456X
        address_1:
          type: string
          description: First line of the users address (max 40 chars)
          example: 14 High Street
        address_2:
          type: string
          description: Second line of the users address (max 40 chars)
          example: Top buzzer
        city:
          type: string
          description: The users city (max 35 chars)
          example: Winchester
        postcode:
          type: string
          description: The users postcode (max 10 chars)
          example: SO20 1AA
        bank_name:
          type: string
          description: The name of the bank the users uses (max 30 chars)
          example: Mega Bank
        bank_account_name:
          type: string
          description: The name on the bank account (max 18 chars)
          example: John Williams
        bank_sort_code:
          type: string
          description: The bank sort code (6 digits) do not include hyphens
          example: 112233
        bank_account_number:
          type: string
          description: The bank account number (8 digits)
          example: 12341234
        client_ref:
          type: array
          description: An array of client_ref's (max 10 chars) to be added to this user
          example: [stevetest, bobtest]
          items:
            type: string
            
    UserResponse:
      description: A JSON object containing user information
      type: object
      properties:
        first_name:
          type: string
          description: The users first name (max 20 chars)
          example: John
        last_name:
          type: string
          description: The users last name (max 20 chars)
          example: Williams
        email:
          type: string
          description: The users email address (max 50 chars)
          example: johnwilliams@example.com
        contact_number:
          type: string
          description: The users contact number (max 20 digits)
          example: 0181 555 1111
        user_ref:
          type: string
          description: A reference to describe the user (max 10 chars)
          example: johnuser
        password:
          type: string
          description: A password for the user (min 6 characters)
          example: pa55w0rd
        dob:
          type: string
          description: The users date of birth (YYYY-MM-DD)
          example: 1970-01-20
        ni_number:
          type: string
          description: The users national insurance number (exactly 9 characters)
          example: AA123456X
        address_1:
          type: string
          description: First line of the users address (max 40 chars)
          example: 14 High Street
        address_2:
          type: string
          description: Second line of the users address (max 40 chars)
          example: Top buzzer
        city:
          type: string
          description: The users city (max 35 chars)
          example: Winchester
        postcode:
          type: string
          description: The users postcode (max 10 chars)
          example: SO20 1AA
        bank_name:
          type: string
          description: The name of the bank the users uses (max 30 chars)
          example: Mega Bank
        bank_account_name:
          type: string
          description: The name on the bank account (max 18 chars)
          example: John Williams
        bank_sort_code:
          type: string
          description: The bank sort code (6 digits) do not include hyphens
          example: 112233
        bank_account_number:
          type: string
          description: The bank account number (8 digits)
          example: 12341234
        clients:
          type: array
          description: An array of clients associated with this user
          items:
            $ref: '#/components/schemas/ClientResponse'
        timesheets:
          type: array
          description: An array of timesheets associated with this user
          items:
            $ref: '#/components/schemas/TimesheetResponse'


    ClientPut:
      description: A JSON object containing client information
      type: object
      required:
        - client_ref
      properties:
        client_ref:
          type: string
          description: A reference to describe the client (max 10 chars)
          example: woodschool
        address_1:
          type: string
          description: First line of the clients address (max 40 chars)
          example: 123 Fictional Avenue
        address_2:
          type: string
          description: Second line of the clients address (max 40 chars)
          example: Basement flat
        city:
          type: string
          description: The clients city (max 35 chars)
          example: Edinburgh
        postcode:
          type: string
          description: The clients postcode (max 10 chars)
          example: EH1 1AA
        contact_name:
          type: string
          description: The name of the contact for the client (max 40 chars)
          example: Andrew Contacto
        contact_phone:
          type: string
          description: The phone number of the contact for the client (max 20 digits)
          example: 07777 123 123
        contact_email:
          type: string
          description: The email of the contact for the client (max 40 chars)
          example: andrew@example.com
        contact_fax:
          type: string
          description: The fax number of the contact for the client (max 20 digits)
          example: 0131 555 1234
        payroll_contact_name:
          type: string
          description: The name of the payroll contact for the client (max 40 chars)
          example: Mr Payroll
        payroll_contact_phone:
          type: string
          description: The phone number of the payroll contact for the client (max 20 digits)
          example: 07777 555 555
        payroll_contact_email:
          type: string
          description: The email of the payroll contact for the client (max 40 chars)
          example: payroll@example.com
        payroll_contact_fax:
          type: string
          description: The phone number of the payroll contact for the client (max 20 digits)
          example: 0131 555 6666
          
    ClientPost:
      description: A JSON object containing client information
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The clients name (max 40 chars)
          example: Woodward School
        client_ref:
          type: string
          description: A reference to describe the client - when creating a client, if one is not provided, it will be generated automatically (max 10 chars)
          example: woodschool
        address_1:
          type: string
          description: First line of the clients address (max 40 chars)
          example: 123 Fictional Avenue
        address_2:
          type: string
          description: Second line of the clients address (max 40 chars)
          example: Basement flat
        city:
          type: string
          description: The clients city (max 35 chars)
          example: Edinburgh
        postcode:
          type: string
          description: The clients postcode (max 10 chars)
          example: EH1 1AA
        contact_name:
          type: string
          description: The name of the contact for the client (max 40 chars)
          example: Andrew Contacto
        contact_phone:
          type: string
          description: The phone number of the contact for the client (max 20 digits)
          example: 07777 123 123
        contact_email:
          type: string
          description: The email of the contact for the client (max 40 chars)
          example: andrew@example.com
        contact_fax:
          type: string
          description: The fax number of the contact for the client (max 20 digits)
          example: 0131 555 1234
        payroll_contact_name:
          type: string
          description: The name of the payroll contact for the client (max 40 chars)
          example: Mr Payroll
        payroll_contact_phone:
          type: string
          description: The phone number of the payroll contact for the client (max 20 digits)
          example: 07777 555 555
        payroll_contact_email:
          type: string
          description: The email of the payroll contact for the client (max 40 chars)
          example: payroll@example.com
        payroll_contact_fax:
          type: string
          description: The phone number of the payroll contact for the client (max 20 digits)
          example: 0131 555 6666
          
    ClientResponse:
      type: object
      properties:
        name:
          type: string
          description: The clients name (max 40 chars)
          example: Woodward School
        client_ref:
          type: string
          description: A reference to describe the client (max 10 chars)
          example: woodschool
        address_1:
          type: string
          description: First line of the clients address (max 40 chars)
          example: 123 Fictional Avenue
        address_2:
          type: string
          description: Second line of the clients address (max 40 chars)
          example: Basement flat
        city:
          type: string
          description: The clients city (max 35 chars)
          example: Edinburgh
        postcode:
          type: string
          description: The clients postcode (max 10 chars)
          example: EH1 1AA
        contact_name:
          type: string
          description: The name of the contact for the client (max 40 chars)
          example: Andrew Contacto
        contact_phone:
          type: string
          description: The phone number of the contact for the client (max 20 digits)
          example: 07777 123 123
        contact_email:
          type: string
          description: The email of the contact for the client (max 40 chars)
          example: andrew@example.com
        contact_fax:
          type: string
          description: The fax number of the contact for the client (max 20 digits)
          example: 0131 555 1234
        payroll_contact_name:
          type: string
          description: The name of the payroll contact for the client (max 40 chars)
          example: Mr Payroll
        payroll_contact_phone:
          type: string
          description: The phone number of the payroll contact for the client (max 20 digits)
          example: 07777 555 555
        payroll_contact_email:
          type: string
          description: The email of the payroll contact for the client (max 40 chars)
          example: payroll@example.com
        payroll_contact_fax:
          type: string
          description: The phone number of the payroll contact for the client (max 20 digits)
          example: 0131 555 6666
        timesheets:
          type: array
          description: An array of timesheets associated with this client
          items:
            $ref: '#/components/schemas/TimesheetResponse'

    TimesheetPut:
      description: A JSON object containing an array of timesheet_ref's to approve
      type: object
      properties:
        timesheets:
          type: array
          items:
            type: string
            description: Timesheet reference (max 10 chars)
            example: ["felitest-1", "felitest-2"]

    TimesheetPost:
      description: A JSON object containing details of a timesheet
      required:
        - start_date
        - end_date
        - user_ref
        - total_paid_hours
      type: object
      properties:
        start_date:
          type: string
          description: The date this timesheet started (YYYY-MM-DD)
          example: 2020-01-21
        end_date:
          type: string
          description: The date this timesheet ended (YYYY-MM-DD)
          example: 2020-02-14
        user_ref:
          type: string
          description: A reference to describe the user (max 10 chars)
          example: steveuser
        total_paid_hours:
          type: number
          description: The total number of paid hours in this timesheet (float 7,2)
          example: 47.50
        client_ref:
          type: string
          description: A reference to describe the client (max 10 chars)
          example: woodschool
        hours:
          type: number
          description: The number of hours worked at normal rate in this timesheet (float 7,2)
          example: 30.25
        overtime:
          type: number
          description: The number of hours worked at overtime rate in this timesheet (float 7,2)
          example: 11.75
        overtime_2:
          type: number
          description: The number of hours worked at overtime rate 2 in this timesheet (float 7,2)
          example: 11.75
        overtime_3:
          type: number
          description: The number of hours worked at overtime rate 3 in this timesheet (float 7,2)
          example: 11.75
        overtime_4:
          type: number
          description: The number of hours worked at overtime rate 4 in this timesheet (float 7,2)
          example: 11.75
        overtime_5:
          type: number
          description: The number of hours worked at overtime rate 5 in this timesheet (float 7,2)
          example: 11.75
        half_days:
          type: number
          description: The number of hours worked at halfday rate in this timesheet (float 7,2)
          example: 1.50
        rate:
          type: number
          description: The normal pay rate in this timesheet (float 7,2)
          example: 20.00
        overtime_rate:
          type: number
          description: The overtime pay rate in this timesheet (float 7,2)
          example: 25.00
        overtime_rate_2:
          type: number
          description: The overtime 2 pay rate in this timesheet (float 7,2)
          example: 25.00
        overtime_rate_3:
          type: number
          description: The overtime 3 pay rate in this timesheet (float 7,2)
          example: 25.00
        overtime_rate_4:
          type: number
          description: The overtime 4 pay rate in this timesheet (float 7,2)
          example: 25.00
        overtime_rate_5:
          type: number
          description: The overtime 5 pay rate in this timesheet (float 7,2)
          example: 25.00
        half_day_rate:
          type: number
          description: The halfday pay rate in this timesheet (float 7,2)
          example: 25.00
        client_rate:
          type: number
          description: The normal client pay rate in this timesheet (float 7,2)
          example: 25.00
        client_overtime_rate:
          type: number
          description: The overtime client pay rate in this timesheet (float 7,2)
          example: 25.00
        client_overtime_rate_2:
          type: number
          description: The overtime 2 client pay rate in this timesheet (float 7,2)
          example: 25.00
        client_overtime_rate_3:
          type: number
          description: The overtime 3 client pay rate in this timesheet (float 7,2)
          example: 25.00
        client_overtime_rate_4:
          type: number
          description: The overtime 4 client pay rate in this timesheet (float 7,2)
          example: 25.00
        client_overtime_rate_5:
          type: number
          description: The overtime 5 client pay rate in this timesheet (float 7,2)
          example: 25.00
        client_half_day_rate:
          type: number
          description: The halfday client pay rate in this timesheet (float 7,2)
          example: 25.00
        notes:
          type: string
          description: Any notes about this timesheet (text)
          example: This is a timesheet for work done by our very fine worker felicity on behalf of our client Woodward School. Note that work was interrupted on the 2nd day, but she should still receive full pay.

    TimesheetResponse:
      type: object
      properties:
        timesheet_ref:
          type: string
          example: "felitest-1"
          description: The reference for this timesheet
        user_ref:
          type: string
          example: "felitest"
          description: The reference for the user associated with this timesheet
        client_ref:
          type: string
          example: "stevetest"
          description: The reference for the client associated with this timesheet
        net_due:
          type: number
          example: 1036.50
          description: The net amount due for this timesheet
        gross_val:
          type: number
          example: 1521.50
          description: The gross amount due for this timesheet
        time_approved: 
          type: string
          example: "2020-03-03 15:30:08.535738"
          description: The timestamp of when this timesheet was approved
        time_payment_sent: 
          type: string
          example: "2020-03-03 15:30:08.535738"
          description: The timestamp of when payment for this timesheet was sent
        time_received_payment: 
          type: string
          example: "2020-03-03 15:30:08.535738"
          description: The timestamp of when payment for this timesheet was received
          
          
tags:
  - name: Token
  - name: Users
  - name: Clients
  - name: Timesheets
  - name: Client Invoices