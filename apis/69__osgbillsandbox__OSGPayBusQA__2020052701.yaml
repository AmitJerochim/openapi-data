openapi: 3.0.0
info:
  description: Payment Bus
  version: "2020052701"
  title: OSGPayBus
  contact: {}
paths:
  /admin:
    get:
      parameters:
        - name: Token
          in: query
          required: true
          schema:
            type: string
        - name: OSGMID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-SubmitApp-VVU8TQQB524J/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            {
                "Token": "$input.params('Token')",
                "OSGMID": "$input.params('OSGMID')"
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      summary: FOR INTERNAL USE ONLY
  /boarding:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBoarding'
        required: true
        description: All fields are Mandatory for Boarding
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardingResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-CreateApp-1IXB2EWVEJEWT/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      parameters: []
      summary: Add a Merchant Account to Paybus
      description: If Vantiv is chosen as a processor Credentials are acquired online
  /cardverification:
    post:
      summary: Performs an validation of credit card.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardVerificationModel'
        required: true
        description: Currently only certified to use with Tsys Processor
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-CardVerification-Q710PA7L44ZL/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      parameters: []
      description: >-
        Performs an validation of credit card      
  /check:
    post:
      summary: Performs an internal check of the system.
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-SanityCheck-H4CEOJ8LJC5I/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      parameters: []
      description: >-
        Returns version number and progress of connections to Databases and
        security - Only Authorization Token is needed for Authentication
  /closebatch:
    post:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseBatchResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-CloseBatch-1N0P8RYJSGOPV/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      parameters: []
      summary: Used for Tsys Processor to Close a Batch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OSGMID:
                  type: string
                  example: "2342rw3242"
                OperatingUserID:
                  type: string
                  example: "JDoe23"
  /createjwt:
    get:
      parameters:
        - name: ApiKey
          in: query
          required: true
          schema:
            type: string
        - name: OSGMID
          in: query
          required: true
          schema:
            type: string
        - name: ExpiresInHours
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTCreateResponse'
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-OSGJwtGenerator-134YLUSOTHEGB/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            {
                "ApiKey": "$input.params('ApiKey')",
                "OSGMID": "$input.params('OSGMID')"
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      summary: >-
        Used to create a Authorization JWT (Json Web Token)
      description: >
        ** ExpiresInHours is not mandatory.  By default time is set to 2 years =
        730 days * 24 hours (17520)
  /holdfunding:
    post:
      summary: Function used to pay into Funding Account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TransactionAmount:
                  type: string
                  example: "100.02"
        description: |-
          Example:
          Uses a seperate Authorizer with Security restrictions.
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
      security:
        - HoldFundAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-SanityCheck-H4CEOJ8LJC5I/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      parameters: []
      description: >-
        Returns version number and progress of connections to Databases and
        security
  /payment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakePaymentAll'
        required: true
        description: |+
          Mandatory Credit Card Payment<br>
          {<br>
                   "TransactionAmount": 10.00,<br>
                   "PayMethod": {<br>
                         "CardHolder": "John Doe",<br>
                         "CardNumber": "5454545454545454",<br>
                         "ExpirationDate": "0626",<br>
                         "ZipCode": "33122"<br>
                      }<br>
          }<br>

          Mandatory ACH Payment<br>
          {<br>
              "TransactionAmount": 10.00,<br>
              "PayMethod": {<br>
                     "AccountHolder": "John Doe",<br>
                     "BankRouting": "123456789",<br>
                     "BankAccount": "123456789012345",<br>
                     “BankType”: “Checking” <br>
                    }<br>
          }<br>

          Mandatory Card on File payment:<br>
          {<br>
               "TransactionAmount": 10.00,<br>
               "PayMethod": {<br>
                       "TokenProfile": "23422"<br>
               }<br>
          }<br>
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-MakePayment-1VU3SYSVG5XPN/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      parameters: []
      summary: >-
        Used to Make a payment via Credit Card, or ACH.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundPayment'
        required: true
        description: "If a CardNumber and expiration Date are used then a Reference number is not needed.  This is for Returns without reference with Tsys processor."
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoidResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-RefundPayment-KAAUF1BMFNW7/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      summary: "Used to make refunds or returns"
    delete:
      parameters:
        - name: ReferenceNumber
          in: query
          required: true
          schema:
            type: string
            example: "230890490830"
        - name: TransID
          in: query
          required: true
          schema:
            type: string
            example: "230890490830"
        - name: Method
          in: query
          required: true
          schema:
            type: string
            example: "cc"
        - name: Verbose
          in: query
          required: true
          schema:
            type: string
            example: "true"
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-VoidPayment-65O2HX3P6FCL/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
  /processlockbox:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayLockboxModel'
        required: true
        description: "-- Mandatory Request<br> {<br>\"TransactionAmount\": 1.22,<br>\"CheckFrontImage\": \"SUkqAAgAAAARAP4ABAAMIjgagcYi\",<br>\"CheckMICR\": \"t111016064t 1101335o 1363\",<br>\"MICRSymbolSet\": \"toad ?\"<br>}"
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-ProcessLockbox-19UHVS7SOYD06/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      parameters: []
      summary: Lockbox ACH payment processing through Jack Henry
  /reporting/merchant:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-Describe-1ASDV9QRATA6I/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            {
                "Token": "$input.params('Token')",
                "OSGMID": "$input.params('OSGMID')"
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      summary: "Used to get stored information for the merchant"
  /reporting/payment:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-Thresholds-17Q5HD2LLJKFI/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            {
                "Token": "$input.params('Token')",
                "OSGMID": "$input.params('OSGMID')"
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      summary: "Used to get Credentials information from Merchant"
    post:
      requestBody:
        $ref: '#/components/requestBodies/ReportingModel'
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingDepositResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-request-validator: Validate body
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-Deposit-193VY3811B6PK/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      summary: "Used to get Deposit Information by Query"
  /reporting/transaction:
    get:
      parameters:
        - name: TransID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoidResponse'
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-TxStatus-TLUUSQ1NF5LU/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            {
                "Token": "$input.params('Token')",
                "OSGMID": "$input.params('OSGMID')",
                "TransID": "$input.params('TransID')"
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
    post:
      requestBody:
        $ref: '#/components/requestBodies/ReportingModel'
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingTransResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-request-validator: Validate body
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-Transactions-7SYSJ5JLT04H/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      parameters: []
  /tokenize:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizeProfile'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
      security:
        - PayJwtAuthorizer: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-Tokenization-B0HFT609V878/invocations
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: |-
            { 
                "PrincipalID": "$context.authorizer.principalId",
                "Context": "$context.authorizer.credToken",
                "Body": $input.json('$')
            }
        passthroughBehavior: when_no_templates
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws
      parameters: []
      summary: >-
        Used for Card on file creation
x-amazon-apigateway-request-validators:
  Validate body:
    validateRequestParameters: false
    validateRequestBody: true
servers:
  - url: 'https://8mogbmw4ef.execute-api.us-west-2.amazonaws.com/QA'
components:
  requestBodies:
    ReportingModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportingModel'
      required: true
  securitySchemes:
    PayJwtAuthorizer:
      type: apiKey
      name: AuthorizationToken
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-OSGJwtAuthorizer-1B6AT7EVGZPBH/invocations
        authorizerResultTtlInSeconds: 300
        type: token
    HoldFundAuthorizer:
      type: apiKey
      name: AuthorizationToken
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:266222082867:function:GwCoreDynaDbApiStack-OSGHoldAuthorizer-N8XVQ3T0X76O/invocations
        authorizerResultTtlInSeconds: 300
        type: token
  schemas:
    MakePaymentAll:
      type: object
      required:
        - TransactionAmount
        - PayMethod
      properties:
        OrderID:
          type: string
          example: "102003"
        TransactionAmount:
          type: number
          example: 100.20
        ConvFee:
          type: number
          example: "0.40"
        Memo:
          type: string
          example: "Test Account (use TEST when sending a 0.00 Transaction amount)"
        Custom1:
          type: string
          example: "User Defined field 1"
        Custom2:
          type: string
          example: "User Defined field 2"
        Custom3:
          type: string
          example: "User Defined field 3"
        Custom4:
          type: string
          example: "User Defined field 4"
        Auth:
          type: string
          example: "true"
        Verbose:
          type: string
          example: "true"
        CustInitTrans: 
          type: string
          example: "true"
        PayMethod:
          type: object
          properties:
            AccountHolder:
              type: string
              example: John Doe
            BankAccount:
              type: string
              example: 10203904044
            BankRouting:
              type: string
              example: 011099111
            BankType:
              type: string
              example: "Checking"
            ZipCode:
              type: string
              example: 20930
            CardHolder:
              type: string
              example: "Jane Doe"
            CardNumber:
              type: string
              example: 5454545454545454
            ExpirationDate:
              type: string
              example: 0526
            BillingAddress:
              type: string
              example: "100 Main St."
            CVV2:
              type: string
              example: 999
            TokenProfile:
              type: string
              example: 1022
            ProcessorProfile:
              type: string
              example: 2903093404
            Method:
              type: string
              example: "cc"
            CaptureRef:
              type: string
              example: "23242332334"
            IsRecurring:
              type: string
              example: "true"
            CommercialCardLevel:
              type: string
              example: "LEVEL2"
            SalesTax:
              type: string
              example: "0.02"
            PurchaseOrder:
              type: string
              example: "209200203"
            OrderDate:
              type: string
              example: "2020-03-01"
            ChargeDescriptor:
              type: string
              example: "What type of charge is this"
            CustomerRefID:
              type: string
              example: "T02030-203"
            SupplierRefNumber:
              type: string
              example: "another ref number"
            ShipToZip:
              type: string
              example: "90210"
            CustomerVATNumber:
              type: string
              example: "298398201"
            SummaryCommodityCode:
              type: string
              example: "209392-0200"
            ShippingCharges:
              type: string
              example: "2.20"
            DutyCharges: 
              type: string
              example: "1.10"
            ShipFromZip:
              type: string
              example: "90210"
            DestinationCountryCode:
              type: string
              example: "US"
            VatInvoice:
              type: string
              example: "099200293"
            TaxDetails:
              type: object
              properties:
                TaxType:
                  type: string
                  example: "VAT"
                TaxAmount:
                  type: string
                  example: "0.20"
                TaxRate:
                  type: string
                  example: "0.02"
                TaxCategory:
                  type: string
                  example: "Service"
            ProductDetails:
              type: object
              properties:
                ProductCode:
                  type: string
                  example: "293"
                ProductName:
                  type: string
                  example: "Unitasker Garlic press"
                Price:
                  type: string
                  example: "7.99"
                Quantity:
                  type: string
                  example: "1"
                MeasurementUnit:
                  type: string
                  example: "lbs"
                ProductCommodityCode:
                  type: string
                  example: "10004"
      title: MakePayRequestAll
    Empty:
      type: object
      title: Empty Schema
    VoidResponse:
      type: object
      properties:
        HttpStatusCode:
          type: string
          example: "200"
        Response:
          type: string
          example: "1"
        ResponseTxt:
          type: string
          example: "Approved"
        TransID:
          type: string
          example: "29889398929-28392-28"
        ExtResponseTxt:
          type: string
          example: "Full Processor response, goes here"
        TransactionType:
          type: string
          example: "9"
      title: Void Payment Response
    JWTCreateResponse:
      type: object
      properties:
        Response:
          type: string
          example: "1"
        ResponseTxt:
          type: string
          example: "Successful"
        JWebToken:
          type: string
          example: "2988925t398929.wouoeio23949.3oi4393lkls"
      title: JWT Creator Response
    ReportingModel:
      type: object
      properties:
        Filter:
          type: array
          items:
            type: object
            properties:
              Field:
                type: string
              Op:
                type: string
              Data:
                type: string
        Start:
          type: number
        Limit:
          type: number
      title: ReportingModel
    PayLockboxModel:
      type: object
      required:
        - CheckFrontImage
        - CheckMICR
        - MICRSymbolSet
        - TransactionAmount
      properties:
        OrderID:
          type: string
          example: "10000249"
        TransactionAmount:
          type: number
          example: 12.03
        ConvFee:
          type: number
          example: 2.00
        Memo:
          type: string
          example: "Test Account"
        Custom1:
          type: string
          example: "March HOA Payment"
        Verbose:
          type: string
          example: "true"
        AccountHolder:
          type: string
          example: "John Doe"
        AccountType:
          type: string
          example: "Checking"
        CheckFrontImage:
          type: string
          example: "SUkqAAgAAAARAP4ABAABAAAAAAAAAAABAwAYi"
        CheckBackImage:
          type: string
          example: "SUkqAAgAAAARAP4ABAABAAAAAAAAAAABAwAYi"
        CheckMICR:
          type: string
          example: "t111016064t 1101335o 1363"
        MICRSymbolSet:
          type: string
          example: "toad ?"
        IsBusiness:
          type: string
          example: "0"
      title: LockBox Payment Model
    CardVerificationModel:
      type: object
      required:
        - CardNumber
        - ExpirationDate
        - ZipCode
      properties:
        CardNumber:
          type: string
          example: "4111111111111111"
        ExpirationDate:
          type: string
          example: "1222"
        ZipCode:
          type: string
          example: "90210"
        BillingAddress:
          type: string
          example: "1010 Main Street"
        CVV2:
          type: string
          example: "999"
        Verbose:
          type: string
          example: "true"
      title: Card Verification Model
    TokenizeProfile:
      type: object
      required:
        - Action
        - PayMethod
      properties:
        Action:
          type: number
          example: "1"
        PayMethod:
          type: object
          properties:
            AccountHolder:
              type: string
              example: "John Doe"
            BankAccount:
              type: string
              example: "2093039438402"
            BankRouting:
              type: string
              example: "999999111"
            BankType:
              type: string
              example: "Checking"
            ZipCode:
              type: string
              example: "90210"
            CardHolder:
              type: string
              example: "Jane Doe"
            CardNumber:
              type: string
              example: "4020202003300110"
            ExpirationDate:
              type: string
              example: "0322"
            BillingAddress:
              type: string
              example: "2010 Main St."
            CVV2:
              type: string
              example: "111"
      title: MakePayRequestAll
    CreateBoarding:
      type: object
      required:
        - App
      properties:
        App:
          type: object
          properties:
            OSGMID:
              type: string
              minLength: 3
              maxLength: 40
              example: "202393sio02"
            DBAName:
              type: string
              minLength: 3
              maxLength: 40
              example: "ACME Property Management"
            LegalName:
              type: string
              minLength: 3
              maxLength: 40
              example: "ACME Property Management"
            Address:
              type: string
              minLength: 3
              maxLength: 40
              example: "100 Main St."
            City:
              type: string
              minLength: 2
              maxLength: 28
              example: "Seattle"
            State:
              type: string
              maxLength: 2
              example: "WA"
              enum:
                - AL
                - AK
                - AZ
                - AR
                - CA
                - CO
                - CT
                - DE
                - DC
                - FL
                - GA
                - HI
                - ID
                - IL
                - IN
                - IA
                - KS
                - KY
                - LA
                - MA
                - ME
                - MD
                - MI
                - MN
                - MS
                - MO
                - MT
                - NE
                - NV
                - NH
                - NJ
                - NM
                - NY
                - NC
                - ND
                - OH
                - OK
                - OR
                - PA
                - RI
                - SC
                - SD
                - TN
                - TX
                - UT
                - VT
                - VA
                - WA
                - WV
                - WI
                - WY
            Zip:
              type: string
              maxLength: 5
              pattern: '^[0-9]{5}(-[0-9]{4})?$'
              example: "10203"
            Phone:
              type: string
              maxLength: 20
              pattern: '^(\([0-9]{3}\))?[0-9]{3}-[0-9]{4}$'
              example: "(201)203-3945"
            BusinessDescription:
              type: string
              minLength: 3
              maxLength: 40
              example: "Property"
            BusinessStructure:
              type: string
              minLength: 3
              maxLength: 40
              example: "SoleProprietorship"
            DateFormed:
              type: string
              minLength: 8
              maxLength: 8
              example: "01/29/2010"          
            OwnershipDate:
              type: string
              minLength: 8
              maxLength: 8
              example: "02/01/2010"
            FTID:
              type: string
              minLength: 9
              maxLength: 9
              example: "20-3020930"
            BillingAddress:
              type: string
              minLength: 3
              maxLength: 40
              example: "10 Main St."
            BillingCity:
              type: string
              minLength: 2
              maxLength: 28
              example: "Seattle"
            BillingState:
              type: string
              minLength: 2
              maxLength: 2
              example: "WA"
              enum:
                - AL
                - AK
                - AZ
                - AR
                - CA
                - CO
                - CT
                - DE
                - DC
                - FL
                - GA
                - HI
                - ID
                - IL
                - IN
                - IA
                - KS
                - KY
                - LA
                - MA
                - ME
                - MD
                - MI
                - MN
                - MS
                - MO
                - MT
                - NE
                - NV
                - NH
                - NJ
                - NM
                - NY
                - NC
                - ND
                - OH
                - OK
                - OR
                - PA
                - RI
                - SC
                - SD
                - TN
                - TX
                - UT
                - VT
                - VA
                - WA
                - WV
                - WI
                - WY
            BillingZip:
              type: string
              minLength: 5
              maxLength: 5
              pattern: '^[0-9]{5}(-[0-9]{4})?$'
              example: "10203"
            BankAccountName:
              type: string
              minLength: 3
              maxLength: 40
              example: "ACME Property Trust"
            BankAccountABA:
              type: string
              minLength: 9
              maxLength: 9
              example: "011030221"
            BankAccountNumber:
              type: string
              minLength: 4
              maxLength: 17
              example: "1093030940984"
            BankAccountType:
              type: string
              minLength: 1
              maxLength: 1
              example: "c"
              enum:
                - c
                - C
                - s
                - S
            ContactName:
              type: string
              minLength: 4
              maxLength: 40
              example: "Fred Johnson"
            ContactAddress:
              type: string
              minLength: 3
              maxLength: 40
              example: "11 Main St"
            ContactCity:
              type: string
              minLength: 2
              maxLength: 28
              example: "Seattle"
            ContactState:
              type: string
              minLength: 2
              maxLength: 2
              example: "WA"
              enum:
                - AL
                - AK
                - AZ
                - AR
                - CA
                - CO
                - CT
                - DE
                - DC
                - FL
                - GA
                - HI
                - ID
                - IL
                - IN
                - IA
                - KS
                - KY
                - LA
                - MA
                - ME
                - MD
                - MI
                - MN
                - MS
                - MO
                - MT
                - NE
                - NV
                - NH
                - NJ
                - NM
                - NY
                - NC
                - ND
                - OH
                - OK
                - OR
                - PA
                - RI
                - SC
                - SD
                - TN
                - TX
                - UT
                - VT
                - VA
                - WA
                - WV
                - WI
                - WY
            ContactZip:
              type: string
              minLength: 5
              maxLength: 5
              pattern: '^[0-9]{5}(-[0-9]{4})?$'
              example: "10203"
            ContactPhone:
              type: string
              minLength: 10
              maxLength: 10
              pattern: '^(\([0-9]{3}\))?[0-9]{3}-[0-9]{4}$'
              example: "(302)499-1121"
            ContactBOD:
              type: string
              minLength: 8
              maxLength: 8
              example: "01/01/1980"
            ContactPosition:
              type: string
              minLength: 2
              maxLength: 20
              example: "CEO"
            ContactEmail:
              type: string
              minLength: 4
              maxLength: 40
              example: "fjohnson@acmepropertyman.com"
            ContactSSN:
              type: string
              minLength: 9
              maxLength: 9
              example: "999999999"
            ServiceCC:
              type: boolean
              example: "true"
            ServiceEC:
              type: boolean
              example: "true"
      title: CreateBoarding
    RefundPayment:
      type: object
      required:
        - ReferenceNumber
        - TransactionAmount
        - Method
      properties:
        Verbose:
          type: string
          example: "true"
        ReferenceNumber:
          type: string
          example: "T20982309302"
        TransID:
          type: string
          example: "2983892-2389sldio2-9839sld"
        TransactionAmount:
          type: number
          example: 12.22
        Method:
          type: string
          example: "cc"
        CardNumber:
          type: string
          example: "4030002211112222"
        ExpirationDate:
          type: string
          example: "0322"
      title: RefundPayment
    CheckResponse:
      type: object
      properties: 
        SecretsAccess:
          type: string
          example: "Good"
        DynamoDbCount:
          type: string
          example: "304"
        SQLCount: 
          type: string
          example: "400"
        JackHenryCheck: 
          type: string
          example: "Good"
        VersionNumber:
          type: string
          example: "1.1.6.3"
    CloseBatchResponse:
      type: object
      properties: 
        Status:
          type: string
          example: "Good"
        ResponseCode:
          type: string
          example: "1"
        ResponseMessage: 
          type: string
          example: "Success"
        SaleCount: 
          type: string
          example: "302"
        SaleAmount:
          type: string
          example: "324234.21"
        ReturnCount:
          type: string
          example: "320"
        ReturnAmount:
          type: string
          example: "4234452.22"
    BasicResponse:
      type: object
      properties:
        HttpStatusCode:
          type: string
          example: "200"
        Response:
          type: string
          example: "1"
        ResponseTxt:
          type: string
          example: "Approved"
        TotalAmount:
          type: string
          example: "10.01"
        TransID:
          type: string
          example: "32948743-298lio94-30893-003"
        AuthCode:
          type: string
          example: "T0930lkdl"
        Reference:
          type: string
          example: "T0930lkdl"
        AvsResponse:
          type: string
          example: "Z"
        Fee:
          type: string
          example: ".03"
        ProfileToken:
          type: string
          example: "200"
        OrderID:
          type: string
          example: "1000392"
        ExtResponseTxt:
          type: string
          example: "This could be the full processor response is verbose=true is used."
        ResponseCode:
          type: string
          example: "A002"
        TransactionType:
          type: string
          example: "1"
      title: Payment Response
    ProfileResponse:
      type: object
      properties:
        Response:
          type: string
          example: "1"
        Responsetxt: 
          type: string
          example: "Success"
        Profiles: 
          type: object
          properties:
            TokenID:
              type: string
              example: "10383"
            Name:
              type: string
              example: "John Doe"
            Type:
              type: string
              example: "Visa"
            Card:
              type: string
              example: "---0024"
            ExpDate:
              type: string
              example: "05/23"
    ReportingTransResponse:
      type: object
      properties:
        Response:
          type: string
          example: "1"
        ResponseTxt: 
          type: string
          example: "Success"
        Records: 
          type: object
          properties:
            OSGMID:
              type: string
              example: "10383433"
            TransID:
              type: string
              example: "3452354-3904-390404df"
            PayorName:
              type: string
              example: "John Customer"
            PaymentDate:
              type: string
              example: "2020-01-12"
            PayMethod:
              type: string
              example: "CC"
            PayType:
              type: string
              example: "Sale"
            AuthCode:
              type: string
              example: "23543dfg453"
            NetAmount:
              type: string
              example: "123.79"
            ConvenienceFee:
              type: string
              example: "1.20"
            NetCharge:
              type: string
              example: "124.99"
            Type:
              type: string
              example: "Regular"
            Settled:
              type: string
              example: "false"
            OrderID:
              type: string
              example: "2323-1"
            Status:
              type: string
              example: "Approved"
    ReportingDepositResponse:
      type: object
      properties:
        Response:
          type: string
          example: "1"
        ResponseTxt: 
          type: string
          example: "Success"
        Records: 
          type: object
          properties:
            OSGMID:
              type: string
              example: "10383433"
            TransID:
              type: string
              example: "3452354-3904-390404df"
            PayorName:
              type: string
              example: "John Customer"
            SettlementDate:
              type: string
              example: "2020-01-12"
            PayMethod:
              type: string
              example: "CC"
            BatchType:
              type: string
              example: "Transaction"
            BatchID:
              type: string
              example: "23522"
            Debit:
              type: string
              example: "123.79"
            Credit:
              type: string
              example: "1.20"
            TransDate:
              type: string
              example: "2020-02-01"
            TransType:
              type: string
              example: "Regular"
    BoardingResponse:
      type: object
      properties:
        Response:
          type: string
          example: "1"
        Responsetxt:
          type: string
          example: "Success"
        OSGMID:
          type: string
          example: "23223232432"
        Errors:
          type: string
          example: "Any Errors would appear here"
        Credentials:
          type: string
          example: "List of credentials for this processor"
    DescribeResponse:
      type: object
      properties:
        Response:
          type: string
          example: "1"
        ResponseTxt:
          type: string
          example: "Success"
        Merchant:
          type: object
          properties:
            OSGMID:
              type: string
              minLength: 3
              maxLength: 40
              example: "202393sio02"
            DBAName:
              type: string
              minLength: 3
              maxLength: 40
              example: "ACME Property Management"
            LegalName:
              type: string
              minLength: 3
              maxLength: 40
              example: "ACME Property Management"
            Address:
              type: string
              minLength: 3
              maxLength: 40
              example: "100 Main St."
            City:
              type: string
              minLength: 2
              maxLength: 28
              example: "Seattle"
            State:
              type: string
              maxLength: 2
              example: "WA"
              enum:
                - AL
                - AK
                - AZ
                - AR
                - CA
                - CO
                - CT
                - DE
                - DC
                - FL
                - GA
                - HI
                - ID
                - IL
                - IN
                - IA
                - KS
                - KY
                - LA
                - MA
                - ME
                - MD
                - MI
                - MN
                - MS
                - MO
                - MT
                - NE
                - NV
                - NH
                - NJ
                - NM
                - NY
                - NC
                - ND
                - OH
                - OK
                - OR
                - PA
                - RI
                - SC
                - SD
                - TN
                - TX
                - UT
                - VT
                - VA
                - WA
                - WV
                - WI
                - WY
            Zip:
              type: string
              maxLength: 5
              pattern: '^[0-9]{5}(-[0-9]{4})?$'
              example: "10203"
            Phone:
              type: string
              maxLength: 20
              pattern: '^(\([0-9]{3}\))?[0-9]{3}-[0-9]{4}$'
              example: "(201)203-3945"
            BusinessDescription:
              type: string
              minLength: 3
              maxLength: 40
              example: "Property"
            BusinessStructure:
              type: string
              minLength: 3
              maxLength: 40
              example: "SoleProprietorship"
            DateFormed:
              type: string
              minLength: 8
              maxLength: 8
              example: "01/29/2010"          
            OwnershipDate:
              type: string
              minLength: 8
              maxLength: 8
              example: "02/01/2010"
            FTID:
              type: string
              minLength: 9
              maxLength: 9
              example: "20-3020930"
            BillingAddress:
              type: string
              minLength: 3
              maxLength: 40
              example: "10 Main St."
            BillingCity:
              type: string
              minLength: 2
              maxLength: 28
              example: "Seattle"
            BillingState:
              type: string
              minLength: 2
              maxLength: 2
              example: "WA"
              enum:
                - AL
                - AK
                - AZ
                - AR
                - CA
                - CO
                - CT
                - DE
                - DC
                - FL
                - GA
                - HI
                - ID
                - IL
                - IN
                - IA
                - KS
                - KY
                - LA
                - MA
                - ME
                - MD
                - MI
                - MN
                - MS
                - MO
                - MT
                - NE
                - NV
                - NH
                - NJ
                - NM
                - NY
                - NC
                - ND
                - OH
                - OK
                - OR
                - PA
                - RI
                - SC
                - SD
                - TN
                - TX
                - UT
                - VT
                - VA
                - WA
                - WV
                - WI
                - WY
            BillingZip:
              type: string
              minLength: 5
              maxLength: 5
              pattern: '^[0-9]{5}(-[0-9]{4})?$'
              example: "10203"
            BankAccountName:
              type: string
              minLength: 3
              maxLength: 40
              example: "ACME Property Trust"
            BankAccountABA:
              type: string
              minLength: 9
              maxLength: 9
              example: "011030221"
            BankAccountNumber:
              type: string
              minLength: 4
              maxLength: 17
              example: "1093030940984"
            BankAccountType:
              type: string
              minLength: 1
              maxLength: 1
              example: "c"
              enum:
                - c
                - C
                - s
                - S
            ContactName:
              type: string
              minLength: 4
              maxLength: 40
              example: "Fred Johnson"
            ContactAddress:
              type: string
              minLength: 3
              maxLength: 40
              example: "11 Main St"
            ContactCity:
              type: string
              minLength: 2
              maxLength: 28
              example: "Seattle"
            ContactState:
              type: string
              minLength: 2
              maxLength: 2
              example: "WA"
              enum:
                - AL
                - AK
                - AZ
                - AR
                - CA
                - CO
                - CT
                - DE
                - DC
                - FL
                - GA
                - HI
                - ID
                - IL
                - IN
                - IA
                - KS
                - KY
                - LA
                - MA
                - ME
                - MD
                - MI
                - MN
                - MS
                - MO
                - MT
                - NE
                - NV
                - NH
                - NJ
                - NM
                - NY
                - NC
                - ND
                - OH
                - OK
                - OR
                - PA
                - RI
                - SC
                - SD
                - TN
                - TX
                - UT
                - VT
                - VA
                - WA
                - WV
                - WI
                - WY
            ContactZip:
              type: string
              minLength: 5
              maxLength: 5
              pattern: '^[0-9]{5}(-[0-9]{4})?$'
              example: "10203"
            ContactPhone:
              type: string
              minLength: 10
              maxLength: 10
              pattern: '^(\([0-9]{3}\))?[0-9]{3}-[0-9]{4}$'
              example: "(302)499-1121"
            ContactBOD:
              type: string
              minLength: 8
              maxLength: 8
              example: "01/01/1980"
            ContactPosition:
              type: string
              minLength: 2
              maxLength: 20
              example: "CEO"
            ContactEmail:
              type: string
              minLength: 4
              maxLength: 40
              example: "fjohnson@acmepropertyman.com"
            ContactSSN:
              type: string
              minLength: 9
              maxLength: 9
              example: "999999999"
            ServiceCC:
              type: boolean
              example: "true"
            ServiceEC:
              type: boolean
              example: "true"
    CredentialsResponse:
      type: object
      properties:
        Response:
          type: string
          example: "1"
        ResponseTxt:
          type: string
          example: "Success"
        Credentials:
          type: object
          properties:
            Name:
              type: string
              minLength: 3
              maxLength: 40
              example: "202393sio02"
            Values:
              type: object
              properties:
                LowPayRange:
                  type: number
                  example: 10.00
                HighPayRange:
                  type: number
                  example: 1000000.00
                ConvenienceFee:
                  type: number
                  example: 1.00
                ConvenienceFeeFloat:
                  type: number
                  example: 0.00
  links: {}
  callbacks: {}
security: []