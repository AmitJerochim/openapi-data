openapi: 3.0.1
info:
  title: API
  description: 'Maxicare Service Application API v1.0'
  version: "1.03"
servers:
  - url: 'https://maxicare-service-test.azure-api.net/api'
paths:
  /customers:
    get:
      tags:
        - Customers
      summary: customers
      operationId: get-customers
      parameters:
        - name: pageNumber
          in: query
          description: The page number of records to be returned.
          required: true
          schema:
            enum:
              - 1
            type: integer
            default: 1
        - name: itemsPerPage
          in: query
          description: Number of items to be returned on each page
          required: true
          schema:
            enum:
              - 10
            type: integer
            default: 10
        - name: userId
          in: query
          description: If passed through will restrict returned list based on customers that user has access to. This is automatically passed through from the JWT token and not required to be manually passed through.
          schema:
            type: integer
        - name: search
          in: query
          description: Enables you search based on customer name. This will apply a Like SQL to filter results.
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authorization header specifying the word Bearer followed by the JWT token
          schema:
            enum:
              - 'Bearer '
            type: string
            default: 'Bearer '
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
              example:
                recordsReturned: 0
                pageNumber: 0
                totalRecords: 0
                customers:
                  - customerId: 0
                    customerName: string
                    contact: string
                    fullAddress: string
                    address: string
                    suburb: string
                    postcode: string
                    state: string
                    phone: string
                    fax: string
                    email: string
                    comments: string
                    siteCount: 0
                    locationCount: 0
                    productCount: 0
  '/customers/{id}':
    get:
      tags:
        - Customers
      summary: customer
      operationId: get-customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: 'integer'
        - name: Authorization
          in: header
          description: Authorization header specifying the word Bearer followed by the JWT token
          schema:
            enum:
              - 'Bearer '
            type: string
            default: 'Bearer '
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              example:
                customerId: 0
                customerName: string
                contact: string
                fullAddress: string
                address: string
                suburb: string
                postcode: string
                state: string
                phone: string
                fax: string
                email: string
                comments: string
                siteCount: 0
                sites:
                  - siteId: 0
                    siteName: string
                    locationId: 0
                    locationName: string
                    customerId: 0
                    customerName: string
                    contact: string
                    address: string
                    suburb: string
                    postcode: string
                    state: string
                    phone: string
                    fax: string
                    email: string
                    comments: string
                    productCount: 0
                locationCount: 0
                locations:
                  - locationId: 0
                    customerId: string
                    customer: string
                    siteCount: 0
                    productCount: 0
                productCount: 0
  /list/customers:
    get:
      tags:
        - Lists
      summary: customerList
      operationId: get-customerlist
      parameters:
        - name: userId
          in: query
          schema:
            type: integer
        - name: Authorization
          in: header
          required: false
          schema:
            type: 'string'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerList'
              example:
                - customerId: 0
                  customerName: string
  /list/productCategories:
    get:
      tags:
        - Lists
      summary: productCategoryList
      operationId: get-productcategorylist
      parameters:
        - name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryList'
              example:
                - id: 0
                  name: string
  /locations:
    get:
      tags:
        - Locations
      summary: locations
      operationId: get-locations
      parameters:
        - name: pageNumber
          in: query
          required: true
          schema:
            enum:
              - 1
            type: integer
            default: 1
        - name: itemsPerPage
          in: query
          required: true
          schema:
            enum:
              - 10
            type: integer
            default: 10
        - name: userId
          in: query
          schema:
            type: integer
        - name: custId
          in: query
          schema:
            type: integer
        - name: Authorization
          in: header
          description: Authorization header specifying the word Bearer followed by the JWT token
          schema:
            enum:
              - 'Bearer '
            type: string
            default: 'Bearer '
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
              example:
                recordsReturned: 0
                pageNumber: 0
                totalRecords: 0
                locations:
                  - locationId: 0
                    locationName: string
                    customerId: string
                    customer: string
                    siteCount: 0
                    productCount: 0
  '/locations/{id}':
    get:
      tags:
        - Locations
      summary: location
      operationId: get-location
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: 'integer'
        - name: Authorization
          in: header
          schema:
            enum:
              - 'Bearer '
            type: string
            default: 'Bearer '
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
              example:
                locationId: 0
                locationName: string
                customerId: string
                customer: string
                siteCount: 0
                sites:
                  - siteId: 0
                    siteName: string
                    locationId: 0
                    locationName: string
                    customerId: 0
                    customerName: string
                    contact: string
                    address: string
                    suburb: string
                    postcode: string
                    state: string
                    phone: string
                    fax: string
                    email: string
                    comments: string
                    productCount: 0
                productCount: 0
  /products:
    get:
      tags:
        - Products
      summary: products
      operationId: get-products
      parameters:
        - name: pageNumber
          in: query
          required: true
          schema:
            enum:
              - 1
            type: integer
            default: 1
        - name: itemsPerPage
          in: query
          required: true
          schema:
            enum:
              - 10
            type: integer
            default: 10
        - name: userId
          in: query
          schema:
            type: integer
        - name: search
          in: query
          description: 'Allows for the search on all different ID types of a product. I.e. Product Number, Serial Number, Asset Number, MCNO. Will be an = search though, so not contains.'
          schema:
            type: string
        - name: siteId
          in: query
          description: Filters the products by the specified site Id
          schema:
            type: integer
        - name: custId
          in: query
          description: Filters the products by the customer site Id
          schema:
            type: integer
        - name: serviceEventId
          in: query
          description: Filters the products associated with a specific service event
          schema:
            type: integer
        - name: inService
          in: query
          description: Filters the products to either show in service or out of service. Accepts true for in service and false for out of service
          schema:
            type: boolean
        - name: overdue
          in: query
          description: Filters the products to either show overdue or not overdue. Accepts true for overdue and false for not overdue
          schema:
            type: boolean
        - name: mcno
          in: query
          description: returns a product with the passed through mcno
          schema:
            type: string
        - name: typeId
          in: query
          description: Filters products to only show where the product type matches the passed through product type id
          schema:
            type: integer
        - name: categoryId
          in: query
          description: Filters products to only show where the product category matches the passed through product category id
          schema:
            type: integer
        - name: Authorization
          in: header
          schema:
            enum:
              - 'Bearer '
            type: string
            default: 'Bearer '
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
              example:
                recordsReturned: 0
                pageNumber: 0
                totalRecords: 0
                products:
                  - productId: 0
                    mcno: 0
                    serialNumber: string
                    assetNumber: string
                    productNumber: string
                    inService: false
                    productCategoryId: 0
                    productCategory: string
                    productTypeId: 0
                    productType: string
                    serviceFrequency: string
                    serviceFrequencyDays: 0
                    lastServiced: string
                    nextServiceDue: string
                    daysUntilNextService: 0
                    isOverdue: false
                    daysOverdue: 0
                    actuatorDate: string
                    manufactureDate: string
                    isSling: false
  '/products/{id}':
    get:
      tags:
        - Products
      summary: product
      operationId: get-product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: 'integer'
        - name: Authorization
          in: header
          schema:
            enum:
              - 'Bearer '
            type: string
            default: 'Bearer '
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                productId: 0
                mcno: 0
                serialNumber: string
                assetNumber: string
                productNumber: string
                inService: false
                productCategoryId: 0
                productCategory: string
                productTypeId: 0
                productType: string
                serviceFrequency: string
                serviceFrequencyDays: 0
                lastServiced: string
                nextServiceDue: string
                isOverdue: false
                actuatorDate: string
                manufactureDate: string
                isSling: false
                serviceHistory:
                  - serviceHistoryId: 0
                    productId: 0
                    serviceDate: string
                    description: string
                    roomNumber: string
                    scheduled: false
                    condition: string
                    checkWheels: false
                    assessMovingParts: false
                    loadTestElectrics: false
                    checkPowerLead: false
                    checkBackrest: false
                    serviceAndClean: false
                    serviceEventId: 0
  /serviceEvents:
    get:
      tags:
        - Service Events
      summary: serviceEvents
      operationId: get-serviceevents
      parameters:
        - name: pageNumber
          in: query
          required: true
          schema:
            enum:
              - 1
            type: integer
            default: 1
        - name: itemsPerPage
          in: query
          required: true
          schema:
            enum:
              - 10
            type: integer
            default: 10
        - name: userId
          in: query
          schema:
            type: integer
        - name: custId
          in: query
          description: Used to filter service events by customer
          schema:
            type: integer
        - name: serviceDate
          in: query
          description: When supplied only service events on or after this date will be returned
          schema:
            type: string
        - name: dateExact
          in: query
          description: Used in conjunction with the serviceDate parameter. When set to 'true' will only return service events from that exact date. Otherwise if set to false (default value) will be all service events from the supplied date on wards.
          schema:
            type: boolean
        - name: servicePersonId
          in: query
          description: Used to filter service events by a particular service person
          schema:
            type: integer
        - name: status
          in: query
          description: Filters service events by the status of the service event
          schema:
            type: string
        - name: Authorization
          in: header
          schema:
            enum:
              - 'Bearer '
            type: string
            default: 'Bearer '
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEvents'
              example:
                recordsReturned: 0
                pageNumber: 0
                totalRecords: 0
                serviceEvents:
                  - serviceEventId: 0
                    serviceDate: string
                    serviceStatus: string
                    servicePersonId: 0
                    servicePerson: string
                    customerId: 0
                    customer: string
                    productsServicedCount: 0
    post:
      tags:
        - Service Events
      summary: serviceEventPost
      operationId: post-serviceeventpost
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEventPost'
            example:
              serviceDate: string
              customerId: 0
              servicePersonId: 0
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEventPost'
              example:
                serviceDate: string
                customerId: 0
                servicePersonId: 0
  '/serviceEvents/{id}':
    get:
      tags:
        - Service Events
      summary: serviceEvent
      operationId: get-serviceevent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: 'integer'
        - name: Authorization
          in: header
          schema:
            enum:
              - 'Bearer '
            type: string
            default: 'Bearer '
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEvent'
              example:
                serviceEventId: 0
                serviceDate: string
                serviceStatus: string
                servicePersonId: 0
                servicePerson: string
                customerId: 0
                customer: string
                productsServicedCount: 0
                productsServiced:
                  - productId: 0
                    mcno: 0
                    serialNumber: string
                    assetNumber: string
                    productNumber: string
                    inService: false
                    productCategoryId: 0
                    productCategory: string
                    productTypeId: 0
                    productType: string
                    serviceFrequency: string
                    serviceFrequencyDays: 0
                    lastServiced: string
                    nextServiceDue: string
                    isOverdue: false
                    actuatorDate: string
                    manufactureDate: string
                    isSling: false
    patch:
        tags:
          - Service Events
        summary: serviceEventUpdate
        operationId: patch-serviceeventupdate
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: 'integer'
          - name: userId
            in: query
            schema:
              type: integer
          - name: Authorization
            in: header
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONPatch'
              example:
                - op: string
                  path: string
                  value: string
        responses:
          '200':
            description: ''
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServiceEvent'
                example:
                  serviceEventId: 0
                  serviceDate: string
                  serviceStatus: string
                  servicePersonId: 0
                  servicePerson: string
                  customerId: 0
                  customer: string
                  maxicareSignerName: string
                  customerSignerName: string
                  hasMaxicareSignatureImage: false
                  hasCustomerSignatureImage: false
                  maxicareSignatureImageUri: string
                  customerSignatureImageUri: string
                  productsServicedCount: 0
                  productsServiced:
                    - productId: 0
                      mcno: 0
                      serialNumber: string
                      assetNumber: string
                      productNumber: string
                      inService: false
                      productCategoryId: 0
                      productCategory: string
                      productTypeId: 0
                      productType: string
                      serviceFrequency: string
                      serviceFrequencyDays: 0
                      lastServiced: string
                      nextServiceDue: string
                      isOverdue: false
                      actuatorDate: string
                      manufactureDate: string
                      isSling: false
    put:
      tags:
        - Service Events
      summary: serviceEventUpdate
      operationId: put-serviceeventupdate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: 'integer'
        - name: userId
          in: query
          schema:
            type: integer
        - name: Authorization
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEventPUT'
            example:
              serviceDate: string
              customerId: 0
              servicePersonId: 0
              status: string
              maxicareSignerName: string
              customerSignerName: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEvent'
              example:
                serviceEventId: 0
                serviceDate: string
                serviceStatus: string
                servicePersonId: 0
                servicePerson: string
                customerId: 0
                customer: string
                maxicareSignerName: string
                customerSignerName: string
                hasMaxicareSignatureImage: false
                hasCustomerSignatureImage: false
                maxicareSignatureImageUri: string
                customerSignatureImageUri: string
                productsServicedCount: 0
                productsServiced:
                  - productId: 0
                    mcno: 0
                    serialNumber: string
                    assetNumber: string
                    productNumber: string
                    inService: false
                    productCategoryId: 0
                    productCategory: string
                    productTypeId: 0
                    productType: string
                    serviceFrequency: string
                    serviceFrequencyDays: 0
                    lastServiced: string
                    nextServiceDue: string
                    isOverdue: false
                    actuatorDate: string
                    manufactureDate: string
                    isSling: false
  /list/productTypes:
    get:
      tags:
        - Lists
      summary: productTypeList
      operationId: get-producttypelist
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
        - name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeList'
              example:
                - categoryID: 0
                  id: 0
                  name: string
  /list/servicePerson:
    get:
      tags:
        - Lists
      summary: servicePersonList
      operationId: get-servicepersonlist
      parameters:
        - name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePersonList'
              example:
                - id: 0
                  name: string
  /list/sites:
    get:
      tags:
        - Lists
      summary: siteList
      operationId: get-sitelist
      parameters:
        - name: UserId
          in: query
          schema:
            type: integer
        - name: CustId
          in: query
          schema:
            type: integer
        - name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesList'
              example:
                - siteId: 0
                  siteName: string
                  customerId: 0
  '/serviceEvents/{id}/products':
    get:
      tags:
        - Service Events
      summary: serviceEventProducts
      operationId: get-serviceeventproducts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: 'integer'
        - name: UserId
          in: query
          schema:
            type: 'integer'
        - name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEventProducts'
              example:
                - productId: 0
                  mcno: 0
                  serialNumber: string
                  assetNumber: string
                  productNumber: string
                  productType: string
                  isSling: false
                  serviceSummary:
                    serviceHistoryId: 0
                    productId: 0
                    serviceEventId: 0
                    description: string    
  '/serviceEvents/{id}/signature':
    put:
      tags:
        - Service Events
      summary: serviceEventUploadSignature
      operationId: put-serviceeventuploadsignature
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: 'integer'
        - name: userId
          in: query
          schema:
            type: integer
        - name: Authorization
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignaturePUT'
            example:
              type: string
              name: string
              image: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEvent'
              example:
                serviceEventId: 0
                serviceDate: string
                serviceStatus: string
                servicePersonId: 0
                servicePerson: string
                customerId: 0
                customer: string
                maxicareSignerName: string
                customerSignerName: string
                hasMaxicareSignatureImage: false
                hasCustomerSignatureImage: false
                maxicareSignatureImageUri: string
                customerSignatureImageUri: string
                productsServicedCount: 0
                productsServiced:
                  - productId: 0
                    mcno: 0
                    serialNumber: string
                    assetNumber: string
                    productNumber: string
                    inService: false
                    productCategoryId: 0
                    productCategory: string
                    productTypeId: 0
                    productType: string
                    serviceFrequency: string
                    serviceFrequencyDays: 0
                    lastServiced: string
                    nextServiceDue: string
                    isOverdue: false
                    actuatorDate: string
                    manufactureDate: string
                    isSling: false
    get:
      tags:
        - Service Events
      summary: serviceEventProducts
      operationId: get-serviceeventsignature
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: 'integer'
        - name: UserId
          in: query
          schema:
            type: 'integer'
        - name: type
          in: query
          schema:
            type: 'string'
        - name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            image/png: { }
  /sites:
    get:
      tags:
        - Sites
      summary: sites
      operationId: get-sites
      parameters:
        - name: pageNumber
          in: query
          description: The page number of records to be returned.
          required: true
          schema:
            enum:
              - 1
            type: integer
            default: 1
        - name: itemsPerPage
          in: query
          description: Number of items to be returned on each page
          required: true
          schema:
            enum:
              - 10
            type: integer
            default: 10
        - name: userId
          in: query
          description: If passed through will restrict returned list based on sites that user has access to. This is automatically passed through from the JWT token and not required to be manually passed through.
          schema:
            type: integer
        - name: search
          in: query
          description: Enables you search based on site name. This will apply a Like SQL to filter results.
          schema:
            type: string
        - name: Authorization
          in: header
          schema:
            type: 'string'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites'
              example:
                recordsReturned: 0
                pageNumber: 0
                totalRecords: 0
                sites:
                  - siteId: 0
                    siteName: string
                    locationId: 0
                    locationName: string
                    customerId: 0
                    customerName: string
                    contact: string
                    fullAddress: string
                    address: string
                    suburb: string
                    postcode: string
                    state: string
                    phone: string
                    fax: string
                    email: string
                    comments: string
                    productCount: 0
  '/sites/{id}':
    get:
      tags:
        - Sites
      summary: site
      operationId: get-site
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: 'integer'
        - name: Authorization
          in: header
          schema:
            type: 'string'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
              example:
                siteId: 0
                siteName: string
                locationId: 0
                locationName: string
                customerId: 0
                customerName: string
                contact: string
                fullAddress: string
                address: string
                suburb: string
                postcode: string
                state: string
                phone: string
                fax: string
                email: string
                comments: string
                productCount: 0
  '/serviceEvents/{serviceEventId}/products/{productId}':
    get:
      tags:
        - Service Events
      summary: serviceEventProduct
      operationId: get-serviceeventproduct
      parameters:
        - name: serviceEventId
          in: path
          required: true
          schema:
            type: integer
        - name: productId
          in: path
          required: true
          schema:
            type: integer
        - name: UserId
          in: query
          schema:
            type: integer
        - name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEventProduct'
              example:
                productId: 0
                mcno: 0
                serialNumber: string
                assetNumber: string
                productNumber: string
                productType: string
                isSling: false
                serviceSummary:
                  serviceHistoryId: 0
                  productId: 0
                  serviceEventId: 0
                  description: string
  '/serviceEvents/{serviceEventId}/products/{prodId}/detail':
    get:
      tags:
        - Service Events
      summary: serviceEventProductDetail
      operationId: get-serviceeventproductdetail
      parameters:
        - name: serviceEventId
          in: path
          required: true
          schema:
            type: integer
        - name: prodId
          in: path
          required: true
          schema:
            type: integer
        - name: UserId
          in: query
          schema:
            type: integer
        - name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEventProductDetail'
              example:
                serviceHistoryId: 0
                productId: 0
                serviceDate: string
                description: string
                roomNumber: string
                scheduled: false
                condition: string
                checkWheels: false
                assessMovingParts: false
                loadTestElectrics: false
                checkPowerLead: false
                checkBackrest: false
                serviceAndClean: false
                serviceEventId: 0
components:
  schemas:
    Customers:
      type: object
      properties:
        recordsReturned:
          type: integer
        pageNumber:
          type: integer
        totalRecords:
          type: integer
        customers:
          type: array
          items:
            required:
              - customerId
              - customerName
              - contact
              - address
              - suburb
              - postcode
              - state
              - phone
              - fax
              - email
              - comments
              - siteCount
              - locationCount
              - productCount
            type: object
            properties:
              customerId:
                type: integer
              customerName:
                type: string
              contact:
                type: string
              fullAddress:
                type: string
              address:
                type: string
              suburb:
                type: string
              postcode:
                type: string
              state:
                type: string
              phone:
                type: string
              fax:
                type: string
              email:
                type: string
              comments:
                type: string
              siteCount:
                type: integer
              locationCount:
                type: integer
              productCount:
                type: integer
      example:
        recordsReturned: 0
        pageNumber: 0
        totalRecords: 0
        customers:
          - customerId: 0
            customerName: string
            contact: string
            address: string
            suburb: string
            postcode: string
            state: string
            phone: string
            fax: string
            email: string
            comments: string
            siteCount: 0
            locationCount: 0
            productCount: 0
    Customer:
      type: object
      properties:
        customerId:
          type: integer
        customerName:
          type: string
        contact:
          type: string
        fullAddress:
          type: string
        address:
          type: string
        suburb:
          type: string
        postcode:
          type: string
        state:
          type: string
        phone:
          type: string
        fax:
          type: string
        email:
          type: string
        comments:
          type: string
        siteCount:
          type: integer
        sites:
          type: array
          items:
            required:
              - siteId
              - siteName
              - locationId
              - locationName
              - customerId
              - customerName
              - contact
              - address
              - suburb
              - postcode
              - state
              - phone
              - fax
              - email
              - comments
              - productCount
            type: object
            properties:
              siteId:
                type: integer
              siteName:
                type: string
              locationId:
                type: integer
              locationName:
                type: string
              customerId:
                type: integer
              customerName:
                type: string
              contact:
                type: string
              address:
                type: string
              suburb:
                type: string
              postcode:
                type: string
              state:
                type: string
              phone:
                type: string
              fax:
                type: string
              email:
                type: string
              comments:
                type: string
              productCount:
                type: integer
        locationCount:
          type: integer
        locations:
          type: array
          items:
            required:
              - locationId
              - locationName
              - customerId
              - customer
              - siteCount
              - productCount
            type: object
            properties:
              locationId:
                type: integer
              locationName: { }
              customerId:
                type: string
              customer:
                type: string
              siteCount:
                type: integer
              productCount:
                type: integer
        productCount:
          type: integer
      example:
        customerId: 0
        customerName: string
        contact: string
        address: string
        suburb: string
        postcode: string
        state: string
        phone: string
        fax: string
        email: string
        comments: string
        siteCount: 0
        sites:
          - siteId: 0
            siteName: string
            locationId: 0
            locationName: string
            customerId: 0
            customerName: string
            contact: string
            address: string
            suburb: string
            postcode: string
            state: string
            phone: string
            fax: string
            email: string
            comments: string
            productCount: 0
        locationCount: 0
        locations:
          - locationId: 0
            customerId: string
            customer: string
            siteCount: 0
            productCount: 0
        productCount: 0
    CustomerList:
      type: array
      items:
        required:
          - customerId
          - customerName
        type: object
        properties:
          customerId:
            type: integer
          customerName:
            type: string
      example:
        - customerId: 0
          customerName: string
    JSONPatch:
      type: array
      items:
        required:
          - op
          - path
        type: object
        properties:
          op:
            type: string
          path:
            type: string
          value:
            type: string
      example:
        - op: string
          path: string
          value: string
    Locations:
      type: object
      properties:
        recordsReturned:
          type: integer
        pageNumber:
          type: integer
        totalRecords:
          type: integer
        locations:
          type: array
          items:
            required:
              - locationId
              - locationName
              - customerId
              - customer
              - siteCount
              - productCount
            type: object
            properties:
              locationId:
                type: integer
              locationName:
                type: string
              customerId:
                type: string
              customer:
                type: string
              siteCount:
                type: integer
              productCount:
                type: integer
      example:
        recordsReturned: 0
        pageNumber: 0
        totalRecords: 0
        locations:
          - locationId: 0
            locationName: string
            customerId: string
            customer: string
            siteCount: 0
            productCount: 0
    Location:
      type: object
      properties:
        locationId:
          type: integer
        locationName:
          type: string
        customerId:
          type: string
        customer:
          type: string
        siteCount:
          type: integer
        sites:
          type: array
          items:
            required:
              - siteId
              - siteName
              - locationId
              - locationName
              - customerId
              - customerName
              - contact
              - address
              - suburb
              - postcode
              - state
              - phone
              - fax
              - email
              - comments
              - productCount
            type: object
            properties:
              siteId:
                type: integer
              siteName:
                type: string
              locationId:
                type: integer
              locationName:
                type: string
              customerId:
                type: integer
              customerName:
                type: string
              contact:
                type: string
              address:
                type: string
              suburb:
                type: string
              postcode:
                type: string
              state:
                type: string
              phone:
                type: string
              fax:
                type: string
              email:
                type: string
              comments:
                type: string
              productCount:
                type: integer
        productCount:
          type: integer
    LocationList:
      type: array
      items:
        required:
          - locationId
          - locationName
          - customerId
        type: object
        properties:
          locationId:
            type: integer
          locationName:
            type: string
          customerId:
            type: string
      example:
        - locationId: 0
          locationName: string
          customerId: string
    Products:
      type: object
      properties:
        recordsReturned:
          type: integer
        pageNumber:
          type: integer
        totalRecords:
          type: integer
        products:
          type: array
          items:
            required:
              - productId
              - mcno
              - serialNumber
              - assetNumber
              - productNumber
              - inService
              - productCategoryId
              - productCategory
              - productTypeId
              - productType
              - serviceFrequency
              - serviceFrequencyDays
              - lastServiced
              - nextServiceDue
              - isOverdue
              - actuatorDate
              - manufactureDate
              - isSling
            type: object
            properties:
              productId:
                type: integer
              mcno:
                type: integer
              serialNumber:
                type: string
              assetNumber:
                type: string
              productNumber:
                type: string
              inService:
                type: boolean
              productCategoryId:
                type: integer
              productCategory:
                type: string
              productTypeId:
                type: integer
              productType:
                type: string
              serviceFrequency:
                type: string
              serviceFrequencyDays:
                type: integer
              lastServiced:
                type: string
              nextServiceDue:
                type: string
              daysUntilNextService:
                type: integer
              isOverdue:
                type: boolean
              daysOverdue:
                type: integer
              actuatorDate:
                type: string
              manufactureDate:
                type: string
              isSling:
                type: boolean
      example:
        recordsReturned: 0
        pageNumber: 0
        totalRecords: 0
        products:
          - productId: 0
            mcno: 0
            serialNumber: string
            assetNumber: string
            productNumber: string
            inService: false
            productCategoryId: 0
            productCategory: string
            productTypeId: 0
            productType: string
            serviceFrequency: string
            serviceFrequencyDays: 0
            lastServiced: string
            nextServiceDue: string
            daysUntilNextService: 0
            isOverdue: false
            daysOverdue: 0
            actuatorDate: string
            manufactureDate: string
            isSling: false
    Product:
      type: object
      properties:
        productId:
          type: integer
        mcno:
          type: integer
        serialNumber:
          type: string
        assetNumber:
          type: string
        productNumber:
          type: string
        siteId:
          type: integer
        customerId:
          type: integer
        inService:
          type: boolean
        productCategoryId:
          type: integer
        productCategory:
          type: string
        productTypeId:
          type: integer
        productType:
          type: string
        serviceFrequency:
          type: string
        serviceFrequencyDays:
          type: integer
        lastServiced:
          type: string
        nextServiceDue:
          type: string
        isOverdue:
          type: boolean
        actuatorDate:
          type: string
        manufactureDate:
          type: string
        isSling:
          type: boolean
        serviceHistory:
          type: array
          items:
            required:
              - serviceHistoryId
              - productId
              - serviceDate
              - description
              - roomNumber
              - scheduled
              - condition
              - checkWheels
              - assessMovingParts
              - loadTestElectrics
              - checkPowerLead
              - checkBackrest
              - serviceAndClean
              - serviceEventId
            type: object
            properties:
              serviceHistoryId:
                type: integer
              productId:
                type: integer
              serviceDate:
                type: string
              servicePersonId:
                type: integer
              servicePersonName:
                type: string
              description:
                type: string
              roomNumber:
                type: string
              scheduled:
                type: boolean
              condition:
                type: string
              checkWheels:
                type: boolean
              assessMovingParts:
                type: boolean
              loadTestElectrics:
                type: boolean
              checkPowerLead:
                type: boolean
              checkBackrest:
                type: boolean
              serviceAndClean:
                type: boolean
              serviceEventId:
                type: integer
      example:
        productId: 0
        mcno: 0
        serialNumber: string
        assetNumber: string
        productNumber: string
        inService: false
        productCategoryId: 0
        productCategory: string
        productTypeId: 0
        productType: string
        serviceFrequency: string
        serviceFrequencyDays: 0
        lastServiced: string
        nextServiceDue: string
        isOverdue: false
        actuatorDate: string
        manufactureDate: string
        isSling: false
        serviceHistory:
          - serviceHistoryId: 0
            productId: 0
            serviceDate: string
            description: string
            roomNumber: string
            scheduled: false
            condition: string
            checkWheels: false
            assessMovingParts: false
            loadTestElectrics: false
            checkPowerLead: false
            checkBackrest: false
            serviceAndClean: false
            serviceEventId: 0
    ProductCategoryList:
      type: array
      items:
        required:
          - id
          - name
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
      example:
        - id: 0
          name: string
    ProductTypeList:
      type: array
      items:
        required:
          - categoryID
          - id
          - name
        type: object
        properties:
          categoryID:
            type: integer
          id:
            type: integer
          name:
            type: string
      example:
        - categoryID: 0
          id: 0
          name: string
    ServiceEvents:
      type: object
      properties:
        recordsReturned:
          type: integer
        pageNumber:
          type: integer
        totalRecords:
          type: integer
        serviceEvents:
          type: array
          items:
            required:
              - serviceEventId
              - serviceDate
              - serviceStatus
              - servicePersonId
              - servicePerson
              - customerId
              - customer
              - productsServicedCount
            type: object
            properties:
              serviceEventId:
                type: integer
              serviceDate:
                type: string
              serviceStatus:
                type: string
              servicePersonId:
                type: integer
              servicePerson:
                type: string
              customerId:
                type: integer
              customer:
                type: string
              productsServicedCount:
                type: integer
      example:
        recordsReturned: 0
        pageNumber: 0
        totalRecords: 0
        serviceEvents:
          - serviceEventId: 0
            serviceDate: string
            serviceStatus: string
            servicePersonId: 0
            servicePerson: string
            customerId: 0
            customer: string
            productsServicedCount: 0
    ServiceEventPost:
      type: object
      properties:
        serviceDate:
          type: string
        customerId:
          type: integer
        servicePersonId:
          type: integer
      example:
        serviceDate: string
        customerId: 0
        servicePersonId: 0
    ServiceEvent:
      type: object
      properties:
        serviceEventId:
          type: integer
        serviceDate:
          type: string
        serviceStatus:
          type: string
        servicePersonId:
          type: integer
        servicePerson:
          type: string
        customerId:
          type: integer
        customer:
          type: string
        maxicareSignerName:
          type: string
        customerSignerName:
          type: string
        hasMaxicareSignatureImage:
          type: boolean
        hasCustomerSignatureImage:
          type: boolean
        maxicareSignatureImageUri:
          type: string
        customerSignatureImageUri:
          type: string
        productsServicedCount:
          type: integer
        productsServiced:
          type: array
          items:
            required:
              - productId
              - mcno
              - serialNumber
              - assetNumber
              - productNumber
              - inService
              - productCategoryId
              - productCategory
              - productTypeId
              - productType
              - serviceFrequency
              - serviceFrequencyDays
              - lastServiced
              - nextServiceDue
              - isOverdue
              - actuatorDate
              - manufactureDate
              - isSling
            type: object
            properties:
              productId:
                type: integer
              mcno:
                type: integer
              serialNumber:
                type: string
              assetNumber:
                type: string
              productNumber:
                type: string
              inService:
                type: boolean
              productCategoryId:
                type: integer
              productCategory:
                type: string
              productTypeId:
                type: integer
              productType:
                type: string
              serviceFrequency:
                type: string
              serviceFrequencyDays:
                type: integer
              lastServiced:
                type: string
              nextServiceDue:
                type: string
              isOverdue:
                type: boolean
              actuatorDate:
                type: string
              manufactureDate:
                type: string
              isSling:
                type: boolean
      example:
        serviceEventId: 0
        serviceDate: string
        serviceStatus: string
        servicePersonId: 0
        servicePerson: string
        customerId: 0
        customer: string
        maxicareSignerName: string
        customerSignerName: string
        hasMaxicareSignatureImage: false
        hasCustomerSignatureImage: false
        maxicareSignatureImageUri: string
        customerSignatureImageUri: string
        productsServicedCount: 0
        productsServiced:
          - productId: 0
            mcno: 0
            serialNumber: string
            assetNumber: string
            productNumber: string
            inService: false
            productCategoryId: 0
            productCategory: string
            productTypeId: 0
            productType: string
            serviceFrequency: string
            serviceFrequencyDays: 0
            lastServiced: string
            nextServiceDue: string
            isOverdue: false
            actuatorDate: string
            manufactureDate: string
            isSling: false
    ServiceEventPUT:
      type: object
      properties:
        serviceDate:
          type: string
        customerId:
          type: integer
        servicePersonId:
          type: integer
        status:
          type: string
        maxicareSignerName:
          type: string
        customerSignerName:
          type: string
      example:
        serviceDate: string
        customerId: 0
        servicePersonId: 0
        status: string
        maxicareSignerName: string
        customerSignerName: string
    SignaturePUT:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        image:
          type: string
      example:
        type: string
        name: string
        image: string
    ServiceEventProducts:
      type: array
      items:
        required:
          - productId
          - mcno
          - serialNumber
          - assetNumber
          - productNumber
          - productType
          - isSling
          - serviceSummary
        type: object
        properties:
          productId:
            type: integer
          mcno:
            type: integer
          serialNumber:
            type: string
          assetNumber:
            type: string
          productNumber:
            type: string
          productType:
            type: string
          isSling:
            type: boolean
          serviceSummary:
            type: object
            properties:
              serviceHistoryId:
                type: integer
              productId:
                type: integer
              serviceEventId:
                type: integer
              description:
                type: string
      example:
        - productId: 0
          mcno: 0
          serialNumber: string
          assetNumber: string
          productNumber: string
          productType: string
          isSling: false
          serviceSummary:
            serviceHistoryId: 0
            productId: 0
            serviceEventId: 0
            description: string
    ServiceEventProduct:
      type: object
      properties:
        productId:
          type: integer
        mcno:
          type: integer
        serialNumber:
          type: string
        assetNumber:
          type: string
        productNumber:
          type: string
        productType:
          type: string
        isSling:
          type: boolean
        serviceSummary:
          type: object
          properties:
            serviceHistoryId:
              type: integer
            productId:
              type: integer
            serviceEventId:
              type: integer
            description:
              type: string
      example:
        productId: 0
        mcno: 0
        serialNumber: string
        assetNumber: string
        productNumber: string
        productType: string
        isSling: false
        serviceSummary:
          serviceHistoryId: 0
          productId: 0
          serviceEventId: 0
          description: string
    ServiceEventProductDetail:
      type: object
      properties:
        serviceHistoryId:
          type: integer
        productId:
          type: integer
        serviceDate:
          type: string
        description:
          type: string
        roomNumber:
          type: string
        scheduled:
          type: boolean
        condition:
          type: string
        checkWheels:
          type: boolean
        assessMovingParts:
          type: boolean
        loadTestElectrics:
          type: boolean
        checkPowerLead:
          type: boolean
        checkBackrest:
          type: boolean
        serviceAndClean:
          type: boolean
        serviceEventId:
          type: integer
      example:
        serviceHistoryId: 0
        productId: 0
        serviceDate: string
        description: string
        roomNumber: string
        scheduled: false
        condition: string
        checkWheels: false
        assessMovingParts: false
        loadTestElectrics: false
        checkPowerLead: false
        checkBackrest: false
        serviceAndClean: false
        serviceEventId: 0
    ServicePersonList:
      type: array
      items:
        required:
          - id
          - name
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
      example:
        - id: 0
          name: string
    Sites:
      type: object
      properties:
        recordsReturned:
          type: integer
        pageNumber:
          type: integer
        totalRecords:
          type: integer
        sites:
          type: array
          items:
            required:
              - siteId
              - siteName
              - locationId
              - locationName
              - customerId
              - customerName
              - contact
              - address
              - suburb
              - postcode
              - state
              - phone
              - fax
              - email
              - comments
              - productCount
            type: object
            properties:
              siteId:
                type: integer
              siteName:
                type: string
              locationId:
                type: integer
              locationName:
                type: string
              customerId:
                type: integer
              customerName:
                type: string
              contact:
                type: string
              fullAddress:
                type: string
              address:
                type: string
              suburb:
                type: string
              postcode:
                type: string
              state:
                type: string
              phone:
                type: string
              fax:
                type: string
              email:
                type: string
              comments:
                type: string
              productCount:
                type: integer
      example:
        recordsReturned: 0
        pageNumber: 0
        totalRecords: 0
        sites:
          - siteId: 0
            siteName: string
            locationId: 0
            locationName: string
            customerId: 0
            customerName: string
            contact: string
            address: string
            suburb: string
            postcode: string
            state: string
            phone: string
            fax: string
            email: string
            comments: string
            productCount: 0
    Site:
      type: object
      properties:
        siteId:
          type: integer
        siteName:
          type: string
        locationId:
          type: integer
        locationName:
          type: string
        customerId:
          type: integer
        customerName:
          type: string
        contact:
          type: string
        fullAddress:
          type: string
        address:
          type: string
        suburb:
          type: string
        postcode:
          type: string
        state:
          type: string
        phone:
          type: string
        fax:
          type: string
        email:
          type: string
        comments:
          type: string
        productCount:
          type: integer
      example:
        siteId: 0
        siteName: string
        locationId: 0
        locationName: string
        customerId: 0
        customerName: string
        contact: string
        address: string
        suburb: string
        postcode: string
        state: string
        phone: string
        fax: string
        email: string
        comments: string
        productCount: 0
    SitesList:
      type: array
      items:
        required:
          - siteId
          - siteName
          - customerId
        type: object
        properties:
          siteId:
            type: integer
          siteName:
            type: string
          customerId:
            type: integer
      example:
        - siteId: 0
          siteName: string
          customerId: 0
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 
security:
 - bearerAuth: []