penapi: 3.0.0
info:
  description: SENG3011 HI-4 API
  version: "1.0.0-oas3"
  title: SENG3011 HI-4 API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /reports:
    get:
      summary: queries team Hi-4's backend and returns results in a json format
      operationId: query
      description: Pass in various options to get corresponding responses
      parameters:
        - in: query
          name: start_date
          description: >-
            A date-string in the format of: YYYY:MM:DDTHH:MM:SS where each value
            in order is Y as year, M as month, D as day, H as hour, M as minute
            and S as second. This date must be any valid date before the end_date.
          required: true
          schema:
            type: string
            example: '2019-11-01T08:45:11'
        - in: query
          name: end_date
          description: >-
            A date-string in the format of: YYYY:MM:DDTHH:MM:SS where each value
            in order is Y as year, M as month, D as day, H as hour, M as minute
            and S as second. This date must be any valid date after the start_date.
          required: true
          schema:
            type: string
            format: date-time
            example: '2020-03-01T08:45:11'
        - in: query
          name: key_terms
          description: Comma separate list of strings to have in the response
          required: false
          schema:
            type: string
            example: 'covid,coronavirus'
        - in: query
          name: location
          description: >-
            A single string with the value of a location. Abbreviations may be
            used ie US for United States
          required: false
          schema:
            type: string
            example: London
        - in: query
          name: num
          description: An integer greater than 0 which is the maximum number of responses to obtain
          required: false
          schema:
            type: integer
            example: 1
        - in: query
          name: page
          description: An integer greater than 0 which is the page number to obtain
          required: false
          schema:
            type: integer
            example: 1
            minimum: 1
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        '400':
          description: >-
            Invalid key_terms string. Please provide a comma seperated list of
            terms to filter by
servers:
  - url: 'https://us-central1-seng3011-hi-4.cloudfunctions.net/app'
  
components:
  schemas:
    response:
      type: object
      required:
        - url
        - date_of_publication
        - headline
        - main_text
        - reports
       # - latlng
      properties:
        url:
          type: string
          example: >-
            https://www.government.nl/latest/news/2020/03/12/new-measures-to-stop-spread-of-coronavirus-in-the-netherlands
        date_of_publication:
          type: string
          example: '2020-03-01 12:45:00'
        headline:
          type: string
          example: 'Coronavirus update LIVE: First person-to-person transmissions'
        main_text:
          type: string
          example: >-
            Netherlands Health has confirmed first person-to-person
            transmissions ...
        reports:
          type: array
          items:
            $ref: '#/components/schemas/report'
        #latlng:
         # $ref: '#/components/schemas/latlngVal'
    report:
      required:
        - diseases
        - syndromes
        - event_date
        - locations
      properties:
        diseases:
          type: array
          items:
            example: Coronavirus
        syndromes:
          type: array
          items:
            example: Lynch Syndrome
        event_date:
          type: string
          example: '2020-03-01 12:45:00'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/location'
    location:
      required:
        - country
        - location
      properties:
        country:
          type: string
          example: Netherlands
        location:
          type: string
          example: Amsterdam
    #latlngVal:
      #required:
       # - location
      #  - latitude
      #  - longitude
      #  - country
      #properties:
      #  location:
      #    type: string
      #    example: Amsterdam
      #  latitiude:
      #    type: string
      #    example: '51.507'
      #  longitude:
      #    type: string
      #    example: '-0.128'
      #  country:
      #    type: string
      #    example: Netherlands