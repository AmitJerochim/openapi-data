{
  "openapi" : "3.0.2",
  "info" : {
    "version" : "v1",
    "title" : "Lokalebasen API",
    "description" : "Lokalebasen API for **Providers**"
  },
  "servers" : [ {
    "url" : "http://116.203.186.79:40903/api/provider",
    "description" : "Preproduction server"
  } ],
  "security" : [ {
    "api_key" : [ ]
  } ],
  "tags" : [ {
    "name" : "Locations"
  }, {
    "name" : "Clients"
  }, {
    "name" : "Contacts"
  }, {
    "name" : "Provider Deals"
  }, {
    "name" : "Photos"
  }, {
    "name" : "Floor Plans"
  }, {
    "name" : "Prospectuses"
  }, {
    "name" : "Leases"
  }, {
    "name" : "Statistics"
  }, {
    "name" : "Asset Jobs"
  }, {
    "name" : "Subscriptions"
  }, {
    "name" : "Orders"
  }, {
    "name" : "Currency"
  } ],
  "components" : {
    "links" : {
      "locationID" : {
        "description" : "The `id` value returned in the response can be used as the `locationId` parameter in `GET /locations/{locationId}`.\n",
        "operationId" : "locationID",
        "parameters" : {
          "locationId" : "$response.body#/id"
        }
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "Api-Key",
        "in" : "header"
      }
    },
    "schemas" : {
      "Price" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "cents" : {
              "type" : "number",
              "format" : "float"
            },
            "currency" : {
              "type" : "string"
            }
          }
        }
      },
      "Order" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "minimum" : 1
          },
          "client_id" : {
            "type" : "integer",
            "minimum" : 1
          },
          "person_name" : {
            "type" : "string"
          },
          "company_name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "sent", "suspicious", "scheduled", "legitimate", "new", "unfinished", "rejected" ]
          },
          "phone" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Client" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "minimum" : 1
          },
          "person_name" : {
            "type" : "string"
          },
          "company_name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email",
            "pattern" : "^[^\\s@]{6,}@[^\\s@]+\\.[^\\s@]+$"
          },
          "first_order_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "external_key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email",
            "pattern" : "^[^\\s@]{6,}@[^\\s@]+\\.[^\\s@]+$"
          },
          "phone_number" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "url" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "PrimaryContact" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Contact"
        } ]
      },
      "AssetPOSTorPUT" : {
        "type" : "object",
        "x-abstract" : true,
        "properties" : {
          "external_key" : {
            "type" : "string",
            "format" : "uuid"
          },
          "url" : {
            "type" : "string",
            "format" : "uri"
          },
          "position" : {
            "type" : "integer",
            "minimum" : 0
          }
        }
      },
      "Asset" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AssetPOSTorPUT"
        }, {
          "type" : "object"
        }, {
          "x-abstract" : true
        } ],
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              }
            }
          }
        }
      },
      "PhotoPOSTorPUT" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AssetPOSTorPUT"
        } ]
      },
      "Photo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Asset"
        } ]
      },
      "ProspectusPOSTorPUT" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AssetPOSTorPUT"
        } ]
      },
      "Prospectus" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Asset"
        } ]
      },
      "FloorPlanPOSTorPUT" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AssetPOSTorPUT"
        } ]
      },
      "FloorPlan" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Asset"
        } ]
      },
      "LocationPOSTorPUT" : {
        "type" : "object",
        "properties" : {
          "address_line_1" : {
            "type" : "string"
          },
          "address_line1" : {
            "type" : "string",
            "description" : "alias of address_line_1"
          },
          "address_line_2" : {
            "type" : "string"
          },
          "address_line2" : {
            "type" : "string",
            "description" : "alias of address_line_2"
          },
          "area_from" : {
            "type" : "number",
            "format" : "float"
          },
          "area_to" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "workstations_count_from" : {
            "type" : "number",
            "format" : "float"
          },
          "workstations_count_to" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "workstation_cost_per_month_from" : {
            "type" : "number",
            "format" : "float"
          },
          "workstation_cost_per_month_to" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "contact" : {
            "type" : "string",
            "format" : "uri"
          },
          "description" : {
            "type" : "string"
          },
          "energy_rating" : {
            "type" : "string",
            "enum" : [ "A", "B", "C", "D", "F", "G" ]
          },
          "exempted_from_energy_rating" : {
            "type" : "boolean"
          },
          "latitude" : {
            "type" : "number",
            "format" : "float"
          },
          "longtitude" : {
            "type" : "number",
            "format" : "float"
          },
          "postal_code" : {
            "type" : "string"
          },
          "postal_name" : {
            "type" : "string"
          },
          "provider_website_link" : {
            "type" : "string",
            "format" : "uri"
          },
          "title" : {
            "type" : "string"
          },
          "amount_of_spaces_from" : {
            "type" : "integer"
          },
          "amount_of_spaces_to" : {
            "type" : "integer"
          },
          "parking_type" : {
            "type" : "string"
          },
          "return_rate" : {
            "type" : "number",
            "format" : "float"
          },
          "fixed_annual_operational_cost" : {
            "type" : "integer"
          },
          "deposit_and_prepaid_rent" : {
            "type" : "integer"
          },
          "yearly_rental_income" : {
            "type" : "integer"
          },
          "sale_price" : {
            "type" : "integer"
          },
          "amount_of_available_spaces" : {
            "type" : "integer"
          },
          "coworking_price_from_value" : {
            "type" : "integer"
          },
          "coworking_price_from_unit" : {
            "type" : "string"
          },
          "coworking_price_from_period" : {
            "type" : "string"
          },
          "coworking_price_from_currency" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string",
            "enum" : [ "coworking", "store", "office", "parking", "warehouse", "virtual_office", "lot", "business_center", "meeting_room", "housing" ]
          },
          "secondary_kinds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "facilities" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "section" : {
            "type" : "string"
          },
          "internal_identifier" : {
            "type" : "string"
          },
          "external_key" : {
            "type" : "string"
          },
          "monthly_rent_per_space_from" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "cents" : {
                  "type" : "number",
                  "format" : "float"
                },
                "currency" : {
                  "type" : "string"
                }
              }
            }
          },
          "monthly_rent_per_space_to" : {
            "$ref" : "#/components/schemas/Price"
          },
          "yearly_rent_per_m2_from" : {
            "$ref" : "#/components/schemas/Price"
          },
          "yearly_rent_per_m2_to" : {
            "$ref" : "#/components/schemas/Price"
          },
          "yearly_operational_cost_per_m2_from" : {
            "$ref" : "#/components/schemas/Price"
          },
          "yearly_operational_cost_per_m2_to" : {
            "$ref" : "#/components/schemas/Price"
          },
          "yearly_heating_cost_per_m2_from" : {
            "$ref" : "#/components/schemas/Price"
          },
          "yearly_heating_cost_per_m2_to" : {
            "$ref" : "#/components/schemas/Price"
          },
          "yearly_electricity_cost_per_m2_from" : {
            "$ref" : "#/components/schemas/Price"
          },
          "yearly_electricity_cost_per_m2_to" : {
            "$ref" : "#/components/schemas/Price"
          },
          "annual_operational_cost_amount_from" : {
            "$ref" : "#/components/schemas/Price"
          },
          "annual_operational_cost_amount_to" : {
            "$ref" : "#/components/schemas/Price"
          },
          "annual_total_cost_amount_from" : {
            "$ref" : "#/components/schemas/Price"
          },
          "annual_total_cost_amount_to" : {
            "$ref" : "#/components/schemas/Price"
          }
        }
      },
      "LocationPreview" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              }
            }
          },
          "id" : {
            "type" : "integer",
            "minimum" : 1
          },
          "address_line_1" : {
            "type" : "string"
          },
          "address_line1" : {
            "type" : "string",
            "description" : "alias of address_line_1"
          },
          "address_line_2" : {
            "type" : "string"
          },
          "address_line2" : {
            "type" : "string",
            "description" : "alias of address_line_2"
          },
          "postal_code" : {
            "type" : "string"
          },
          "area_from" : {
            "type" : "number",
            "format" : "float"
          },
          "area_to" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "amount_of_spaces_from" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "amount_of_spaces_to" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "parking_type" : {
            "type" : "string"
          },
          "postal_district_name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string",
            "enum" : [ "coworking", "store", "office", "parking", "warehouse", "virtual_office", "lot", "business_center", "meeting_room", "housing" ]
          },
          "section" : {
            "type" : "string"
          },
          "internal_identifier" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "external_key" : {
            "type" : "string"
          }
        }
      },
      "Location" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/LocationPreview"
        }, {
          "type" : "object"
        } ],
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "prospectuses" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              },
              "photos" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              },
              "floor_plans" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              },
              "subscriptions" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              },
              "deactivations" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              }
            }
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "postal_name" : {
            "type" : "string"
          },
          "latitude" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "state" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "section" : {
            "type" : "string"
          },
          "internal_identifier" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string"
          },
          "external_key" : {
            "type" : "string"
          },
          "provider_website_link" : {
            "type" : "string"
          },
          "yearly_rent_per_m2_from" : {
            "type" : "number"
          },
          "monthly_rent_per_space_from" : {
            "type" : "number"
          },
          "contact" : {
            "type" : "string"
          },
          "secondary_contacts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "facilities" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "facilities_ids" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "return_rate" : {
            "type" : "string"
          },
          "deposit_and_prepaid_rent" : {
            "type" : "number",
            "format" : "float"
          },
          "yearly_rental_income" : {
            "type" : "number",
            "format" : "float"
          },
          "annual_operational_cost" : {
            "type" : "object",
            "properties" : {
              "from" : {
                "type" : "number",
                "format" : "float"
              },
              "to" : {
                "type" : "number",
                "format" : "float"
              }
            }
          },
          "secondary_kinds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "office", "business_center", "store", "warehouse", "cafe", "virtual_office", "parking" ]
            }
          },
          "amount_of_available_spaces" : {
            "type" : "integer"
          },
          "coworking_price_from_value" : {
            "type" : "integer"
          },
          "coworking_price_from_unit" : {
            "type" : "string"
          },
          "coworking_price_from_period" : {
            "type" : "string"
          },
          "coworking_price_from_currency" : {
            "type" : "string"
          },
          "photos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Photo"
            }
          },
          "prospectuses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Prospectus"
            }
          },
          "floor_plans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloorPlan"
            }
          },
          "primary_contact" : {
            "$ref" : "#/components/schemas/PrimaryContact"
          }
        }
      },
      "Lease" : {
        "properties" : {
          "area_rented" : {
            "type" : "integer"
          },
          "client_id" : {
            "type" : "integer",
            "minimum" : 1
          },
          "location_id" : {
            "type" : "integer",
            "minimum" : 1
          },
          "provider_deal_id" : {
            "type" : "integer",
            "minimum" : 1
          },
          "occupied_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expected_end" : {
            "type" : "string",
            "format" : "date-time"
          },
          "total_amount" : {
            "type" : "number",
            "format" : "float"
          },
          "currency" : {
            "type" : "string"
          },
          "other_client" : {
            "type" : "string"
          },
          "other_location_address" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "Currency" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "minimum" : 1
          },
          "name" : {
            "type" : "string"
          },
          "formatted" : {
            "type" : "string"
          },
          "rate" : {
            "type" : "number",
            "format" : "float"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name_long" : {
            "type" : "string"
          },
          "db_migration_id" : {
            "type" : "integer"
          },
          "db_migration_site_key" : {
            "type" : "string"
          }
        },
        "example" : {
          "id" : 1,
          "name" : "DKK",
          "formatted" : "kr.",
          "rate" : "6.7802",
          "created_at" : "2017-04-20T18:14:22.657+02:00",
          "updated_at" : "2019-11-25T00:01:15.178+01:00",
          "name_long" : null,
          "db_migration_id" : "1",
          "db_migration_site_key" : "dk"
        }
      },
      "AssetJob" : {
        "properties" : {
          "job" : {
            "type" : "object",
            "properties" : {
              "_links" : {
                "type" : "object",
                "properties" : {
                  "self" : {
                    "type" : "object",
                    "properties" : {
                      "href" : {
                        "type" : "string",
                        "format" : "uri"
                      }
                    }
                  }
                }
              }
            }
          },
          "state" : {
            "type" : "string"
          }
        },
        "example" : {
          "job" : {
            "_links" : {
              "self" : "url"
            }
          },
          "state" : "success"
        }
      },
      "ProviderDeal" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "client" : {
            "type" : "string"
          },
          "client_id" : {
            "type" : "integer"
          },
          "company_name" : {
            "type" : "string"
          },
          "client_phone_number" : {
            "type" : "string"
          },
          "client_email" : {
            "type" : "string",
            "format" : "email"
          },
          "location" : {
            "type" : "string"
          },
          "location_id" : {
            "type" : "integer"
          },
          "created_at" : {
            "type" : "string",
            "format" : "data-time"
          },
          "state" : {
            "type" : "string"
          }
        }
      }
    }
  },
  "paths" : {
    "/root" : {
      "get" : {
        "tags" : [ "FAQ" ],
        "summary" : "Base operations",
        "responses" : {
          "200" : {
            "description" : "test",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "_links" : {
                      "type" : "object",
                      "properties" : {
                        "clients" : {
                          "type" : "object",
                          "properties" : {
                            "href" : {
                              "type" : "string",
                              "format" : "uri"
                            }
                          }
                        },
                        "locations" : {
                          "type" : "object",
                          "properties" : {
                            "href" : {
                              "type" : "string",
                              "format" : "uri"
                            }
                          }
                        },
                        "contacts" : {
                          "type" : "object",
                          "properties" : {
                            "href" : {
                              "type" : "string",
                              "format" : "uri"
                            }
                          }
                        },
                        "orders" : {
                          "type" : "object",
                          "properties" : {
                            "index" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "format" : "uri"
                                }
                              }
                            },
                            "index_for" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "format" : "uri"
                                }
                              }
                            }
                          }
                        },
                        "provider" : {
                          "type" : "object",
                          "properties" : {
                            "show" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "format" : "uri"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provider" : {
      "get" : {
        "tags" : [ "FAQ" ],
        "summary" : "Base information about yourself",
        "responses" : {
          "200" : {
            "description" : "test",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "company_name" : {
                      "type" : "string"
                    },
                    "uuid" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations" : {
      "get" : {
        "tags" : [ "Locations" ],
        "summary" : "Return all locations.",
        "responses" : {
          "200" : {
            "description" : "Successfull response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "_links" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "locations" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/LocationPreview"
                      }
                    }
                  }
                }
              }
            },
            "links" : {
              "locationID" : {
                "$ref" : "#/components/links/locationID"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Locations" ],
        "summary" : "Create new location.",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "$ref" : "#/components/schemas/LocationPOSTorPUT"
                  }
                }
              },
              "encoding" : {
                "location" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Wrong input data",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string"
                    },
                    "error_code" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationID}" : {
      "get" : {
        "tags" : [ "Locations" ],
        "summary" : "Return location by ID.",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the location to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "404" : {
            "description" : "Location with locationID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Locations" ],
        "summary" : "Update location by ID.",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the location to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "$ref" : "#/components/schemas/LocationPOSTorPUT"
                  }
                }
              },
              "encoding" : {
                "location" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "404" : {
            "description" : "Location with locationID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationID}/activate" : {
      "post" : {
        "tags" : [ "Locations" ],
        "summary" : "Change location state to active by ID.",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the location to change a state to active",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "422" : {
            "description" : "No Reason Phrase",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "404" : {
            "description" : "Location with locationID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationID}/deactivate" : {
      "put" : {
        "tags" : [ "Locations" ],
        "summary" : "Change location state to deactive by ID.",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the location to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "422" : {
            "description" : "No Reason Phrase",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "404" : {
            "description" : "Location with locationID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationID}/copy" : {
      "post" : {
        "tags" : [ "Locations" ],
        "summary" : "Create new location as clone other location by ID.",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the location to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "ok"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Location with locationID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationID}/currency" : {
      "get" : {
        "tags" : [ "Currency", "Locations" ],
        "summary" : "Return location currency by location's ID.",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the location to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "currency" : {
                      "$ref" : "#/components/schemas/Currency"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Location with locationID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statistics/{locationID}/location" : {
      "get" : {
        "tags" : [ "Statistics", "Locations" ],
        "summary" : "Show location statistics if the location is active",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "location ID for getting statistics",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "currency" : {
                      "$ref" : "#/components/schemas/Currency"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Location with locationID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationID}/photos" : {
      "post" : {
        "tags" : [ "Photos" ],
        "summary" : "Create new photo of the location.",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the location for adding a new photo",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "photo" : {
                    "$ref" : "#/components/schemas/PhotoPOSTorPUT"
                  }
                }
              },
              "encoding" : {
                "photo" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "job" : {
                      "$ref" : "#/components/schemas/AssetJob"
                    },
                    "state" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/photos/{photoID}" : {
      "get" : {
        "tags" : [ "Photos" ],
        "summary" : "Return photo by ID.",
        "parameters" : [ {
          "name" : "photoID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the photo to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "photo" : {
                      "$ref" : "#/components/schemas/Photo"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Photo with contactID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Photos" ],
        "summary" : "Update photo by ID.",
        "parameters" : [ {
          "name" : "photoID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the photo to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "photo" : {
                    "$ref" : "#/components/schemas/PhotoPOSTorPUT"
                  }
                }
              },
              "encoding" : {
                "photo" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "job" : {
                      "$ref" : "#/components/schemas/AssetJob"
                    },
                    "state" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Photo with contactID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Photos" ],
        "summary" : "Destroy photo by ID.",
        "parameters" : [ {
          "name" : "photoID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the photo to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response"
          },
          "404" : {
            "description" : "Photo with contactID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationID}/floor_plans" : {
      "post" : {
        "tags" : [ "Floor Plans" ],
        "summary" : "Create new floor plan of the location.",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the location to adding a new floor plan",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "floor_plan" : {
                    "$ref" : "#/components/schemas/FloorPlanPOSTorPUT"
                  }
                }
              },
              "encoding" : {
                "floor_plan" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "job" : {
                      "$ref" : "#/components/schemas/AssetJob"
                    },
                    "state" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/floor_plans/{floorPlanID}" : {
      "get" : {
        "tags" : [ "Floor Plans" ],
        "summary" : "Return floor plan by ID.",
        "parameters" : [ {
          "name" : "floorPlanID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the photo to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorPlanPOSTorPUT"
                }
              }
            }
          },
          "404" : {
            "description" : "Floor plan with floorPlanID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Floor Plans" ],
        "summary" : "Update floor plan by ID.",
        "parameters" : [ {
          "name" : "floorPlanID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the floor plan to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "floor_plan" : {
                    "$ref" : "#/components/schemas/FloorPlan"
                  }
                }
              },
              "encoding" : {
                "floor_plan" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "job" : {
                      "$ref" : "#/components/schemas/AssetJob"
                    },
                    "state" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Floor plan with floorPlanID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Floor Plans" ],
        "summary" : "Destroy floor plan by ID.",
        "parameters" : [ {
          "name" : "floorPlanID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the contact to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response"
          },
          "404" : {
            "description" : "Location with contactID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationID}/prospectuses" : {
      "post" : {
        "tags" : [ "Prospectuses" ],
        "summary" : "Create new prospectus of the location.",
        "parameters" : [ {
          "name" : "locationID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the location for adding a new prospectus",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "prospectus" : {
                    "$ref" : "#/components/schemas/ProspectusPOSTorPUT"
                  }
                }
              },
              "encoding" : {
                "prospectus" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "job" : {
                      "$ref" : "#/components/schemas/AssetJob"
                    },
                    "state" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/prospectuses/{prospectusID}" : {
      "get" : {
        "tags" : [ "Prospectuses" ],
        "summary" : "Return prospectus by ID.",
        "parameters" : [ {
          "name" : "prospectusID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of a prospectus to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "prospectuse" : {
                      "$ref" : "#/components/schemas/Prospectus"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Prospectus with prospectusID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Prospectuses" ],
        "summary" : "Update prospectus by ID.",
        "parameters" : [ {
          "name" : "prospectusID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of a prospectus to update",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "prospectuse" : {
                    "$ref" : "#/components/schemas/ProspectusPOSTorPUT"
                  }
                }
              },
              "encoding" : {
                "location" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "job" : {
                      "$ref" : "#/components/schemas/AssetJob"
                    },
                    "state" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Prospectus with prospectusID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Prospectuses" ],
        "summary" : "Destroy photo by ID.",
        "parameters" : [ {
          "name" : "prospectusID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the prospectus to destroy",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response"
          },
          "404" : {
            "description" : "Prospectus with prospectuseId not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Return all contacts.",
        "responses" : {
          "200" : {
            "description" : "Successfull response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "_links" : {
                      "type" : "object",
                      "properties" : {
                        "self" : {
                          "type" : "object",
                          "properties" : {
                            "href" : {
                              "type" : "string",
                              "format" : "uri"
                            },
                            "contacts" : {
                              "allOf" : [ {
                                "$ref" : "#/components/schemas/Contact"
                              }, {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "format" : "uri"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Create new contact.",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "contact" : {
                    "$ref" : "#/components/schemas/Contact"
                  }
                }
              },
              "encoding" : {
                "contact" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contactID}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Return contact by ID.",
        "parameters" : [ {
          "name" : "contactID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the contact to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                }
              }
            }
          },
          "404" : {
            "description" : "Location with contactID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "Update contact by ID.",
        "parameters" : [ {
          "name" : "contactID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the contact to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "contact" : {
                    "$ref" : "#/components/schemas/Contact"
                  }
                }
              },
              "encoding" : {
                "contact" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                }
              }
            }
          },
          "404" : {
            "description" : "Location with contactID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "Destroy contact by ID.",
        "parameters" : [ {
          "name" : "contactID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the contact to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                }
              }
            }
          },
          "404" : {
            "description" : "Location with contactID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/asset_jobs/{assetJobID}" : {
      "get" : {
        "tags" : [ "Asset Jobs" ],
        "summary" : "Return asset job by ID.",
        "parameters" : [ {
          "name" : "assetJobID",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the asset job to return",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetJob"
                }
              }
            }
          },
          "404" : {
            "description" : "Asset job with assetJobID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Return all clients.",
        "responses" : {
          "200" : {
            "description" : "Successfull response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "Return all orders.",
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "default" : 0
          },
          "required" : false,
          "description" : "The number of items to skip before starting to collect the result set"
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "default" : 0
          },
          "required" : false,
          "description" : "The numbers of items to return"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfull response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "orders" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Order"
                      }
                    },
                    "total" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/leases" : {
      "post" : {
        "tags" : [ "Leases" ],
        "summary" : "Create new lease.",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "lease" : {
                    "$ref" : "#/components/schemas/Lease"
                  }
                }
              },
              "encoding" : {
                "lease" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Lease"
                }
              }
            }
          }
        }
      }
    },
    "/provider_deals/unresolved" : {
      "get" : {
        "tags" : [ "Provider Deals" ],
        "summary" : "List of unresolved deal",
        "responses" : {
          "200" : {
            "description" : "Success request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "provider_deals" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ProviderDeal"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provider_deals/{providerDealId}" : {
      "get" : {
        "tags" : [ "Provider Deals" ],
        "summary" : "Return provider deal by ID.",
        "parameters" : [ {
          "name" : "providerDealId",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the provider deal for getting information",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderDeal"
                }
              }
            }
          },
          "404" : {
            "description" : "Record with ID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string",
                      "example" : "record_not_found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Provider Deals" ],
        "summary" : "Update contact by ID.",
        "parameters" : [ {
          "name" : "providerDealId",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the provider deal for updating information",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "provider_deal" : {
                    "$ref" : "#/components/schemas/ProviderDeal"
                  }
                }
              },
              "encoding" : {
                "location" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderDeal"
                }
              }
            }
          },
          "404" : {
            "description" : "Record with ID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationId}/subscriptions" : {
      "get" : {
        "tags" : [ "Subscriptions", "Contacts" ],
        "summary" : "Return subscription contacts of a location",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "required" : true,
          "description" : "ID of the location for getting subscription contacts list",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "_links" : {
                      "type" : "object",
                      "properties" : {
                        "self" : {
                          "type" : "object",
                          "properties" : {
                            "href" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "subscriptions" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "_links" : {
                            "type" : "object",
                            "properties" : {
                              "_links" : {
                                "type" : "object",
                                "properties" : {
                                  "href" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "contact" : {
                                "type" : "object",
                                "properties" : {
                                  "href" : {
                                    "type" : "string"
                                  }
                                }
                              }
                            }
                          },
                          "contact" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Record with ID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Subscriptions", "Contacts" ],
        "summary" : "Create new subscription contact of a location",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "required" : true,
          "description" : "A list of subscription contacts by ID of a location",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "contact" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "number"
                      }
                    }
                  }
                }
              },
              "encoding" : {
                "lease" : {
                  "contentType" : "application/json"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "subscription" : {
                      "type" : "object",
                      "properties" : {
                        "_links" : {
                          "type" : "object",
                          "properties" : {
                            "self" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "contact" : {
                              "type" : "object",
                              "properties" : {
                                "herf" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "location" : {
                              "type" : "object",
                              "properties" : {
                                "herf" : {
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        },
                        "contact" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}" : {
      "get" : {
        "tags" : [ "Subscriptions", "Contacts" ],
        "summary" : "Show subscription contact of a location by subscriptionId",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "required" : true,
          "description" : "ID of the subscription contact for getting information",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "subscription" : {
                      "type" : "object",
                      "properties" : {
                        "_links" : {
                          "type" : "object",
                          "properties" : {
                            "self" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "contact" : {
                              "type" : "object",
                              "properties" : {
                                "herf" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "location" : {
                              "type" : "object",
                              "properties" : {
                                "herf" : {
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        },
                        "contact" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Record with ID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Subscriptions", "Contacts" ],
        "summary" : "Destroy a subscription contact of a location by a subscriptionId",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "required" : true,
          "description" : "ID of a subscription contact for destroy",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response"
          },
          "404" : {
            "description" : "Record with ID not found",
            "content" : {
              "json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "example" : "Record not found!. Error id"
                    },
                    "error_code" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}