{
  "openapi": "3.0.1",
  "info": {
    "title": "eXtend Media Paywall Service API",
    "description": "Media Wall API Specification",
    "contact": {
      "name": "Ioannidis Thanasis",
      "url": "https://extend.gr",
      "email": "t.ioannidis@extend.gr"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/Account": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Deletes account of the authorized user",
        "description": "Applies only for customers and customer contacts",
        "operationId": "AccountDelete_V1",
        "responses": {
          "200": {
            "description": "Account deleted succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Account/{id}": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Deletes an account",
        "description": "Applies only for admins",
        "operationId": "AccountDeleteById_V1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the user account to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Account/update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Updates the account data of the authorized user",
        "description": "Applies only for customers and customer contacts",
        "operationId": "AccountUpdate_V1",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMyAccountModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMyAccountModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMyAccountModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMyAccountModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data updated succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Account/{id}/update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Updates an account's data",
        "description": "Applies only for admins",
        "operationId": "AccountUpdateById_V1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the user account to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMyAccountModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMyAccountModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMyAccountModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMyAccountModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data updated succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registers a new user account",
        "operationId": "AuthRegister_V1",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer created succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Auth/activate": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Activates a newly registered account",
        "operationId": "AuthActivate_V1",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLoginModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLoginModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "There was no account corresponding to the provided token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "The account was succesfully activated"
          }
        }
      }
    },
    "/api/v1/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Performs login action",
        "operationId": "AuthLogin_V1",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success. The authentication token is returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResult"
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Login failure. There is no user with the given e-mail and password or one of the email, or password are incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleErrorResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleErrorResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Auth/password/change": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Changes a user's password",
        "operationId": "AuthPasswordChange_V1",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Auth/password/request": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Request a change for a user's password",
        "operationId": "AuthPasswordRequest_V1",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestNewPasswordModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestNewPasswordModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestNewPasswordModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestNewPasswordModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request for password change completed succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Customers/{customerId}/contact/{id}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Deletes a customer's contact",
        "description": "Applies to admins and customers",
        "operationId": "CustomerDeleteContact_V1",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of the customer to whom the contact belongs",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the contact to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Updates a customer's contact",
        "description": "Applies to admins and customers",
        "operationId": "CustomerUpdateContact_V1",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of the customer to whom the contact belongs",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the contact to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data updated succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Customers/contact": {
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Creates a contact for the authenticated customer",
        "description": "Applies only for customers",
        "operationId": "CustomerCreateContact_V1",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "200": {
            "description": "Contact created succesfully"
          },
          "400": {
            "description": "There was an error in the request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Customers/{id}/contact": {
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Creates a contact for a specific customer",
        "description": "Applies only to admins",
        "operationId": "CustomerCreateContactById_V1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer's id for which to create contact",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          },
          "200": {
            "description": "Contact created succesfully"
          },
          "400": {
            "description": "There was an error in the request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ResultCode": {
        "enum": [
          "SUCCESS",
          "GENERIC_FAILURE",
          "BAD_REQUEST",
          "NOT_FOUND",
          "UNAUTHORIZED",
          "NOT_ALLOWED",
          "INCORRECT_EMAIL_OR_PASSWORD",
          "CREATED"
        ],
        "type": "string"
      },
      "BaseResult": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ResultCode"
          },
          "success": {
            "type": "boolean",
            "description": "Indicates sucessful outcome of the action or not"
          }
        },
        "additionalProperties": false
      },
      "CustomerType": {
        "enum": [
          "Retail",
          "Business"
        ],
        "type": "string"
      },
      "UpdateMyAccountModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Snow"
          },
          "mobile": {
            "type": "string",
            "nullable": true,
            "example": "6945767676"
          },
          "type": {
            "$ref": "#/components/schemas/CustomerType"
          },
          "afm": {
            "type": "string",
            "nullable": true,
            "example": "012345678"
          },
          "doy": {
            "type": "string",
            "nullable": true,
            "example": "ΝΕΑΣ ΣΜΥΡΝΗΣ"
          },
          "jobDescription": {
            "type": "string",
            "nullable": true,
            "example": "Μπακάλης"
          }
        },
        "additionalProperties": false
      },
      "AddressModel": {
        "required": [
          "address",
          "region",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "If the customer has only one address it becomes the default address"
          },
          "isBilling": {
            "type": "boolean"
          },
          "isDelivery": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterCustomerModel": {
        "required": [
          "email",
          "lastName",
          "name",
          "password",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CustomerType"
          },
          "afm": {
            "type": "string",
            "description": "Customer's VAT number (applies only to business customers)",
            "nullable": true
          },
          "doy": {
            "type": "string",
            "description": "Customer's DOY (applies only to business customers)",
            "nullable": true
          },
          "jobDescription": {
            "type": "string",
            "description": "Customer's job description (applies only to business customers)",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressModel"
            },
            "description": "Customer's addresses. (applies only to business customers). A business customer must have at least one address",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "An error status (usually the HttpStatus code)",
            "format": "int32",
            "example": 404
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Map of individual errors (usually corresponding to data fields)",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "An error message",
            "nullable": true,
            "example": "You are not allowed to access this resource"
          },
          "code": {
            "$ref": "#/components/schemas/ResultCode"
          },
          "success": {
            "type": "boolean",
            "description": "Indicates sucessful outcome of the action or not"
          }
        },
        "additionalProperties": false
      },
      "ActivateLoginModel": {
        "required": [
          "activationToken"
        ],
        "type": "object",
        "properties": {
          "activationToken": {
            "type": "string",
            "nullable": true,
            "example": "dsf7byc078y2b93478r6y29c8347rc92b8734rb692c8734r6"
          }
        },
        "additionalProperties": false,
        "description": "Data for activation of a newly registered account"
      },
      "LoginModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginResult": {
        "type": "object",
        "properties": {
          "authToken": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "$ref": "#/components/schemas/ResultCode"
          },
          "success": {
            "type": "boolean",
            "description": "Indicates sucessful outcome of the action or not"
          }
        },
        "additionalProperties": false
      },
      "SimpleErrorResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message",
            "nullable": true,
            "example": "You are not allowed to access this resource"
          },
          "code": {
            "$ref": "#/components/schemas/ResultCode"
          },
          "success": {
            "type": "boolean",
            "description": "Indicates sucessful outcome of the action or not"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordModel": {
        "required": [
          "newPassword",
          "passwordResetToken"
        ],
        "type": "object",
        "properties": {
          "passwordResetToken": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestNewPasswordModel": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateContactModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Contact's first name",
            "nullable": true,
            "example": "Νίκος"
          },
          "lastName": {
            "type": "string",
            "description": "Contact's last name",
            "nullable": true,
            "example": "Νικολόπουλος"
          },
          "jobTitle": {
            "type": "string",
            "description": "Job title",
            "nullable": true,
            "example": "Garbage collector"
          }
        },
        "additionalProperties": false
      },
      "CreateContactModel": {
        "required": [
          "email",
          "lastName",
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Contact's first name",
            "nullable": true,
            "example": "Νίκος"
          },
          "lastName": {
            "type": "string",
            "description": "Contact's last name",
            "nullable": true,
            "example": "Νικολόπουλος"
          },
          "email": {
            "type": "string",
            "description": "Contact's email (for login)",
            "format": "email",
            "nullable": true,
            "example": "nick@home.me"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "description": "Job title",
            "nullable": true,
            "example": "Garbage collector"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT security",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Operations for registering, activating, singing in and password resetting of a user account"
    }
  ]
}