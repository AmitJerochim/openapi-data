{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "This is a task scheduler application\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "version" : "0.0.1-beta.3",
    "title" : "Task Scheduler",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "dschowta@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/dschowta/taskScheduler/1.0.0"
  }, {
    "url" : "https://petstore.swagger.io/v2"
  } ],
  "tags" : [ {
    "name" : "task",
    "description" : "Everything about your tasks",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  } ],
  "paths" : {
    "/task" : {
      "post" : {
        "tags" : [ "task" ],
        "summary" : "Add a new task",
        "operationId" : "addTask",
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Task"
        }
      },
      "get" : {
        "tags" : [ "task" ],
        "summary" : "Gets all the tasks",
        "operationId" : "findPetsByStatus",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Task" : {
        "type" : "object",
        "required" : [ "name", "photoUrls" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "adfjndffjdfvcoe"
          },
          "name" : {
            "type" : "string",
            "example" : "Water the plant"
          },
          "startDate" : {
            "type" : "string",
            "format" : "datetime",
            "example" : "2006-01-02T15:04:05Z07:00",
            "description" : "Start time of the task. If not given, the time when the task is created is taken. date time in RFC3339 format"
          },
          "endDate" : {
            "type" : "string",
            "format" : "datetime",
            "example" : "2006-01-02T15:04:05Z07:00",
            "description" : "Possible time of the task to end. After this, the task will not be rescheduled.date time in RFC3339 format"
          },
          "repeatType" : {
            "type" : "string",
            "enum" : [ "RepeatDaily", "RepeatWeekly", "RepeatMonthlyDatewise", "RepeatMonthlyWeekwise", "RepeatYearly" ],
            "description" : "Repeat pattern:\n * `RepeatDaily` - once per `repeatPer` days\n * `RepeatWeekly` - once per `repeatPer` weeks\n * `RepeatMonthlyDatewise` - once per `repeatPer` months\n * `RepeatMonthlyWeekwise` - once per `repeatPer` months\n * `Yearly` - once per `repeatPer` years.\n"
          },
          "repeatPer" : {
            "type" : "integer",
            "example" : 1,
            "description" : "Number of days/weeks/months/years between consecutive tasks"
          },
          "Repetition" : {
            "$ref" : "#/components/schemas/RepetitionType"
          }
        }
      },
      "RepetitionType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Daily"
        }, {
          "$ref" : "#/components/schemas/Weekly"
        }, {
          "$ref" : "#/components/schemas/MonthlyDatewise"
        }, {
          "$ref" : "#/components/schemas/MonthlyDayOfWeekwise"
        }, {
          "$ref" : "#/components/schemas/Yearly"
        } ]
      },
      "Weekly" : {
        "type" : "object",
        "properties" : {
          "days" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DayOfTheWeek"
            }
          }
        }
      },
      "Daily" : {
        "type" : "object"
      },
      "MonthlyDatewise" : {
        "type" : "object",
        "properties" : {
          "dates" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "description" : "integer between 1 to 31"
            },
            "description" : "The array of the days to repeat"
          }
        }
      },
      "MonthlyDayOfWeekwise" : {
        "type" : "object",
        "properties" : {
          "week" : {
            "type" : "integer",
            "description" : "between 1 to 4"
          },
          "day" : {
            "type" : "integer",
            "description" : "Between 1 to 7. 1 for Sunday and 7 for Saturday."
          }
        }
      },
      "Yearly" : {
        "type" : "object",
        "properties" : {
          "month" : {
            "type" : "integer",
            "description" : "between 1 to 12"
          },
          "date" : {
            "type" : "integer",
            "description" : "between 1 to 31"
          }
        }
      },
      "DayOfTheWeek" : {
        "type" : "integer",
        "description" : "Between 1 to 7. 1 for Sunday and 7 for Saturday."
      }
    },
    "requestBodies" : {
      "Task" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Task"
            }
          }
        },
        "description" : "Pet object that needs to be added to the store without ID field",
        "required" : true
      }
    }
  }
}