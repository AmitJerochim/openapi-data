openapi: 3.0.0
info:
  version: v1
  title: Luisterhuis Supply Detail API
  description: Exchanging availability and price data with Luisterhuis
servers:
  - url: 'https://api.luisterhuis.nl/api/CB/v1'
    description: Production server
  - url: 'https://cbtest-api.luisterhuis.nl/api/CB/v1'
    description: Sandbox server
security:
  - basicAuth: []
  - bearerAuth: []
paths:
  /audiobooks/{ean}/availability:
    parameters:
      - $ref: '#/components/parameters/ean'
    get:
      summary: "Get all availability information for a given ean"
      tags: [availability]
      responses:
        200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Availabilities'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
        401:
          description: "Authentication information or Access token is missing or invalid"
        404:
          description: EAN not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
  /audiobooks/{ean}/availability/{channel_id}:
    parameters:
      - $ref: '#/components/parameters/ean'
      - $ref: '#/components/parameters/channel_id'
    get:
      summary: "Get availability information for a given ean / channel_id"
      tags: [availability]
      responses:
        200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Availability'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: EAN / channel not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Availability'
        required: true
      summary: "Add availability for a given ean / channel_id"
      tags: [availability]
      responses:
        200:
          description: OK
          content:
           application/json:
              schema:
                $ref: '#/components/schemas/Availability'
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: EAN / channel not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Availability'
        required: true
      summary: "Modify availability for a given ean / channel_id"
      tags: [availability]
      responses:
        200:
          description: OK
          content:
           application/json:
              schema:
                $ref: '#/components/schemas/Availability'
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: EAN / channel not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
    delete:
      summary: "Delete availability for a given ean / channel_id; constraint: AvailableFrom date must lie in the future"
      tags: [availability]
      responses:
        204:
            description: No content
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: EAN / channel not found
  /audiobooks/{ean}/prices:
    get:
      parameters: 
        - $ref: '#/components/parameters/ean'
        - $ref: '#/components/parameters/channelid'
      summary: "Get all prices for a given ean, optionally filtered by channelid; channelid=0 returns default prices"
      tags: [prices]
      responses:
        200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Prices'
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: EAN not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
    post:
      parameters: 
      - $ref: '#/components/parameters/ean'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
            examples:
              RRP:
                value:
                  ChannelID: 36
                  Amount: 1395
                  FromDate: "2020-02-25"
                  Type: "RRP"
                  VAT: 9
                  ModifiedBy: "erik@vandergulik.nl"
              SRP:
                value:
                  ChannelID: 36
                  Amount: 995
                  FromDate: "2020-02-25"
                  UntilDate: "2021-02-25"
                  Type: "SRP"
                  VAT: 9
                  Label: "Aanbieding"
                  ModifiedBy: "erik@vandergulik.nl"
        required: true
      summary: "Add a price for the given ean"
      tags: [prices]
      responses:
        200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Price'
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: EAN not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
  /audiobooks/{ean}/prices/{price_id}:
    parameters:
      - $ref: '#/components/parameters/ean'
      - $ref: '#/components/parameters/price_id'
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPrice'
        required: true
      summary: "Update price; constraint: FromDate must lie in the future. Otherwise, you may only update the SRP's UntilDate"
      tags: [prices]
      responses:
        200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PatchPrice'
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: EAN / price not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
    delete:
      summary: "Delete price; constraint: FromDate must lie in the future"
      tags: [prices]
      responses:
        204:
          description: No content
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: EAN / price not found
  /channels/{channel_id}:
    parameters:
      - $ref: '#/components/parameters/channel_id'
    get:
      summary: "Get all information of a channel"
      tags: [channels]
      responses:
        200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Channel'
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: Channel not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
  /publishers/{relation_id}/channels:
    parameters:
      - $ref: '#/components/parameters/relation_id'
    get:
     summary: "Get all channels with whom a given publisher has or could have an agreement with"
     tags: [channels]
     responses:
        200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Channel'
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: Publisher not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
  /publishers/{relation_id}/agreements:
    parameters:
      - $ref: '#/components/parameters/relation_id'
      - $ref: '#/components/parameters/channeltype'
      - $ref: '#/components/parameters/revenuetype'
    get:
      summary: "Get all channels that have an agreement with a given publisher, optionally filtered on channel type and/or revenue type"
      tags: [agreements]
      responses:
        200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Agreements'
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: Publisher not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
  /publishers/{relation_id}/agreements/{channel_id}:
    parameters:
      - $ref: '#/components/parameters/relation_id'
      - $ref: '#/components/parameters/channel_id'
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agreement'
        required: true
      summary: "Add / Modify an agreement between a publisher and a channel"
      tags: [agreements]
      responses:
        200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Agreement'
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
        404:
          description: Publisher / channel not found
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
    delete:
      summary: "Delete an agreement between a publisher and a channel; constraints: StartDate must lie in the future, there should be no active availability"
      tags: [agreements]
      responses:
        204:
            description: No Content
        400:
          description: Bad request
        401:
          description: Authentication information or Access token is missing or invalid
components:
  parameters:
    channelid:
      in: query
      name: channelid
      required: false
      schema:
        type: integer
      example: 36
    channel_id:
      in: path
      name: channel_id
      description: The Luisterhuis id of the channel
      required: true
      style: simple
      explode: false
      schema:
        pattern: ^([0-9]+)$
        type: integer
        minimum: 1
      example: 36
    channeltype:
      in: query
      name: channeltype
      required: false
      schema:
        type: string
        enum: [webshops, platforms]
      example: webshops
    ean:
      in: path
      name: ean
      description: The ean of the audiobook
      required: true
      style: simple
      explode: false
      schema:
        pattern: ^([0-9]{13})$
        type: string
        minimum: 1
      example: "9781234567897"
    price_id:
      in: path
      name: price_id
      description: The price_id of the price
      required: true
      style: simple
      explode: false
      schema:
        pattern: ^([0-9]+)$
        type: integer
        minimum: 1
      example: 4540
    relation_id:
      in: path
      name: relation_id
      description: The CB RelationID of the publisher
      required: true
      style: simple
      explode: false
      schema:
        pattern: ^([0-9]+)$
        type: integer
        minimum: 1
      example: 9141522
    revenuetype:
      in: query
      name: revenuetype
      required: false
      schema:
        type: string
        enum: [sales, subs]
      example: sales
  schemas:
    Agreement:
      type: "object"
      required:
        - "AgreementStartDate"
        - "ModifiedBy"
      properties:
        ChannelID:
          type: "integer"
          readOnly: true
          description: The id of the channel
          example: 36
        PublisherID:
          type: "integer"
          readOnly: true
          description: The id of the publisher
          example: 22
        DiscountPercentage:
          type: "number"
          readOnly: true
          description: Share for the reseller (only relevant for webshops)
          example: 30.00
        AgreementStartDate:
          type: "string"
          description: Start date of the agreement
          example: "2015-09-17"
        AgreementEndDate:
          type: "string"
          nullable: true
          description: End date of the agreement
          example: null
        ModifiedBy:
          type: "string"
          description: User who added / modified the agreement; max 100 characters
          example: "erik@vandergulik.nl"
        CreatedAt:
          type: "string"
          readOnly: true
          description: Date at which the agreement was created
          example: "2018-09-25T12:24:48.000000Z"
        UpdatedAt:
          type: "string"
          readOnly: true
          description: Date at which the agreement was modified
          example: "2019-09-25 12:24:48"
    Agreements:
      type: "array"
      items:
        $ref: "#/components/schemas/Agreement"
    Availabilities:
      type: "array"
      items:
        $ref: "#/components/schemas/Availability"
    Availability:
      type: "object"
      required:
        - "Embargo"
        - "AvailableFrom"
        - "ModifiedBy"
      properties:
        ChannelID:
          type: integer
          readOnly: true
          description: ChannelID
          example: 36
        Embargo:
          type: "boolean"
          description: If true, do not announce
          example: false
        AvailableFrom:
          type: "string"
          description: Available from date
          example: "2020-02-25"
        AvailableUntil:
          type: "string"
          nullable: true
          description: Available until date (can be null); non-inclusive, at the start of this day the title will be made unavailable
          example: "2021-02-24"
        ModifiedBy:
          type: "string"
          description: User who added / modified the availability; max 100 characters
          example: "erik@vandergulik.nl"
        CreatedAt:
          type: "string"
          readOnly: true
          description: Date and time at which the availaiblity is created
          example: "2020-01-10T10:05:06.000000Z"
        UpdatedAt:
          type: "string"
          readOnly: true
          description: Date and time at which the availability is updated
          example: "2020-01-11T09:55:34.000000Z"
    Channel:
      type: "object"
      properties:
        ChannelID:
          type: "integer"
          description: Channel ID
          example: 36
        ChannelName:
          type: "string"
          description: Channel name
          example: "Luisterrijk"
        ChannelType:
          type: "string"
          enum: [webshop, platform]
          description: Channel type
          example: "webshop"
        RevenueType:
          type: "string"
          enum: [sales, revenue]
          description: Revenue type
          example: "sales"
        ContractType:
          type: "string"
          enum: [bulk, proprietary]
          description: Contract type
          example: "bulk"
        ContractStartDate:
          type: "string"
          description: Start date of contract
          example: "2015-10-07"
        ContractEndDate:
          type: "string"
          nullable: true
          description: End date of contract
          example: null
        ChannelInfoURL:
          type: "string"
          nullable: true
          description: Url with more information about this channel, mostly used for platforms
          example: https://s3.eu-west-3.amazonaws.com/luisterhuis/documents/Luisterhuis_and_Luisterrijk.html
    Messages:
      type: "array"
      items:
        $ref: "#/components/schemas/Message"
    Message:
      type: "object"
      required:
        - "MessageType"
        - "MessageCode"
        - "MessageText"
      properties:
        MessageType:
          type: "string"
          enum: ["E", "I"]
          description: >
            Functional message
             * `E` (Error) The web service did not lead to a possible functional reply. There is a fault in the request.
             * `I` (Information) The web service did lead to a functional reply. However, this functional reply may require further explanation.
          example: "I"
        "MessageCode":
          type: "string"
          description: "The code of the error/information"
          example: "LH-00001"
        "MessageText":
           type: "string"
           description: "Explanation of the error/information"
           example: "The text of the error/information"
        "MessageInfo":
          type: "array"
          description: "Optional array of detailed error/info messages"
          items:
            type: "string"
            example: "Optional detailed error/information messages"
      description: "The message body"
    Prices:
      type: "array"
      items:
       $ref: "#/components/schemas/Price"
    Price:
      type: "object"
      required:
        - "ChannelID"
        - "Amount"
        - "FromDate"
        - "Type"
        - "ModifiedBy"
      properties:
        PriceID:
          type: "integer"
          readOnly: true
          description: Price ID
          example: 4540
        ChannelID:
          type: "integer"
          readOnly: true
          description: required; Channel ID
          example: 36
        Amount:
          type: "integer"
          description: required; Price amount
          example: 1395
        FromDate:
          type: "string"
          description: required; Date from which price is valid
          example: "2020-03-20"
        UntilDate:
          type: "string"
          nullable: true
          description: required when SRP; Date until price is valid; this date is inclusive; when null, it is not returned
          example: "2020-04-20"
        Type:
          type: "string"
          enum: [RRP, SRP]
          description: required; PriceType; recommended retail price, special retail price
          example: SRP
        VAT:
          type: "number"
          description: VAT percentage
          example: 9
        Label:
          type: "string"
          nullable: true
          description: Description (max 50 characters) that can be added to this price; when null, it is not returned
          example: nullable; Speciale aanbieding, geldig van 20 maart 2020 tot en met 19 april 202
        ModifiedBy:
          type: "string"
          description: required; User who added / modified the price; max 100 characters
          example: erik@vandergulik.nl
    PatchPrice:
      type: "object"
      required:
        - "ModifiedBy"
      properties:
        Amount:
          type: "integer"
          description: Price amount
          example: 1395
        FromDate:
          type: "string"
          description: Date from which price is valid
          example: "2020-03-20"
        UntilDate:
          type: "string"
          nullable: true
          description: Date until price is valid; this date is inclusive
          example: "2020-04-20"
        VAT:
          type: "number"
          description: VAT percentage
          example: 9
        Label:
          type: "string"
          nullable: true
          description: Description (max 50 characters) that can be added to this price
          example: Speciale aanbieding, geldig van 20 maart 2020 tot en met 19 april 202
        ModifiedBy:
          type: "string"
          description: User who added / modified the price; max 100 characters
          example: erik@vandergulik.nl
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
