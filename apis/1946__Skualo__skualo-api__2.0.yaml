openapi: 3.0.1
info:
  title: Skualo API
  description: " \r\n# Introducción\r\nEn esta página encontrará la documentación necesaria para utilizar la API de **Skualo v2.0** desarrollada por el equipo de [Skualo SpA](http://www.skualo.cl).\r\n\r\nA través de esta API RESTful podrás acceder a los datos de tu empresa que están en [Skualo](http://www.skualo.cl). \r\n\r\n# Acciones sobre los Objetos\r\n| Método | Descripción\r\n|:--:|:--|\r\n|GET | Permite obtener un objeto (acción en singular) o una colección de objetos (acción en plural) |\r\n|POST | Crea un nuevo objeto dentro del sistema; en algunos casos se valida la duplicidad de este, pero en general no. |\r\n|PUT | Actualiza un objeto dentro del sistema, siempre y cuando este exista previamente. |\r\n|DELETE | En los casos permitidos, elimina el objeto del sistema. |\r\n\r\n# Manejo de Errores\r\nCuando ocurre un error o una excepción en una solicitud a la API se retorna la información del error como se detalla a continuación:\r\n\r\n## Tipos de errores\r\n\r\n| HTTP Status Code | HTTP Status Name | Descripción\r\n|:--:|:--|:--|\r\n|400 | Bad Request | Existe algún error en los parámetros enviados en la solicitud |\r\n|401 | Unauthorized | Existe un error asociado al token enviado en la cabecera de la solicitud |\r\n|403 | Forbidden | Su perfil de usuario no le permite procesar esa solicitud |\r\n|404 | Not Found | El objeto solicitado no existe |\r\n|405 | Method Not Allowed | Método (GET/POST/PUT/DELETE) incorrecto |\r\n|409 | Conflict | La solicitud no puede ser procesada por un conflicto en la información enviada o el resultado que podría generar |\r\n|500 | Internal Server Error | Error interno del servidor |\r\n\r\n"
  contact:
    name: Skualo SpA
    url: 'https://www.skualo.cl'
    email: soporte@skualo.cl
  version: "2.0"
paths:
  /auxiliares:
    get:
      tags:
        - Auxiliares
      summary: Listar Auxiliares
      description: Obtiene los Auxiliares registrados.
      operationId: GetAuxiliares
      parameters:
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuxiliarViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/AuxiliarViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/AuxiliarViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/auxiliar/{id}':
    get:
      tags:
        - Auxiliares
      summary: Obtener un Auxiliar
      description: Obtiene los datos de un Auxiliar en particular.
      operationId: GetAuxiliarById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuxiliarViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AuxiliarViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AuxiliarViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    post:
      tags:
        - Auxiliares
      summary: Crear un Auxiliar
      description: Crea un nuevo Auxiliar.
      operationId: PostAuxiliar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AuxiliarDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/AuxiliarDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/AuxiliarDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuxiliarDTO'
      responses:
        '204':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized
        '409':
          description: 'Conflict: Auxiliar a crear ya existe.'
    put:
      tags:
        - Auxiliares
      summary: Actualizar un Auxiliar
      description: Actualizar un Auxiliar existente.
      operationId: PutAuxiliar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AuxiliarDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/AuxiliarDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/AuxiliarDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuxiliarDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: 'Conflict: Auxiliar a actualizar no existe.'
  '/auxiliar/{idAuxiliar}/contactos':
    get:
      tags:
        - Auxiliares
      summary: Listar Contactos de un Auxiliar
      description: Permite listar los contactos de un Auxiliar ya existente.
      operationId: GetContactos
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContactoViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactoViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ContactoViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/auxiliar/{idAuxiliar}/contacto/{id}':
    get:
      tags:
        - Auxiliares
      summary: Obtener un Contacto de un Auxiliar
      description: Permite obtener un Contacto de un Auxiliar ya existente.
      operationId: GetContactoById
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContactoViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactoViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ContactoViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      tags:
        - Auxiliares
      summary: Actualizar un Contacto
      description: Permite actualizar un Contacto para un Auxiliar ya existente.
      operationId: PutContacto
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactoDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactoDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactoDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactoDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/auxiliar/{idAuxiliar}/contacto':
    post:
      tags:
        - Auxiliares
      summary: Crear un Contacto
      description: Permite crear un Contacto para un Auxiliar ya existente.
      operationId: PostContacto
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactoDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactoDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactoDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactoDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: 'Conflict: Auxiliar indicado no existe.'
  '/auxiliar/{idAuxiliar}/direcciones':
    get:
      tags:
        - Auxiliares
      summary: Listar Direcciones de un Auxiliar
      description: Permite listar las direcciones de un Auxiliar ya existente.
      operationId: GetDirecciones
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DireccionViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/DireccionViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/DireccionViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/auxiliar/{idAuxiliar}/direccion/{id}':
    get:
      tags:
        - Auxiliares
      summary: Obtener una Dirección de un Auxiliar
      description: Permite obtener una dirección de un Auxiliar ya existente.
      operationId: GetDireccionById
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DireccionViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/DireccionViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DireccionViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      tags:
        - Auxiliares
      summary: Actualizar una Dirección
      description: Permite actualizar una dirección para un Auxiliar ya existente.
      operationId: PutDireccion
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DireccionDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/DireccionDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/DireccionDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DireccionDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/auxiliar/{idAuxiliar}/direccion':
    post:
      tags:
        - Auxiliares
      summary: Crear una Dirección
      description: Permite crear una dirección para un Auxiliar ya existente.
      operationId: PostDireccion
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DireccionDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/DireccionDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/DireccionDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DireccionDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/auxiliar/{idAuxiliar}/divisiones':
    get:
      tags:
        - Auxiliares
      summary: Listar Divisiones de un Auxiliar
      description: Entrega el listado de divisiones asociadas a un Auxiliar determinado.
      operationId: GetDivisiones
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DivisionViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/DivisionViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/DivisionViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/auxiliar/{idAuxiliar}/division/{id}':
    get:
      tags:
        - Auxiliares
      summary: Obtener una División de un Auxiliar
      description: Entrega el detalle de una división asociada a un Auxiliar determinado.
      operationId: GetDivisionById
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DivisionViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/DivisionViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DivisionViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      tags:
        - Auxiliares
      summary: Actualizar una División
      description: Permite actualizar una división para un Auxiliar ya existente.
      operationId: PutDivision
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DivisionDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/DivisionDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/DivisionDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DivisionDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/auxiliar/{idAuxiliar}/division':
    post:
      tags:
        - Auxiliares
      summary: Crear una División
      description: Permite crear una división para un Auxiliar ya existente.
      operationId: PostDivision
      parameters:
        - name: idAuxiliar
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DivisionDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/DivisionDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/DivisionDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DivisionDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
  /rrhh/fichas:
    get:
      tags:
        - RRHH
      summary: Listar Fichas Trabajadores
      description: Obtiene las Fichas de los Trabajadores registrados.
      operationId: GetFichas
      parameters:
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FichaViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/FichaViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/FichaViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/rrhh/fichas/rut/{rut}':
    get:
      tags:
        - RRHH
      summary: Listar Fichas Trabajadores según RUT
      description: >-
        Obtiene las Fichas de los Trabajadores registrados con un RUT
        determinado.
      operationId: GetFichasByRUT
      parameters:
        - name: rut
          in: path
          required: true
          schema:
            type: string
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FichaViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/FichaViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/FichaViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/rrhh/ficha/{id}':
    get:
      tags:
        - RRHH
      summary: Obtener Ficha
      description: Obtiene la Ficha del Trabajador.
      operationId: GetFichaById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FichaViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/FichaViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FichaViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      tags:
        - RRHH
      summary: Actualizar Ficha de un Trabajador
      description: Actualiza la Ficha del Trabajador.
      operationId: PutFicha
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FichaDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/FichaDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/FichaDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FichaDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: 'Conflict: Uno o más campos relacionados inválidos.'
  '/rrhh/ficha/{id}/picture':
    get:
      tags:
        - RRHH
      summary: Obtener URL de la Fotografía del Trabajador
      description: Obtiene la URL de acceso a la imagen del Trabajador.
      operationId: GetPictureURLAsync
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  '/rrhh/ficha/{id}/auditorias':
    get:
      tags:
        - RRHH
      summary: Listar Registros de Auditoría de una Ficha
      description: Lista la auditoría de cambios de una Ficha.
      operationId: GetBitacorasFichas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BitacoraViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/BitacoraViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/BitacoraViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/rrhh/ficha/{id}/cargasfamiliares':
    get:
      tags:
        - RRHH
      summary: Listar Cargas Familiares
      description: Lista las Cargas Familiares de una Ficha.
      operationId: GetCargasFichas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargaFamiliarViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/CargaFamiliarViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CargaFamiliarViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/rrhh/ficha/{idFicha}/cargafamiliar/{id}':
    get:
      tags:
        - RRHH
      summary: Obtener Carga Familiar
      description: Obtiene la información de una Carga Familiar de un Trabajador.
      operationId: GetCargaById
      parameters:
        - name: idFicha
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargaFamiliarViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CargaFamiliarViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CargaFamiliarViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  '/rrhh/ficha/{id}/prevision':
    get:
      tags:
        - RRHH
      summary: Listar Información Previsional
      description: Lista las Afiliaciones Previsionales de un Trabajador.
      operationId: GetPrevisionFicha
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AfiliacionAFPViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/AfiliacionAFPViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/AfiliacionAFPViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/rrhh/ficha/{idFicha}/prevision/{id}':
    get:
      tags:
        - RRHH
      summary: Obtener Información Previsional
      description: Obtiene el detalle de una Afiliación Previsional.
      operationId: GetPrevisionById
      parameters:
        - name: idFicha
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AfiliacionAFPViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AfiliacionAFPViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AfiliacionAFPViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  '/rrhh/ficha/{idFicha}/prevision/periodo/{periodo}':
    get:
      tags:
        - RRHH
      summary: Obtener Afiliación Previsional Vigente
      description: Obtiene la Afiliación Previsional vigente a un Período determinado.
      operationId: GetPrevisionPeriodo
      parameters:
        - name: idFicha
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: periodo
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AfiliacionAFPViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AfiliacionAFPViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AfiliacionAFPViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  '/rrhh/ficha/{id}/salud':
    get:
      tags:
        - RRHH
      summary: Listar Afiliación de Salud
      description: Lista las Afiliaciones de Salud de un Trabajador.
      operationId: GetSaludFicha
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AfiliacionIsapreViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/AfiliacionIsapreViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/AfiliacionIsapreViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/rrhh/ficha/{idFicha}/salud/{id}':
    get:
      tags:
        - RRHH
      summary: Obtener Afiliación de Salud
      description: Obtener detalle de Afiliación de Salud de un Trabajador.
      operationId: GetSaludFichaById
      parameters:
        - name: idFicha
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AfiliacionIsapreViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AfiliacionIsapreViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AfiliacionIsapreViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  '/rrhh/ficha/{idFicha}/salud/periodo/{periodo}':
    get:
      tags:
        - RRHH
      summary: Obtener Afiliación de Salud Vigente
      description: Obtener Afiliación de Salud de un trabajador a un período determinado.
      operationId: GetSaludPeriodo
      parameters:
        - name: idFicha
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: periodo
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AfiliacionIsapreViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AfiliacionIsapreViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AfiliacionIsapreViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  '/rrhh/ficha/{idFicha}/apvs':
    get:
      tags:
        - RRHH
      summary: Listar APVs del Trabajador
      description: Lista los APVs suscritos por un Trabajador.
      operationId: GetAPVFicha
      parameters:
        - name: idFicha
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AhorroViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/AhorroViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/AhorroViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/rrhh/ficha/{idFicha}/apv/{id}':
    get:
      tags:
        - RRHH
      summary: Obtener APV del Trabajador
      description: Obtiene el detalle de un APV suscrito por un Trabajador.
      operationId: GetAPVFichaById
      parameters:
        - name: idFicha
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AhorroViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AhorroViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AhorroViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  '/rrhh/ficha/{idFicha}/apvs/periodo/{periodo}':
    get:
      tags:
        - RRHH
      summary: Obtener APVs Vigentes
      description: Obtiene los APVs vigentes de un trabajador a un período determinado.
      operationId: GetAPVPeriodo
      parameters:
        - name: idFicha
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: periodo
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AhorroViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/AhorroViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/AhorroViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /tablas/sindicatos:
    get:
      tags:
        - Tablas
      summary: Listar Sindicatos
      description: Obtiene los Sindicatos.
      operationId: GetSindicatos
      parameters:
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SindicatoViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/SindicatoViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/SindicatoViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/tablas/sindicato/{id}':
    get:
      tags:
        - Tablas
      summary: Obtener Sindicato
      description: Obtiene un Sindicato.
      operationId: GetSindicatoById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SindicatoViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/SindicatoViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SindicatoViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      tags:
        - Tablas
      summary: Actualizar un Sindicato
      description: Permite actualizar un Sindicato.
      operationId: PutSindicato
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SindicatoDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/SindicatoDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/SindicatoDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SindicatoDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /tablas/sindicato:
    post:
      tags:
        - Tablas
      summary: Crear un Sindicato
      description: Permite crear un Sindicato
      operationId: PostSindicato
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SindicatoDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/SindicatoDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/SindicatoDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SindicatoDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /tablas/unidadesorganizacionales:
    get:
      tags:
        - Tablas
      summary: Listar Unidades Organizacionales
      description: Obtiene las Unidades Organizacionales.
      operationId: GetUnidadesOrganizacionales
      parameters:
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/UnidadOrganizacionalViewModelPagedCollection
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UnidadOrganizacionalViewModelPagedCollection
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UnidadOrganizacionalViewModelPagedCollection
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/tablas/unidadorganizacional/{id}':
    get:
      tags:
        - Tablas
      summary: Obtener Unidad Organizacional
      description: Obtiene una Unidad Organizacional.
      operationId: GetUnidadOrganizacionalById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnidadOrganizacionalViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/UnidadOrganizacionalViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/UnidadOrganizacionalViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      tags:
        - Tablas
      summary: Actualizar una Unidad Organizacional
      description: Permite actualizar una Unidad Organizacional.
      operationId: PutUnidadOrganizacional
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UnidadOrganizacionalDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/UnidadOrganizacionalDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/UnidadOrganizacionalDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnidadOrganizacionalDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /tablas/unidadorganizacional:
    post:
      tags:
        - Tablas
      summary: Crear una Unidad Organizacional
      description: Permite crear una Unidad Organizacional
      operationId: PostUnidadOrganizacional
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UnidadOrganizacionalDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/UnidadOrganizacionalDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/UnidadOrganizacionalDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnidadOrganizacionalDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /tablas/cargos:
    get:
      tags:
        - Tablas
      summary: Listar Cargos
      description: Obtiene los Cargos.
      operationId: GetCargos
      parameters:
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargoViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/CargoViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CargoViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/tablas/cargo/{id}':
    get:
      tags:
        - Tablas
      summary: Obtener Cargo
      description: Obtiene el detalle de un Cargo.
      operationId: GetCargoById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargoViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CargoViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CargoViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      tags:
        - Tablas
      summary: Actualizar un Cargo
      description: Permite actualizar un Cargo.
      operationId: PutCargo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CargoDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/CargoDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CargoDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CargoDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /tablas/cargo:
    post:
      tags:
        - Tablas
      summary: Crear un Cargo
      description: Permite crear un Cargo
      operationId: PostCargo
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CargoDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/CargoDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CargoDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CargoDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /tablas/jornadas:
    get:
      tags:
        - Tablas
      summary: Listar Jornadas
      description: Obtiene los tipos de Jornadas de Trabajo.
      operationId: GetJornadas
      parameters:
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: OrderBy
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Search
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JornadaViewModelPagedCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/JornadaViewModelPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/JornadaViewModelPagedCollection'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  '/tablas/jornada/{id}':
    get:
      tags:
        - Tablas
      summary: Obtener Jornada
      description: Obtiene una Jornada de Trabajo.
      operationId: GetJornadaById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JornadaViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/JornadaViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/JornadaViewModel'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      tags:
        - Tablas
      summary: Actualizar una Jornada
      description: Permite actualizar una Jornada de Trabajo.
      operationId: PutJornada
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JornadaDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/JornadaDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/JornadaDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JornadaDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /tablas/jornada:
    post:
      tags:
        - Tablas
      summary: Crear una Jornada
      description: Permite crear una Jornada de Trabajo.
      operationId: PostJornada
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JornadaDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/JornadaDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/JornadaDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JornadaDTO'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
components:
  schemas:
    Link:
      type: object
      properties:
        href:
          type: string
          nullable: true
      additionalProperties: false
    AuxiliarViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        nombre:
          type: string
          nullable: true
        nombreFantasia:
          type: string
          nullable: true
        giro:
          type: string
          nullable: true
        esNacional:
          type: boolean
        esCliente:
          type: boolean
        esProveedor:
          type: boolean
        esTrabajador:
          type: boolean
        esOtro:
          type: boolean
        divisiones:
          $ref: '#/components/schemas/Link'
        direcciones:
          $ref: '#/components/schemas/Link'
        contactos:
          $ref: '#/components/schemas/Link'
        vigente:
          type: boolean
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    AuxiliarViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/AuxiliarViewModel'
          nullable: true
      additionalProperties: false
    AuxiliarDTO:
      type: object
      properties:
        nombre:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        nombreFantasia:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        giro:
          maxLength: 80
          minLength: 0
          type: string
          nullable: true
        calle:
          maxLength: 70
          minLength: 0
          type: string
          nullable: true
        comuna:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        ciudad:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        pais:
          maxLength: 2
          minLength: 0
          type: string
          nullable: true
        telefono:
          maxLength: 15
          minLength: 0
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        esNacional:
          type: boolean
        esCliente:
          type: boolean
        esProveedor:
          type: boolean
        esTrabajador:
          type: boolean
        esOtro:
          type: boolean
        vigente:
          type: boolean
      additionalProperties: false
    ApiResponse:
      type: object
      properties:
        href:
          type: string
          nullable: true
        id:
          type: object
          additionalProperties: false
          nullable: true
      additionalProperties: false
    ContactoViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        auxiliar:
          $ref: '#/components/schemas/Link'
        id:
          type: integer
          format: int32
        nombre:
          type: string
          nullable: true
        apellido:
          type: string
          nullable: true
        cargo:
          type: string
          nullable: true
        telefono:
          type: string
          nullable: true
        anexo:
          type: string
          nullable: true
        celular:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        receptorDTE:
          type: boolean
        vigente:
          type: boolean
        division:
          $ref: '#/components/schemas/Link'
        direccion:
          $ref: '#/components/schemas/Link'
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    ContactoViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContactoViewModel'
          nullable: true
      additionalProperties: false
    ContactoDTO:
      type: object
      properties:
        nombre:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        apellido:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        cargo:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        idDivision:
          type: integer
          format: int32
        idDireccion:
          type: integer
          format: int32
        telefono:
          maxLength: 15
          minLength: 0
          type: string
          nullable: true
        anexo:
          maxLength: 5
          minLength: 0
          type: string
          nullable: true
        celular:
          maxLength: 15
          minLength: 0
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        receptorDTE:
          type: boolean
        vigente:
          type: boolean
      additionalProperties: false
    DireccionViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        auxiliar:
          $ref: '#/components/schemas/Link'
        id:
          type: integer
          format: int32
        nombre:
          type: string
          nullable: true
        calle:
          type: string
          nullable: true
        comuna:
          type: string
          nullable: true
        ciudad:
          type: string
          nullable: true
        pais:
          type: string
          nullable: true
        telefono:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        vigente:
          type: boolean
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    DireccionViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/DireccionViewModel'
          nullable: true
      additionalProperties: false
    DireccionDTO:
      type: object
      properties:
        nombre:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        calle:
          maxLength: 70
          minLength: 0
          type: string
          nullable: true
        comuna:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        ciudad:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        pais:
          maxLength: 2
          minLength: 0
          type: string
          nullable: true
        telefono:
          maxLength: 15
          minLength: 0
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        vigente:
          type: boolean
      additionalProperties: false
    DivisionViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        auxiliar:
          $ref: '#/components/schemas/Link'
        id:
          type: integer
          format: int32
        nombre:
          type: string
          nullable: true
        vigente:
          type: boolean
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    DivisionViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/DivisionViewModel'
          nullable: true
      additionalProperties: false
    DivisionDTO:
      type: object
      properties:
        nombre:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        vigente:
          type: boolean
      additionalProperties: false
    tipoEstadoCivil:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    tipoContrato:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    tipoTrabajador:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    tipoSueldo:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    tiposGratificacion:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 7
        - 8
      type: integer
      format: int32
    trabajoPesado:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    FichaViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        idFicha:
          type: integer
          format: int32
        idTrabajador:
          type: string
          nullable: true
        nombre:
          type: string
          nullable: true
        paterno:
          type: string
          nullable: true
        materno:
          type: string
          nullable: true
        fechaNacimiento:
          type: string
          format: date-time
          nullable: true
        esNacional:
          type: boolean
        esMasculino:
          type: boolean
        idEstadoCivil:
          $ref: '#/components/schemas/tipoEstadoCivil'
        estadoCivil:
          type: string
          nullable: true
        nacionalidad:
          type: string
          nullable: true
        calle:
          type: string
          nullable: true
        comuna:
          type: string
          nullable: true
        ciudad:
          type: string
          nullable: true
        pais:
          type: string
          nullable: true
        telefono:
          type: string
          nullable: true
        movil:
          type: string
          nullable: true
        eMail:
          type: string
          nullable: true
        fotografia:
          $ref: '#/components/schemas/Link'
        fechaContrato:
          type: string
          format: date-time
        fechaAntiguedad:
          type: string
          format: date-time
        fechaVigencia:
          type: string
          format: date-time
          nullable: true
        fechaVigencia2:
          type: string
          format: date-time
          nullable: true
        obra:
          type: string
          nullable: true
        faena:
          type: string
          nullable: true
        idTipoContrato:
          $ref: '#/components/schemas/tipoContrato'
        tipoContrato:
          type: string
          nullable: true
        idCargo:
          type: integer
          format: int32
        cargo:
          type: string
          nullable: true
        idJornada:
          type: integer
          format: int32
        jornada:
          type: string
          nullable: true
        idUnidadOrganizacional:
          type: integer
          format: int32
        unidadOrganizacional:
          type: string
          nullable: true
        idCentroCosto:
          type: integer
          format: int32
        centroCosto:
          type: string
          nullable: true
        idProyecto:
          type: integer
          format: int32
        proyecto:
          type: string
          nullable: true
        idSucursal:
          type: integer
          format: int32
        sucursal:
          type: string
          nullable: true
        idTipoTrabajador:
          $ref: '#/components/schemas/tipoTrabajador'
        tipoTrabajador:
          type: string
          nullable: true
        idSindicato:
          type: integer
          format: int32
        sindicato:
          type: string
          nullable: true
        sueldoBase:
          type: number
          format: double
        idMonedaSueldoBase:
          type: string
          nullable: true
        idBaseSueldo:
          $ref: '#/components/schemas/tipoSueldo'
        baseSueldo:
          type: string
          nullable: true
        idTipoGratificacion:
          $ref: '#/components/schemas/tiposGratificacion'
        tipoGratificacion:
          type: string
          nullable: true
        valorGratificacion:
          type: number
          format: double
        idMonedaGratificacion:
          type: string
          nullable: true
        mesesReconocidosFeriado:
          type: integer
          format: int32
        diasPorAñoFeriado:
          type: integer
          format: int32
        factorRebajaZonaExtrema:
          type: integer
          format: int32
        afectoLey20219:
          type: boolean
        idTipoFuero:
          type: integer
          format: int32
        tipoFuero:
          type: string
          nullable: true
        fueroHasta:
          type: string
          format: date-time
          nullable: true
        finiquitado:
          type: boolean
        finiquito:
          $ref: '#/components/schemas/Link'
        idTipoTrabajoPesado:
          $ref: '#/components/schemas/trabajoPesado'
        tipoTrabajoPesado:
          type: string
          nullable: true
        aplicaMutual:
          type: boolean
        aplicaAFC:
          type: boolean
        primeraCotizAFC:
          type: string
          format: date-time
          nullable: true
        ultimoPeriodoAFC:
          type: string
          format: date-time
          nullable: true
        numeroCtaCte:
          type: string
          nullable: true
        idBanco:
          type: integer
          format: int32
        banco:
          type: string
          nullable: true
        idMedioPagoBanco:
          type: integer
          format: int32
        medioPagoBanco:
          type: string
          nullable: true
        prevision:
          $ref: '#/components/schemas/Link'
        salud:
          $ref: '#/components/schemas/Link'
        ahorro:
          $ref: '#/components/schemas/Link'
        cargasFamiliares:
          $ref: '#/components/schemas/Link'
        vigente:
          type: boolean
        auditoria:
          $ref: '#/components/schemas/Link'
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    FichaViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/FichaViewModel'
          nullable: true
      additionalProperties: false
    FichaDTO:
      required:
        - idTrabajador
      type: object
      properties:
        idTrabajador:
          maxLength: 10
          minLength: 0
          type: string
          nullable: true
        nombre:
          maxLength: 45
          minLength: 0
          type: string
          nullable: true
        paterno:
          maxLength: 45
          minLength: 0
          type: string
          nullable: true
        materno:
          maxLength: 45
          minLength: 0
          type: string
          nullable: true
        fechaNacimiento:
          type: string
          format: date-time
          nullable: true
        esNacional:
          type: boolean
        esMasculino:
          type: boolean
        idEstadoCivil:
          maximum: 4
          minimum: 0
          type: integer
          format: int32
        nacionalidad:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        calle:
          maxLength: 70
          minLength: 0
          type: string
          nullable: true
        comuna:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        ciudad:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        pais:
          maxLength: 2
          minLength: 0
          type: string
          nullable: true
        telefono:
          maxLength: 15
          minLength: 0
          type: string
          nullable: true
        movil:
          maxLength: 15
          minLength: 0
          type: string
          nullable: true
        eMail:
          type: string
          format: email
          nullable: true
        fechaContrato:
          type: string
          format: date-time
        fechaAntiguedad:
          type: string
          format: date-time
        fechaVigencia:
          type: string
          format: date-time
          nullable: true
        fechaVigencia2:
          type: string
          format: date-time
          nullable: true
        obra:
          type: string
          nullable: true
        faena:
          type: string
          nullable: true
        idTipoContrato:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        idCargo:
          type: integer
          format: int32
        idJornada:
          type: integer
          format: int32
        idUnidadOrganizacional:
          type: integer
          format: int32
        idCentroCosto:
          type: integer
          format: int32
        idProyecto:
          type: integer
          format: int32
        idSucursal:
          type: integer
          format: int32
        idTipoTrabajador:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        idSindicato:
          type: integer
          format: int32
        sueldoBase:
          type: number
          format: double
        idMonedaSueldoBase:
          maxLength: 3
          minLength: 0
          type: string
          nullable: true
        idBaseSueldo:
          maximum: 2
          minimum: 0
          type: integer
          format: int32
        idTipoGratificacion:
          maximum: 8
          minimum: 0
          type: integer
          format: int32
        valorGratificacion:
          type: number
          format: double
        idMonedaGratificacion:
          maxLength: 3
          minLength: 0
          type: string
          nullable: true
        mesesReconocidosFeriado:
          type: integer
          format: int32
        diasPorAñoFeriado:
          type: integer
          format: int32
        factorRebajaZonaExtrema:
          type: integer
          format: int32
        afectoLey20219:
          type: boolean
        idTipoFuero:
          type: integer
          format: int32
        fueroHasta:
          type: string
          format: date-time
          nullable: true
        idTipoTrabajoPesado:
          maximum: 2
          minimum: 0
          type: integer
          format: int32
        aplicaMutual:
          type: boolean
        aplicaAFC:
          type: boolean
        primeraCotizAFC:
          type: string
          format: date-time
          nullable: true
        ultimoPeriodoAFC:
          type: string
          format: date-time
          nullable: true
        numeroCtaCte:
          type: string
          nullable: true
        idBanco:
          type: integer
          format: int32
        idMedioPagoBanco:
          type: integer
          format: int32
        nivelCargaFamiliar:
          maxLength: 1
          minLength: 0
          type: string
          nullable: true
        vigente:
          type: boolean
      additionalProperties: false
    BitacoraViewModel:
      type: object
      properties:
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        mensaje:
          type: string
          nullable: true
      additionalProperties: false
    BitacoraViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/BitacoraViewModel'
          nullable: true
      additionalProperties: false
    tipoCargasFamiliares:
      enum:
        - 0
        - 1
        - 2
        - -1
      type: integer
      format: int32
    CargaFamiliarViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        ficha:
          $ref: '#/components/schemas/Link'
        nivelCargaFamiliar:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        nombre:
          type: string
          nullable: true
        fechaIngreso:
          type: string
          format: date-time
        fechaVencimiento:
          type: string
          format: date-time
        idTipoCarga:
          $ref: '#/components/schemas/tipoCargasFamiliares'
        tipoCarga:
          type: string
          nullable: true
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    CargaFamiliarViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CargaFamiliarViewModel'
          nullable: true
      additionalProperties: false
    tipoRegimen:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    AfiliacionAFPViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        ficha:
          $ref: '#/components/schemas/Link'
        id:
          type: string
          format: uuid
        idPeriodo:
          type: integer
          format: int32
        idRegimen:
          $ref: '#/components/schemas/tipoRegimen'
        regimen:
          type: string
          nullable: true
        idInstitucion:
          type: integer
          format: int32
        institucion:
          type: string
          nullable: true
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    AfiliacionAFPViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/AfiliacionAFPViewModel'
          nullable: true
      additionalProperties: false
    tipoPlanSalud:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    AfiliacionIsapreViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        ficha:
          $ref: '#/components/schemas/Link'
        id:
          type: string
          format: uuid
        idPeriodo:
          type: integer
          format: int32
        idIsapre:
          type: integer
          format: int32
        isapre:
          type: string
          nullable: true
        idPlanSalud:
          $ref: '#/components/schemas/tipoPlanSalud'
        planSalud:
          type: string
          nullable: true
        valorPactadoPctje:
          type: number
          format: float
        valorPactadoUF:
          type: number
          format: double
        valorPactadoCLP:
          type: number
          format: double
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    AfiliacionIsapreViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/AfiliacionIsapreViewModel'
          nullable: true
      additionalProperties: false
    tipoAhorro:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    AhorroViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        ficha:
          $ref: '#/components/schemas/Link'
        id:
          type: string
          format: uuid
        idPeriodo:
          type: integer
          format: int32
        idInstitucion:
          type: integer
          format: int32
        institucion:
          type: string
          nullable: true
        idInstrumento:
          $ref: '#/components/schemas/tipoAhorro'
        instrumento:
          type: string
          nullable: true
        monto:
          type: number
          format: double
        idMoneda:
          type: string
          nullable: true
        vigente:
          type: boolean
        rebajaImpuesto:
          type: boolean
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    AhorroViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/AhorroViewModel'
          nullable: true
      additionalProperties: false
    SindicatoViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        nombre:
          type: string
          nullable: true
        vigente:
          type: boolean
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    SindicatoViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/SindicatoViewModel'
          nullable: true
      additionalProperties: false
    SindicatoDTO:
      type: object
      properties:
        nombre:
          maxLength: 45
          minLength: 0
          type: string
          nullable: true
        vigente:
          type: boolean
      additionalProperties: false
    UnidadOrganizacionalViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        nombre:
          type: string
          nullable: true
        vigente:
          type: boolean
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    UnidadOrganizacionalViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/UnidadOrganizacionalViewModel'
          nullable: true
      additionalProperties: false
    UnidadOrganizacionalDTO:
      type: object
      properties:
        nombre:
          maxLength: 45
          minLength: 0
          type: string
          nullable: true
        vigente:
          type: boolean
      additionalProperties: false
    CargoViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        nombre:
          type: string
          nullable: true
        vigente:
          type: boolean
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    CargoViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CargoViewModel'
          nullable: true
      additionalProperties: false
    CargoDTO:
      type: object
      properties:
        nombre:
          maxLength: 45
          minLength: 0
          type: string
          nullable: true
        vigente:
          type: boolean
      additionalProperties: false
    JornadaViewModel:
      type: object
      properties:
        href:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        nombre:
          type: string
          nullable: true
        diasALaSemana:
          type: integer
          format: int32
        horasALaSemana:
          type: number
          format: double
        detalle:
          type: string
          nullable: true
        vigente:
          type: boolean
        creadoPor:
          type: string
          nullable: true
        creadoEl:
          type: string
          format: date-time
        modificadoPor:
          type: string
          nullable: true
        modificadoEl:
          type: string
          format: date-time
      additionalProperties: false
    JornadaViewModelPagedCollection:
      type: object
      properties:
        href:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
        first:
          type: string
          nullable: true
          readOnly: true
        previous:
          type: string
          nullable: true
          readOnly: true
        next:
          type: string
          nullable: true
          readOnly: true
        last:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/JornadaViewModel'
          nullable: true
      additionalProperties: false
    JornadaDTO:
      type: object
      properties:
        nombre:
          maxLength: 45
          minLength: 0
          type: string
          nullable: true
        diasALaSemana:
          type: integer
          format: int32
        horasALaSemana:
          type: number
          format: double
        detalle:
          type: string
          nullable: true
        vigente:
          type: boolean
      additionalProperties: false