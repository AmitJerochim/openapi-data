openapi: 3.0.0
info:
  title: Swagger OrderFulfill
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "2.0.17"
servers:
  - url: https://virtserver.swaggerhub.com/American-Airlines7/OrderFulfillment/2.0.0
    description: SwaggerHub API Auto Mocking
  - url: https://virtserver.swaggerhub.com/American-Airlines7/OrderFulfillment/2.0.0
    description: SwaggerHub API Auto Mocking
tags:
  - name: orderFulfillment
    description: Everything about fulfilling a collection of order items
paths:
  /api/orderFulfillment/v2:
    post:
      tags:
        - orderFulfillment
      summary: fulfills an order request
      operationId: orderFulfillment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderFulfillmentRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderFulfillmentResponse'
        "206":
          description: partial success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderFulfillmentResponse'
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderFulfillmentResponse'
components:
  schemas:
    personalDetails:
      required:
        - firstName
        - lastName
      type: object
      properties:
        firstName:
          type: string
          example: Jacob
        middleName:
          type: string
          example: Alexander
        lastName:
          type: string
          example: Wilkins
      xml:
        name: personDetails
    unaffiliatedUpgradeProduct:
      type: object
      properties:
        quantity:
          type: number
          description: Quantity required for the purchase of stickers using credit
            card
          example: 15.00
        eightPackageQuantity:
          type: number
          description: Each sticker of quantity of 8
          example: 2.00
        sixteenPackageQuantity:
          type: number
          description: Each sticker of quantity of 16
          example: 2.00
      xml:
        name: unaffiliatedUpgradeProduct
    amount:
      required:
        - currencyCode
        - value
      type: object
      properties:
        value:
          type: number
          description: Amount to be authorized
          example: 15.00
        currencyCode:
          type: string
          description: ISO 3 char currency code
          example: USD
      xml:
        name: amount
    creditCardFormOfPayment:
      xml:
        name: creditCardFormOfPayment
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - required:
            - billingAddress
            - cardNumber
            - cardType
            - expiryMonth
            - expiryYear
            - holder
          type: object
          properties:
            cardNumber:
              type: string
              description: Full Credit card
              example: "4111111111111111"
            cardType:
              type: string
              description: type of the card that is being used
              example: AX
            expiryMonth:
              type: string
              description: two digits ; zero padded for 1 digit, January to be send
                as 01
              format: MM
            expiryYear:
              type: string
              description: 4 digit number
              format: YYYY
              example: "2018"
            cvc:
              maxLength: 20
              minLength: 1
              type: string
              description: required for AMEX,Visa and Mastercard
              example: "737"
            holder:
              $ref: '#/components/schemas/personalDetails'
            billingAddress:
              $ref: '#/components/schemas/address'
            authorizationDetails:
              $ref: '#/components/schemas/authorizationDetails'
    alternateFormOfPayment:
      xml:
        name: alternateFormOfPayment
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - required:
            - cardType
            - expiryMonth
            - expiryYear
            - paymentTypeOnReceipt
            - virtualCardNumber
          type: object
          properties:
            virtualCardNumber:
              type: string
              description: Full Credit card
              example: "4111111111111111"
            cardType:
              type: string
              description: cardType that is entered on SABRE. AM stands for Alternate
                method, AL for Alipay
              default: AM
              enum:
                - AM
                - AL
                - CU
                - WC
            paymentTypeOnReceipt:
              type: string
              description: The information displayed on the receipt notification, as
                the payment details are not available to the merchant
              example: BillDesk
            expiryMonth:
              type: string
              description: two digits; zero padded for 1 digit, January to be send as
                01
              format: MM
            expiryYear:
              type: string
              description: 4 digit number
              format: YYYY
              example: "2018"
            cvc:
              maxLength: 20
              minLength: 1
              type: string
              description: required for AMEX,Visa and Mastercard
              example: "737"
            authorizationDetails:
              $ref: '#/components/schemas/authorizationDetails'
    milesFormOfPayment:
      xml:
        name: milesFormOfPayment
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - required:
            - numberOfMiles
          type: object
          properties:
            numberOfMiles:
              type: integer
              description: Number of miles
              example: 1000
    sabreDocFormOfPayment:
      xml:
        name: sabreDocFormOfPayment
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - required:
            - sabreDocCollection
          type: object
          properties:
            sabreDocCollection:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/sabreDocCollection'
    awardFormOfPayment:
      xml:
        name: awardFormOfPayment
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - required:
            - auditId
            - awards
            - requestType
          type: object
          properties:
            auditId:
              type: string
              description: Employee ID who is initiating the channel request
              example: A726334
            requestType:
              type: string
              enum:
                - REINSTATE
                - ISSUE
                - REINSTATE_ISSUE
            awards:
              minItems: 1
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/awardReinstate'
                  - $ref: '#/components/schemas/awardIssue'
            awardAuthorization:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/awardAuthorization'

    awardAuthorization:
      type: object
      required:
        - passengerId
        - certificateNumber
      properties:
        passengerId:
          type: string
        certificateNumber:
          minItems: 1
          description: List of all 13 digit certificate numbers such as 0010590992005 for that passengerId
          type: array
          example: '[0010590992005,0010590992006]'
          items:
            type: string
      xml:
        name: awardAuthorization

    reinstateAwardCode:
      required:
        - aadvantageMemberId
        - awardPackageCode
        - transactionId
      type: object
      properties:
        awardPackageCode:
          type: string
          description: Dynamic vs static award code
          example: T90MMU
        transactionId:
          type: string
          description: Transaction ID per award
        aadvantageMemberId:
          type: string
          description: AA advantage account ID
          example: 044TFK6
        awardType:
          type: string
          example: B
      xml:
        name: reinstateAwardCode
    issueAwardCode:
      required:
        - aadvantageMemberId
        - awardDestinationCode
        - awardOriginCode
        - awardPackageCode
        - awardUsers
        - flightDate
        - flightNumber
        - mileageRequiredAmount
      type: object
      properties:
        awardPackageCode:
          type: string
          description: award code value
          example: T90MMU
        aadvantageMemberId:
          type: string
          description: AA advantage account ID
          example: 044TFK6
        mileageRequiredAmount:
          type: integer
          description: Mileage Required Amount
          example: 1000
        awardUsers:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/awardUser'
        flightDate:
          type: string
          description: Format is yyyy-MM-dd
          example: 2020-08-31
        flightNumber:
          type: string
          example: "1566"
        awardDestinationCode:
          type: string
          example: BOS
        awardOriginCode:
          type: string
          example: LAX
        awardType:
          type: string
          example: B
      xml:
        name: issueAwardCode
    awardReinstate:
      required:
        - awardCodes
      type: object
      properties:
        awardReason:
          type: string
          default: REINSTATE
          enum:
            - REINSTATE
        awardCodes:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/reinstateAwardCode'
      xml:
        name: awardReinstate
    awardIssue:
      required:
        - awardCodes
      type: object
      properties:
        awardReason:
          type: string
          default: ISSUE
          enum:
            - ISSUE
        awardCodes:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/issueAwardCode'
      xml:
        name: awardIssue
    awardUser:
      required:
        - certUserFirstName
        - certUserLastName
        - passengerId
      type: object
      properties:
        passengerId:
          type: string
        certUserFirstName:
          type: string
          example: Jacob
        certUserLastName:
          type: string
          example: Wilkins
      xml:
        name: awardUser
    segment:
      required:
        - carrierCode
        - classOfTravel
        - dateOfTravel
        - destinationAirportCode
        - flightNumber
        - id
        - originAirportCode
      type: object
      properties:
        originAirportCode:
          type: string
          description: 3 letter IATA code
          example: DFW
        flightNumber:
          maxLength: 5
          minLength: 1
          type: string
          example: "2242"
        carrierCode:
          type: string
          description: 2 letter IATA code
          example: AA
        fareBaseCode:
          minLength: 1
          type: string
          description: Even though it is optional Channel needs to populate it if
            they can , since it is a mandatory element on the payment services.
          example: B
        classOfTravel:
          type: string
          description: 1 letter, alphabetical
          example: "Y"
        stopOverCode:
          type: string
          description: "1 letter, alphabetical \n Valid Values: \n O: stopover allow\
            \ \n X: stopover not allowed. Even though it is optional Channel needs\
            \ to populate it if they can , since it is a mandatory element on the\
            \ payment services."
          example: x
        destinationAirportCode:
          type: string
          description: 3 letter IATA code
          example: JFK
        dateOfTravel:
          type: string
          format: YYYY-MM-DD HH:MM
          example: 2019-01-20 10:22
        id:
          pattern: ^[1-9]+\.?[1-9]+$
          type: string
          description: 'Number before . represents slice id and number after . represents
            segment number in that slice '
          example: "1.1"
      xml:
        name: segment
    loyaltyProgramInfo:
      required:
        - carrier
        - id
        - tierLevel
      type: object
      properties:
        id:
          type: string
          description: Frequent flyer program number like AAdvantage number
        carrier:
          type: string
          description: carrier code to which loyalty program subscribed to.
        tierLevel:
          type: string
          enum:
            - CONCIERGEKEY
            - EXECUTIVEPLATINUM
            - PLATINUMPRO
            - PLATINUM
            - GOLD
            - LIMITEDGOLD
            - REGULAR
            - OTHER
      xml:
        name: loyaltyProgramInfo
    passenger:
      required:
        - id
        - person
      type: object
      properties:
        personalDetails:
          $ref: '#/components/schemas/personalDetails'
        id:
          type: string
          description: "Passenger identifier  \n sequential number starting with 1.1,\
            \ but it could have 1.2,1.3, 1.4 ....2.1,2.2 ..."
          example: "1.1"
        passengerType:
          type: string
          example: ADULT
          enum:
            - ADULT
            - CHILD
            - SENIOR
            - LAP_INFANT
            - COMPANION
            - YOUTH
            - FEDERAL_GOVT
            - MILITARY
            - STATE_GOVT
            - APASS
            - NONREV
        elitePassenger:
          type: boolean
          description: set to true if the passenger has elite status
        isRevenuePassenger:
          type: boolean
          description: is he/she a revenue passenger
        loyaltyProgramInfo:
          $ref: '#/components/schemas/loyaltyProgramInfo'
      xml:
        name: passenger
    paymentDetails:
      required:
        - formOfPayments
      type: object
      properties:
        shopperInfo:
          $ref: '#/components/schemas/shopperInfo'
        formOfPayments:
          minItems: 1
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/awardFormOfPayment'
              - $ref: '#/components/schemas/creditCardFormOfPayment'
              - $ref: '#/components/schemas/sabreDocFormOfPayment'
              - $ref: '#/components/schemas/milesFormOfPayment'
              - $ref: '#/components/schemas/noPayment'
      xml:
        name: paymentDetails
    shopperInfo:
      required:
        - countryCode
        - email
        - languageCode
      type: object
      properties:
        deviceFingerprint:
          type: string
          description: Device Fingerprinting allows you to log unique attributes of\
            \ the shopper device and analyze them during repeat visits of the same
            shopper
          example: m7Cmrf++0cW4P6XfF7m/rA
        email:
          type: string
          format: email
          example: <email-Address>@aa.com
        ip:
          type: string
          format: ipv4
          example: 83.53.51.61
        interaction:
          type: string
          description: Interaction will always be Ecommerce for the MVP
          example: Ecommerce
        countryCode:
          pattern: ^[A-Z]{2}$
          type: string
          description: 2 letter code, Based on site locale.
          example: US
        languageCode:
          pattern: ^[A-Z]{2}$
          type: string
          description: 2 letter code, based on site locale language
          example: EN
        browserInfo:
          $ref: '#/components/schemas/browserInfo'
      xml:
        name: shopperInfo
    browserInfo:
      required:
        - acceptHeader
        - userAgent
      type: object
      properties:
        acceptHeader:
          type: string
          example: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
        userAgent:
          type: string
          example: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9) Gecko/2008052912
            Firefox/3.0
      xml:
        name: browserInfo
    address:
      required:
        - addressLine1
        - city
        - country
      type: object
      properties:
        city:
          type: string
          example: Richardson
        country:
          type: string
          example: US
        postalCode:
          type: string
          example: "75802"
        stateOrProvince:
          type: string
          example: TX
        addressLine1:
          type: string
          example: 350 vistacourt dr
        addressLine2:
          type: string
          example: apartment no 7214
      xml:
        name: address
    airline:
      required:
        - airlineCode
        - passengers
      type: object
      properties:
        computerizedReservationSystem:
          maxLength: 4
          minLength: 0
          type: string
          description: GDS in which the PNR was created
          example: 1S
        airlineCode:
          type: string
          description: '3 digit IATA code '
          example: "001"
        flightDate:
          type: string
          format: YYYY-MM-DD
          example: 2018-09-24
        designatorCode:
          pattern: ^[A-Z]{2}$
          type: string
          description: '2 letter IATA code '
          example: AA
        slices:
          minItems: 1
          type: array
          description: An array of slices in the itinerary where each slice contain
            1 or more segments
          items:
            $ref: '#/components/schemas/slice'
        passengers:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/passenger'
      xml:
        name: airline
    slice:
      required:
        - id
        - segments
      type: object
      properties:
        segments:
          minItems: 1
          type: array
          description: It's an array of segments in the itinerary
          items:
            $ref: '#/components/schemas/segment'
        id:
          type: string
          example: 1...start with 1 and increment by 1
      xml:
        name: slice
    authorizationDetails:
      required:
        - approvalCode
        - pspReferenceNumber
      type: object
      properties:
        approvalCode:
          type: string
          example: "123456"
        pspReferenceNumber:
          type: string
          description: the reference number provided the payment gateway for capture
            reconciliation
      xml:
        name: authorizationDetails
    formOfPayment:
      required:
        - paymentId
        - paymentType
      type: object
      properties:
        paymentId:
          type: string
          example: "1"
        paymentType:
          type: string
          enum:
            - SCHEME
            - CREDITCARDAPPROVAL
            - AWARD
            - EMDS
            - VCR
            - MILES
            - GIFTCARD
            - VOUCHER
            - AFOP
            - OTHER
            - NOPAYMENT
            - CASH
        amountToBeCharged:
          $ref: '#/components/schemas/amount'
      xml:
        name: formOfPayment
    cashFormOfPayment:
      xml:
        name: cashFormOfPayment
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - required:
            - referenceId
          type: object
          properties:
            referenceId:
              maxLength: 128
              minLength: 1
              type: string
              description: Identifier created by the point of sale - for the reference
                purpose during reconciliation
    noPayment:
      xml:
        name: noPayment
      allOf:
        - $ref: '#/components/schemas/formOfPayment'
        - type: object
    emdCoupon:
      required:
        - couponNumber
        - emdID
      type: object
      properties:
        emdID:
          type: string
        couponNumber:
          type: string
      xml:
        name: emdCoupon
    segmentEMDCoupon:
      required:
        - emdCoupon
        - legIdReference
      type: object
      properties:
        emdCoupon:
          $ref: '#/components/schemas/emdCoupon'
        legIdReference:
          type: integer
          description: same leg id value from the list of legs in the airline object
      xml:
        name: segmentEMDCoupon
    productCatalogParams:
      required:
        - commercialName
        - emdType
        - groupCode
        - rfic
        - rfisc
        - vendorID
      type: object
      properties:
        commercialName:
          type: string
          description: CommercialName of Service or product
        rfic:
          type: string
          description: Reason For Issuance
        rfisc:
          type: string
          description: Reason for issuance subcode
        groupCode:
          type: string
          description: Group code identifying type of Service
        owningCarrier:
          type: string
        emdType:
          type: string
          example: OTHER_THAN_EMD
          enum:
            - STANDALONE
            - FLIGHT_COUPON
            - TICKET_NUMBER
            - OTHER_THAN_EMD
            - ELECTRONIC_TICKET
        sjcIndicator:
          type: string
        feeAppInd:
          type: string
        vendorID:
          type: string
        equipmentType:
          type: string
        eTicketNumber:
          type: string
        couponNumber:
          type: string
        bookingMethod:
          type: string
        ssrCode:
          type: string
        noOfItems:
          type: integer
        statusCode:
          type: string
        optionalStatusCode:
          type: string
        fqtvCarrierFiledTierLevel:
          type: string
        formOfRefundIndicator:
          type: string
        guaranteedFeeIndicator:
          type: string
        refundIndicator:
          type: string
        brandedFareId:
          type: string
        tourCode:
          type: string
        purchaseBy:
          type: string
        reasonForFeeWaiver:
          type: string
        fulfillmentType:
          type: string
        ssimCode:
          type: string
        emdNumber:
          type: string
        emdCouponNumber:
          type: string
        iATAAppIndicator:
          type: string
        commissionIndicator:
          type: boolean
        interlineIndicator:
          type: boolean
        consumedIndicator:
          type: boolean
        feeApplicationIndicator:
          type: boolean
        taxExemptIndicator:
          type: boolean
        segmentEMDCoupon:
          $ref: '#/components/schemas/segmentEMDCoupon'
      xml:
        name: productCatalogParams
    orderItem:
      required:
        - itemId
        - itemType
        - passengerIds
        - totalItemBaseAmount
      type: object
      properties:
        itemType:
          type: string
          description: type of Order to be fulfilled
          example: TICKET
          enum:
            - TICKET
            - EXCHANGE_TICKET
            - REISSUE
            - REVAL
            - PREFERRED_SEAT
            - REGULAR_SEAT
            - LOAD_FACTOR_BASED_UPGRADE
            - EARLY_UPGRADE
            - GROUP_ONE_BOARDING
            - IMPULSE_MILES
            - FIRST_BAG
            - SECOND_TO_N_BAG
            - CHECKED_BAG_WAIVER
            - STANDBY
            - INFLIGHT_WIFI
            - ADM_CLUB_ONE_DAY_PASS
            - FIVE_STAR
            - PRIORITY_REACCOM
            - REDUCED_CHANGE_FEE
            - CONFIRMED_FLIGHT_CHANGE
            - AUTOASSIGN_SEAT
            - FARE_BUNDLE
            - MAIN_CABIN_EXTRA
            - PREORDER_MEAL
            - ALTERNATE_FLIGHT_CHANGE
            - ALTERNATE_FLIGHT_CHANGE_FIRST_CABIN
            - ALTERNATE_FLIGHT_STANDBY
            - US_AIR_SEAT
            - MILEAGE_MULTIPLIER
            - EXTENDED_HOLD
            - PRIORITY_LIST_TRANSFER
            - SDS_PRIORITY_LIST_TRANSFER
            - CANCEL_SEGMENT
            - PRIORITY_PRODUCT
            - PAID_SEAT
            - MILEAGE_REINSTATE
            - PREPAID_BAGS
            - REVENUE_LATE_CHECK_IN
            - PAID_PROMTION
            - OXYGEN
            - VOLUNTARY_PAPER_TICKET
            - UNACCOMPANIED_MINOR_SERVICE
            - LOST_TICKET_SERVICE
            - STA_INDIVIDUAL_SERVICE_REQUEST
            - US_AADV_EXPEDITE_SERVICE
            - INTL_AADV_EXPEDITE_SERVICE
            - AADV_SAME_DAY_SERVICE
            - ASC_CHANGE_FEE
            - MILEAGE_REINSTATEMENT_FEE
            - E500
            - GROUP_DEPOSIT
            - MISC_SVCS_FEE
            - OTHER_ITEM
        itemId:
          type: string
          description: order item identifier for reference
          format: uuid
        paymentIds:
          minItems: 1
          type: array
          description: Populate this array when an order item is purchased with a
            specific form of payment and it's details are listed in payment details.
            By default we would take creditcard approval code as form of payment if
            not mentioned specifically.
          items:
            type: string
        passengerIds:
          minItems: 1
          type: array
          description: Populate this array, only when it refers to atleast a Pax.
            provide the array of Passenger ID details to whom Order is to be fulfilled.
            For any ancillary item, there will be single passenger ID for an order
            item.
          example: '[1.1,2.1]'
          items:
            type: string
        totalItemBaseAmount:
          $ref: '#/components/schemas/amount'
        totalItemTaxAmount:
          $ref: '#/components/schemas/amount'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'
        dependsOnItemID:
          type: string
          description: The corelation ID of an item for which this item is dependant
            on
          format: uuid
          discriminator:
            propertyName: itemType
            mapping:
              PREFERRED_SEAT: '#/components/schemas/seatOrderItem'
              TICKET: '#/components/schemas/ticketIssuanceOrderItem'
              EXCHANGE_TICKET: '#/components/schemas/exchangeTicketOrderItem'
              REISSUE: '#/components/schemas/ticketReIssuanceOrderItem'
              REVAL: '#/components/schemas/ticketReIssuanceOrderItem'
              MILEAGE_REINSTATEMENT_FEE: '#/components/schemas/ancillaryOrderItem'
              GROUP_DEPOSIT: '#/components/schemas/groupDepositOrderItem'
              E500: '#/components/schemas/unaffiliatedUpgradeOrderItem'
              MISC_SVCS_FEE: '#/components/schemas/feeOrderItem'
      xml:
        name: orderItem
    ticketReIssuanceOrderItem:
      xml:
        name: ticketReIssuanceOrderItem
      allOf:
        - $ref: '#/components/schemas/ticketOrderItem'
        - required:
            - affectedSegments
            - desiredSegments
            - reissueReason
            - reissueType
          type: object
          properties:
            reissueType:
              type: string
              enum:
                - EVN_XCH
                - ADD_COLLECT
                - REFUND_XCH
            refundType:
              type: string
              enum:
                - VOUCHER
                - EMDS
                - EVOUCHER
                - CREDITCARD
                - CASH
                - CHEQUE
                - ACCOUNTING
            reissueReason:
              type: string
              enum:
                - SCHEDULE_CHANGE
                - AUTO_REACCOM
                - DYNAMIC_REACCOM
                - VOLUNTARY
                - DENIED_BOARDING
                - MIDPOINT_CHANGE
                - INVOLUNTARY
                - NONE_SPECIFIC
                - INSTANT_UPSELL
                - BASIC_ECONOMY_BUYOUT
            isRebookNeeded:
              type: boolean
              default: true
            pqrNumber:
              type: number
              description: If the PQR is been built by point of Sale, give us the ID
                that exists in the SABRE for reissue.
            affectedSegments:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/segmentId'
            desiredSegments:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/segmentId'
            passengerDocumentMap:
              $ref: '#/components/schemas/passengerDocumentMap'
    passengerDocumentMap:
      type: object
      properties:
        paxId:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/travelDocCollection'
          description: Pax Id  mentioned in the Airline object.
      xml:
        name: passengerDocumentMap
    additionalKeyValueMap:
      type: object
      additionalProperties:
        type: string
      xml:
        name: additionalKeyValueMap
    sabreDocCollection:
      required:
        - paxId
        - primaryDocumentNumber
      type: object
      properties:
        paxId:
          type: string
          description: Pax Id for the EMDS list.
        primaryDocumentNumber:
          $ref: '#/components/schemas/document'
        sabreDocuments:
          minItems: 1
          type: array
          description: List of EMDS/VCR documents for a paxId to be exchanged into
            a VCR.
          items:
            $ref: '#/components/schemas/document'
      xml:
        name: sabreDocCollection
    travelDocCollection:
      type: object
      properties:
        responseStatus:
          $ref: '#/components/schemas/status'
        responseCode:
          type: string
          description: Look for this in response only. To check the fulfillment status
            at passenger level. As of now, this is more useful for reissue order item.
        errorResponseMessage:
          type: string
          description: Look for this value in response only.As of now, this is more
            useful for reissue order item.
        newDocuments:
          type: array
          description: Populated in the response for the tickets that were generated
            cause of the given fulfillment request
          items:
            $ref: '#/components/schemas/document'
        originalDocuments:
          type: array
          description: This is populated for the Reissue order item, to provide the
            original documents prior to reissuing or revaling the order item.
          items:
            $ref: '#/components/schemas/document'
      xml:
        name: travelDocCollection
    document:
      required:
        - documentNumber
        - documentType
      type: object
      properties:
        documentType:
          type: string
          enum:
            - EMD
            - VCR
            - MSR
            - EMDS
            - REFUND_CREDITCARD
            - REFUND_CASH
            - REFUND_EMDS
            - REFUND_ACCOUNTING
            - REFUND_VOUCHER
            - OTHER
        documentNumber:
          type: string
        amount:
          $ref: '#/components/schemas/amount'
      xml:
        name: document
    segmentId:
      type: string
      description: segmentId to refer to the Segment object under Airline.
      xml:
        name: segmentId
    exchangeTicketOrderItem:
      xml:
        name: exchangeicketOrderItem
      allOf:
        - $ref: '#/components/schemas/ticketOrderItem'
        - type: object
        - required:
            - exchangeType
            - isDeletePQRRequired
            - pqrNumber
          type: object
          properties:
            pqrNumber:
              type: number
              description: Point of Sale should provide the PQR that has been created
                per passenger for EMDS to VCR exchange.
              example: 1
            isDeletePQRRequired:
              type: boolean
              description: delete the PQR when specified true
              example: true
            exchangeType:
              type: string
              description: Exchange type for EMDS to VCR exchange.
              enum:
                - EVEN_XCH
                - REFUND_XCH
                - ADD_COLLECT
            refundType:
              type: string
              description: Need the refund type specified for a refund based exchange.
              enum:
                - ACCOUNTING
                - STAND_ALONE_EMD
    ticketIssuanceOrderItem:
      xml:
        name: ticketIssuanceOrderItem
      allOf:
        - $ref: '#/components/schemas/ticketOrderItem'
        - required:
            - priceQuoteNumber
          type: object
          properties:
            priceQuoteNumber:
              type: integer
              description: price quote number in the pnr to be ticketed
              example: 1
    ticketOrderItem:
      xml:
        name: ticketOrderItem
      allOf:
        - $ref: '#/components/schemas/orderItem'
        - required:
            - individualPaxBaseAmount
            - individualPaxTaxAmount
          type: object
          properties:
            individualPaxBaseAmount:
              $ref: '#/components/schemas/amount'
            individualPaxTaxAmount:
              $ref: '#/components/schemas/amount'
    unaffiliatedOrderItem:
      xml:
        name: unaffiliatedOrderItem
      allOf:
        - $ref: '#/components/schemas/orderItem'
        - type: object
    unaffiliatedUpgradeOrderItem:
      xml:
        name: unaffiliatedUpgradeOrderItem
      allOf:
        - $ref: '#/components/schemas/unaffiliatedOrderItem'
        - type: object
          properties:
            e500UpgradeItem:
              $ref: '#/components/schemas/unaffiliatedUpgradeProduct'
    ancillaryOrderItem:
      xml:
        name: ancillaryOrderItem
      allOf:
        - $ref: '#/components/schemas/orderItem'
        - type: object
          properties:
            productCatalogParams:
              $ref: '#/components/schemas/productCatalogParams'
            itineraryReference:
              type: object
              discriminator:
                propertyName: referenceType
                mapping:
                  SEGMENTREFERENCE: '#/components/schemas/segmentIdRef'
                  SLICEREFERENCE: '#/components/schemas/sliceIdRef'
              oneOf:
                - $ref: '#/components/schemas/segmentIdRef'
                - $ref: '#/components/schemas/sliceIdRef'
    seatOrderItem:
      xml:
        name: seatOrderItem
      allOf:
        - $ref: '#/components/schemas/ancillaryOrderItem'
        - type: object
          properties:
            isPrsSeat:
              type: boolean
            isAcsSeat:
              type: boolean
            newSeat:
              type: string
              example: 1A
            oldSeat:
              type: string
              example: 12B
            changeOfGuage:
              type: boolean
            cabinClass:
              type: string
              enum:
                - FIRST
                - BUSINESS
                - PREIMUM_COACH
                - COACH
                - UNKNOWN
            unblockRequired:
              type: boolean
            exitRowMove:
              type: boolean
            isPayNeeded:
              type: string
              description: declare true if payment is needed for seat items
              enum:
                - "true"
                - "false"
            isProvisionNeeded:
              type: string
              description: declare true if provisioning needed for seat items
              enum:
                - "true"
                - "false"
    groupDepositOrderItem:
      xml:
        name: groupDepositOrderItem
      allOf:
        - $ref: '#/components/schemas/ancillaryOrderItem'
        - required:
            - groupDepositType
            - individualDepositAmount
            - numberOfDeposits
          type: object
          properties:
            groupDepositType:
              type: string
              enum:
                - INITIAL_DEPOSIT
                - FARE_DIFFERENCE
            numberOfDeposits:
              maximum: 9
              minimum: 1
              type: integer
              description: Number of EMDs to be generated
              example: 1
            individualDepositAmount:
              $ref: '#/components/schemas/amount'
    feeOrderItem:
      xml:
        name: feeOrderItem
      allOf:
        - $ref: '#/components/schemas/ancillaryOrderItem'
        - required:
            - feeSubType
          type: object
          properties:
            feeSubType:
              type: string
              description: Subtype for the Miscellaneous Fees.
              enum:
                - AGYCHG
                - AGYPRS
                - UMN1
                - UMN2
                - TFEE
                - RMA_FEE_ADV
            quantity:
              type: integer
              description: Quantity of fees to be collected.
              example: 1
            ticketNumber:
              type: string
              description: Ticket Number for which the fee is being collected. 
    segmentIdRef:
      required:
        - id
        - referenceType
      type: object
      properties:
        referenceType:
          type: string
          enum:
            - SEGMENTREFERENCE
        id:
          pattern: ^[0-9]+\.?[0-9]*$
          type: string
          description: Segment Id reference that is been defined in the airline data
          example: "1.1"
      xml:
        name: segmentIdRef
    sliceIdRef:
      required:
        - id
        - referenceType
      type: object
      properties:
        referenceType:
          type: string
          enum:
            - SLICEREFERENCE
        id:
          type: number
          description: Populate this for the order which is pertaining to a slice
            and the id that is defined in the airline data
          example: 1
      xml:
        name: sliceIdRef
    orderGroup:
      required:
        - groupId
        - groupType
        - orderItems
      type: object
      properties:
        groupType:
          type: string
          description: type of Order group to be fulfilled
          enum:
            - TICKET
            - REISSUE
            - ANCILLARY
            - UNAFFILIATED
            - OTHER
        groupId:
          type: number
          description: order group identifier for reference
          example: 1
        dependsOnGroupId:
          type: number
          description: reference of the group ID to which this group is dependant
            on
          example: 2
        groupSubType:
          type: string
          description: sub type of the group
          example: Seat or award ticketing
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'
        orderItems:
          minItems: 1
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/seatOrderItem'
              - $ref: '#/components/schemas/ticketIssuanceOrderItem'
              - $ref: '#/components/schemas/exchangeTicketOrderItem'
              - $ref: '#/components/schemas/ticketReIssuanceOrderItem'
              - $ref: '#/components/schemas/ancillaryOrderItem'
              - $ref: '#/components/schemas/groupDepositOrderItem'
              - $ref: '#/components/schemas/unaffiliatedUpgradeOrderItem'
              - $ref: '#/components/schemas/unaffiliatedOrderItem'
              - $ref: '#/components/schemas/feeOrderItem'
      xml:
        name: orderGroup
    header:
      required:
        - clientId
        - pointOfSale
        - transactionId
      type: object
      properties:
        clientId:
          type: string
          description: Client Identifier
          example: AACOM
        channel:
          type: string
          description: Channel Identifier for the client.Optional field
          example: ARC
        transactionId:
          type: string
          description: unique id for each request
          format: uuid
        host:
          type: string
          description: SABRE host patition for the record locator lookup
          example: CERT| TSTS | RES
        stationId:
          type: string
          description: station ID to which the Sales has to be associated to, for
            the accounting purpose.
          example: "31491574"
        nofepSessionToken:
          type: string
          description: sabre jcsapi ession token generated by the client, if it needs
            to be shared for using the same token
        swstoken:
          type: string
          description: sabre web service token if it needs to be used for the further
            actions
        pointOfSale:
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: 3 letter - POS city code.
          example: dfw
        recordLocator:
          pattern: ^[a-zA-Z]{6}$
          type: string
          description: PNR locator - if the fulfillment is affiliated to a reservation
          example: ABCDEF
        enablePrinterId:
          type: boolean
          description: enable printer id required for issuing paper voucher
          default: false
      xml:
        name: header
    orderFulfillmentRequest:
      required:
        - header
        - orderGroups
      type: object
      properties:
        header:
          $ref: '#/components/schemas/header'
        orderGroups:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/orderGroup'
        airline:
          $ref: '#/components/schemas/airline'
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'
      xml:
        name: orderFulfillmentRequest
    orderItemResponse:
      required:
        - individualDocBaseAmount
        - itemId
        - responseCode
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        responseCode:
          type: string
          description: response code
        responseMessage:
          type: string
          description: description of the response code...to capture underneath MS
            error details
        nativeHostMessage:
          type: string
          description: The reponse message captured from PSS system i.e. SABRE..for
            analysis
        individualDocBaseAmount:
          $ref: '#/components/schemas/amount'
        individualDocTaxAmount:
          $ref: '#/components/schemas/amount'
        itemId:
          type: string
          description: order item identifier for reference...same that of request
          format: uuid
        passengerDocumentMap:
          type: array
          items:
            $ref: '#/components/schemas/passengerDocumentMap'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'
        purchaseDocument:
          type: string
          description: order item identifier for reference...same that of request
      xml:
        name: orderItemResponse
    status:
      type: string
      xml:
        name: status
      enum:
        - SUCCESS
        - FAILED
        - PARTIAL
        - SKIPPED
    orderGroupResponse:
      required:
        - groupId
        - orderItemResponses
        - responseCode
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        responseCode:
          type: string
          description: response code
        responseMessage:
          type: string
          description: description of the response code...to capture underneath MS
            error details
        groupId:
          type: number
          description: group Identifier same as request
          example: 1
        orderItemResponses:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/orderItemResponse'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'
      xml:
        name: orderGroupResponse
    orderFulfillmentResponse:
      required:
        - orderGroupResponses
        - responseCode
        - status
        - transactionId
      type: object
      properties:
        transactionId:
          type: string
          description: transaction id received in the request
          format: uuid
        status:
          $ref: '#/components/schemas/status'
        responseCode:
          type: string
          description: response code
        authCode:
          type: string
          description: Approval code generated in the error scenario.
          example: AB2354
        responseMessage:
          type: string
          description: description of the response code...to capture underneath MS
            error details
        recordLocator:
          pattern: ^[a-zA-Z]{6}$
          type: string
          description: PNR locator - if the fulfillment is affiliated to a reservation
          example: ABCDEF
        orderGroupResponses:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/orderGroupResponse'
        additionalKeyValueMap:
          $ref: '#/components/schemas/additionalKeyValueMap'
      xml:
        name: orderFulfillmentResponse