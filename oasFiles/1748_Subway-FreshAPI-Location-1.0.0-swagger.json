{
  "openapi" : "3.0.2",
  "info" : {
    "title" : "Subway Fresh Location APIs",
    "description" : "APIs to get location information for any Subway location\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "version" : "1.0.0",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers" : [ {
    "url" : "https://uat-api.test.subway.com/fresh-locations/v1",
    "description" : "UAT"
  }, {
    "url" : "https://api.subway.com/v1/fresh-locations/v1",
    "description" : "PROD"
  } ],
  "paths" : {
    "/locations" : {
      "get" : {
        "summary" : "Scans all locations for a given country.",
        "description" : "Scans all locations for a given country with pagination support",
        "operationId" : "listLocationsByCountry",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO-2 country code for which locations must be retrieved; Country code is optional; if no country code is passed, then locations for all countries orderderd by country will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset provided in the response needs to be passed to scan next set of results set. If no offset is passed, results will be scanned without an offset to start from.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "3098-0"
        }, {
          "name" : "maxLimit",
          "in" : "query",
          "description" : "Client can optionally send number of records that needs to be returned. If the count is larger than what the service can support, it would return max number of records along with the offset and client is expected to made addtional call to get remaining results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "example" : 10
        } ],
        "responses" : {
          "200" : {
            "description" : "Scans all locations for a given country with pagination support",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginationResultSet"
                },
                "examples" : {
                  "Found" : {
                    "value" : [ {
                      "address" : {
                        "city" : "Milford",
                        "country" : "US",
                        "state" : "CT",
                        "streetAddress1" : "111 Somestreet",
                        "streetAddress2" : "B",
                        "streetAddress3" : "",
                        "zip" : "06460"
                      },
                      "countryDialingCode" : "1",
                      "latitude" : 32.906883,
                      "longitude" : -96.571025,
                      "locationHours" : {
                        "restaurantOperatingHours" : {
                          "monday" : [ {
                            "open" : "9:00",
                            "close" : "23:00"
                          } ],
                          "tuesday" : [ {
                            "open" : "09:00",
                            "close" : "23:00"
                          } ],
                          "wednesday" : [ {
                            "open" : "9:00",
                            "close" : "23:59"
                          } ],
                          "thursday" : [ {
                            "open" : "9:00",
                            "close" : "23:59"
                          } ],
                          "friday" : [ {
                            "open" : "9:00",
                            "close" : "23:59"
                          } ],
                          "saturday" : [ {
                            "open" : "00:00",
                            "close" : "4:00"
                          }, {
                            "open" : "10:00",
                            "close" : "23:59"
                          } ],
                          "sunday" : [ {
                            "open" : "00:00",
                            "close" : "2:00"
                          }, {
                            "open" : "10:00",
                            "close" : "23:59"
                          } ]
                        },
                        "breakfastHours" : {
                          "monday" : [ {
                            "open" : "9:00",
                            "close" : "11:00"
                          } ],
                          "tuesday" : [ {
                            "open" : "9:00",
                            "close" : "11:00"
                          } ],
                          "wednesday" : [ {
                            "open" : "9:00",
                            "close" : "11:00"
                          } ],
                          "thursday" : [ {
                            "open" : "9:00",
                            "close" : "11:00"
                          } ],
                          "friday" : [ {
                            "open" : "9:00",
                            "close" : "11:00"
                          } ],
                          "saturday" : [ {
                            "open" : "9:00",
                            "close" : "11:00"
                          } ],
                          "sunday" : [ {
                            "open" : "9:00",
                            "close" : "11:00"
                          } ]
                        },
                        "holidayHours" : [ {
                          "date" : "2019-11-28",
                          "hours" : [ {
                            "open" : "0:00",
                            "close" : "0:00"
                          } ]
                        }, {
                          "date" : "2019-11-29",
                          "hours" : [ {
                            "open" : "9:00",
                            "close" : "13:00"
                          }, {
                            "open" : "18:00",
                            "close" : "20:00"
                          } ]
                        } ]
                      },
                      "locationId" : "3708-0",
                      "isLocationOperating" : true,
                      "locationTimeZone" : "America/Chicago",
                      "locationType" : "Traditional",
                      "subwayPOS" : true,
                      "telephoneNumber" : "9999999999"
                    } ]
                  },
                  "Not Found" : {
                    "value" : [ ]
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized access. Invalid Credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 8000,
                  "message" : "Unauthorized access. Invalid Credentials.",
                  "detail" : {
                    "message" : "Unauthorized access. Invalid Credentials."
                  },
                  "retry" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The server has encountered a situation it doesn't know how to handle.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "examples" : {
                  "known_internal_error_scenario" : {
                    "value" : {
                      "code" : 9998,
                      "message" : "Internal System Error; Please retry",
                      "detail" : {
                        "message" : "<Internal Error Code> - <Internal Error Message>."
                      },
                      "retry" : true
                    }
                  },
                  "unknown_internal_error_scenario" : {
                    "value" : {
                      "code" : 9999,
                      "message" : "Unknown, Internal System Error; Please try",
                      "detail" : {
                        "message" : "Unknown, Internal System Error; Please try"
                      },
                      "retry" : true
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "location_auth" : [ "read:location" ]
        } ],
        "externalDocs" : {
          "description" : "Refer to list of Master Error Codes for the potential error codes and messages",
          "url" : "https://api-docs.subway.com/freshAPIErrorCodes.html"
        }
      }
    },
    "/locations/{locationId}" : {
      "get" : {
        "summary" : "An API to provide location details for given location id.",
        "description" : "An API that will provide location details for a given id.",
        "operationId" : "showLocationById",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The id of the location for which details are to be provided",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "1234-0"
        } ],
        "responses" : {
          "200" : {
            "description" : "Location details based on the location id requested; Details include location address, location operating hours (local time), timezone and operational status of the location.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "example" : {
                  "address" : {
                    "city" : "Milford",
                    "country" : "US",
                    "state" : "CT",
                    "streetAddress1" : "111 Somestreet",
                    "streetAddress2" : "B",
                    "streetAddress3" : "",
                    "zip" : "06460"
                  },
                  "countryDialingCode" : "1",
                  "latitude" : 32.906883,
                  "longitude" : -96.571025,
                  "locationHours" : {
                    "restaurantOperatingHours" : {
                      "monday" : [ {
                        "open" : "9:00",
                        "close" : "23:00"
                      } ],
                      "tuesday" : [ {
                        "open" : "09:00",
                        "close" : "23:00"
                      } ],
                      "wednesday" : [ {
                        "open" : "9:00",
                        "close" : "23:59"
                      } ],
                      "thursday" : [ {
                        "open" : "9:00",
                        "close" : "23:59"
                      } ],
                      "friday" : [ {
                        "open" : "9:00",
                        "close" : "23:59"
                      } ],
                      "saturday" : [ {
                        "open" : "00:00",
                        "close" : "4:00"
                      }, {
                        "open" : "10:00",
                        "close" : "23:59"
                      } ],
                      "sunday" : [ {
                        "open" : "00:00",
                        "close" : "2:00"
                      }, {
                        "open" : "10:00",
                        "close" : "23:59"
                      } ]
                    },
                    "breakfastHours" : {
                      "monday" : [ {
                        "open" : "9:00",
                        "close" : "11:00"
                      } ],
                      "tuesday" : [ {
                        "open" : "9:00",
                        "close" : "11:00"
                      } ],
                      "wednesday" : [ {
                        "open" : "9:00",
                        "close" : "11:00"
                      } ],
                      "thursday" : [ {
                        "open" : "9:00",
                        "close" : "11:00"
                      } ],
                      "friday" : [ {
                        "open" : "9:00",
                        "close" : "11:00"
                      } ],
                      "saturday" : [ {
                        "open" : "9:00",
                        "close" : "11:00"
                      } ],
                      "sunday" : [ {
                        "open" : "9:00",
                        "close" : "11:00"
                      } ]
                    },
                    "holidayHours" : [ {
                      "date" : "2019-11-28",
                      "hours" : [ {
                        "open" : "0:00",
                        "close" : "0:00"
                      } ]
                    }, {
                      "date" : "2019-11-29",
                      "hours" : [ {
                        "open" : "9:00",
                        "close" : "13:00"
                      }, {
                        "open" : "18:00",
                        "close" : "20:00"
                      } ]
                    } ]
                  },
                  "locationId" : "3708-0",
                  "isLocationOperating" : true,
                  "locationTimeZone" : "America/Chicago",
                  "locationType" : "Traditional",
                  "subwayPOS" : true,
                  "telephoneNumber" : "9999999999"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized access. Invalid Credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 8000,
                  "message" : "Unauthorized access. Invalid Credentials.",
                  "detail" : {
                    "message" : "Unauthorized access. Invalid Credentials."
                  },
                  "retry" : false
                }
              }
            }
          },
          "404" : {
            "description" : "Location not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 3000,
                  "message" : "Invalid Location; Location not found.",
                  "detail" : {
                    "message" : "Location 3890-2 not found.",
                    "LOCATION_KEYS" : [ "3890-2" ]
                  },
                  "retry" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The server has encountered a situation it doesn't know how to handle.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "examples" : {
                  "known_internal_error_scenario" : {
                    "value" : {
                      "code" : 9998,
                      "message" : "Internal System Error; Please retry",
                      "detail" : {
                        "message" : "<Internal Error Code> - <Internal Error Message>."
                      },
                      "retry" : true
                    }
                  },
                  "unknown_internal_error_scenario" : {
                    "value" : {
                      "code" : 9999,
                      "message" : "Unknown, Internal System Error; Please try",
                      "detail" : {
                        "message" : "Unknown, Internal System Error; Please try"
                      },
                      "retry" : true
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "location_auth" : [ "read:location" ]
        } ],
        "externalDocs" : {
          "description" : "Refer to list of Master Error Codes for the potential error codes and messages",
          "url" : "https://api-docs.subway.com/freshAPIErrorCodes.html"
        }
      }
    },
    "/locations/{locationId}/status" : {
      "get" : {
        "summary" : "POS Online Status for a specific location",
        "description" : "Returns different status variables for a POS\n\n**locationOpen:** true if the location is currently open, calculated by comparing current date/time against location hours and holiday hours \n\n**isOnline:** true if the location is currently online, automatically updated every  time the POS loses or gets connectivity\n\n**isDrawerAvailable:** true if the POS is currently available to accept orders; false, if POS not available to take orders   ",
        "operationId" : "showLocationStatusById",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The id of the location for which POS status needs to be provided.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "1234-0"
        } ],
        "responses" : {
          "200" : {
            "description" : "Expected response to a valid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationStatus"
                },
                "example" : {
                  "isOpen" : true,
                  "isOnline" : true,
                  "isDrawerAvailable" : true
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized access. Invalid Credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 8000,
                  "message" : "Unauthorized access. Invalid Credentials.",
                  "detail" : {
                    "message" : "Unauthorized access. Invalid Credentials."
                  },
                  "retry" : false
                }
              }
            }
          },
          "404" : {
            "description" : "Location not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 3000,
                  "message" : "Invalid Location; Location not found.",
                  "detail" : {
                    "message" : "Location 3890-2 not found.",
                    "LOCATION_KEYS" : [ "3890-2" ]
                  },
                  "retry" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The server has encountered a situation it doesn't know how to handle.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "examples" : {
                  "known_internal_error_scenario" : {
                    "value" : {
                      "code" : 9998,
                      "message" : "Internal System Error; Please retry",
                      "detail" : {
                        "message" : "<Internal Error Code> - <Internal Error Message>."
                      },
                      "retry" : true
                    }
                  },
                  "unknown_internal_error_scenario" : {
                    "value" : {
                      "code" : 9999,
                      "message" : "Unknown, Internal System Error; Please try",
                      "detail" : {
                        "message" : "Unknown, Internal System Error; Please try"
                      },
                      "retry" : true
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "location_auth" : [ "read:location" ]
        } ],
        "externalDocs" : {
          "description" : "Refer to list of Master Error Codes for the potential error codes and messages",
          "url" : "https://api-docs.subway.com/freshAPIErrorCodes.html"
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Location" : {
        "required" : [ "name", "locationId" ],
        "properties" : {
          "locationId" : {
            "description" : "id of the location. Any updates to the location properties, a LOCATION_UPDATE webhook event is published",
            "type" : "string"
          },
          "isLocationOperating" : {
            "description" : "if teh location is currently operating.",
            "type" : "boolean"
          },
          "locationType" : {
            "description" : "Different Subway location types",
            "type" : "string",
            "enum" : [ "Traditional", "C-Store/Gas Station", "Casino", "Military", "Wal-Mart", "Closed", "Truck Stop", "College/University", "Highway Rest Area", "Hospital", "Business & Industry", "Convention Center", "Hotel/Motel", "Recreational", "Shared with Restaurant", "Grocery Store", "Bus/railroad Terminal", "Airport", "Cinema", "Park", "Department Store", "School Lunch Location (K-12)", "Video Store", "Athletic Facility", "Unsual", "BJ Wholesale Club", "Stadium/Arena", "C-Store/Gas Station", "N/A" ]
          },
          "subwayPOS" : {
            "description" : "true if the POS in the location is Subway POS, otherwise false",
            "type" : "boolean"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "locationTimeZone" : {
            "description" : "location location time zone",
            "type" : "string"
          },
          "countryDialingCode" : {
            "description" : "country dialing code number",
            "type" : "string"
          },
          "telephoneNumber" : {
            "description" : "telephone number of the location",
            "type" : "string"
          },
          "latitude" : {
            "description" : "latitude, geographical coordinates of the address",
            "type" : "string"
          },
          "longitude" : {
            "description" : "longitude, geographical coordinates of the address",
            "type" : "string"
          },
          "locationHours" : {
            "items" : {
              "$ref" : "#/components/schemas/LocationHours"
            }
          }
        }
      },
      "PaginationResultSet" : {
        "type" : "object",
        "required" : [ "locations" ],
        "properties" : {
          "offset" : {
            "description" : "if no offset is provided, then this is the last page of results set. If offset is missing, then it means, no more records left in the result set",
            "type" : "string"
          },
          "locations" : {
            "$ref" : "#/components/schemas/Locations"
          }
        }
      },
      "Locations" : {
        "description" : "Array of the locations",
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Location"
        }
      },
      "Address" : {
        "required" : [ "country" ],
        "properties" : {
          "streetAddress1" : {
            "description" : "Street Address",
            "type" : "string"
          },
          "city" : {
            "description" : "City name",
            "type" : "string"
          },
          "state" : {
            "description" : "State value of the address",
            "type" : "string"
          },
          "zip" : {
            "description" : "Zip code value of the address",
            "type" : "string"
          },
          "country" : {
            "description" : "ISO-2 Country Code value where the address is located.",
            "type" : "string"
          }
        }
      },
      "LocationHours" : {
        "properties" : {
          "restaurantOperatingHours" : {
            "$ref" : "#/components/schemas/WeekDay"
          },
          "breakfastHours" : {
            "$ref" : "#/components/schemas/WeekDay"
          },
          "holidayHours" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Holiday"
            }
          }
        }
      },
      "Holiday" : {
        "required" : [ "date" ],
        "properties" : {
          "date" : {
            "description" : "Holiday date",
            "type" : "string",
            "format" : "full-date"
          },
          "hours" : {
            "description" : "provides time(s) when the location will be open/closed. API supports multiple open/close times during a given day. If the store is closed for the entire day, then open and close will have values of 00:00; If partially open, then the location open/close slots will be provided.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpenClose"
            }
          }
        }
      },
      "WeekDay" : {
        "properties" : {
          "monday" : {
            "description" : "provides time(s) when the location will be open/closed. API supports multiple open/close times during a given day.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpenClose"
            }
          },
          "tuesday" : {
            "description" : "provides time(s) when the location will be open/closed. API supports multiple open/close times during a given day.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpenClose"
            }
          },
          "wednesday" : {
            "description" : "provides time(s) when the location will be open/closed. API supports multiple open/close times during a given day.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpenClose"
            }
          },
          "thursday" : {
            "description" : "provides time(s) when the location will be open/closed. API supports multiple open/close times during a given day.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpenClose"
            }
          },
          "friday" : {
            "description" : "provides time(s) when the location will be open/closed. API supports multiple open/close times during a given day.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpenClose"
            }
          },
          "saturday" : {
            "description" : "provides time(s) when the location will be open/closed. API supports multiple open/close times during a given day.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpenClose"
            }
          },
          "sunday" : {
            "description" : "provides time(s) when the location will be open/closed. API supports multiple open/close times during a given day.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpenClose"
            }
          }
        }
      },
      "OpenClose" : {
        "properties" : {
          "open" : {
            "description" : "provides time when the location will be open in hours:minutes format.For example, 6:00",
            "type" : "string"
          },
          "close" : {
            "description" : "provides time when the location will be closed in hours:minutes format.For example, 22:00",
            "type" : "string"
          }
        }
      },
      "LocationStatus" : {
        "properties" : {
          "locationId" : {
            "description" : "id of the location",
            "type" : "string"
          },
          "locationOpen" : {
            "description" : "if the location is open as per restaurant operating hours",
            "type" : "boolean"
          },
          "isOnline" : {
            "description" : "is the POS is online to take orders",
            "type" : "boolean"
          },
          "isDrawerAvailable" : {
            "description" : "if the POS drawer available to take orders",
            "type" : "boolean"
          }
        }
      },
      "Error" : {
        "required" : [ "code", "message", "detaliedMessage", "retry" ],
        "properties" : {
          "code" : {
            "description" : "error code identifying the error;",
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "description" : "pre-defined/standard error message describing the error code/error scenario",
            "type" : "string"
          },
          "detail" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "description" : "runtime error message that caused the error",
                "type" : "string"
              }
            },
            "additionalProperties" : {
              "description" : "In this section object keys on which error occured. INVALID_ITEM_ID: [1, 2, 4]",
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "retry" : {
            "description" : "true, if this transaction can be retried by the partner otherwise false",
            "type" : "boolean"
          }
        }
      }
    },
    "securitySchemes" : {
      "location_auth" : {
        "type" : "openIdConnect",
        "openIdConnectUrl" : "https://example.url/{tenantId}/v2.0/.well-known/openid-configuration"
      }
    }
  }
}