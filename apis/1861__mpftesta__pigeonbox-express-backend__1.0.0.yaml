openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: PigeonBox User Dashboard Mock API
    url: https://virtserver.swaggerhub.com/mpftesta/pigeonbox-express-backend/1.0.0
info:
  description: PigeonBox Backend
  version: "1.0.0"
  title: PigeonBox Backend
  contact:
    email: miguel@pigeonbox.ca
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: users
    description: Operations regarding users account information
  - name: transactions
    description: Operations regarding users managing their balance
  - name: subscriptions
    description: Operations regarding users managing their subscriptions
  - name: locations
    description: Operations regarding the retrieval of available locations
  - name: channels
    description: Operations regarding the retrieval of available channels
paths:
  /user:
    get:
      security:
        - bearerAuth: []
      tags:
        - users
      summary: Gets the user data of an authenticated user
      operationId: getUser
      responses:
        '200':
          description: User object corresponding to current authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Input Parameter
        '401':
          description: Unauthorized
        '404':
          description: User Not Found
    post:
      tags:
        - users
      summary: Registers a new user
      operationId: createUser
      description: Registers a new user
      responses:
        '201':
          description: "User Created Successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 201
                  message: 
                    type: string
                    example: User Created
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
        '409':
          description: User Already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 409
                  message: 
                    type: string
                    example: User Already Exists
      requestBody:
        $ref: '#/components/requestBodies/SignUpForm'
  /user/validate:
    post:
      tags:
        - users
      summary: Validates a user's phone number
      operationId: validatePhone
      responses:
        '200':
          description: User Validated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 200
                  message: 
                    type: string
                    example: User Validated
        '404':
          description: User Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: User Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
      requestBody:
        $ref: '#/components/requestBodies/PhoneVerificationForm'
  /user/changeemail:
    post:
      security:
        - bearerAuth: []
      tags:
        - users
      summary: Changes a user's email
      description: |
        Changes a user's email for both login and business logic purposes
      operationId: changeEmail
      responses:
        '200':
          description: Updated User Email
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 200
                  message: 
                    type: string
                    example: Updated User Email
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 401
                  message: 
                    type: string
                    example: Unauthorized
        '404':
          description: User Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: User Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
      requestBody:
        $ref: '#/components/requestBodies/ChangeEmailForm'
  /user/changephone:
    post:
      security:
        - bearerAuth: []
      tags:
        - users
      summary: Changes a user's phone number
      description: |
        Changes a user's phone number. Will set user as invalidated and will require re-validation
      operationId: changePhoneNumber
      responses:
        '200':
          description: Updated User Phone Number
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 200
                  message: 
                    type: string
                    example: Updated User Phone Number
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 401
                  message: 
                    type: string
                    example: Unauthorized
        '404':
          description: User Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: User Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
      requestBody:
        $ref: '#/components/requestBodies/ChangePhoneForm'
  /user/changename:
    post:
      security:
        - bearerAuth: []
      tags:
        - users
      summary: Changes a user's name
      description: |
        Changes a user's name.
      operationId: changeName
      responses:
        '200':
          description: Updated User Name
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 200
                  message: 
                    type: string
                    example: Updated User Phone Number
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 401
                  message: 
                    type: string
                    example: Unauthorized
        '404':
          description: User Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: User Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
      requestBody:
        $ref: '#/components/requestBodies/ChangeNameForm'
  /user/changepassword:
    post:
      security:
        - bearerAuth: []
      tags:
        - users
      summary: Changes a user's login password
      operationId: changePassword
      responses:
        '200':
          description: Updated User Password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 200
                  message: 
                    type: string
                    example: Updated User Password
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 401
                  message: 
                    type: string
                    example: Unauthorized
        '404':
          description: User Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: User Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
      requestBody:
        $ref: '#/components/requestBodies/ChangePasswordForm'
  /user/paymentsource:
    get:
      security:
        - bearerAuth: []
      tags:
        - users
      summary: Retrieves credit card information of user
      description: |
        Does not need a param, user will be fetched in the backend using JWT in auth header
      operationId: getPaymentSource
      responses:
        '200':
          description: User's payment source info
          content:
            application/json:
              schema:
                type: object
                properties:
                  brand: 
                    type: string
                    example: Visa
                  expMonth:  
                    type: string
                    example: 8
                  expYear:  
                    type: string
                    example: 2020
                  funding:  
                    type: string
                    example: credit
                  last4:  
                    type: string
                    example: 4242
                  name:  
                    type: string
                    example: John Doe
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 401
                  message: 
                    type: string
                    example: Unauthorized
        '404':
          description: User Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: User Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
    post:
      security:
        - bearerAuth: []
      tags:
        - users
      summary: Changes the Credit Card information of user
      description: |
        Creates a new stripe customer id if user does not have it yet
      operationId: updatePaymentSource
      responses:
        '200':
          description: Updated User Payment Source
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 200
                  message: 
                    type: string
                    example: Updated User Payment Source
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 401
                  message: 
                    type: string
                    example: Unauthorized
        '404':
          description: User Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: User Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
      requestBody:
        $ref: '#/components/requestBodies/UpdatePaymentSourceJson'
  /transaction:
    post:
      security:
        - bearerAuth: []
      tags:
        - transactions
      summary: Adds user balance
      operationId: addBalance
      responses:
        '201':
          description: Transaction Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 201
                  message: 
                    type: string
                    example: Transaction Created
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 401
                  message: 
                    type: string
                    example: Unauthorized
        '404':
          description: User Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: User Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
      requestBody:
        $ref: '#/components/requestBodies/AddBalanceForm'
  /transaction/types:
    get:
      tags:
        - transactions
      summary: Gets a list of available PigeonBox transaction types
      description: |
        Basically an enum
      operationId: getTransactionTypes
      responses:
        '200':
          description: List of TransactionTypes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTypeArray'
  /subscription:
    post:
      security:
        - bearerAuth: []
      tags:
        - subscriptions
      summary: Subscribes user to PigeonBox Unlimited
      description: |
        User must have a stripe customer ID
      operationId: createSubscription
      responses:
        '201':
          description: Subscription Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 201
                  message: 
                    type: string
                    example: Subscription Created
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 401
                  message: 
                    type: string
                    example: Unauthorized
        '404':
          description: User Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: User Not Found
        '400':
          description: Bad Request OR User Has No Payment Source OR User Has Existing Subscription
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request OR User Has No Payment Source Bad Request OR User Has No Payment Source OR User Has Existing Subscription
  /subscription/cancel:
    post:
      security:
        - bearerAuth: []
      tags:
        - subscriptions
      summary: Cancels the user's PigeonBox unlimited subscription
      operationId: cancelSubscription
      responses:
        '200':
          description: Subscription Cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 200
                  message: 
                    type: string
                    example: Subscription Cancelled
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 401
                  message: 
                    type: string
                    example: Unauthorized
        '404':
          description: Subscription Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 404
                  message: 
                    type: string
                    example: Subscription Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                    example: 400
                  message: 
                    type: string
                    example: Bad Request
  /location/list:
    get:
      tags:
        - locations
      summary: Gets a list of available PigeonBox Locations
      description: |
        Basically an enum
      operationId: getLocationList
      responses:
        '200':
          description: List of Locations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationArray'
  /channel/list:
    get:
      tags:
        - channels
      summary: Gets a list of available options for "How Did You Hear About Us"
      description: |
        Basically an enum
      operationId: getChannelArray
      responses:
        '200':
          description: List of Channels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelArray'
components:
  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT 
  requestBodies:
    SignUpForm:
      description: User sign up form
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              name:
                type: string
                example: John Doe
              email:
                type: string
                format: email
                example: johndoe@gmail.com
              password:
                type: string
                example: password1
              passwordConfirm:
                type: string
                example: password1
              phoneNumber:
                type: string
                example: 408-867-5309
              subscriptionLevel:
                type: string
                example: unlimited
              referralCode:
                type: string
                example: R9DL32
              preferredLocationId:
                type: number
                example: 1
              channel:
                type: string
                example: posters
    PhoneVerificationForm:
      description: Form for Phone Verification
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                example: johndoe@gmail.com
                description: The user's email
              verificationCode:
                type: string
                example: 839211
                description: The 6 digit code sent to the user via sms
    ChangeEmailForm:
      description: Form for changing email
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              newEmail:
                type: string
                format: email
                example: johndoe@gmail.com
                description: The new email that the user wants to set
    ChangePhoneForm:
      description: Form for changing phone number
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              newPhoneNumber:
                type: string
                example: +17781234567
                description: The new phone number that the user wants to set
    ChangeNameForm:
      description: Form for changing name
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              newName:
                type: string
                example: Steve Jobs
                description: The new name that the user wants to set
    ChangePasswordForm:
      description: Form for changing password
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              oldPassword:
                type: string
                example: password1
                description: The user's old password
              newPassword:
                type: string
                example: password2
                description: The user's new password
              newPasswordConfirm:
                type: string
                example: password2
                description: Confirmation of the user's new password
    UpdatePaymentSourceJson:
      description: Request body for updating payment source
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              tokenId:
                type: string
                example: tok_12345678
                description: Token ID obtained from Stripe Elements' CreateToken method
    AddBalanceForm:
      description: Form for adding balance if user does not have a payment source saved
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              tokenId:
                type: string
                example: tok_12345678
                description: Token ID obtained from Stripe Elements' CreateToken method
              transactionType:
                type: string
                example: topUp
                description: The type of transaction. For the purposes of this project, this is ALWAYS topUp
              transactionSize:
                type: number
                example: 3.50
                description: The size of the transaction being made/amount that the user wants to add to their account
    AddBalanceFormExisting:
      description: Form for adding balance if user has a payment source saved
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              stripeCustomerId:
                type: string
                example: cus_FluQ6scVmpfswu
                description: User's stripe customer ID
              transactionType:
                type: string
                example: topUp
                description: The type of transaction. For the purposes of this project, this is ALWAYS topUp
              transactionSize:
                type: number
                example: 3.50
                description: The size of the transaction being made/amount that the user wants to add to their account
  schemas:
    User:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: johndoe@gmail.com
        storageCode:
          type: string
          example: STNQR4
        phoneNumber:
          type: string
          example: 408-867-5309
        balance:
          type: number
          example: 3.50
        stripeCustomerId:
          type: string
          example: cus_FluQ6scVmpfswu
        subscriptionLevel:
          type: string
          example: unlimited
        referralCode:
          type: string
          example: R9DL32
        preferredLocation:
          $ref: '#/components/schemas/Location'
        channel:
          type: string
          example: posters
        validationDate:
          type: string
          example: '2019-09-08 14:07:16.05-07'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        usages:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
    Location:
      type: object
      properties:
        id:
          type: number
          example: 4
        address:
          type: string
          example: 101 University Blvd, Vancouver BC
    LocationArray:
      type: array
      items:
        $ref: '#/components/schemas/Location'
      example:
        - id: 1
          address: 123 Main St, Vancouver BC
        - id: 2
          address: 456 Imperial Dr, Burnaby BC
        - id: 3
          address: 890 No. 3 Rd, Richmond BC
        - id: 4
          address: 101 University Blvd, Vancouver BC
    ChannelArray:
      type: array
      items:
        type: object
        properties:
          channel:
            type: string
      example:
        - channel: facebook
        - channel: posters
        - channel: instagram
        - channel: media
    TransactionTypeArray:
      type: array
      items:
        type: object
        properties:
          transactionType:
            type: string
      example:
        - transactionType: Top Up
        - transactionType: Usage
        - transactionType: Overdue Fee
    Transaction:
      type: object
      properties:
        id:
          type: number
          example: 6
        transactionType:
          type: string
          example: "Top Up"
        transactionDate:
          type: string
          format: date-time
          example: '2016-09-29T09:12:33.001Z'
        transactionSize:
          type: number
          example: 4.5
        stripeChargeId:
          type: string
          example: ch_1FGeeUHrO0K25kIn97HYZ2kq
        userId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
    Subscription:
      type: object
      properties:
        id:
          type: number
          example: 9
        stripeSubscriptionId:
          type: string
          example: sub_FpUp9a20CRlvVq
        userId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        isActive:
          type: boolean
          example: true
        startedAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        finishedAt:
          type: string
          format: date-time
          example: '2016-09-29T09:12:33.001Z'
    Usage:
      type: object
      properties:
        id:
          type: number
          example: 8
        userId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        boxId:
          type: number
          example: 9
        openCode:
          type: string
          example: U789ST
        usageType:
          type: string
          example: delivery
        trackingNumber:
          type: string
          example: 1Z204E380338943508
        pickupStatus:
          type: string
          example: Processing
        startedAt:
          type: string
          format: date-time
          example: '2016-09-05T09:12:33.001Z'
        finishedAt:
          type: string
          format: date-time
          example: '2016-09-06T09:12:33.001Z'