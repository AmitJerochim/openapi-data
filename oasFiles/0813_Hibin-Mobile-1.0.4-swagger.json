{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "FuelUP Mobile API",
    "version" : "1.0.4",
    "title" : "FuelUP Mobile API",
    "contact" : {
      "email" : "d.titov@fuelup.ru"
    }
  },
  "tags" : [ {
    "name" : "auth",
    "description" : "Идентификация и аутентификация"
  }, {
    "name" : "profile",
    "description" : "Настройки пользователя"
  }, {
    "name" : "stations",
    "description" : "Списки АЗС, цен, конфигураций"
  }, {
    "name" : "order",
    "description" : "Заказы (списки, оформление и прочее)"
  }, {
    "name" : "news",
    "description" : "Новости (список, чтение, отметки о прочтении)"
  }, {
    "name" : "cards",
    "description" : "Управление способами оплаты"
  } ],
  "paths" : {
    "/auth/refresh_tokens" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Обновление токенов",
        "operationId" : "authRefreshTokens",
        "description" : "Обновление токенов. Нужно вызывать, когда известен refresh_token, но уже истёк access_token\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "refresh_token" : {
                    "description" : "Старый refresh_token",
                    "type" : "string"
                  }
                },
                "required" : [ "refresh_token" ]
              },
              "example" : {
                "refresh_token" : "2tm944RRYK7BGSJKemLmXONVekeBOJU83uS8Qcfsl42MCQlxpGB1o/zf9Qf3iz+olSbSGkIMa8Fd6KTIbW=="
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Заданы новые refresh_token и access_token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginToken"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "404" : {
            "description" : "Старый refresh_token не найден"
          }
        }
      }
    },
    "/auth/send_code" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Отправка SMS с кодом подтверждения",
        "operationId" : "authSendCode",
        "description" : "Отправка SMS с кодом подтверждения при регистрации или повторной авторизации\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "phone" : {
                    "type" : "string",
                    "description" : "Номер телефона пользователя",
                    "pattern" : "^7[0-9]{10}$"
                  }
                },
                "required" : [ "phone" ]
              },
              "example" : {
                "phone" : 79991234567
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Код отправлен на телефон СМС-сообщением",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : { }
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/auth/login" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Получение токенов по номеру телефона и sms-коду",
        "operationId" : "authLogin",
        "description" : "Получение access_token и refresh_token по номеру телефона и sms-коду. Перед вызовом метода код должен быть отправлен методом send_code\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "phone" : {
                    "type" : "string",
                    "description" : "Номер телефона, на который будет осуществляться отправка\n",
                    "pattern" : "^7[0-9]{10}$"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Код из SMS",
                    "pattern" : "^[0-9]{4}$"
                  }
                },
                "required" : [ "phone", "code" ]
              },
              "example" : {
                "phone" : 79991234567,
                "code" : 1234
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Код отправлен на телефон СМС-сообщением",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : { }
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          },
          "x-600" : {
            "description" : "Указан неверный код. По факту передается код 600."
          }
        }
      }
    },
    "/auth/sms_status" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Прием статуса SMS",
        "operationId" : "authSmsStatus",
        "description" : "Прием статуса SMS\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "phone" : {
                    "type" : "string",
                    "description" : "Номер телефона пользователя",
                    "pattern" : "^7[0-9]{10}$"
                  }
                },
                "required" : [ "phone" ]
              },
              "example" : {
                "phone" : "79991234567"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "token сохранен"
          }
        }
      }
    },
    "/profile/push_token" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Сохранение PUSH-токена",
        "operationId" : "profilePushToken",
        "description" : "Сохранение PUSH-токена\n",
        "responses" : {
          "200" : {
            "description" : "token сохранен",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "{}"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : "f35fs0UoAt4:APA91bEBWbydmaJYtFL2D4kMT7aGyZXWiPVvMeRHXJ0Paw-mHA5qUBq6iL_C92QSHiScYn7Fc2Ke04MWZZt-SkqttRX1tBFYskKh3YQrlbdxQ2ZTurDfc4itudOf-cZkHGMmro28rn1n\n"
              }
            }
          },
          "description" : "token",
          "required" : true
        }
      }
    },
    "/profile/get" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Получение своего профиля",
        "operationId" : "profileGet",
        "description" : "Получение своего профиля\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Профиль пользователя найден",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileObject"
                },
                "example" : {
                  "phone" : 79991234567,
                  "email" : "example@mail.com"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "404" : {
            "description" : "Пользователь не найден"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/profile/email" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Установка email адреса",
        "operationId" : "profileEmail",
        "description" : "Установка email адреса\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailObject"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Профиль пользователя найден",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "404" : {
            "description" : "Пользователь не найден"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          },
          "x-600" : {
            "description" : "Указан неправильный e-mail или ошибка отправки. По факту передается код 600."
          }
        }
      }
    },
    "/profile/coordinates" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Передача координат пользователя",
        "operationId" : "profileCoordinates",
        "description" : "Передача координат пользователя\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GeoObject"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Координаты сохранены",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/profile/set_tank" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Установка параметров бака",
        "operationId" : "profileSetTank",
        "description" : "Установка параметров бака\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TankObject"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Данные сохранены",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/profile/get_tank" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Получение параметров бака",
        "operationId" : "profileGetTank",
        "description" : "Получение параметров бака\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Настройки параметров бака",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TankObject"
                },
                "example" : {
                  "volume" : 50,
                  "default" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Пользователь не найден"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/profile/set_send_cheque" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Сохранение параметров отправки чека",
        "operationId" : "profileSetSendCheque",
        "description" : "Сохранение параметров отправки чека\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendChequeObject"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Данные сохранены",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/profile/get_send_cheque" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Получение параметров отправки чека",
        "operationId" : "profileGetSendCheque",
        "description" : "Получение параметров отправки чека\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Настройки параметров отправки чека",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SendChequeObject"
                },
                "example" : {
                  "email" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Пользователь не найден"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/stations/fuels" : {
      "post" : {
        "tags" : [ "stations" ],
        "summary" : "Справочник видов топлива",
        "operationId" : "stationsFuels",
        "description" : "Справочник видов топлива\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Список видов топлива сформирован",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FuelsObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/stations/list" : {
      "post" : {
        "tags" : [ "stations" ],
        "summary" : "Список АЗС",
        "operationId" : "stationsList",
        "description" : "Список АЗС\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Список АЗС сформирован",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StationsObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/stations/info" : {
      "post" : {
        "tags" : [ "stations" ],
        "summary" : "Подробная информация по АЗС",
        "operationId" : "stationsInfo",
        "description" : "Подробная информация по АЗС\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "id" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "ID заправки по которой надо получить информацию\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Информация по АЗС сформирована",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StationsObject"
                }
              }
            }
          },
          "404" : {
            "description" : "Указанная АЗС не существует"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/stations/price" : {
      "post" : {
        "tags" : [ "stations" ],
        "summary" : "Прайс по АЗС со скидками",
        "operationId" : "stationsPrice",
        "description" : "Прайс по АЗС со скидками\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "id" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "ID заправки по которой надо получить информацию\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Информация по АЗС сформирована",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PricesObject"
                }
              }
            }
          },
          "404" : {
            "description" : "Указанная АЗС не существует"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/stations/list_filters" : {
      "post" : {
        "tags" : [ "stations" ],
        "summary" : "Получение списка фильтров АЗС",
        "operationId" : "stationsListFilters",
        "description" : "Получение списка фильтров АЗС\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Список фильтров",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Список допустимых фильтров и текущие настройки пользователя",
                  "required" : [ "list", "filters" ],
                  "properties" : {
                    "list" : {
                      "$ref" : "#/components/schemas/FilterDefsObject"
                    },
                    "filters" : {
                      "$ref" : "#/components/schemas/StationsFilterObject"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/stations/save_filters" : {
      "post" : {
        "tags" : [ "stations" ],
        "summary" : "Сохранение параметров фильтра АЗС",
        "operationId" : "stationsSaveFilters",
        "description" : "Сохранение параметров фильтра АЗС\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StationsFilterObject"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Фильтр сохранен, необходимо обновить список АЗС",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StationsFilterObject"
                },
                "example" : {
                  "groups" : [ 1, 2, 6 ]
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/stations/get_filters" : {
      "post" : {
        "tags" : [ "stations" ],
        "summary" : "Получение параметров фильтра АЗС",
        "operationId" : "stationsGetFilters",
        "description" : "Получение параметров фильтра АЗС\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Параметры фильтра определены",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StationsFilterObject"
                },
                "example" : {
                  "groups" : [ 1, 2, 6 ]
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "404" : {
            "description" : "Фильтр не задан"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/orders/get_active" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Получение информации об активных заказах",
        "operationId" : "orderGetActive",
        "description" : "Получение информации об активных заказах\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Активные заказы, если есть",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrdersObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/orders/info" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Получение данных о заказе",
        "operationId" : "orderInfo",
        "description" : "Получение данных о заказе\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "order_id" ],
                "properties" : {
                  "order_id" : {
                    "type" : "string",
                    "description" : "ID заказа, по которому нужно получить информацию\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Данные заказа",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderListObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "404" : {
            "description" : "Заказ не найден"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/orders/stats" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Получение помесячной статистики по заказам",
        "operationId" : "orderStats",
        "description" : "Получение помесячной статистики по заказам\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "limit" ],
                "properties" : {
                  "limit" : {
                    "type" : "integer",
                    "description" : "Ограничение на количество заказов, используемое в запросе на получение списка заказов. Внимание! Статистика будет строиться по тем месяцам, в которые попадут заказы из выборки. Параметр должен быть равен тому значению, которое будет использовано при запросе списка заказов.\n"
                  },
                  "from_order" : {
                    "type" : "string",
                    "description" : "ID первого из уже загруженных заказов. Не указывать параметр, если нужно грузить последние. Внимание! Статистика будет строиться по тем месяцам, в которые попадут заказы из выборки. Параметр должен быть равен тому значению, которое будет использовано при запросе списка заказов.\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Помесячная статистика заказов",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrdersStatsObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/orders/list" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Получение списка заказов",
        "operationId" : "orderList",
        "description" : "Получение списка заказов\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "limit" ],
                "properties" : {
                  "limit" : {
                    "type" : "integer",
                    "description" : "Ограничение на количество заказов"
                  },
                  "from_order" : {
                    "type" : "string",
                    "description" : "ID первого из уже загруженных заказов. Не указывать параметр, если нужно грузить последние\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Список заказов",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrdersListObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/orders/listwstats" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Получение списка заказов со статистикой",
        "operationId" : "orderListWStats",
        "description" : "Получение списка заказов со статистикой\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "limit" ],
                "properties" : {
                  "limit" : {
                    "type" : "integer",
                    "description" : "Ограничение на количество заказов"
                  },
                  "from_order" : {
                    "type" : "string",
                    "description" : "ID первого из уже загруженных заказов. Не указывать параметр, если нужно грузить последние\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Список заказов",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrdersListWStatsObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/orders/create" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Создание нового заказа",
        "operationId" : "orderCreate",
        "description" : "Создание нового заказа\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "station", "pump", "fuel", "quantity", "pay_type", "pay_id" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "ID заказа. Если не указан, будет сгенерирован на сервере. Если указан и заказ с таким id уже существует, запрос будет проигнорирован\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  },
                  "station" : {
                    "type" : "string",
                    "description" : "ID АЗС",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  },
                  "pump" : {
                    "type" : "integer",
                    "description" : "Номер колонки, 0 если не указано",
                    "minimum" : 0,
                    "example" : 1
                  },
                  "fuel" : {
                    "type" : "integer",
                    "description" : "ID топлива",
                    "minimum" : 1,
                    "example" : 1
                  },
                  "quantity" : {
                    "oneOf" : [ {
                      "type" : "object",
                      "required" : [ "cost" ],
                      "properties" : {
                        "cost" : {
                          "type" : "number",
                          "description" : "Стоимость топлива в рублях",
                          "minimum" : 45.9,
                          "example" : 45.9
                        }
                      }
                    }, {
                      "type" : "object",
                      "required" : [ "volume" ],
                      "properties" : {
                        "volume" : {
                          "type" : "number",
                          "description" : "Объём топлива в литрах",
                          "minimum" : 10,
                          "example" : 10
                        }
                      }
                    } ]
                  },
                  "pay_type" : {
                    "type" : "string",
                    "description" : "Способ платежа",
                    "enum" : [ "card", "taxi" ],
                    "example" : "card"
                  },
                  "pay_id" : {
                    "type" : "string",
                    "description" : "ID средства оплаты (ID таксопарка или ID привязанной карты)\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Параметры заказа",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderAcceptObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/orders/status" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Проверить текущий статус заказа",
        "operationId" : "orderStatus",
        "description" : "Проверить текущий статус заказа\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "order_id" ],
                "properties" : {
                  "order_id" : {
                    "type" : "string",
                    "description" : "ID заказа, который проверяем\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Текущее состояние заказа. NB! 'x-600' - по факту передается статус-код '600'\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderLogObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          },
          "x-600" : {
            "description" : "Заказ не найден. По факту передается код 600. В будущем будет заменен на 404."
          }
        }
      }
    },
    "/orders/cancel" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Отмена заказа",
        "operationId" : "orderCancel",
        "description" : "Отмена заказа. NB! После отправки запроса на отмену необходимо проверять текущий статус заказа, только так можно выяснить результат, отменен заказ или это сделать невозможно.\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "order_id" ],
                "properties" : {
                  "order_id" : {
                    "type" : "string",
                    "description" : "ID заказа, который нужно отменить\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Запрос принят в обработку",
            "headers" : {
              "X-PopupMessage" : {
                "description" : "'true' value sets requirement to show message in popup window 'false' or not exists means use common system's message\n",
                "schema" : {
                  "type" : "string",
                  "enum" : [ true, false ],
                  "example" : true
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе",
            "headers" : {
              "X-PopupMessage" : {
                "description" : "'true' value sets requirement to show message in popup window 'false' or not exists means use common system's message\n",
                "schema" : {
                  "type" : "string",
                  "enum" : [ true, false ],
                  "example" : true
                }
              }
            }
          },
          "429" : {
            "description" : "Превышен лимит запросов",
            "headers" : {
              "X-PopupMessage" : {
                "description" : "'true' value sets requirement to show message in popup window 'false' or not exists means use common system's message\n",
                "schema" : {
                  "type" : "string",
                  "enum" : [ true, false ],
                  "example" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          },
          "x-600" : {
            "description" : "Заказ не найден. По факту передается код 600. В будущем будет заменен на 404.",
            "headers" : {
              "X-PopupMessage" : {
                "description" : "'true' value sets requirement to show message in popup window 'false' or not exists means use common system's message\n",
                "schema" : {
                  "type" : "string",
                  "enum" : [ true, false ],
                  "example" : true
                }
              }
            }
          }
        }
      }
    },
    "/orders/review" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Отзыв о заказе",
        "operationId" : "orderReview",
        "description" : "Отзыв о заказе\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "order_id", "rate", "comment" ],
                "properties" : {
                  "order_id" : {
                    "type" : "string",
                    "description" : "ID заказа, на который оставляем отзыв\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  },
                  "rate" : {
                    "type" : "integer",
                    "description" : "Количество звёзд от 1 до 5",
                    "minimum" : 1,
                    "maximum" : 5,
                    "example" : 5
                  },
                  "comment" : {
                    "type" : "string",
                    "description" : "Текст отзыва",
                    "example" : "Все отлично!"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Отзыв сохранен",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка в запросе"
          },
          "429" : {
            "description" : "Превышен лимит запросов"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          },
          "x-600" : {
            "description" : "Оставить отзыв к этому заказу нельзя. Заказ не найден, либо отзыв по нему уже есть. По факту передается код 600. В будущем будет заменен на 404.\n"
          }
        }
      }
    },
    "/news/list" : {
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Получение списка новостей",
        "operationId" : "newsList",
        "description" : "Получение списка (непрочитанных) новостей с флагом о прочтении.\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Список новостей",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsListObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/news/archive" : {
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Получение списка новостей без учета прочтения, включая архивные.\n",
        "operationId" : "newsArchive",
        "description" : "Получение списка новостей, включая уже прочитанные (для раздела новостей).\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/NullObject"
                }, {
                  "$ref" : "#/components/schemas/EmptyObject"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Список новостей",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsListObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/news/get" : {
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Получить указанную новость. В ответе будет массив с одним элементом, если новость есть, либо пустой массив, если нет.\n",
        "operationId" : "newsGet",
        "description" : "Получить указанную новость.\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "id" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "ID новостного сообщения\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Параметры новостного сообщения",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsListObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/news/get/{id}" : {
      "get" : {
        "tags" : [ "news" ],
        "summary" : "Вывод сообщения в виде WebView.\n",
        "operationId" : "newsGetWebView",
        "description" : "Вывод сообщения в виде WebView. * Внутренний метод, напрямую использовать не нужно!\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID сообщения",
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Сообщение в HTML-виде",
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string",
                  "example" : "<html><head></head><body>WebView Example</body></html>"
                }
              }
            }
          },
          "404" : {
            "description" : "Сообщение не найдено"
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/news/read" : {
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Уведомление о том, что пользователем прочитан заголовок.\n",
        "operationId" : "newsRead",
        "description" : "Уведомление о том, что пользователем прочитан заголовок.\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "id" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "ID новостного сообщения\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Параметры новостного сообщения",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsReadResultObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    },
    "/news/read_full" : {
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Уведомление о том, что пользователем прочтен полный текст новости.\n",
        "operationId" : "newsReadFull",
        "description" : "Уведомление о том, что пользователем прочтен полный текст новости.\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "id" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "ID новостного сообщения\n",
                    "format" : "uuid",
                    "pattern" : "'^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\n",
                    "example" : "84fd1e82-0d01-4e8b-b60b-c2a84863f1bf"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Параметры новостного сообщения",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsReadResultObject"
                }
              }
            }
          },
          "500" : {
            "description" : "Ошибка сервиса"
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "https://dev.fuelup.ru/v1",
    "description" : "Development server"
  }, {
    "url" : "https://test.fuelup.ru/v1",
    "description" : "Staging server"
  }, {
    "url" : "https://fuelup.ru/v1",
    "description" : "Production server"
  }, {
    "url" : "https://virtserver.swaggerhub.com/Hibin/Mobile/1.0.0",
    "description" : "Mock server"
  } ],
  "components" : {
    "schemas" : {
      "EmailObject" : {
        "type" : "object",
        "required" : [ "email" ],
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "mail@example.com"
          }
        }
      },
      "ProfileObject" : {
        "type" : "object",
        "required" : [ "phone", "email" ],
        "properties" : {
          "phone" : {
            "type" : "string",
            "pattern" : "^[0-9]{4}$",
            "example" : 79991234567
          },
          "email" : {
            "type" : "string",
            "pattern" : "email",
            "example" : "mail@example.com"
          }
        }
      },
      "NullObject" : {
        "type" : "object",
        "nullable" : true
      },
      "EmptyObject" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "LoginToken" : {
        "type" : "object",
        "required" : [ "refresh_token", "access_token" ],
        "properties" : {
          "code" : {
            "type" : "number",
            "example" : 9564
          },
          "refresh_token" : {
            "type" : "string",
            "example" : "iVdH4c97erZMiRlrhRTa5+DNOy1rQE4Sd3O3qYA9RLz5O1BkoSjiUj1bt1QU+8XbESO9C+W4NIzsQ51DHOXvew==\n"
          },
          "access_token" : {
            "type" : "string",
            "example" : "mI6uEPYNFqDtkvBOu5hTBj2bFi2tDwVC\n"
          }
        }
      },
      "GeoObject" : {
        "type" : "object",
        "required" : [ "lon", "lat" ],
        "properties" : {
          "lon" : {
            "type" : "number",
            "description" : "Долгота пользователя",
            "example" : 37.484173
          },
          "lat" : {
            "type" : "number",
            "description" : "Широта пользователя",
            "example" : 55.884546
          }
        }
      },
      "TankObject" : {
        "type" : "object",
        "required" : [ "volume", "default" ],
        "properties" : {
          "volume" : {
            "type" : "integer",
            "description" : "Объём бака в литрах",
            "example" : 50
          },
          "default" : {
            "type" : "boolean",
            "description" : "Использовать ли режим \"полный бак\" по-умолчанию",
            "example" : true
          }
        }
      },
      "SendChequeObject" : {
        "type" : "object",
        "required" : [ "email" ],
        "properties" : {
          "email" : {
            "type" : "boolean",
            "description" : "Флаг отправки на email",
            "example" : true
          }
        }
      },
      "FuelsObject" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/FuelObject"
        }
      },
      "FuelObject" : {
        "type" : "object",
        "required" : [ "id", "code", "name", "fuel_group_id", "fuel_group_name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 10
          },
          "code" : {
            "type" : "string",
            "example" : "92"
          },
          "name" : {
            "type" : "string",
            "example" : "Бензин АИ-92"
          },
          "fuel_group_id" : {
            "nullable" : true,
            "type" : "integer",
            "example" : 10
          },
          "fuel_group_name" : {
            "nullable" : true,
            "type" : "string",
            "example" : "92"
          }
        }
      },
      "StationsObject" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/StationObject"
        }
      },
      "StationObject" : {
        "type" : "object",
        "required" : [ "id", "name", "address", "is_active", "coordinates" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "ab501e43-3124-45be-b89d-3219d8442935"
          },
          "name" : {
            "type" : "string",
            "example" : "АЗС Тест 1"
          },
          "address" : {
            "type" : "string",
            "example" : "Виноградная 10"
          },
          "online" : {
            "type" : "boolean",
            "description" : "Статус доступности станции",
            "example" : true
          },
          "coordinates" : {
            "$ref" : "#/components/schemas/GeoObject"
          },
          "color" : {
            "type" : "string",
            "nullable" : true,
            "description" : "Если указан, необходимо выделить станцию этим цветом",
            "example" : "FFCCFF"
          },
          "promo" : {
            "type" : "string",
            "description" : "Если указан, необходимо выделить станцию 'оранжевым' и добавить подпись в нижней панельке\n",
            "example" : "Кофе в подарок при заправке от 30л"
          },
          "match" : {
            "type" : "boolean",
            "description" : "Опциональный флаг! Указывается только в случае, если установлен фильтр АЗС. Если станция попадает под условия фильтра, значение true, иначе false. Если флаг отсутствует в выгрузке, значит фильтр не настроен.\n",
            "example" : false
          }
        }
      },
      "StationsFilterObject" : {
        "type" : "object",
        "properties" : {
          "fuels" : {
            "type" : "array",
            "description" : "Выбранные виды топлива\n",
            "items" : {
              "type" : "integer",
              "example" : 10
            }
          },
          "groups" : {
            "type" : "array",
            "description" : "Выбранные группы видов топлива\n",
            "items" : {
              "type" : "integer",
              "example" : 10
            }
          }
        }
      },
      "PricesObject" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PriceObject"
        }
      },
      "PriceObject" : {
        "type" : "object",
        "required" : [ "fuel", "price", "type_fuel", "discount", "discounted_price" ],
        "properties" : {
          "fuel" : {
            "type" : "integer",
            "description" : "ID топлива",
            "example" : 10
          },
          "price" : {
            "type" : "number",
            "description" : "Цена за 1 литр топлива",
            "example" : 43.59
          },
          "type_fuel" : {
            "nullable" : true,
            "type" : "string",
            "description" : "Тип топлива",
            "example" : "Премиум"
          },
          "name" : {
            "type" : "string",
            "description" : "Марка топлива",
            "example" : "АИ-92"
          },
          "ename" : {
            "type" : "string",
            "description" : "Фирменное название",
            "example" : "Опти"
          },
          "discount" : {
            "type" : "number",
            "description" : "Размер скидки в процентах",
            "example" : 10
          },
          "discounted_price" : {
            "type" : "number",
            "description" : "Цена за 1 литр топлива с учетом скидки",
            "example" : 39.23
          }
        }
      },
      "OrdersObject" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/OrderObject"
        }
      },
      "OrderObject" : {
        "type" : "object",
        "required" : [ "id", "created", "finished", "fuel", "price", "pay_type", "pay_id", "details", "volume_fact", "volume_req", "cost_fact", "cost_req", "station" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID заказа",
            "format" : "uuid",
            "example" : "ab501e43-3124-45be-b89d-3219d8442935"
          },
          "created" : {
            "type" : "string",
            "description" : "Время создания заказа",
            "format" : "time",
            "example" : "2020-01-13 18:54:58.178825 +03:00"
          },
          "finished" : {
            "type" : "string",
            "description" : "Время завершения заказа",
            "format" : "time",
            "example" : "2020-01-13 18:59:04.513889 +03:00"
          },
          "fuel" : {
            "type" : "integer",
            "description" : "ID топлива",
            "example" : 10
          },
          "fuel_name" : {
            "type" : "string",
            "description" : "Наименование топлива",
            "example" : "АИ-92"
          },
          "price" : {
            "type" : "number",
            "description" : "Цена за 1 литр топлива",
            "example" : 43.59
          },
          "price_user" : {
            "type" : "number",
            "description" : "Цена (для клиента) за 1 литр топлива",
            "example" : 43.59
          },
          "pay_type" : {
            "type" : "string",
            "description" : "Идентификатор способа оплаты",
            "enum" : [ "taxi", "card" ],
            "example" : "taxi"
          },
          "pay_id" : {
            "type" : "string",
            "description" : "ID плательщика (пр., таксопарка)",
            "format" : "uuid",
            "example" : "ab501e43-3124-45be-b89d-3219d8442935"
          },
          "details" : {
            "type" : "object",
            "additionalProperties" : true
          },
          "check_url" : {
            "type" : "string",
            "format" : "uri",
            "description" : "URI для получения чека по операции"
          },
          "volume" : {
            "type" : "number",
            "description" : "Объем топлива по заказу",
            "example" : 50.0
          },
          "volume_fact" : {
            "type" : "number",
            "description" : "Фактический объем залитого топлива",
            "example" : 50.0
          },
          "volume_req" : {
            "type" : "number",
            "description" : "Объем заказанного топлива",
            "example" : 50.0
          },
          "cost" : {
            "type" : "number",
            "description" : "Стоимость заказа",
            "example" : 2179.5
          },
          "cost_fact" : {
            "type" : "number",
            "description" : "Фактическая стоимость заказа",
            "example" : 2179.5
          },
          "cost_req" : {
            "type" : "number",
            "description" : "Рассчетная/заказанная стоимость заказа",
            "example" : 2179.5
          },
          "discount" : {
            "type" : "number",
            "description" : "Скидка на заказ от стоимости на АЗС. Всегда положительное число. Стоимость заказа без скидки равна cost + discount\n",
            "example" : 100.0
          },
          "station" : {
            "$ref" : "#/components/schemas/OrderStationObject"
          }
        }
      },
      "OrderStationObject" : {
        "type" : "object",
        "required" : [ "id", "name", "address", "pump", "created" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "ab501e43-3124-45be-b89d-3219d8442935"
          },
          "name" : {
            "type" : "string",
            "example" : "АЗС Тест 1"
          },
          "address" : {
            "type" : "string",
            "example" : "Виноградная 10"
          },
          "pump" : {
            "type" : "integer",
            "description" : "Номер ТРК",
            "example" : 1
          },
          "created" : {
            "type" : "string",
            "description" : "Время создания заказа",
            "format" : "time",
            "example" : "2020-01-13 18:54:58.178825 +03:00"
          },
          "coordinates" : {
            "$ref" : "#/components/schemas/GeoObject"
          }
        }
      },
      "OrdersListWStatsObject" : {
        "type" : "object",
        "required" : [ "list", "stats" ],
        "properties" : {
          "list" : {
            "$ref" : "#/components/schemas/OrdersListObject"
          },
          "stats" : {
            "$ref" : "#/components/schemas/OrdersStatsObject"
          }
        }
      },
      "OrdersStatsObject" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/OrderStatsObject"
        }
      },
      "OrderStatsObject" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID группы для сопоставления списку заказов",
            "example" : "2020.01"
          },
          "name" : {
            "type" : "string",
            "description" : "Отображаемое название группы заказов",
            "example" : "Январь '20"
          },
          "volume_sum" : {
            "type" : "number",
            "description" : "Суммарный объем топлива",
            "example" : 230.0
          },
          "cost_sum" : {
            "type" : "number",
            "description" : "Сумма всех заказов в группе",
            "example" : 10000.0
          },
          "discount_sum" : {
            "type" : "number",
            "description" : "Сумма предоставленной скидки на заказы в группе",
            "example" : 300.0
          }
        }
      },
      "OrdersListObject" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/OrderListObject"
        }
      },
      "OrderListObject" : {
        "type" : "object",
        "required" : [ "id", "created", "finished", "created_view", "finished_view", "stats_id", "price_user", "check_url", "fuel", "cost", "volume", "fuel_name", "pay_type", "pay_id", "station" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID заказа",
            "format" : "uuid",
            "example" : "ab501e43-3124-45be-b89d-3219d8442935"
          },
          "created" : {
            "type" : "string",
            "description" : "Время создания заказа",
            "format" : "time",
            "example" : "2020-01-13 18:54:58.178825 +03:00"
          },
          "finished" : {
            "type" : "string",
            "description" : "Время завершения заказа",
            "format" : "time",
            "example" : "2020-01-13 18:59:04.513889 +03:00"
          },
          "created_view" : {
            "type" : "string",
            "description" : "Время создания заказа (для отображения в приложении без преобразований)",
            "example" : "13.01.2020 18:54"
          },
          "finished_view" : {
            "type" : "string",
            "description" : "Время завершения заказа (для отображения в приложении без преобразований)",
            "example" : "13.01.2020 18:59"
          },
          "stats_id" : {
            "type" : "string",
            "description" : "ID группы для объединения заказов и сопоставления их помесячной статистике",
            "example" : "2020.01"
          },
          "fuel" : {
            "type" : "integer",
            "description" : "ID топлива",
            "example" : 10
          },
          "fuel_name" : {
            "type" : "string",
            "description" : "Наименование топлива",
            "example" : "АИ-92"
          },
          "fuel_ename" : {
            "type" : "string",
            "description" : "Расширенное фирменное название топлива",
            "example" : "Экстра"
          },
          "price_user" : {
            "type" : "number",
            "description" : "Цена (для клиента) за 1 литр топлива",
            "example" : 43.59
          },
          "pay_type" : {
            "type" : "string",
            "description" : "Идентификатор способа оплаты",
            "enum" : [ "taxi", "card" ],
            "example" : "taxi"
          },
          "pay_id" : {
            "type" : "string",
            "description" : "ID плательщика (пр., таксопарка)",
            "format" : "uuid",
            "example" : "ab501e43-3124-45be-b89d-3219d8442935"
          },
          "check_url" : {
            "type" : "string",
            "format" : "uri",
            "description" : "URI для получения чека по операции"
          },
          "volume" : {
            "type" : "number",
            "description" : "Объем топлива по заказу",
            "example" : 50.0
          },
          "cost" : {
            "type" : "number",
            "description" : "Стоимость заказа для пользователя",
            "example" : 2179.5
          },
          "discount" : {
            "type" : "number",
            "description" : "Скидка на заказ от стоимости на АЗС. Всегда положительное число. Стоимость заказа без скидки равна cost + discount\n",
            "example" : 100.0
          },
          "retail" : {
            "type" : "number",
            "description" : "Стоимость заказа без учета скидки (cost + discount)\n",
            "example" : 2279.5
          },
          "station" : {
            "$ref" : "#/components/schemas/OrderStationObject"
          }
        }
      },
      "OrderAcceptObject" : {
        "type" : "object",
        "required" : [ "id", "user_id", "volume", "cost" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID заказа",
            "format" : "uuid",
            "example" : "ab501e43-3124-45be-b89d-3219d8442935"
          },
          "user_id" : {
            "type" : "string",
            "description" : "ID пользователя",
            "format" : "uuid",
            "example" : "ab501e43-3124-45be-b89d-3219d8442935"
          },
          "volume" : {
            "type" : "number",
            "description" : "Объем топлива по заказу",
            "example" : 50.0
          },
          "cost" : {
            "type" : "number",
            "description" : "Стоимость заказа",
            "example" : 2179.5
          },
          "info" : {
            "description" : "В данном случае содержит только 3 элемента:\n  cost - стоимость заказа для пользователя;\n  discount - размер скидки;\n  retail - стоимость без скидки.\n",
            "allOf" : [ {
              "$ref" : "#/components/schemas/OrderListObject"
            } ]
          }
        }
      },
      "OrderLogObject" : {
        "type" : "object",
        "description" : "Запись из лога выполнения заказа",
        "required" : [ "time", "status", "details" ],
        "properties" : {
          "time" : {
            "type" : "string",
            "description" : "Время записи текущего состояния",
            "format" : "time",
            "example" : "2020-01-13 18:54:58.178825 +03:00"
          },
          "status" : {
            "type" : "string",
            "description" : "Статус заказа:\n  1. created - Создан\n  2. started - Запущен\n  3. payment_reserved - Деньги зарезервированы\n  4. payment_reserve_error - Ошибка резервирования\n  5. waiting_station - Ожидаем ТРК\n  6. station_ready - ТРК включена\n  7. station_error - Ошибка АЗС\n  8. fueling - Заправка\n  9. fueling_finished - Заправка завершена\n  10. payment_finished - Платёж проведён\n  11. canceled - Заказ отменён\n",
            "enum" : [ "created", "started", "payment_reserved", "payment_reserve_error", "waiting_station", "station_ready", "station_error", "fueling", "fueling_finished", "payment_finished", "canceled" ],
            "example" : "created"
          },
          "details" : {
            "type" : "object",
            "description" : "Прочие подробности",
            "nullable" : true,
            "example" : null
          },
          "user_message" : {
            "type" : "string",
            "description" : "Сообщение пользователю (опционально)",
            "example" : "Заказ выполнен"
          },
          "info" : {
            "description" : "В данном случае содержит только 3 элемента:\n  cost - стоимость заказа для пользователя;\n  discount - размер скидки;\n  retail - стоимость без скидки.\n",
            "allOf" : [ {
              "$ref" : "#/components/schemas/OrderListObject"
            } ]
          }
        }
      },
      "FilterDefsObject" : {
        "type" : "array",
        "description" : "Список определений фильтров",
        "items" : {
          "$ref" : "#/components/schemas/FilterDefObject"
        }
      },
      "FilterDefObject" : {
        "type" : "object",
        "description" : "Определение фильтра",
        "required" : [ "id", "name", "order" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID фильтра",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "Название фильтра",
            "example" : "АИ-92"
          },
          "order" : {
            "type" : "integer",
            "description" : "Порядковый номер фильтра для сортировки при отображении",
            "example" : 1
          }
        }
      },
      "NewsReadResultObject" : {
        "type" : "object",
        "description" : "Уведомление об отметке прочтения сообщения. Учитывать ответ не требуется.\n",
        "required" : [ "result" ],
        "properties" : {
          "result" : {
            "type" : "string",
            "description" : "Значение параметра \"Result\" - \"OK\" или \"Failed\".\n",
            "example" : "OK"
          }
        }
      },
      "NewsListObject" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/NewsItemObject"
        }
      },
      "NewsItemObject" : {
        "type" : "object",
        "required" : [ "id", "header", "uri", "read" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "ab501e43-3124-45be-b89d-3219d8442935"
          },
          "header" : {
            "type" : "string",
            "description" : "Заголовок новости",
            "example" : "Заголовок новости"
          },
          "content" : {
            "type" : "string",
            "description" : "Текст новости * Устаревшее, для версии приложения до 2.0\n",
            "example" : "Текст новости"
          },
          "image" : {
            "type" : "string",
            "format" : "uri",
            "description" : "URI картинки к новости * Устаревшее, для версии приложения до 2.0\n",
            "example" : "https://fuelup.ru/news/app/percent.png"
          },
          "uri" : {
            "type" : "string",
            "format" : "uri",
            "description" : "URI для WebView новостного сообщения\n",
            "example" : "https://news.fuelup.ru/content/ab501e43-3124-45be-b89d-3219d8442935"
          },
          "read" : {
            "type" : "boolean",
            "description" : "Флаг прочтена ли уже новость",
            "example" : true
          },
          "hold" : {
            "type" : "boolean",
            "description" : "Флаг - необходимость зафиксировать новость (нельзя смахнуть)",
            "example" : true
          }
        }
      }
    }
  }
}