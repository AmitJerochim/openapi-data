{"openapi":"3.0.0","info":{"version":"1.14","title":"YogiPeople","description":"<h2>Interacting with the API always begins with calling Access/Login, this will give you an authenticated session, which is associated with a user in the system.<br/>"},"servers":[{"url":"https://dev.api.yogipeople.com/v1.14","description":"Development API"},{"url":"https://integration.api.yogipeople.com/v1.14","description":"Integration API (Use this for App and Website development)"},{"url":"https://acceptancetest.api.yogipeople.com/v1.14","description":"Acceptance test API"},{"url":"https://prod.api.yogipeople.com/v1.14","description":"Production API"}],"paths":{"/Access/Login":{"post":{"summary":"Authenticate an existing user","tags":["Access"],"requestBody":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"email":{"type":"string"},"password":{"type":"string"}},"required":["email","password"]}}}},"responses":{"200":{"description":"The authenticated session","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSession"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/RequestResetPassword":{"post":{"summary":"Request a password reset","tags":["Account"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"emailAddress":{"type":"string"},"newPassword":{"type":"string","description":"The new password must be 8 characters or longer."}},"required":["emailAddress","newPassword"]}}}},"responses":{"200":{"description":"Reset password email was sent to the user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/ConfirmResetPassword":{"get":{"summary":"Confirm a password reset","tags":["Account"],"parameters":[{"name":"ticketId","description":"The Ticket Id send to the user through email.","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"302":{"description":"The password reset succeeded, redirect to website 'https://{env}.helloyoga.com/resetPasswordConfirmation.html'"},"400":{"description":"Returns if the ticket does not exist, has already been used or is the wrong type","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/RequestEmailAddressVerification":{"post":{"summary":"Request an email address verification","tags":["Account"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Verify email was sent to the user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"401":{"description":"User is not authenticated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"400":{"description":"Email address has already been verified.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/ConfirmEmailAddress":{"get":{"summary":"Confirm that the email is correct","tags":["Account"],"parameters":[{"name":"ticketId","description":"The Ticket Id send to the user through email.","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"302":{"description":"The email address was verified, redirect to website 'https://{env}.helloyoga.com/verifyEmailAddressConfirmation.html'"},"400":{"description":"Returns if the ticket does not exist, has already been used or is the wrong type","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/NotificationChannelConfigurations":{"get":{"summary":"Get a list of notification channel configurations.","tags":["Account"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The notification channel configurations","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Channel"}}}}},"401":{"description":"User is either not authenticated or not a Student or Trainer. Check the error code and message for the reason","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/NotificationChannelConfigurations/Email":{"put":{"summary":"Updates the notification channel configuration for emails.","tags":["Account"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"BookingCancellationEnabled":{"type":"boolean"},"BookingConfirmationEnabled":{"type":"boolean"}},"required":["BookingCancellationEnabled","BookingConfirmationEnabled"]}}}},"responses":{"204":{"description":"The notification channel configuration for emails was updated"},"401":{"description":"User is either not authenticated or not a Student or Trainer. Check the error code and message for the reason","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/NotificationChannelConfigurations/PushNotification":{"put":{"summary":"Updates the notification channel configuration for push notifications.","tags":["Account"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"BookingCancellationEnabled":{"type":"boolean"},"BookingConfirmationEnabled":{"type":"boolean"}},"required":["BookingCancellationEnabled","BookingConfirmationEnabled"]}}}},"responses":{"204":{"description":"The notification channel configuration for push notifications was updated"},"401":{"description":"User is either not authenticated or not a Student or Trainer. Check the error code and message for the reason","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/PushNotificationDevices/Demonstrate":{"get":{"summary":"Sends a hello world notification to a user's devices","tags":["Account"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Push notification sent to all registered devices","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"401":{"description":"User is either not authenticated or not a Student or Trainer. Check the error code and message for the reason","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/PushNotificationDevices/{token}":{"get":{"summary":"Get a device back by the device token.","description":"This endpoint can be invoked by both Students and Trainers. It can be used to verify that a device is still registered for push notifications.","tags":["Account"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}},{"name":"token","description":"The token of the device","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the requested device","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PushNotificationDevice"}}}},"401":{"description":"User is either not authenticated or not a Student or Trainer, or the user is trying to get a device that they do not own. Check the error code and message for the reason","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"404":{"description":"No device with the provided token"},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"delete":{"summary":"Unregister a device by its device token","description":"Unregisters a single device","tags":["Account"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}},{"name":"token","description":"The token of the device","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Device was unregistered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"401":{"description":"User is either not authenticated or not a Student or Trainer, or the user is trying to unregister a device that they do not own. Check the error code and message for details","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"404":{"description":"No device with the provided token"},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Account/PushNotificationDevices":{"post":{"summary":"Register a device for push notifications","description":"This endpoint can be invoked by both Students and Trainers. The local device could store the token locally to make it easier for the user to unregister the specific device in the future.","tags":["Account"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"Token":{"type":"string","example":"abc"},"Platform":{"type":"integer","example":1,"description":"1 (Web) | 2 (Android) | 3 (iOS)"}}}}}},"responses":{"201":{"description":"Device was registered","headers":{"Location":{"schema":{"type":"string","example":"https://api.example.com/Account/PushNotificationDevices/{token}?sessionGUID={sessionGUID}","description":"The URL to get the created device"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PushNotificationDevice"}}}},"401":{"description":"User is either not authenticated or not a Student or Trainer. Check the error code and message for the reason","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"delete":{"summary":"Unregister all devices","description":"Unregisters all devices","tags":["Account"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"All registered devices were unregistered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Booking":{"put":{"summary":"Cancels booking","description":"This endpoint can only be invoked by a <b>Student</b> or <b>Trainer</b>","tags":["Booking"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bookingId":{"type":"integer","example":1}},"required":["bookingId"]}}}},"responses":{"200":{"description":"Booking was cancelled","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"get":{"summary":"Get a list of bookings for the user that overlaps with the timeperiod 'utcNow - 12 hours and forever'.","description":"This endpoint can only be invoked by a <b>Student</b> or <b>Trainer</b>","tags":["Booking"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Any bookings that overlaps with the timeperiod 'utcNow - 12 hours and forever'.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Booking"}}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Booking/Any":{"post":{"summary":"Creates a training session booking between a student and any trainer","description":"This endpoint can only be invoked by a <b>Student</b>.","tags":["Booking"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"BookingAvailabilityId":{"type":"string"},"TrainingType":{"type":"integer","description":"1 (Hatha) | 2 (Ashtanga) | 3 (Vinyasa) | 4 (Freeform)"},"TrainingDuration":{"type":"integer","example":30,"description":"(30|60)"},"Gender":{"type":"integer","example":3,"description":"The gender of the trainer (1 Male | 2 Female | 3 Any). Default value is <b>Any</b>","nullable":true},"InclUnknownTrainers":{"type":"boolean","example":true,"description":"Toggles if unknown trainers should be considered when booking any trainer. Default value is true","nullable":true}},"required":["BookingAvailabilityId","TrainingType","TrainingDuration"]}}}},"responses":{"200":{"description":"Booking was created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Booking/Specific":{"post":{"summary":"Creates a training session booking between a student and a specific trainer","description":"This endpoint can only be invoked by a <b>Student</b>.","tags":["Booking"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"TrainerId":{"type":"string","example":"00000000-0000-0000-0000-000000000000","nullable":true},"BookingAvailabilityId":{"type":"string"},"TrainingType":{"type":"integer","description":"1 (Hatha) | 2 (Ashtanga) | 3 (Vinyasa) | 4 (Freeform)"},"TrainingDuration":{"type":"integer","example":30,"description":"(30|60)"}},"required":["TrainerId","BookingAvailabilityId","TrainingType","TrainingDuration"]}}}},"responses":{"200":{"description":"Booking was created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Booking/BookingAvailability":{"get":{"summary":"Get a list of all distinct booking availabilites that overlaps with the provided timeperiod.","description":"This endpoint can only be invoked by a <b>Student</b>. The student can use any of the returned booking availabilities to book any trainer that is available, offers the specific training type and matches the gender (if a gender is provided).<br><b>The time span duration can not be greater than 7 days.</b>","tags":["Booking"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}},{"name":"start","description":"The start of the search interval in UTC","in":"query","required":true,"schema":{"type":"string","example":"2000-01-01T00:00Z"}},{"name":"end","description":"The end of the search interval in UTC","in":"query","required":true,"schema":{"type":"string","example":"2000-01-01T00:00Z"}},{"name":"trainingDuration","description":"The duration for the potential training session <b>(30|60)","in":"query","required":true,"schema":{"type":"integer"}},{"name":"trainingType","description":"The training type <b>(1 Hatha | 2 Ashtanga | 3 Vinyasa | 4 Freeform)","in":"query","required":true,"schema":{"type":"integer"}},{"name":"gender","description":"The gender of the trainers <b>(1 Male | 2 Female | 3 Any). Default value is Any","in":"query","required":false,"schema":{"type":"integer"}},{"name":"inclUnknownTrainers","description":"Toggles if unknown trainers should be considered when generating booking availabilities. Default value is true","in":"query","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"List of distinct booking availabilities that overlaps with the provided timeperiod.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BookingAvailability"}}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Booking/Availability":{"post":{"summary":"Creates an availability time slot for the trainer","description":"This endpoint can only be invoked by a <b>Trainer</b>","tags":["Booking"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"timeSlot":{"type":"object","properties":{"start":{"type":"string","example":"2000-01-01T00:00Z"},"end":{"type":"string","example":"2000-01-01T00:00Z"}},"required":["start","end"]}},"required":["timeSlot"]}}}},"responses":{"200":{"description":"Availability was created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"delete":{"summary":"Deletes an availability time slot","description":"This endpoint can only be invoked by a <b>Trainer</b>","tags":["Booking"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}},{"name":"availabilityId","description":"The Id of the availability","in":"query","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"Availability was deleted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"get":{"summary":"Get a list of availability time slots that overlaps with the timeperiod 'utcNow - 12 hours and forever' for a trainer.","description":"This endpoint can only be invoked by a <b>Trainer</b>","tags":["Booking"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Any availabilities that overlaps with the timeperiod 'utcNow - 12 hours and forever'.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Availability"}}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Booking/CanBook":{"get":{"summary":"Check if it's possible for a Student to book a Training Session","description":"This endpoint can only be invoked by a <b>Student</b>","tags":["Booking"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Result telling if the student can book a Training Session","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CanBook"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Payments":{"post":{"summary":"Initiate a payment","tags":["Payments"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Only one item can be purchased at a time","content":{"application/json":{"schema":{"type":"object","properties":{"items":{"type":"array","items":{"type":"string","example":"30","description":"This is the ItemId, currently 30 or 60 depending on the session length"}}},"required":["items"]}}}},"responses":{"200":{"description":"Payment has been initiated. The client must finish it using the returned secret","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}}},"400":{"description":"The request failed because of invalid input.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"403":{"description":"(800) User must verify email.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Payments/PaymentMethods":{"post":{"summary":"Initiate setup of a a payment method for a user","tags":["Payments"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Payment method was successfully attached to the user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodSetup"}}}},"400":{"description":"The request failed because of invalid input.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"get":{"summary":"Get attached payment methods for a user","tags":["Payments"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}},{"name":"type","description":"The type of the payment methods","example":"card","in":"query","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of attached payment methods for the user","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PaymentMethod"}}}}},"400":{"description":"The request failed because of invalid input.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Payments/PaymentMethods/{id}":{"delete":{"summary":"Detach the payment method from the user it's attached too","tags":["Payments"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}},{"name":"id","description":"The id of the payment method","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Payment method was successfully detached from the user"},"400":{"description":"The request failed because of invalid input.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Profile/SetPicture":{"put":{"summary":"Sets profile picture","tags":["Profile"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary"}},"required":["file"]}}}},"responses":{"204":{"description":"Profile picture was set."},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Profile/SetDescription":{"put":{"summary":"Sets profile description","tags":["Profile"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string"}},"required":["description"]}}}},"responses":{"204":{"description":"Profile description was set."},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/SessionTickets":{"get":{"summary":"Get list SessionTickets","description":"This endpoint can only be called by a <b>Student</b>.","tags":["SessionTickets"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The student's session tickets","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SessionTicket"}}}}}}}},"/SessionTickets/RedeemVoucher":{"post":{"summary":"Grants a Session Ticket to a Student","description":"This endpoint can only be called by a <b>Student</b>.","tags":["SessionTickets"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"voucherId":{"type":"string"}},"required":["voucherId"]}}}},"responses":{"200":{"description":"The session tickets granted to the student","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SessionTicket"}}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Student/Register":{"post":{"summary":"Students can register an account","tags":["Student"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"emailAddress":{"type":"string"},"password":{"type":"string","description":"The password must be 8 characters or longer."},"firstName":{"type":"string"},"lastName":{"type":"string"}},"required":["emailAddress","password","firstName","lastName"]}}}},"responses":{"201":{"description":"Student is created and an authenticated session is returned.","headers":{"Location":{"schema":{"type":"string","example":"http://example.com/v1/Student/Me"},"description":"Get info about the created account here"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSession"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Student/Me":{"get":{"summary":"Return the profile data for the current Student","tags":["Student"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The profile data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Student"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Student/Follows":{"get":{"summary":"Return a list of followed trainers","description":"Follows = trainers that the Student has recently (last 30 days) trained with.","tags":["Student"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The followed trainers","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicTrainer"}}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Subscriptions":{"post":{"description":"Subscribes the student to a subscription which will grant them X number of session tickets every 30 days","tags":["Subscriptions"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"subscriptionCode":{"type":"string","description":"subcription-a | subscription-b | subscription-c"}},"required":["subscriptionCode"]}}}},"responses":{"200":{"description":"The student's created subscription","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"get":{"description":"Returns the student's subscription","tags":["Subscriptions"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The student's subscription","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"204":{"description":"Student has no subscription"}}}},"/Subscriptions/Cancel":{"put":{"description":"Cancels the student's subsription.","tags":["Subscriptions"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Subscription was cancelled."},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Subscriptions/CanSubscribe":{"get":{"description":"Returns if the student can start a subscription or not.","tags":["Subscriptions"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The result telling if the student can subscribe.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CanSubscribe"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Subscriptions/PendingPayment":{"get":{"description":"Get the details needed to pay for the student's subscription pending payment.","tags":["Subscriptions"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The payment details. The client must finish it using the returned secret.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/System/Health":{"get":{"description":"Checks if the API is functioning correctly","tags":["System"],"responses":{"200":{"description":"Response contains a report of the health of the API and subsystems","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/System/Time":{"get":{"description":"Get the current System Time in UTC","tags":["System"],"responses":{"200":{"description":"The time in UTC","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Instant"}}}}}}},"/Trainer/Me":{"get":{"summary":"Return the profile data for the current Trainer","tags":["Trainer"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The profile data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Trainer"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Trainer/SetOnlineState":{"put":{"summary":"Trainers can change their own online state","tags":["Trainer"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"isOnline":{"type":"boolean","description":"Set the <b>trainers</b> online state to true or false"}},"required":["isOnline"]}}}},"responses":{"200":{"description":"The online state was changed successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Trainer/Availability":{"get":{"summary":"Get booking availability for the trainer that overlaps with the timeperiod 'utcNow and utcNow + 7 days'.","description":"This endpoint can only be invoked by a <b>Student</b>","tags":["Trainer"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}},{"name":"trainerId","description":"The Id of the trainer","in":"query","required":true,"schema":{"type":"string"}},{"name":"trainingDuration","description":"The duration of the training session","in":"query","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"The trainer's booking availability that overlaps with the timeperiod 'utcNow and utcNow + 7 days'.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BookingAvailability"}}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/Trainer/SetTrainingTypes":{"put":{"summary":"Sets training types that the trainer offers","description":"This endpoint can only be invoked by a <b>Trainer</b>","tags":["Trainer"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"trainingTypes":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","description":"1 (Hatha) | 2 (Ashtanga) | 3 (Vinyasa) | 4 (Freeform)"}}}}}}}}},"responses":{"200":{"description":"The trainer's training types was updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/TrainingSession/GetOpen":{"get":{"description":"This endpoint returns the information about any ongoing or expired TrainingSessions a <b>Student</b> or <b>Trainer</b> might have. If they have a TrainingSession with the expired state then they need to call cancel or complete before they can receive or send any new training requests.","tags":["TrainingSession"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The open training session","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrainingSession"}}}},"204":{"description":"Has no open training session"},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/TrainingSession/GetForStudent":{"get":{"description":"This endpoint returns all TrainingSessions a <b>Student</b> might have. If they have a TrainingSession with the expired state then they need to call cancel or complete before they can receive or send any new training requests.","tags":["TrainingSession"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The training sessions","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrainingSessionHistory"}}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/TrainingSession/GetForTrainer":{"get":{"description":"This endpoint returns all TrainingSessions a <b>Trainer</b> might have. If they have a TrainingSession with the expired state then they need to call cancel or complete before they can receive or send any new training requests.","tags":["TrainingSession"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The training sessions","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrainingSessionHistory"}}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/TrainingSession/Cancel":{"put":{"description":"This endpoint can be called by a <b>Trainer</b> or <b>Student</b> participating in a Training Session, if either cancels, neither will have access to the session anymore.","tags":["TrainingSession"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"description":"The Id of the training session","type":"string"}},"required":["id"]}}}},"responses":{"200":{"description":"The Training Session was successfully cancelled.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/TrainingSession/TrainerComplete":{"put":{"description":"This endpoint should be called by the <b>Trainer</b> participating in a Training Session. It flags the session as completed sucessfully according to the trainer.","tags":["TrainingSession"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"description":"The Id of the training session","type":"string"}},"required":["id"]}}}},"responses":{"200":{"description":"The Training session was successfully completed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/TrainingSession/StudentComplete":{"put":{"description":"This endpoint should be called by the <b>Student</b> participating in a Training Session. It flags the session as completed sucessfully according to the student, and is necessary for rating the training session.","tags":["TrainingSession"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"description":"The Id of the training session","type":"string"},"rating":{"description":"The rating of the training session. Scale 1 - 5, null = no rating.","type":"integer"}},"required":["id"]}}}},"responses":{"200":{"description":"The Training session was successfully completed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/TrainingSession/StudentRate":{"put":{"description":"This endpoint should be called by the <b>Student</b> participating in a Training Session when they want to rate a training session or update the rating of an already rated training session. Only possible to rate completed training sessions, rating a cancelled or ongoing training session will return an error.","tags":["TrainingSession"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"description":"The Id of the training session","type":"string"},"rating":{"description":"The rating of the training session. Scale 1 - 5","type":"integer"}},"required":["id","rating"]}}}},"responses":{"200":{"description":"The Training session was successfully rated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/TrainingSession/CreateFromBooking":{"post":{"summary":"Creates training session from a booking","description":"This endpoint can only be called by the <b>Trainer</b> or the <b>Student</b> being part of the Booking.","tags":["TrainingSession"],"parameters":[{"name":"sessionGUID","description":"The Id of an authenticated session","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"bookingId":{"type":"integer","description":"The Id of the booking"}},"required":["bookingId"]}}}},"responses":{"200":{"description":"A training session was successfully created from the booking.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyResponse"}}}},"400":{"description":"The request failed because of invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"401":{"description":"User is not authenticated or not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}}},"components":{"schemas":{"ApiError":{"type":"object","properties":{"Code":{"type":"string","example":"00000"},"Message":{"type":"string","example":"Something went wrong"},"ErrorCode":{"type":"integer","example":100,"nullable":true}}},"Availability":{"type":"object","properties":{"Id":{"type":"integer","example":1},"TimeSlot":{"$ref":"#/components/schemas/TimeSlot"}}},"BookingAvailability":{"type":"object","properties":{"Id":{"type":"string"},"TimeSlot":{"$ref":"#/components/schemas/TimeSlot"}}},"Booking":{"type":"object","properties":{"Id":{"type":"integer","example":"1"},"TimeSlot":{"$ref":"#/components/schemas/TimeSlot"},"TrainingType":{"type":"integer","example":1,"description":"1 (Hatha) | 2 (Ashtanga) | 3 (Vinyasa) | 4 (Freeform)"},"TrainingDuration":{"type":"integer","example":30,"description":"(30|60)"},"Participant":{"$ref":"#/components/schemas/PublicProfile"},"IsCancelled":{"type":"boolean","example":false},"IsUsed":{"type":"boolean","example":false},"StudentCancelledOn":{"type":"string","example":"2000-01-01T00:00:00.00000Z","nullable":true},"TrainerCancelledOn":{"type":"string","example":"2000-01-01T00:00:00.00000Z","nullable":true}}},"CanBook":{"type":"object","properties":{"IsPossible":{"type":"boolean","description":"Tells if booking is possible","example":true},"NotPossibleReason":{"type":"integer","description":"Null if property 'IsPossible' is true. Possible values = 1 (HasNoSessionTicket)","example":0,"nullable":true}}},"CanSubscribe":{"type":"object","properties":{"IsPossible":{"type":"boolean","description":"Tells if subscribing is possible","example":true},"NotPossibleReason":{"type":"integer","description":"Null if property 'IsPossible' is true. Possible values = 1 (HasNoValidPaymentMethod) | 2 (AlreadyHasASubscription)","example":0,"nullable":true}}},"Channel":{"type":"object","properties":{"Type":{"type":"integer","example":"1,","description":"1 (Email) | 2 (Push Notification)"},"BookingCancellationEnabled":{"type":"boolean","example":true},"BookingConfirmationEnabled":{"type":"boolean","example":true}}},"Health":{"type":"object","properties":{"YogiPeopleDBIsRunning":{"type":"boolean","example":true},"PortalDBIsRunning":{"type":"boolean","example":true},"AuthenticationDBIsRunning":{"type":"boolean","example":true}}},"Instant":{"type":"object","properties":{"Time":{"type":"string","example":"2000-01-01T00:00:00.00000Z"}}},"PaymentMethodSetup":{"type":"object","properties":{"Secret":{"type":"string"}}},"Student":{"type":"object","properties":{"Id":{"type":"string","example":"00000000-0000-0000-0000-000000000000"},"Email":{"type":"string"},"FirstName":{"type":"string"},"LastName":{"type":"string"},"ProfilePictureUrl":{"type":"string","example":"https://example.com/file.ext"},"ProfileDescription":{"type":"string","example":"a description","nullable":true},"IsEmailAddressVerified":{"type":"boolean","example":true}}},"Trainer":{"type":"object","properties":{"Id":{"type":"string","example":"00000000-0000-0000-0000-000000000000"},"Email":{"type":"string"},"FirstName":{"type":"string"},"LastName":{"type":"string"},"ProfilePictureUrl":{"type":"string","example":"https://example.com/file.ext"},"IsOnline":{"type":"boolean"},"LastOnlineOn":{"type":"string","example":"2000-01-01T00:00:00.00000Z"},"TrainingTypes":{"type":"array","items":{"type":"integer","description":"1 (Hatha) | 2 (Ashtanga) | 3 (Vinyasa) | 4 (Freeform)"}},"ProfileDescription":{"type":"string","example":"a description","nullable":true},"IsEmailAddressVerified":{"type":"boolean","example":true}}},"SessionTicket":{"type":"object"},"Subscription":{"type":"object","properties":{"SubscriptionCode":{"type":"string","description":"Small | Medium | Large"},"Status":{"type":"integer","description":"1 (Active) | 2 (PendingPayment) | 3 (Creating)"},"RenewalDate":{"type":"string","example":"2000-01-01T00:00:00.00000Z"},"IsTrial":{"type":"boolean","example":"true"}}},"TrainingSession":{"type":"object","properties":{"Id":{"type":"string","example":"00000000-0000-0000-0000-000000000000"},"Participant":{"$ref":"#/components/schemas/PublicProfile"},"State":{"type":"integer","description":"1 (Initiated) | 2 (Cancelled) | 3 (Completed) | 4 (Expired)"},"Token":{"type":"string"},"StartsOn":{"type":"string","example":"2000-01-01T00:00:00.00000Z"},"ExpiresOn":{"type":"string","example":"2000-01-01T00:00:00.00000Z"}}},"TrainingSessionHistory":{"type":"object","properties":{"Id":{"type":"string","example":"00000000-0000-0000-0000-000000000000"},"Participant":{"$ref":"#/components/schemas/PublicProfile"},"State":{"type":"integer","description":"1 (Initiated) | 2 (Cancelled) | 3 (Completed) | 4 (Expired)"},"TrainingType":{"type":"integer","description":"1 (Hatha) | 2 (Ashtanga) | 3 (Vinyasa) | 4 (Freeform)"},"Duration":{"type":"integer","example":30,"description":"(30|60)"},"Rating":{"type":"integer","description":"Rating of training session from 1 - 5, null is equivalent to no rating","example":4,"nullable":true},"StartsOn":{"type":"string","example":"2000-01-01T00:00:00.00000Z"},"ExpiresOn":{"type":"string","example":"2000-01-01T00:00:00.00000Z"}}},"UserSession":{"type":"object","properties":{"Id":{"type":"string","example":"00000000-0000-0000-0000-000000000000"},"UserId":{"type":"string","example":"00000000-0000-0000-0000-000000000000"},"DateCreated":{"type":"string","example":"2000-01-01T00:00:00.00000Z"},"DateModified":{"type":"string","example":"2000-01-01T00:00:00.00000Z"},"UserType":{"type":"integer","description":"1 (Student) | 2 (Trainer)","example":1}}},"PublicProfile":{"type":"object","properties":{"FirstName":{"type":"string","example":"John"},"LastName":{"type":"string","example":"Doe"},"ProfilePictureUrl":{"type":"string","example":"https://example.com/file.ext"},"ProfileDescription":{"type":"string","example":"a description","nullable":true}}},"PublicTrainer":{"type":"object","properties":{"Id":{"type":"string","example":"00000000-0000-0000-0000-000000000000"},"FirstName":{"type":"string","example":"John"},"LastName":{"type":"string","example":"Doe"},"ProfilePictureUrl":{"type":"string","example":"https://example.com/file.ext"},"IsOnline":{"type":"boolean","example":true},"ProfileDescription":{"type":"string","example":"a description","nullable":true},"Rating":{"type":"number","description":"average rating of trainer from 1 - 5, null is equivalent to no ratings","example":1.5,"nullable":true},"TrainingTypes":{"type":"array","items":{"type":"integer","description":"1 (Hatha) | 2 (Ashtanga) | 3 (Vinyasa) | 4 (Freeform)"}}}},"PushNotificationDevice":{"type":"object","properties":{"Token":{"type":"string","example":"abc"},"Platform":{"type":"integer","example":1,"description":"1 (Web) | 2 (Android) | 3 (iOS)"}}},"Payment":{"type":"object","properties":{"Secret":{"type":"string"}}},"PaymentMethod":{"type":"object","properties":{"Id":{"type":"string","description":"Id of payment method","example":"abc"},"Type":{"type":"string","description":"Type of the payment method","example":"card"},"BillingDetails":{"type":"object","properties":{"Name":{"type":"string","nullable":true},"Address":{"type":"object","properties":{"Line1":{"type":"string","nullable":true},"Line2":{"type":"string","nullable":true},"City":{"type":"string","nullable":true},"PostalCode":{"type":"string","nullable":true},"State":{"type":"string","nullable":true},"Country":{"type":"string","nullable":true}}}}}}},"TimeSlot":{"type":"object","properties":{"Start":{"type":"string","example":"2000-01-01T00:00:00.00000Z"},"End":{"type":"string","example":"2000-01-01T00:00:00.00000Z"}}},"EmptyResponse":{"type":"object"}}}}