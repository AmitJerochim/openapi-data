openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Transfers API'
  description: >-
    # General
    
    Bookaway B2B API give you access to all Bookaway inventory. You can use it to search, book and get the status of a specific booking.
    
    # Authentication
    
    To authenticate to Bookaway B2B API you need first to get credentials a `client_id` and a `client_secret`.
    
    Bookaway B2B API uses Oauth2 Client Credentials to perform the authentication. The Bookaway Oauth2 flow documentation is available [here](https://app.swaggerhub.com/apis-docs/Bookaway/Oauth/1.0.0).
    
    # Environments
    
    ### Sandbox
    
    The sandbox environment is used for test and development purposes. It works the same as the production environment but return slightly different data and requires to use sandbox credentials.
      The base URL for each API call is:
      
      `https://stage.bookaway.com/api/b2b/v1`
      
    ### Production
    
    Once you’re finished developing your integration with Bookaway B2B API in the sandbox environment, and after reviewing your integration with Bookaway, you’ll be given production credentials.
      The base URL for each API call in production is:
      
    `https://www.bookaway.com/api/b2b/v1`
    
  
    
    # Workflow
    
    ### 1. Static API
    
    You need first to retrieve the different destinations and transfers information that Bookaway offers. The destinations are available as JSON file. We recommand run an update on a weekly basis.

      They’re composed of 5 types of entities:

      * **Stations**: Pickup/Dropoff point with specific coordinate
      * **Cities**: List of available destinations
      * **Routes**: 
        
        * A route is a way to go from a station A to a station B. Example: Bangkok to Pattaya
      
        * A route is defined by a direction, Cusco to Machu Picchu is a route and Machu Picchu to Cusco is another route.
        
        * On a specific route there can be different types of transfers: train, bus, ferry, private car, etc…
      * **Transfers**: A transfer is a bus/train/ferry operated on a specific route. Each transfer has a operator
      * **Operators**: List of available operators.
      
    Static API returns thousands of results, you should never send live requests but instead download `stations.json`, `cities.json`, `routes.json` , `transfers.json` and `operators.json` files on a daily basis and cache them in your system.
    
    
    ### 2. Trips API
    
      Let you search through all trips available in Bookaway B2B API.
      
      You can also look at a specific Trip.
      
      
      
    ### 3. Bookings API
    
      Let you book a specific Trip.
      
      Let you see the status of a specific booking. 
      
      Let you cancel a specific booking.
      
    ### 4. Post Bookings WebHooks
  
      Booking updates can be retrieved by getting booking status - from Booking API, or by a webhook notification which will notify about booking updated.
      
      All webhooks will be delivered to the same endpoint which should response with a HTTP 200 status.
      
      The webhooks can be differentiated by `type` field
      
      All webhooks will use HTTP **POST**
    
      **Please note:**
      
      The paths stated below are only used to make the documentation clearer to read and navigate. Nothing should follow the '/' in the path.
      
      for example `https://webhook-endpoint/approved` will be sent to your webhook url without the `/approved` safix
        contact:
    name: omer chehmer
        contact:
    email: omer@bookaway.com
      
      
security: 
  - bearerAuth: []      
paths:
  /cities:
    parameters:
      - $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/parameters/bearerToken"
    get:
      tags: 
        - Static API
      description: Returns a json file containing all available cities
      responses:
        200:
          description: Array of stations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/City"
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
  /stations:
    parameters:
      - $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/parameters/bearerToken"
    get:
      tags: 
        - Static API
      description: Returns a json file containing all available stations, including their address and geo coordinates
      responses:
        200:
          description: Array of stations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Station"
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
  /operators:
    parameters:
      - $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/parameters/bearerToken"
    get:
      tags: 
        - Static API
      description: Returns a json file containing all available operators
      responses:
        200:
          description: Array of operators
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Operator"
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
  
  /routes:
    parameters:
      - $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/parameters/bearerToken"
    get:
      tags: 
        - Static API
      description: Returns a json file containing all available routes between stations.
      responses:
        200:
          description: Array of routes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Route"       
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
  /transfers:
    parameters:
      - $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/parameters/bearerToken"
    get:
      tags: 
        - Static API
      description: |-
        Return a json file containing all the available transfers with all their static information - images, description, amenities, ect.

        Please note that some transfers also has extras and additional passenger information  which  require to provide in the booking request.
      responses:
        200:
          description: Array of transfers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transfer"
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
  /trips:
    parameters:
      - $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/parameters/bearerToken"
    get:
      tags: 
        - Trips API
      description: Search available trips between 2 stations and for a specific date.
      parameters:
      - name: authorization
        in: header
        description: an authorization header as "Bearer xxxxxxxxxxxxxx"
        required: true
        schema: 
          type: string
      - in: query
        name: departureStation
        description: "list of departure station ids, seperete by comma (,)"
        required: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      - in: query
        name: arrivalStation
        description: "list of arrival station ids, seperete by comma (,)"
        schema: 
          type: array
          items:
            type: string
            format: uuid
        required: true
      - in: query
        name: departure
        description: 'the required date in format: "YYYY-MM-DD"'
        schema: 
          type: string
        required: true
      - in: query
        name: passengers
        description: 'amount of passengers [1..15], if not supplied, calculated attributes will assume single passenger'
        required: false
        schema:
          type: number
          minimum: 1
          maximum: 15
      - in: query
        name: limit
        description: 'limit the number of results. default is 100, maximum allowed is 1000'
        required: false
        schema:
          type: number
          minimum: 1
          maximum: 1000
      - in: query
        name: offset
        description: 'result offset. default is zero.'
        required: false
        schema:
          type: number
          minimum: 0
      responses:
        200:
          description: Array of Trips
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Trip"
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
  /trips/{id}:
    parameters:
      - $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/parameters/bearerToken"
    get:
      tags: 
        - Trips API
      description: Look at a specific trip
      parameters:
      - name: authorization
        in: header
        description: an authorization header as "Bearer xxxxxxxxxxxxxx"
        required: true
        schema: 
          type: string
      - name: id
        in: path
        description: "id of the Trip"
        required: true
        schema: 
          type: string
          format: uuid
          example: "5ac337d1e575a8b638046a0f"
      - in: query
        name: passengers
        description: 'amount of passengers [1..15], if not supplied, calculated attributes will assume single passenger'
        required: false
        schema:
          type: number
          minimum: 1
          maximum: 15
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: 404
                  message:
                    type: string
                    example: The trip with id "{id}" does not exist.
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
  /bookings:
    parameters:
      - $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/parameters/bearerToken"
      - name: tripId
        in: path
        description: "id of the trip"
        required: true
        schema: 
          type: string
          format: uuid
          example: "5ac337d1e575a8b638046a0f"
      - in: query
        name: passengers
        description: 'list of passengers. In case of private, need to provide only the main passenger'
        required: true
        schema:
          type: object
          format: uuid
      - in: query
        name: firstName
        description: 'passenger first name'
        required: true
        schema:
          type: string
          format: uuid
          example: "Joe"    
      - in: query
        name: lastName
        description: 'passenger last name'
        required: true
        schema:
          type: string
          format: uuid
          example: "Dou"  
      - in: query
        name: extraInfos
        description: 'passenger addtional information, Exmple: gender, age, nationality, ect.. <br> This information can be found in Tarnsfers api'
        required: false
        schema:
          type: string
          format: uuid
      - in: query
        name: contact
        description: 'The main passenger contact details'
        required: true
        schema:
          type: string
          format: uuid
      - in: query
        name: extraOptions
        description: 'The extras available for the trasnfers and can be found in the tansfers API. Extars can be mandatory or optional. Please note extras might have addional fee'
        required: false
        schema:
          type: string
          format: uuid   
        
    post:
      tags: 
        - Bookings API
      description: Book a specific Trip
      requestBody:
        $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/requestBodies/BookingRequest"
              
      responses:
        200:
          description: Booking
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'

  /bookings/{id}/pay:
    post:
      tags: 
        - Bookings API
      description: Call this API after creating a booking. A booking can be approved only after this API is called.
      parameters: 
        - name: id
          in: path
          description: "Id of the booking as was returned by the create booking API"
          required: true
          schema: 
            type: string
            format: uuid
            example: "5e775cdc21551cbd7b01432b"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: 404
                  message:
                    type: string
                    example: The booking with id "{id}" does not exist.

  /bookings/{id}:
    get:
      tags: 
        - Bookings API
      description: View a booking by id
      parameters: 
        - name: id
          in: path
          description: "Id of the Booking"
          required: true
          schema: 
            type: string
            format: uuid
            example: "5e775cdc21551cbd7b01432b"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: 404
                  message:
                    type: string
                    example: The booking with id "{id}" does not exist.
  /bookings/{id}/cancel:
    post:
      tags: 
        - Bookings API
      description: Cancel a booking by id
      parameters: 
        - name: id
          in: path
          description: "Id of the booking, please verify cancellation policy for this transfer before. "
          required: true
          schema: 
            type: string
            format: uuid
            example: "5e775cdc21551cbd7b01432b"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cancellationReason:
                  description: Cancellation reason free text
                  type: string
                  example: "Health reasons"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: 404
                  message:
                    type: string
                    example: The booking with id "{id}" does not exist.
                    
  /approved:
    post:
      tags: 
        - Webhooks
      description: Webhook to notify a booking has been approved
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: 'approved'
                booking:
                  $ref: "#/components/schemas/Booking"
                  
      responses:
        200:
          description: Success
          
  /cancelled:
    post:
      tags: 
        - Webhooks
      description: Webhook to notify a booking has been cancelled
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: 'cancelled'
                booking:
                  $ref: "#/components/schemas/Booking"
                  
      responses:
        200:
          description: Success
          
  /updated:
    post:
      tags: 
        - Webhooks
      description: Webhook to notify a booking has been updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: 'updated'
                oldBooking:
                  $ref: "#/components/schemas/Booking"
                booking:
                  $ref: "#/components/schemas/Booking"
                  
      responses:
        200:
          description: Success
  
  /credits:
    post:
      tags: 
        - Credits API
      description: Get credits balance
      responses:
        200:
          description: Object containing remining credits
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: string
                    example: 100
                  currency:
                    type: string
                    example: 'USD'
        401:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/UnauthorizedError'
        403:
          $ref: 'https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/responses/ForbiddenError'
          
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  # securitySchemes:
  #   oauth2ClientCredentials:
  #     type: oauth2
  #     flows:
  #       clientCredentials:
  #         tokenUrl: /oauth/token
  #         scopes: {}
  #     # $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/securitySchemes/oauth2ClientCredentials"
  schemas:
    City:
      $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/schemas/City"
    Route:
      $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/schemas/Route"
    Station:
      $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/schemas/Station"
    Operator:
      $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/schemas/Operator"
    Transfer:
      $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/schemas/Transfer"
    Trip:
      $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/schemas/Trip"
    Booking:
     $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/schemas/Booking"
  
  requestBodies:
    BookingRequest:
      description: Book a specific trip
      required: true
      content:
        application/json:
          schema:
            $ref: "https://api.swaggerhub.com/domains/Bookaway/Inventory/1.0.0#/components/requestBodies/BookingRequest"
    
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Bookaway/B2B/1.0.0
  - description: Bookaway Sandbox
    url: https://stage.bookaway.com/api/b2b/v1
  - description: Bookaway Production
    url: https://www.bookaway.com/api/b2b/v1
