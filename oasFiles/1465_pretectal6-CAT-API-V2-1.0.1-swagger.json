{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Salesforce Billing and Payments Integration.",
    "version" : "1.0.1",
    "title" : "Billing and Accounting Client - Consumer Accounting and Trust",
    "termsOfService" : ""
  },
  "servers" : [ {
    "url" : "https://app.swaggerhub.com/apis/pretectal6/CAT-API-V2/1.0.1"
  } ],
  "tags" : [ {
    "name" : "Authentication",
    "description" : "Authentication.",
    "externalDocs" : {
      "description" : "See more at",
      "url" : "https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/intro_understanding_username_password_oauth_flow.htm"
    }
  }, {
    "name" : "Clients",
    "description" : "Manage Consumer Clients for your Company."
  }, {
    "name" : "Creditors",
    "description" : "Manage recipients of creditor payments and Creditor details."
  }, {
    "name" : "Payment Methods",
    "description" : "Manage Payment Methods for funding a clients special purpose accounts"
  }, {
    "name" : "Documents",
    "description" : "Generate documents or upload completed"
  }, {
    "name" : "Drafts",
    "description" : "Create a draft transaction on the primary payment method"
  }, {
    "name" : "Fees",
    "description" : "Add fee types or request fees for a payment"
  }, {
    "name" : "Payments",
    "description" : "Payment Transactions"
  }, {
    "name" : "Refunds",
    "description" : "Reverse a processed payment and check status]"
  }, {
    "name" : "Reports",
    "description" : "Report on transactional data"
  } ],
  "paths" : {
    "/services/oauth2/token" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Get access token",
        "description" : "Returns an access token, instance url, id, token type, issued at, and signature.  Use the access token!  Use the instance url if needed. Follow up the guideline to setup Connected Apps https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/intro_defining_remote_access_applications.htm",
        "parameters" : [ {
          "name" : "grant_type",
          "in" : "path",
          "description" : "Type of grant, use password",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "client_id",
          "in" : "path",
          "description" : "Client id of the connected app.  The connected app is in Salesforce.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "client_secret",
          "in" : "path",
          "description" : "Client secret of the connected app.  The connected app is in Salesforce.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "Username of the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "path",
          "description" : "Password of the user.  The password must be followed by the users security token, which is only emailed to the user after sign up or resetting it!",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "access_token" : {
                      "type" : "string"
                    },
                    "instance_url" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "token_type" : {
                      "type" : "string"
                    },
                    "issued_at" : {
                      "type" : "string"
                    },
                    "signature" : {
                      "type" : "string"
                    }
                  },
                  "example" : {
                    "access_token" : "88D8k8888888gUD!AR8AQHule8mVqRmC8lkSbnPtqOcqw8nfhDcoLrSno8HA88h8NFW8QSBKEbUe8bxYRv8zoiUmonByyGg8Bg8M8iNIAo8.88Zs",
                    "instance_url" : "https://***yourInstance***.salesforce.com/",
                    "id" : "https://login.salesforce.com/id/00Dx0000000BV7z/005x00000012Q9P",
                    "token_type" : "Bearer",
                    "issued_at" : "8882827623888",
                    "signature" : "eaA/UfJ+wmiyuIEXmn88UoukFRdXZpoV8HPTLRb8a/w="
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FailGetToken"
                }
              }
            }
          },
          "401" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionExpired"
                }
              }
            }
          }
        }
      }
    },
    "/clients/" : {
      "post" : {
        "tags" : [ "Clients" ],
        "summary" : "Create client record",
        "requestBody" : {
          "description" : "Client object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Client"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/ClientResponse"
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of client to be returned",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/ClientResponse"
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Clients" ],
        "summary" : "Update client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the AMP client record to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Client object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Client"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/ClientResponse"
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/cancel" : {
      "post" : {
        "tags" : [ "Clients" ],
        "summary" : "Cancel client enrollment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "client id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reason_id",
          "in" : "query",
          "description" : "Reason of cancellation",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/pause" : {
      "post" : {
        "tags" : [ "Clients" ],
        "summary" : "Pause client enrollment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "client id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/ClientResponse"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/resume" : {
      "post" : {
        "tags" : [ "Clients" ],
        "summary" : "Resumes client enrollment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "client id",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Client"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/request-release" : {
      "post" : {
        "tags" : [ "Clients" ],
        "summary" : "Request a hold release on a client",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "client id",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Request Body",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "reply_to_email" : {
                    "type" : "string",
                    "description" : "Request Release",
                    "example" : "someeone@mail.com"
                  },
                  "notes" : {
                    "type" : "string",
                    "description" : "Request Release",
                    "example" : "Docs uploaded, please release hold"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Client"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/upload-document" : {
      "post" : {
        "tags" : [ "Clients" ],
        "summary" : "Attaches a AMP document to client file",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "client id",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Client Document object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Client"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Client"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/get-documents" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Gets listing of documents on a client file",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "client id",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Client"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/get-documents/{doc_id}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Retrieve a document",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "client id",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "doc_id",
          "in" : "path",
          "description" : "document id",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Client"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/co-applicant" : {
      "put" : {
        "tags" : [ "Clients" ],
        "summary" : "Updates a co-applicant in AMP",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "client id",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/Client"
          },
          "400" : {
            "description" : "Invalid Client ID specified",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Clients" ],
        "summary" : "Creates a Co-Applicant",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "client id",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/Client"
          },
          "400" : {
            "description" : "Invalid Client ID specified",
            "content" : { }
          }
        }
      }
    },
    "/creditors/" : {
      "get" : {
        "tags" : [ "Creditors" ],
        "summary" : "Gets all creditors",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "rows" : {
                          "type" : "string",
                          "description" : "Get All Creditor",
                          "example" : "10"
                        }
                      },
                      "description" : "Get All Creditor"
                    },
                    "response" : {
                      "type" : "array",
                      "description" : "Get All Creditor",
                      "items" : {
                        "$ref" : "#/components/schemas/Creditor"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Creditors" ],
        "summary" : "Creates a AMP creditor",
        "requestBody" : {
          "description" : "Creditor object",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Create Creditor"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/CreditorInfo"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/creditors/{id}/address" : {
      "post" : {
        "tags" : [ "Creditors" ],
        "summary" : "Creates a AMP creditor address",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "creditor id",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Creditor address object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreditorAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/CreditorAddress"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/payment-method/" : {
      "post" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "Add a payment-method to client record",
        "description" : "add a payment-method to a client as the primary account. Requires authorization to activate",
        "requestBody" : {
          "description" : "payment-method object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentMethod"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/PaymentMethod"
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/payment-method/{id}" : {
      "get" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "Get a payment account for client record",
        "description" : "Retrieve the account to be debited for funding AMP custodial account.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Valid clientId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/schemas/PaymentMethod"
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/documents/generate/{doc_key}" : {
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "Generates Document Based on Lookup Key",
        "parameters" : [ {
          "name" : "doc_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Document document object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentTemplate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/documents/addPaymentAccountAuthorization/" : {
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "Ativates account for draft",
        "requestBody" : {
          "description" : "RR object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationDocumentUpload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/drafts/batch/" : {
      "post" : {
        "tags" : [ "Drafts" ],
        "summary" : "Adds multiple debit entries to client records",
        "requestBody" : {
          "description" : "Draft object",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DraftBatch"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "rows" : {
                          "type" : "string",
                          "description" : "Create Batch of Drafts",
                          "example" : "10"
                        }
                      },
                      "description" : "Create Batch of Drafts"
                    },
                    "response" : {
                      "type" : "array",
                      "description" : "Create Batch of Drafts",
                      "items" : {
                        "$ref" : "#/components/schemas/DraftBatch"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/drafts/" : {
      "post" : {
        "tags" : [ "Drafts" ],
        "summary" : "Adds a single debit entry to client record",
        "requestBody" : {
          "description" : "Draft object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Draft"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/DraftResponse"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/drafts/{id}" : {
      "get" : {
        "tags" : [ "Drafts" ],
        "summary" : "Gets a debit entry to client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of debit record to be returned",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/DraftResponse"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Drafts" ],
        "summary" : "Updates a debit entry to client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the debit entry",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Draft object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Draft"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/DraftResponse"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Drafts" ],
        "summary" : "Deletes an unprocessed client debit entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the debit entry",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/drafts/{id}/cancel" : {
      "post" : {
        "tags" : [ "Drafts" ],
        "summary" : "Cancels an unprocessed client debit entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the debit entry",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/drafts/{id}/activate" : {
      "post" : {
        "tags" : [ "Drafts" ],
        "summary" : "Activates a debit entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of debit record to activate",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/drafts/{id}/deactivate" : {
      "post" : {
        "tags" : [ "Drafts" ],
        "summary" : "Deactivates a debit entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of debit record to deactivate",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/fees/{id}" : {
      "get" : {
        "tags" : [ "Fees" ],
        "summary" : "Gets a fee entry to client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of fee record to be returned",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/Fee"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Fees" ],
        "summary" : "Updates a fee entry to client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the fee entry",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Fee object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Fee"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/Fee"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/fees/ach-credit-fee" : {
      "post" : {
        "tags" : [ "Fees" ],
        "summary" : "Adds an ACH credit fee entry to client record",
        "requestBody" : {
          "description" : "Fee object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Fee"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/Fee"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/fees/{id}/activate" : {
      "post" : {
        "tags" : [ "Fees" ],
        "summary" : "Activates a fee entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of fee record to activate",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/fees/{id}/deactivate" : {
      "post" : {
        "tags" : [ "Fees" ],
        "summary" : "Deactivates a fee entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of fee record to deactivate",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/fees/{id}/cancel" : {
      "post" : {
        "tags" : [ "Fees" ],
        "summary" : "Cancels an unprocessed fee payment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the fee entry",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Gets a payment entry to client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of payment record to be returned",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/Fee"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Payments" ],
        "summary" : "Updates a payment entry to client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the payment entry",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Payment object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Payment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/Payment"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}/activate" : {
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Activates a payment entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of payment record to activate",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}/deactivate" : {
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Deactivates a payment entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of payment record to deactivate",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}/cancel" : {
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Cancels an unprocessed settlement payment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the payment entry",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/refunds/{id}" : {
      "get" : {
        "tags" : [ "Refunds" ],
        "summary" : "Gets a refund entry to client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of refund record to be returned",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/Refund"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Refunds" ],
        "summary" : "Updates a refund entry to client record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the refund entry",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Refund object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Refund"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/Refund"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/refunds/" : {
      "post" : {
        "tags" : [ "Refunds" ],
        "summary" : "Adds a refund entry to client record",
        "requestBody" : {
          "description" : "Refund object",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Refund"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "$ref" : "#/components/schemas/Refund"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/refunds/{id}/activate" : {
      "post" : {
        "tags" : [ "Refunds" ],
        "summary" : "Activates a refund entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of refund record to activate",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/refunds/{id}/deactivate" : {
      "post" : {
        "tags" : [ "Refunds" ],
        "summary" : "Deactivates a refund entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of refund record to deactivate",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/refunds/{id}/cancel" : {
      "post" : {
        "tags" : [ "Refunds" ],
        "summary" : "Cancels an unprocessed refund payment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the fee entry",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "response" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/reports/transactions" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Gets transactions based on search criteria",
        "requestBody" : {
          "description" : "Transactions search object",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "client_id" : {
                    "type" : "object",
                    "properties" : {
                      "values" : {
                        "type" : "array",
                        "items" : {
                          "type" : "integer",
                          "example" : 123
                        }
                      }
                    }
                  },
                  "payee_id" : {
                    "type" : "object",
                    "properties" : {
                      "values" : {
                        "type" : "array",
                        "items" : {
                          "type" : "integer",
                          "example" : 123
                        }
                      }
                    }
                  },
                  "transaction_type" : {
                    "type" : "object",
                    "properties" : {
                      "values" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "example" : "Draft"
                        }
                      }
                    }
                  },
                  "created_at" : {
                    "type" : "object",
                    "properties" : {
                      "start" : {
                        "type" : "string",
                        "example" : "2018-01-01"
                      },
                      "end" : {
                        "type" : "string",
                        "example" : "2018-01-10"
                      }
                    }
                  },
                  "process_date" : {
                    "type" : "object",
                    "properties" : {
                      "start" : {
                        "type" : "string",
                        "example" : "2018-01-01"
                      },
                      "end" : {
                        "type" : "string",
                        "example" : "2018-01-10"
                      }
                    }
                  },
                  "cleared_date" : {
                    "type" : "object",
                    "properties" : {
                      "start" : {
                        "type" : "string",
                        "example" : "2018-01-01"
                      },
                      "end" : {
                        "type" : "string",
                        "example" : "2018-01-10"
                      }
                    }
                  },
                  "returned_date" : {
                    "type" : "object",
                    "properties" : {
                      "start" : {
                        "type" : "string",
                        "example" : "2018-01-01"
                      },
                      "end" : {
                        "type" : "string",
                        "example" : "2018-01-10"
                      }
                    }
                  },
                  "transaction_status" : {
                    "type" : "object",
                    "properties" : {
                      "values" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "example" : "Cleared"
                        }
                      }
                    }
                  },
                  "_offset" : {
                    "type" : "integer",
                    "example" : 0
                  },
                  "_limit" : {
                    "type" : "integer",
                    "example" : 100
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "rows" : {
                          "type" : "string",
                          "example" : "10"
                        }
                      }
                    },
                    "response" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Transaction"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "PaymentMethod" : {
        "type" : "object",
        "properties" : {
          "Active" : {
            "type" : "boolean",
            "example" : true
          },
          "AutoPay" : {
            "type" : "boolean",
            "example" : true
          },
          "BankAccountName" : {
            "type" : "string",
            "description" : "Bank Account Name",
            "example" : "Wells Fargo"
          },
          "BankAccountNumber" : {
            "type" : "string",
            "example" : 1231223123
          },
          "BankAccountType" : {
            "type" : "string",
            "example" : "Checking"
          },
          "BankRoutingCode" : {
            "type" : "string",
            "example" : "123123123"
          },
          "CVV" : {
            "type" : "string",
            "example" : "123"
          },
          "CardLastFour" : {
            "type" : "string",
            "example" : "1234"
          },
          "CardExpirationYear" : {
            "type" : "string",
            "example" : "2020"
          },
          "CardNumber" : {
            "type" : "string",
            "example" : "4242424242424242"
          },
          "CardType" : {
            "type" : "string",
            "example" : "Visa"
          },
          "CardExpirationMonth" : {
            "type" : "string",
            "example" : "01"
          },
          "BillingCity" : {
            "type" : "string",
            "example" : "Nashville"
          },
          "BillingEmail" : {
            "type" : "string",
            "example" : "me@gmail.com"
          },
          "BillingFirstName" : {
            "type" : "string",
            "example" : "John"
          },
          "BillingLastName" : {
            "type" : "string",
            "example" : "smith"
          },
          "Nameoncard" : {
            "type" : "string",
            "example" : "Donald Trump"
          },
          "PaymentType" : {
            "type" : "string",
            "example" : "ACH"
          },
          "BillingPhone" : {
            "type" : "string",
            "example" : "9169914242"
          },
          "BillingZipPostal" : {
            "type" : "string",
            "example" : "95762"
          },
          "BillingStateProvince" : {
            "type" : "string",
            "example" : "CA"
          },
          "BillingStreet" : {
            "type" : "string",
            "example" : "123 Any Way"
          },
          "StreetAddress2" : {
            "type" : "string",
            "example" : "Suite 290"
          }
        }
      },
      "Payment" : {
        "type" : "object",
        "properties" : {
          "AccountName" : {
            "type" : "string",
            "example" : "John Smith"
          },
          "Amount" : {
            "type" : "string",
            "example" : "100"
          },
          "AuthID" : {
            "type" : "string",
            "example" : "a0Y6g000000UKcVEAW"
          },
          "AuthStatus" : {
            "type" : "string",
            "description" : "Review status of authorization document",
            "example" : "Awaiting submission"
          },
          "BillingZipPostal" : {
            "type" : "string",
            "example" : "95762"
          },
          "BillingStateProvince" : {
            "type" : "string",
            "example" : "CA"
          },
          "BillingStreet" : {
            "type" : "string",
            "example" : "123 Any Way"
          },
          "StreetAddress2" : {
            "type" : "string",
            "example" : "Suite 290"
          },
          "BillingCity" : {
            "type" : "string",
            "example" : "Nashville"
          },
          "CardType" : {
            "type" : "string",
            "example" : "Visa"
          },
          "ExternalID" : {
            "type" : "string",
            "example" : "ASDF-12-SXFDX"
          },
          "Due_Date" : {
            "type" : "string",
            "example" : "2019-12-01"
          },
          "BillingEmail" : {
            "type" : "string",
            "example" : "me@gmail.com"
          },
          "Frequency" : {
            "type" : "string",
            "example" : "Monthly"
          },
          "BillingFirstName" : {
            "type" : "string",
            "example" : "John"
          },
          "BillingLastName" : {
            "type" : "string",
            "example" : "smith"
          },
          "PaymentDate" : {
            "type" : "string",
            "example" : "2019-12-01"
          },
          "PaymentStage" : {
            "type" : "string",
            "example" : "Awaiting submission"
          },
          "PaymentSchedule" : {
            "type" : "string",
            "example" : "a0Z6g000000iIJnEAM"
          },
          "ProcessDate" : {
            "type" : "string",
            "example" : "2019-12-01"
          },
          "TotalRefunded" : {
            "type" : "string",
            "example" : "0"
          },
          "CreatedDate" : {
            "type" : "string",
            "example" : "2019-12-02T01:03:23.000+0000"
          },
          "CreditorID" : {
            "type" : "string",
            "example" : "CR-0002"
          },
          "AccountID" : {
            "type" : "string",
            "example" : "CL-0001"
          },
          "EffectiveDate" : {
            "type" : "string",
            "example" : "2020-12-01"
          },
          "CreditorAccountNumber" : {
            "type" : "string",
            "example" : "1231231232"
          },
          "CheckNumber" : {
            "type" : "string",
            "example" : "123123123"
          },
          "TransactionID" : {
            "type" : "string",
            "example" : "T-0001"
          }
        }
      },
      "Transaction" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Transaction ID",
            "type" : "integer",
            "readOnly" : true
          },
          "linked_to" : {
            "title" : "Linked To ID",
            "type" : "integer",
            "readOnly" : true
          },
          "created_at" : {
            "title" : "Created At",
            "type" : "string"
          },
          "active" : {
            "title" : "Is Active",
            "type" : "boolean",
            "readOnly" : true
          },
          "client_id" : {
            "title" : "Client ID",
            "type" : "integer"
          },
          "transaction_type" : {
            "title" : "Transaction Type",
            "type" : "string"
          },
          "sub_type" : {
            "title" : "Transaction Sub Type",
            "type" : "string",
            "readOnly" : true
          },
          "amount" : {
            "title" : "Amount",
            "type" : "number",
            "format" : "double",
            "readOnly" : true
          },
          "transaction_status" : {
            "title" : "Transaction Status",
            "type" : "string"
          },
          "process_date" : {
            "title" : "Process Date",
            "type" : "string"
          },
          "cleared_date" : {
            "title" : "Cleared Date",
            "type" : "string"
          },
          "returned_date" : {
            "title" : "Returned Date",
            "type" : "string"
          },
          "return_code" : {
            "title" : "Return Code",
            "type" : "string",
            "readOnly" : true
          },
          "payee_id" : {
            "title" : "Payee ID",
            "type" : "integer"
          },
          "response" : {
            "title" : "Response",
            "type" : "string",
            "readOnly" : true
          },
          "additional" : {
            "title" : "Additional",
            "type" : "string",
            "readOnly" : true
          },
          "completed" : {
            "title" : "Is Completed",
            "type" : "boolean",
            "readOnly" : true
          },
          "memo" : {
            "title" : "Transaction Description",
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "AuthorizationDocumentUpload" : {
        "type" : "object",
        "required" : [ "firstname", "lastname", "address", "city", "state", "zip", "phone", "dob", "ssn", "document_data", "filename", "document_type" ],
        "properties" : {
          "id" : {
            "title" : "Document ID",
            "type" : "integer",
            "readOnly" : true
          },
          "document_type" : {
            "title" : "Document Type",
            "type" : "string",
            "example" : "Authorization to Debit"
          },
          "filename" : {
            "title" : "Filename",
            "type" : "string",
            "example" : "myfile.pdf"
          },
          "document_data" : {
            "title" : "Document Data (Base64Encoded)",
            "type" : "string",
            "example" : "base64 encoded file contents"
          },
          "description" : {
            "title" : "Description",
            "type" : "string"
          },
          "external_id" : {
            "title" : "Client ID",
            "type" : "integer",
            "readOnly" : true
          },
          "AuthID" : {
            "type" : "string",
            "example" : "a0Y6g000000UKcVEAW",
            "readOnly" : true
          },
          "BillingZipPostal" : {
            "type" : "string",
            "example" : "95762"
          },
          "BillingStateProvince" : {
            "type" : "string",
            "example" : "CA"
          },
          "BillingStreet" : {
            "type" : "string",
            "example" : "123 Any Way"
          },
          "StreetAddress2" : {
            "type" : "string",
            "example" : "Suite 290"
          },
          "BillingCity" : {
            "type" : "string",
            "example" : "Nashville"
          },
          "CardType" : {
            "type" : "string",
            "example" : "Visa"
          },
          "ExternalID" : {
            "type" : "string",
            "example" : "ASDF-12-SXFDX"
          },
          "BillingEmail" : {
            "type" : "string",
            "example" : "me@gmail.com"
          },
          "BillingFirstName" : {
            "type" : "string",
            "example" : "John"
          },
          "PaymentRouteSelected" : {
            "type" : "string",
            "example" : "Direct Debit"
          },
          "DOB" : {
            "type" : "string",
            "example" : "1982-01-01"
          },
          "SSN" : {
            "type" : "string",
            "example" : "123121234"
          },
          "Status" : {
            "type" : "string",
            "example" : "Awaiting submission"
          },
          "StatusDescription" : {
            "type" : "string",
            "example" : "Pending Review"
          },
          "Payments" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Payment"
            }
          }
        }
      },
      "DocumentTemplate" : {
        "type" : "object",
        "required" : [ "firstname", "lastname", "address", "city", "state", "zip", "phone", "date_of_birth", "ssn" ],
        "properties" : {
          "client_id" : {
            "title" : "Client ID",
            "type" : "string",
            "example" : "CLT-0001"
          },
          "BillingFirstName" : {
            "title" : "First Name",
            "type" : "string"
          },
          "BillingMiddleName" : {
            "title" : "Middle Name",
            "type" : "string"
          },
          "BillingLastName" : {
            "title" : "Last Name",
            "type" : "string"
          },
          "SSN" : {
            "title" : "SSN",
            "type" : "string"
          },
          "DOB" : {
            "title" : "Date of Birth",
            "type" : "string"
          },
          "co_firstname" : {
            "title" : "Co-App First Name",
            "type" : "string"
          },
          "co_middlename" : {
            "title" : "Co-App Middle Name",
            "type" : "string"
          },
          "co_lastname" : {
            "title" : "Co-App Last Name",
            "type" : "string"
          },
          "co_ssn" : {
            "title" : "Co-App SSN",
            "type" : "string"
          },
          "co_DOB" : {
            "title" : "Co-App Date of Birth",
            "type" : "string"
          },
          "BillingStreet" : {
            "title" : "Address",
            "type" : "string"
          },
          "BillingStreet2" : {
            "title" : "Address 2",
            "type" : "string"
          },
          "BillingCity" : {
            "title" : "City",
            "type" : "string"
          },
          "BillingStateProvince" : {
            "title" : "State",
            "type" : "string"
          },
          "BillingZipPostal" : {
            "title" : "Zip",
            "type" : "string"
          },
          "Phone" : {
            "title" : "Phone",
            "type" : "string"
          },
          "AltPhone" : {
            "title" : "Alt Phone",
            "type" : "string"
          },
          "Email" : {
            "title" : "Email",
            "type" : "string"
          },
          "AgentName" : {
            "title" : "Agent/Provider",
            "type" : "string"
          },
          "BankName" : {
            "title" : "Bank Name",
            "type" : "string"
          },
          "BankAccountName" : {
            "title" : "Bank Account Name",
            "type" : "string"
          },
          "BankAccountNumber" : {
            "title" : "Bank Account Number",
            "type" : "string"
          },
          "BankRoutingCode" : {
            "title" : "Bank Routing Number",
            "type" : "string"
          },
          "BankAccountType" : {
            "title" : "Bank Account Type",
            "type" : "string"
          },
          "BankAddress" : {
            "title" : "Bank Address",
            "type" : "string"
          },
          "BankState" : {
            "title" : "Bank State",
            "type" : "string"
          },
          "BankZip" : {
            "title" : "Bank Zip",
            "type" : "string"
          },
          "AuthAmount" : {
            "title" : "Recurring Amount",
            "type" : "string"
          },
          "AuthDate" : {
            "title" : "Recurring Date",
            "type" : "string"
          },
          "DebitAmount" : {
            "title" : "Debit Amount",
            "type" : "string"
          },
          "DebitDate" : {
            "title" : "Debit Date",
            "type" : "string"
          }
        }
      },
      "Draft" : {
        "type" : "object",
        "required" : [ "ClientID", "ProcessDate", "Amount", "Memo" ],
        "properties" : {
          "id" : {
            "title" : "Draft ID",
            "type" : "string",
            "readOnly" : true
          },
          "Created" : {
            "title" : "Created",
            "type" : "string",
            "readOnly" : true
          },
          "ClientID" : {
            "title" : "Client ID",
            "type" : "integer"
          },
          "TransactionType" : {
            "title" : "Transaction Type",
            "type" : "string",
            "readOnly" : true
          },
          "Amount" : {
            "title" : "Amount",
            "type" : "number",
            "format" : "double"
          },
          "ProcessDate" : {
            "title" : "Process Date",
            "type" : "string"
          },
          "ReturbedDate" : {
            "title" : "Returned Date",
            "type" : "string",
            "readOnly" : true
          },
          "ClearedDate" : {
            "title" : "Cleared Date",
            "type" : "string",
            "readOnly" : true
          },
          "ReturnCode" : {
            "title" : "ACH Return Code",
            "type" : "string",
            "readOnly" : true
          },
          "TransactionStatus" : {
            "title" : "Transaction Status",
            "type" : "string",
            "readOnly" : true
          },
          "Active" : {
            "title" : "Is Active",
            "type" : "boolean",
            "readOnly" : true
          },
          "Completed" : {
            "title" : "Has Processed",
            "type" : "boolean",
            "readOnly" : true
          },
          "Memo" : {
            "title" : "Draft Description",
            "type" : "string"
          }
        }
      },
      "DraftBatch" : {
        "type" : "object",
        "required" : [ "SourceSystemID", "ClientID", "ProcessDate", "Amount", "Memo" ],
        "properties" : {
          "id" : {
            "title" : "Draft ID",
            "type" : "string",
            "readOnly" : true
          },
          "SourceSystemID" : {
            "title" : "Unique Third Party ID",
            "type" : "integer"
          },
          "created" : {
            "title" : "Created Date",
            "type" : "string",
            "readOnly" : true
          },
          "ClientID" : {
            "title" : "Client ID",
            "type" : "string"
          },
          "TransactionType" : {
            "title" : "Transaction Type",
            "type" : "string",
            "readOnly" : true
          },
          "Amount" : {
            "title" : "Amount",
            "type" : "number",
            "format" : "double"
          },
          "ProcessDate" : {
            "title" : "Process Date",
            "type" : "string"
          },
          "ReturnedDate" : {
            "title" : "Returned Date",
            "type" : "string",
            "readOnly" : true
          },
          "ClearedDate" : {
            "title" : "Cleared Date",
            "type" : "string",
            "readOnly" : true
          },
          "ReturnCode" : {
            "title" : "ACH Return Code",
            "type" : "string",
            "readOnly" : true
          },
          "TransactionStatus" : {
            "title" : "Transaction Status",
            "type" : "string",
            "readOnly" : true
          },
          "Active" : {
            "title" : "Is Active",
            "type" : "boolean",
            "readOnly" : true
          },
          "Completed" : {
            "title" : "Has Processed",
            "type" : "boolean",
            "readOnly" : true
          },
          "Memo" : {
            "title" : "Draft Description",
            "type" : "string"
          }
        }
      },
      "DraftResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "ClientID" : {
            "type" : "string"
          },
          "TransactionType" : {
            "type" : "integer"
          },
          "fee1" : {
            "type" : "number",
            "format" : "double"
          },
          "fee2" : {
            "type" : "number",
            "format" : "double"
          },
          "fee3" : {
            "type" : "number",
            "format" : "double"
          },
          "fee5" : {
            "type" : "number",
            "format" : "double"
          },
          "fee6" : {
            "type" : "number",
            "format" : "double"
          },
          "fee7" : {
            "type" : "number",
            "format" : "double"
          },
          "amount" : {
            "type" : "number",
            "format" : "double"
          },
          "ProcessDate" : {
            "type" : "string"
          },
          "ClearedDate" : {
            "type" : "string"
          },
          "ReturnedDate" : {
            "type" : "string"
          },
          "PaidTo" : {
            "type" : "string"
          },
          "Cancelled" : {
            "type" : "integer"
          },
          "TransID" : {
            "type" : "string"
          },
          "Response" : {
            "type" : "string"
          },
          "Additional" : {
            "type" : "string"
          },
          "ReturnCode" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "integer"
          },
          "Active" : {
            "type" : "string"
          },
          "Memo" : {
            "type" : "string"
          }
        }
      },
      "Fee" : {
        "type" : "object",
        "required" : [ "ClientID", "CreditorID", "ProcessDate", "Amount", "Memo" ],
        "properties" : {
          "id" : {
            "title" : "Fee ID",
            "type" : "string",
            "readOnly" : true
          },
          "ClientID" : {
            "title" : "Client ID",
            "type" : "string"
          },
          "CreditorID" : {
            "title" : "Creditor ID",
            "type" : "string"
          },
          "TransactionType" : {
            "title" : "Transaction Type",
            "type" : "string",
            "readOnly" : true
          },
          "Amount" : {
            "title" : "Amount",
            "type" : "number",
            "format" : "double"
          },
          "Created" : {
            "title" : "Created Date",
            "type" : "string",
            "readOnly" : true
          },
          "ProcessDate" : {
            "title" : "Process Date",
            "type" : "string"
          },
          "ClearedDate" : {
            "title" : "Cleared Date",
            "type" : "string",
            "readOnly" : true
          },
          "ReturnedDate" : {
            "title" : "Returned Date",
            "type" : "string",
            "readOnly" : true
          },
          "ReturnCode" : {
            "title" : "Return Code",
            "type" : "string",
            "readOnly" : true
          },
          "Response" : {
            "title" : "Response",
            "type" : "string",
            "readOnly" : true
          },
          "Additional" : {
            "title" : "Additional",
            "type" : "string",
            "readOnly" : true
          },
          "TransactionStatus" : {
            "title" : "Transaction Status",
            "type" : "string",
            "readOnly" : true
          },
          "Completed" : {
            "title" : "Is Completed",
            "type" : "boolean",
            "readOnly" : true
          },
          "Active" : {
            "title" : "Is Active",
            "type" : "boolean",
            "readOnly" : true
          },
          "Memo" : {
            "title" : "Fee Description",
            "type" : "string"
          }
        }
      },
      "Refund" : {
        "type" : "object",
        "required" : [ "ClientID", "ProcessDate", "Amount", "Memo" ],
        "properties" : {
          "id" : {
            "title" : "Refund ID",
            "type" : "string",
            "readOnly" : true
          },
          "ClientID" : {
            "title" : "Client ID",
            "type" : "integer"
          },
          "TransactionType" : {
            "title" : "Transaction Type",
            "type" : "string",
            "readOnly" : true
          },
          "RefundMethod" : {
            "title" : "Refund Method",
            "type" : "string",
            "enum" : [ "ACH", "CHECK", "2NDDAY", "OVERNIGHT", "WIRE" ]
          },
          "Amount" : {
            "title" : "Amount",
            "type" : "number",
            "format" : "double"
          },
          "Created" : {
            "title" : "Created Date",
            "type" : "string",
            "readOnly" : true
          },
          "ProcessDate" : {
            "title" : "Process Date",
            "type" : "string"
          },
          "ClearedDate" : {
            "title" : "Cleared Date",
            "type" : "string",
            "readOnly" : true
          },
          "ReturnedDate" : {
            "title" : "Returned Date",
            "type" : "string",
            "readOnly" : true
          },
          "ReturnCode" : {
            "title" : "Return Code",
            "type" : "string",
            "readOnly" : true
          },
          "Response" : {
            "title" : "Response",
            "type" : "string",
            "readOnly" : true
          },
          "additional" : {
            "title" : "Additional",
            "type" : "string",
            "readOnly" : true
          },
          "TransactionStatus" : {
            "title" : "Transaction Status",
            "type" : "string",
            "readOnly" : true
          },
          "Completed" : {
            "title" : "Is Completed",
            "type" : "boolean",
            "readOnly" : true
          },
          "Active" : {
            "title" : "Is Active",
            "type" : "boolean",
            "readOnly" : true
          },
          "Memo" : {
            "title" : "Refund Description",
            "type" : "string"
          }
        }
      },
      "ClientResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "Assigned Client ID",
            "type" : "string"
          },
          "ExternalID" : {
            "description" : "Your reference ID for this client",
            "type" : "string"
          },
          "FileType" : {
            "description" : "File Type of the client",
            "type" : "string",
            "enum" : [ "DEBT", "STUDENT", "OTHER" ]
          },
          "FirstName" : {
            "description" : "Clients First Name",
            "type" : "string"
          },
          "LastName" : {
            "description" : "Clients Last Name",
            "type" : "string"
          },
          "Address" : {
            "description" : "Clients Street Address",
            "type" : "string"
          },
          "Address2" : {
            "description" : "Clients Secondary Street Address (Suite, Apt)",
            "type" : "string"
          },
          "City" : {
            "description" : "Clients City",
            "type" : "string"
          },
          "State" : {
            "description" : "Clients State",
            "type" : "string"
          },
          "Zip" : {
            "description" : "Clients Zip Code",
            "type" : "string"
          },
          "Email" : {
            "description" : "Clients Email Address",
            "type" : "string"
          },
          "HomePhone" : {
            "description" : "Clients Home Phone",
            "type" : "string"
          },
          "WorkPhone" : {
            "description" : "Clients Work Phone",
            "type" : "string"
          },
          "CellPhone" : {
            "description" : "Client mobile number",
            "type" : "string"
          },
          "DOB" : {
            "description" : "Clients Date of Birth",
            "type" : "string"
          },
          "SSN" : {
            "description" : "Clients Social Security Number",
            "type" : "string"
          },
          "EnrolledDate" : {
            "description" : "The date of enrollment",
            "type" : "string"
          },
          "CancelDate" : {
            "description" : "The date of cancellation",
            "type" : "string"
          },
          "Enrolled" : {
            "description" : "Indicates if the client is currently enrolled",
            "type" : "boolean"
          },
          "Cancel" : {
            "description" : "Indicates if the client has been cancelled",
            "type" : "boolean"
          },
          "Completed" : {
            "description" : "Indicates if the client has completed the program",
            "type" : "boolean"
          },
          "Paused" : {
            "description" : "Indicates if the client is paused.",
            "type" : "boolean"
          },
          "Hold" : {
            "description" : "Indicates whether the client is on a hold",
            "type" : "boolean"
          },
          "balance" : {
            "description" : "Provides balance information from the clients escrow account",
            "type" : "string"
          }
        }
      },
      "Client" : {
        "required" : [ "FileType", "FirstName", "LastName", "Address", "City", "State", "Zip", "HomePhone", "DOB", "SSN" ],
        "properties" : {
          "id" : {
            "title" : "Client ID",
            "type" : "string",
            "readOnly" : true
          },
          "created" : {
            "title" : "Created At",
            "type" : "string",
            "readOnly" : true
          },
          "modified" : {
            "title" : "Modified At",
            "type" : "string",
            "readOnly" : true
          },
          "SourceSystemID" : {
            "title" : "Your Reference ID",
            "type" : "string"
          },
          "FileType" : {
            "title" : "File Type",
            "type" : "string"
          },
          "FirstName" : {
            "title" : "First Name",
            "type" : "string"
          },
          "MiddleName" : {
            "title" : "Middle Name",
            "type" : "string"
          },
          "LastName" : {
            "title" : "Last Name",
            "type" : "string"
          },
          "Address" : {
            "title" : "Address",
            "type" : "string"
          },
          "Address2" : {
            "title" : "Address2",
            "type" : "string"
          },
          "City" : {
            "title" : "City",
            "type" : "string"
          },
          "State" : {
            "title" : "State",
            "type" : "string"
          },
          "Zip" : {
            "title" : "Zip Code",
            "type" : "string"
          },
          "HomePhone" : {
            "title" : "Home Phone",
            "type" : "string"
          },
          "WorkPhone" : {
            "title" : "Work Phone",
            "type" : "string"
          },
          "CellPhone" : {
            "title" : "Cell Phone",
            "type" : "string"
          },
          "Email" : {
            "title" : "Email Address",
            "type" : "string"
          },
          "SSN" : {
            "title" : "Social Security Number / EIN",
            "type" : "string"
          },
          "DOB" : {
            "title" : "Date Of Birth",
            "type" : "string"
          },
          "Paused" : {
            "title" : "Is Paused",
            "type" : "boolean",
            "readOnly" : true
          },
          "Enrolled" : {
            "title" : "Is Enrolled",
            "type" : "boolean",
            "readOnly" : true
          },
          "Cancelled" : {
            "title" : "Is Cancelled",
            "type" : "boolean",
            "readOnly" : true
          },
          "CancelDate" : {
            "title" : "Cancellation Date",
            "type" : "string",
            "readOnly" : true
          },
          "CompletedDate" : {
            "title" : "Completed Date",
            "type" : "string",
            "readOnly" : true
          },
          "IsCoApp" : {
            "title" : "Is Co-Applicant",
            "type" : "boolean",
            "readOnly" : true
          },
          "coapp_ID" : {
            "title" : "Co-Applicant ID",
            "type" : "boolean",
            "readOnly" : true
          }
        },
        "type" : "object"
      },
      "FailGetToken" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "string"
          }
        },
        "example" : "{'error': 'invalid_grant', 'errorCode': 'authentication failure'}"
      },
      "SessionExpired" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "message" : {
              "type" : "string",
              "example" : "Session expired or invalid"
            },
            "errorCode" : {
              "type" : "string",
              "example" : "INVALID_SESSION_ID"
            }
          }
        }
      },
      "SuccessResponse" : {
        "description" : "Successful Response",
        "properties" : {
          "status" : {
            "type" : "object"
          },
          "response" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Creditor" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Creditor ID",
            "type" : "integer",
            "readOnly" : true
          },
          "name" : {
            "title" : "Creditor Name",
            "type" : "string"
          },
          "addresses" : {
            "title" : "Addresses",
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CreditorAddress"
            }
          }
        }
      },
      "CreditorAddress" : {
        "required" : [ "address", "address2", "city", "mail_to", "state", "zip" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Creditor Address ID",
            "type" : "string",
            "readOnly" : true
          },
          "mail_to" : {
            "title" : "Mail To",
            "type" : "string"
          },
          "address" : {
            "title" : "Address",
            "type" : "string"
          },
          "address2" : {
            "title" : "Address2",
            "type" : "string"
          },
          "city" : {
            "title" : "City",
            "type" : "string"
          },
          "state" : {
            "title" : "State",
            "type" : "string"
          },
          "zip" : {
            "title" : "ZIP",
            "type" : "string"
          },
          "phone" : {
            "title" : "Phone",
            "type" : "string"
          }
        }
      },
      "CreditorInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Creditor ID",
            "type" : "integer",
            "readOnly" : true
          },
          "name" : {
            "title" : "Creditor Name",
            "type" : "string"
          }
        }
      },
      "Status" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer"
          },
          "message" : {
            "type" : "string",
            "description" : ""
          },
          "securitySchemes" : {
            "type" : "object"
          }
        }
      }
    }
  }
}