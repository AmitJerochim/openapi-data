openapi: 3.0.0
info:
  version: "1.0.0.0"
  title: 'Meraface Service'
  description: 'Meraface Service'


servers:
  - description: Development API
    url: http://{domainName}:{port}/api
    variables:
      domainName:
        description: development domain name of MeraFace Master Service
        default: 127.0.0.1
      port:
        enum:
          - '8080'
        default: '8080'
  - description: Production API
    url: https://{domainName}:{port}/api
    variables:
      domainName:
        description: production domain name of VCPaaS Master Service
        default: videonetics.com
      port:
        enum:
          - '8080'
        default: '8080'
paths:

  '/login':
    post:
      tags:
        - User
      summary: Login to VCPaaS Customer platfrom.
      description: >-
        Login to VCPaaS Customer platfrom.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerLoginModel'
      responses:
        '201':
          description: Login to VCPaaS Customer platfrom.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseModel'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseModel'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseModel'
                
  '/register':
    post:
      tags:
        - User
      summary: Login to VCPaaS Customer platfrom.
      description: >-
        Login to VCPaaS Customer platfrom.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '201':
          description: Login to VCPaaS Customer platfrom.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
                
  '/systemdetails':
    get:
      tags:
        - System Configuration
      summary: Get all System Configuration
      description: >-
        Get all engineTasks details
      responses:
        '200':
          description: Get all System Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemDetailsGetResponse'
    post:
      tags:
        - System Configuration
      summary: Create System Configuration
      description: >-
        Create a engineTasks.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfigurationModel'
      responses:
        '201':
          description: Create System Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
    put:
      tags:
        - System Configuration
      summary: Updates a Yojaka Box details in the platfrom
      description: >-
        Updates a Yojaka Box details in the platfrom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfigurationModel'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerafacePostResponse'
                
  '/markeventunknown':
    patch:
      tags:
        - Face Event
      summary: Mark events unknown by removing registeredFaceId
      description: >-
        Mark events unknown by removing registeredFaceId
      parameters:
        - in: query
          name: 'registeredFaceId'
          schema:
            type: string
            format: string
          required: true
          description: Unique ID
          example: 'registeredFaceId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Mark events unknown by removing registeredFaceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultResponse'

  '/findname':
    get:
      tags:
        - Face Event
      summary: 'Find unique full names from face events that contains input string'
      description: >-
        Seach unique full names from face events that contains input string
      parameters:
        - in: query
          name: 'find'
          schema:
            type: string
            format: string
            default: ''
          required: true
          description: 'Find full names containing this input'
          example: 'mad'
        - in: query
          name: 'limit'
          schema:
            type: integer
            format: int32
            default: 5
          required: true
          description: 'Limit the results'
          example: '5'
      responses:
        '200':
          description: 'List of distinct full names frond from face events containing the input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindNameResponse'
                
  '/streaming/startlive':
    post:
      tags:
        - Streaming
      summary: Returns live view streaming of requested camera from the platfrom
      description: >-
        Returns live view streaming of requested camera from the platfrom.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamingRequestModel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponse'
                
  '/streaming/keeplivesession':
    get:
      tags:
        - Streaming
      summary: Returns live view streaming of requested camera from the platfrom
      description: >-
        Returns live view streaming of requested camera from the platfrom.
      parameters:
        - in: query
          name: 'nodeId'
          schema:
            type: string
            format: string
          description: >-
            Camera Id of the requested camera.
          example: '5c1956e925b6b30001103eb6'
        - in: query
          name: 'sessionId'
          schema:
            type: string
            format: string
          description: >-
            Stream session Id of the requested camera.
          example: 'A458DTH005MA'
        - in: query
          name: 'keepLiveSessionActive'
          schema:
            type: boolean
            default: false
            example: false
          description: >-
            Stream session active mode. False to stop session, True to keep session alive.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponse'
              
components:
  schemas:
  
    defaultResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
          
    metaFaceEvent:
      type: object
      properties:
        registeredFaceId:
          type: string
          format: string
          nullable: true
          example: 'barak_obama_1'
          default: ""
          description: "registeredFaceId of '#/components/schemas/registeredFace'"
        age:
          type: integer
          format: int32
          example: 25
          default: 0
          description: 'Age of person predicted by face engine during face event'
        sex:
          $ref: '#/components/schemas/gender'
        eventId:
          type: string
          format: string
          example: "5c1956e925b6b30001103eaa"
          default: "0"
          description: 'Source EventId'

    gender:
      type: string
      format: string
      enum: ['Male', 'Female', 'Other', 'NA']
      example: 'Male'
      default: 'Male'
      description: 'Sex of person predicted by engine during event'
   
  
    LiveStreamingRequestModel:
      type: object
      properties:
        nodeId:
          type: string
          format: string
          example: "UXED56789TYP"
        rtspUrl:
          type: string
          format: string
          example: "rtsp://192.168.1.185/media.amp"
        userName:
          type: string
          format: string
          example: 'root'
        password:
          type: string
          format: string
          example: 'root'
    
    FindNameResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Success'
          example: 'Success'
        items:
          type: array
          readOnly: true
          nullable: true
          example: ['Madhab Chandra Pal', 'Madhab Pal', 'Maddy Madz']
          items:
            type: string
            format: string
            readOnly: true
            nullable: false
            default: ''
            example: 'Madhab Chandra Pal'
            
    StreamingResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
        items:
          type: array
          readOnly: true
          nullable: true
          items:
            $ref: '#/components/schemas/CameraStreamingUrlModel'
            
    CameraStreamingUrlModel:
      type: object
      properties:
        
        hlsUrl:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'http://streaming.iot-videonetics.com/live/hls/11-22-33-44-55-major/play.m3u8'
        webRtc:
          type: string
          format: string
          readOnly: true
          nullable: true
          default: 'Unexpected API Exception'
          example: 'Success'
        sessionId:
          type: string
          format: string
          readOnly: true
          nullable: true
          default: 'Unexpected API Exception'
          example: 'A458DTH005MA'
  
    MerafacePostResponse:
      type: object
      properties:
        _id:
          type: string
          format: string
          readOnly: true
          nullable: false
          example: '5c1956e925b6b30001103eb6'
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
    
    SystemDetailsGetResponse:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
        items:
          type: array
          readOnly: true
          nullable: true
          items:
            $ref: '#/components/schemas/SystemConfigurationModel'
  
    LoginResponseModel:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 0
          example: 0
        httpCode:
          type: integer
          format: int32
          readOnly: true
          nullable: false
          default: 200
          example: 200
        message:
          type: string
          format: string
          readOnly: true
          nullable: false
          default: 'Unexpected API Exception'
          example: 'Success'
        items:
          type: array
          readOnly: true
          nullable: true
          items:
            $ref: '#/components/schemas/UserLoginResponseModel'
  
    CustomerLoginModel:
      type: object
      properties:
        username:
          type: string
          format: string
          nullable: false
          example: 'sajal.maji@gmail.com'
        password:
          type: string
          format: string
          nullable: false
          example: 'sm@1234'
          
  
    UserLoginResponseModel:
      type: object
      properties:
        systemconfiguration:
          $ref: '#/components/schemas/SystemConfigurationModel'
        engines:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EngineModel'
        
  
    UserModel:
      type: object
      properties:
        _id:
          type: string
          format: string
          readOnly: true
          example: '5c1956e925b6b30001103eb6'
        
        fullName:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
        userId:
          type: string
          format: string
          nullable: true
          example: '5c1956e925b6b3000110456'
        password:
          type: string
          format: string
          nullable: false
          example: '5c1956e925b6b3000110456'
        userType:
          type: string
          format: string
          nullable: true
          example: 'admin'
          
    EngineModel:
      type: object
      properties:
        _id:
          type: string
          format: string
          readOnly: true
          example: '5c1956e925b6b30001103eb6'
        engineName:
          type: string
          format: string
          nullable: false
          example: 'Engin One'
        engineType:
          $ref: '#/components/schemas/engineTypeCode'
        machineId:
          type: string
          format: string
          nullable: true
          example: '5c1956e925b6b3000110456'
       
    engineTypeCode:
      type: string
      format: string
      enum: ['', 'registration', 'investigation', 'recognition', 'matching']
      example: 'registration'
      description: >-
        Destination Method Type supported are as follows:
         * `''` - Not Labeled Yet
         * `'registration'` - Registration Node
         * `'investigation'` - Investigation Node
         * `'recognition'` - Recognition Node
         * `'matching'`  - Matching Node
          
    Destinationmethodtype:
      type: string
      format: string
      enum: ['none', 'http', 'mqtt', 'tcp','vs3']
      example: 'S3'
      description: >-
        Destination Method Type supported are as follows:
         * `'none'` - None
         * `'http'` - HTTP
         * `'tcp'` - TCP
         * `'mqtt'` - MQ over mqtt protocol
         * `'VS3'`  - VS3 protocol
    
    FileDestination:
      type: object
      properties:
        destinatiotype:
          $ref: '#/components/schemas/Destinationmethodtype'
        baseurl:
          type: string
          format: string
          example: 'bucket'
        name:
          type: string
          format: string
          example: 'visage/'
        user:
          type: string
          format: string
          example: 'admin'
        pass:
          type: string
          format: string
          example: 'admin'
          
    SystemConfigurationModel:
      type: object
      properties:
        _id:
          type: string
          format: string
          example: '5c1956e925b6b30001103eb6'
          
        messagingServiceUrl:
          type: string
          format: string
          example: 'http://message.iot-videonetics.com/'
        messagingServiceUsername:
          type: string
          format: string
          example: 'useradmin'
        messagingServicePassword:
          type: string
          format: string
          example: '03eb6e925b6b30005c195611'
          
        databaseServiceUrl:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
        databaseServiceUsername:
          type: string
          format: string
          example: 'useradmin'
        databaseServicePassword:
          type: string
          format: string
          example: '03eb6e925b6b30005c195611'
          
        destinationlist:
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: '#/components/schemas/FileDestination'
            
        investigationServiceUrl:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
          
        eveAPIServiceUrl:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
          
        registrationServiceUrl:
          type: string
          format: string
          nullable: false
          example: 'Mr Supriya Das'
