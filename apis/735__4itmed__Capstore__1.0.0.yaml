penapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Capstore API'
  description: "Capstore Api documentaion..."
  contact:
    name: "Mohammed Ait Haddou"
    email: "4itmed@gmail.com"
    
servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/4itmed/Capstore/1.0.0
  
paths:
  /products:
    get:
      tags: 
        - Product
      summary: Returns a list of products.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
  
      parameters:
        - name: type
          in: query
          description: Product type.
          schema:
            $ref: '#/components/schemas/ProductType'
          
    post:
      tags:
        - Product
      summary: Add a new product.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        201:
          description: Succuessfuly created.
          
  /products/{id}:
    delete:
      tags: 
        - Product
      summary: Removes a specific product.
      parameters:
        - $ref: '#/components/parameters/productId'
        
      responses:
        200:
          description: OK
          
    get:
      tags: 
        - Product
      summary: Returns a specific product object.
      parameters:
        - $ref: '#/components/parameters/productId'
            
      responses:
        '200':
          description: "User retreived"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          
    patch:
      tags:
        - Product
      summary: Partialy update a specific product.
      parameters:
        - $ref: '#/components/parameters/productId'
            
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'

        
      responses:
        200:
          description: OK
          
  /carts/{id}:
    get: 
      tags: 
        - Cart
      summary: Retruns a specific cart details.
      
      parameters: 
        - $ref: '#/components/parameters/cartId'
    
      responses:
        '200':
          description: "Cart details retreived."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        
    delete:
      tags: 
        - Cart
      summary: Deletes the cart.
      
      parameters: 
        - $ref: '#/components/parameters/cartId'
      
      responses:
        '200':
          description: "OK."
          
    patch:
      tags: 
        - Cart
      summary: Updates cart.
        
      parameters: 
        - $ref: '#/components/parameters/cartId'
            
            
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      
      responses:
        '200':
          description: "OK."
          
          
  /carts/{id}/items:
    post:
      tags:
        - Cart
      summary: Adds a product to cart.
      
      parameters: 
        - $ref: '#/components/parameters/cartId'
          
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductToPurchase'
          
      responses:
        '201':
          description: "OK/"
        
     
          
          
components:
  parameters:
    productId:
      name: id
      description: Product id.
      in: path
      required: true
      schema:
        type: string
    
    cartId:
      name: id
      description: Cart id.
      in: path
      required: true
      schema:
        type: string
        
  schemas:
    ProductType: 
      type: string
      enum: [capsule, machine]
      
    Product:
      type: object
      properties:
          id:
            type: string
            example: "C6546516844516"
          title:
            type: string
            example: "Fitness Capsule"
          unitPrice:
            type: number
            example: 2.5
          type:
            $ref: '#/components/schemas/ProductType'
            
    
    Products:
      type: object
      properties:
        total: 
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
            
            
            
    ProductToPurchase:
      type: object
      properties:
          product: 
            $ref: '#/components/schemas/Product'
          quantity: 
            type: integer
            example: 2
            
    Cart:
      type: object
      properties:
        id:
          type: string

        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductToPurchase'