openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/dimchic44449/digital-office/0.1
  - url: https://{environment}.megafon.ru/api
    description: MegaFon k8s
    variables:
      environment:
        default: do  # production server
        enum:
          - do       # production server
          - do-dev   # production server
          - do-test  # production server
  - url: http://0.0.0.0:8000/api
    description: localhost
  - url: http://10.112.237.9:8080/api
    description: k8s

info:
  description: MegaFon Digital Office API description
  version: "0.1"
  title: Digital office
  contact:
    email: maxim.barabanov@megafon.ru
    name: Maksim Barabanov

tags:
  - name: admins
    description: Secured admin-only endpoints
  - name: public
    description: Operations available to all authorized users
  - name: calendar
  - name: index
  - name: id
    description: Mobile ID service

security:
  - bearerAuth: []

paths:
  /enterprise/digitalOffice/index/v1/tabs:
    get:
      tags:
        - public
        - index
      summary: Most popular Digital office functions
      operationId: getTabs
      description: Returns list of most popular DigitalOffice features for quick navigation
      responses:
        200:
          description: list of DigitalOffice features
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndexTab'
              example:
                - slug: popular
                  name: Популярное
                - slug: favorite
                  name: Мое избранное
                - slug: office
                  name: Офис
                - slug: hardware
                  name: Оборудование и ПО
                - slug: money
                  name: Мои финансы
                  
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/index/v1/tabs/{slug}:
    get:
      tags:
        - public
        - index
      summary: Digital office features on tab
      operationId: getTabServices
      description: Returns list of DigitalOffice features on selected tab
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
          description: Tab slug
      responses:
        200:
          description: list of DigitalOffice features
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexTabContent'
              examples:
                AllIsGood: 
                  value:
                  - title: Оформить компенсацию по фитнесу
                    image: fitness.jpg
                    description: Все равно не пойдешь на фитнес
                    extended: Получите скидку 50% 
                  - id: 1
                    action: bookingConference
                    title: Забронировать переговорную
                    icon: conference.jpg
                    favorite: false
                    description: Ждите новый сервис в DO уже в этом ноябре
                    inactive: false
                    weight: 1
                  - id: 2
                    action: bookingAudioConference
                    title: Забронировать аудио-конференцию
                    icon: audioConference.jpg
                    favorite: false
                    description: Можно поболтать с людьми по скайпу
                    inactive: true
                    weight: 1
                  - id: 3
                    action: getSchengen
                    title: Получить справку для шенгенской визы
                    icon: getSchengen.jpg
                    favorite: false
                    description: Хочешь слетать в италию заразиться COVID-19? Получи справку в нашем приложении!
                    inactive: false
                    weight: 1
                  - id: 4
                    action: findFriends
                    title: Найти коллег или переговорную
                    icon: findFriends.jpg
                    favorite: true
                    description: Скоро сможете знакомиться с коллегами черех наше приложение!
                    inactive: false
                    weight: 1
                  - id: 5
                    action: restoreWindowsPassword
                    title: Сбросить пароль учетки Windows
                    icon: restorePasswd.jpg
                    favorite: true
                    description: Забыл пароль от учетки Windows? Восстанови здесь!
                    inactive: false
                    weight: 1
                  - id: 6
                    action: reportAboutSalary
                    title: Справка о заработной плате за 3 месяца
                    icon: salary.jpg
                    favorite: false
                    description: Узнай сколько ты заработал за последние 3 месяца
                    inactive: true
                    weight: 1
                  - id: 7
                    action: getUTagAccess
                    title: Получить доступ к UTag
                    icon: utag.jpg
                    favorite: false
                    description: Запросить доступ к виртуальному рабочему месту UTag
                    inactive: false
                    weight: 5
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: tab not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /enterprise/digitalOffice/index/v1/features:
    get:
      tags:
        - public
        - index
      summary: List of all Digital office functions
      operationId: getServices
      description: Returns list of all DigitalOffice features
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: search request
      responses:
        200:
          description: list of DigitalOffice features
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndexAction'
              examples:
                AllIsGood: 
                  value:
                  - id: 1
                    action: bookingConference
                    title: Забронировать переговорную
                    icon: conference.jpg
                    favorite: false
                    description: Ждите новый сервис в DO уже в этом ноябре
                    inactive: false
                    weight: 1
                  - id: 2
                    action: bookingAudioConference
                    title: Забронировать аудио-конференцию
                    icon: audioConference.jpg
                    favorite: false
                    description: Можно поболтать с людьми по скайпу
                    inactive: true
                    weight: 1
                  - id: 3
                    action: getSchengen
                    title: Получить справку для шенгенской визы
                    icon: getSchengen.jpg
                    favorite: false
                    description: Хочешь слетать в италию заразиться COVID-19? Получи справку в нашем приложении!
                    inactive: false
                    weight: 1
                  - id: 4
                    action: findFriends
                    title: Найти коллег или переговорную
                    icon: findFriends.jpg
                    favorite: true
                    description: Скоро сможете знакомиться с коллегами черех наше приложение!
                    inactive: false
                    weight: 1
                  - id: 5
                    action: restoreWindowsPassword
                    title: Сбросить пароль учетки Windows
                    icon: restorePasswd.jpg
                    favorite: true
                    description: Забыл пароль от учетки Windows? Восстанови здесь!
                    inactive: false
                    weight: 1
                  - id: 6
                    action: reportAboutSalary
                    title: Справка о заработной плате за 3 месяца
                    icon: salary.jpg
                    favorite: false
                    description: Узнай сколько ты заработал за последние 3 месяца
                    inactive: true
                    weight: 1
                  
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/index/v1/features/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: feature id
    post:
      tags:
        - public
        - index
      summary: increase feature call count
      responses:
        200:
          description: ok
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: feature not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - public
        - index
      summary: modify favorites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexActionFavorites'
      responses:
        200:
          description: ok
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: feature not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /enterprise/digitalOffice/calendar/v1/events:
    get:
      tags:
        - public
        - calendar
      summary: Get events of user
      operationId: getEvents
      description: Users events in given time range
      parameters:
        - in: query
          name: start
          schema:
            type: string
          required: false
          description: ISO DateTime interval start, today if empty
        - in: query
          name: end
          schema:
            type: string
          required: false
          description: ISO DateTime interval end, today if empty
        - in: query
          name: mailbox
          schema:
            type: string
          required: false
          description: Current user if empty, otherwise only time intervals returned
      responses:
        200:
          description: list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalendarEvent'
              examples:
                AllIsGood:  
                  value:
                  - id: 1
                    subject: Спорим и ругаемся о том, что лучше IOS или Andoid
                    start: "2020-07-16T19:23:51Z"
                    end: "2020-07-16T20:23:51Z"
                    location: Главный офис, 4 этаж
                    skype_call: false
                  - id: 2
                    subject: Обсуждаем новые таски
                    start: "2020-07-17T19:23:51Z"
                    end: "2020-07-17T20:23:51Z"
                    location: Главный офис, 7 этаж
                    skype_call: true
                  - id: 3
                    subject: Оцениваем новый дизайн логотипа
                    start: "2020-07-18T19:23:51Z"
                    end: "2020-07-18T20:23:51Z"
                    location: Главный офис, 10 этаж
                    skype_call: false
                  - id: 4
                    subject: Решаем проблемы с установкой ПО
                    start: "2020-07-19T19:23:51Z"
                    end: "2020-07-19T20:23:51Z"
                    location: Главный офис, 3 этаж
                    skype_call: true
                    
                  
        400:
          description: processing error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CalendarEventRequestErrors'
              examples:
                badStartDate:
                  value:
                    start:
                      - Некорректный формат даты начала периода
                badEndDate:
                  value:
                    end:
                      - Некорректный формат даты окончания периода
                badDatesFormat:
                  value:
                    start:
                      - Некорректный формат даты начала периода
                    end:
                      - Некорректный формат даты окончания периода
                badDates:
                  value:
                    _global:
                      - Дата начала периода должна быть не позже даты его окончания
        401:
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - public
        - calendar
      summary: create event
      description: Create calendar event.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarEventCreateInfo'
      responses:
        201:
          description: OK
        400:
          description: event creation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarEventDataErrors'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/calendar/v1/events/{id}:
    parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: event id
    get:
      tags:
        - public
        - calendar
      summary: Get event`s detail info
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarEventFull'
              examples:
                AllIsGood:  
                  value:
                  - id: 1
                    subject: Спорим и ругаемся о том, что лучше IOS или Andoid
                    start: "2020-07-16T19:23:51Z"
                    end: "2020-07-16T20:23:51Z"
                    location: Главный офис, 4 этаж
                    skype_call: false
                    text_body: Всем быть обязательно!
                  - organizer: 
                      mailbox: pavel@yandex.ru
                      full_name: Павел Дуров
                      position: Стажер
                      image: pasha.png
                  - required_attendees: 
                    - 
                      mailbox: president@yandex.ru
                      full_name: Владимир Путин
                      position: Junior IOS разработчик
                      image: vovan.png
                    - 
                      mailbox: andrey@yandex.ru
                      full_name: Андрей Медведев
                      position: Middle Android Разработчик
                      image: andrey.png
                    - 
                      mailbox: dmitry@yandex.ru
                      full_name: Гришин Дмитрий
                      position: Стажер
                      image: dima.png
                  - optional_attendees: 
                    - 
                      mailbox: admin@yandex.ru
                      full_name: Сергей Поляков
                      position: Программист
                      image: serj.png
                    - 
                      mailbox: victor@yandex.ru
                      full_name: Виктор Лебедев
                      position: Бухгалтер
                      image: vitya.png
                    - 
                      mailbox: max@yandex.ru
                      full_name: Максим Пермяков
                      position: Тестировщик
                      image: max.png
                    importance: Приходите
                    is_all_day: false
                    is_cancelled: false
                    is_draft: true  
                    is_from_me: false
                    is_meeting: true
                    is_online_meeting: true
                    is_recurring: false
                    is_response_requested: true
                    is_submitted: true
                    has_attachment: false
                    
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          description: you are not participant of this event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        404:
          description: event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - public
        - calendar
      summary: modify event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarEventCreateInfo'
      responses:
        200:
          description: ok
        400:
          description: event modify error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarEventDataErrors'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          description: you are not organizer of this event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        404:
          description: event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - public
        - calendar
      summary: modify event parially
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarEventCreateInfo'
      responses:
        200:
          description: ok
        400:
          description: event modify error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarEventDataErrors'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          description: you are not organizer of this event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        404:
          description: event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - public
        - calendar
      summary: cancel event
      responses:
        200:
          description: OK
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          description: you are not organizer of this event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        404:
          description: event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /enterprise/digitalOffice/employee/v1/employees:
    get:
      tags:
        - public
        - employee
      summary: employees search
      operationId: getEmployees
      description: Returns list of employees with given filter, max 10 for parsing deny (no pagination)
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: search request (name, number, email, phone, etc)
      responses:
        200:
          description: list of MF employees for given query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeInfo'
              examples:
                AllIsGood:  
                  value: 
                    -
                      mailbox: pavel@yandex.ru
                      full_name: Павел Дуров
                      position: Стажер
                      image: pasha.png
                    - 
                      mailbox: president@yandex.ru
                      full_name: Владимир Путин
                      position: Junior IOS разработчик
                      image: vovan.png
                    - 
                      mailbox: andrey@yandex.ru
                      full_name: Андрей Медведев
                      position: Middle Android Разработчик
                      image: andrey.png
                    - 
                      mailbox: dmitry@yandex.ru
                      full_name: Гришин Дмитрий
                      position: Стажер
                      image: dima.png
                    - 
                      mailbox: admin@yandex.ru
                      full_name: Сергей Поляков
                      position: Программист
                      image: serj.png
                    - 
                      mailbox: victor@yandex.ru
                      full_name: Виктор Лебедев
                      position: Бухгалтер
                      image: vitya.png
                    - 
                      mailbox: max@yandex.ru
                      full_name: Максим Пермяков
                      position: Тестировщик
                      image: max.png
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/employee/v1/favorites:
    get:
      tags:
        - public
        - employee
      summary: favorite employee
      operationId: getFavoriteEmployees
      description: Returns list of favorite employees 
      responses:
        200:
          description: list of favorite employees 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeInfo'
              examples:
                AllIsGood:  
                  value: 
                    - 
                      mailbox: president@yandex.ru
                      full_name: Владимир Путин
                      position: Junior IOS разработчик
                      image: vovan.png
                    - 
                      mailbox: andrey@yandex.ru
                      full_name: Андрей Медведев
                      position: Middle Android Разработчик
                      image: andrey.png
                    - 
                      mailbox: dmitry@yandex.ru
                      full_name: Гришин Дмитрий
                      position: Стажер
                      image: dima.png
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/employee/v1/me:
    get:
      tags:
        - public
        - employee
      summary: logged user info
      operationId: getMyInfo
      responses:
        200:
          description: employee info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeInfo'
              examples:
                AllIsGood:  
                  value: 
                      mailbox: dmitry@yandex.ru
                      full_name: Гришин Дмитрий
                      position: Стажер
                      image: dima.png
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/employee/v1/employees/{login}:
    parameters:
      - in: path
        name: login
        schema:
          type: string
        required: true
        description: employee login (without @megafon.ru)
    get:
      tags:
        - public
        - employee
      summary: employee info
      operationId: getEmployeeInfo
      responses:
        200:
          description: info about given employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeInfo'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - public
        - employee
      summary: modify favorites employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeFavorites'
      responses:
        200:
          description: ok
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: feature not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /enterprise/digitalOffice/booking/v1/buildings:
    get:
      tags:
        - public
      summary: MegaFon offices locations
      responses:
        200:
          description: buildings list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Building'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/booking/v1/meeting_rooms:
    get:
      tags:
        - public
      summary: MegaFon meeting rooms
      operationId: getMeetingRooms
      description: Returns list meeting rooms with given parameters 
      parameters:
        - in: query
          name: start
          schema:
            type: string
          required: true
          description: ISO DateTime interval start
        - in: query
          name: end
          schema:
            type: string
          required: true
          description: ISO DateTime interval end
        - in: query
          name: building
          schema:
            type: integer
          required: true
          description: building identifier
        - in: query
          name: stage
          schema:
            type: string
          required: false
          description: room stage number, allow multiple
        - in: query
          name: hdmi
          schema:
            type: boolean
          required: false
          description: need an hdmi port for video output
        - in: query
          name: video_conference
          schema:
            type: boolean
          required: false
          description: need a video conference call feature
        - in: query
          name: markers
          schema:
            type: string
            enum:
              - none
              - board
              - wall
              - both
              - any
          required: false
          description: need suface for markers drawing
      responses:
        200:
          description: list meeting rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingRoom'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/booking/v1/meeting_rooms/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: meeting room id
    get:
      tags:
        - public
      summary: MegaFon meeting room details
      operationId: getMeetingRoom
      description: Returns meeting room detail info
      responses:
        200:
          description: list meeting rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingRoomFull'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /enterprise/digitalOffice/booking/v1/meeting_rooms/{id}/scheme:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: meeting room id
    get:
      tags:
        - public
      summary: Way to room from keypoints on the map
      responses:
        200:
          description: scheme in PNG format
          content:
            image/png:
              schema:
                type: string
                format: binary
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /enterprise/digitalOffice/adb/v1/buildings:
    get:
      tags:
        - public
        - adb
      summary: MegaFon offices locations
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: search query
      responses:
        200:
          description: buildings list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Building'
        401:
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - admins
        - adb
      summary: create building
      parameters:
        - in: header
          name: secret
          schema:
            type: string
          required: true
          description: security protection token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Building'
      responses:
        201:
          description: OK
        400:
          description: room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/adb/v1/buildings/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: building id
      - in: header
        name: secret
        schema:
          type: string
        required: true
        description: security protection token
    get:
      tags:
        - adb
        - admins
      summary: view building info
      responses:
        200:
          description: building info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: building not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - admins
        - adb
      summary: modify event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Building'
      responses:
        200:
          description: ok
        400:
          description: building modify error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: building not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - admins
      summary: remove building
      responses:
        200:
          description: OK
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: building not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /enterprise/digitalOffice/adb/v1/meeting_rooms:
    parameters:
      - in: header
        name: secret
        schema:
          type: string
        required: true
        description: security protection token
    get:
      tags:
        - admins
        - adb
      summary: MegaFon meeting rooms
      description: Returns list meeting rooms with given parameters 
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: items per page
        - in: query
          name: offset
          schema:
            type: integer
          required: false
          description: first item on page
        - in: query
          name: building
          schema:
            type: integer
          required: false
          description: building identifier
        - in: query
          name: all
          schema:
            type: boolean
          required: false
          description: disable pagination
      responses:
        200:
          description: list meeting rooms
          content:
            application/json:
              schema:
                type: object
                properties:
                  count: 
                    type: integer
                  next: 
                    type: string
                  prev: 
                    type: string
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/MeetingRoom'
        401:
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - admins
        - adb
      summary: create meeting room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingRoomFull'
      responses:
        201:
          description: OK
        400:
          description: error creating room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/adb/v1/meeting_rooms/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: meeting room id
      - in: header
        name: secret
        schema:
          type: string
        required: true
        description: security protection token
    get:
      tags:
        - admins
        - adb
      summary: view meeting room info
      responses:
        200:
          description: meeting room info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRoomFull'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: meeting room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - admins
        - adb
      summary: modify meeting room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingRoomFull'
      responses:
        200:
          description: ok
        400:
          description: meeting room modify error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: meeting room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - admins
        - adb
      summary: remove meeting room
      responses:
        200:
          description: OK
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: meeting room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /enterprise/digitalOffice/id/v1/request:
    post:
      tags:
        - public
        - id
      summary: request mobile ID
      responses:
        200:
          description: ID requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdRequestGUID'
        400:
          description: error requesting ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /enterprise/digitalOffice/id/v1/get_status:
    get:
      tags:
        - public
        - id
      summary: check status of id creation process
      parameters:
        - in: query
          name: request
          schema:
            type: string
          required: true
          description: request id guid
      responses:
        200:
          description: ID requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdRequestStatus'
        400:
          description: error while checking status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

components:
  responses:
    UnauthorizedError:
      description: no auth info provided
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorMessage:
      type: string
      example: wrong data
    IndexTab:
      type: object
      properties:
        title:
          type: string
          example: офис
        slug:
          type: string
          example: office
      required:
        - title
        - slug
    IndexTabContent:
      type: object
      properties:
        banner:
          $ref: '#/components/schemas/IndexBanner'
        features:
          type: array
          items:
            $ref: '#/components/schemas/IndexAction'
    IndexBanner:
      type: object
      properties:
        image:
          type: string
          example: http://do.megafon.ru/media/banners/banner.jpg
        title:
          type: string
          example: Оформить компенсацию по фитнесу
        description:
          type: string
          example: Ждите новый сервис уже завтра
        extended:
          type: string
          example: длинное описание того, о чём баннер, которое будет отображено на отдельной странице
      required:
        - image
        - title
    IndexAction:
      type: object
      properties:
        id:
          type: integer
        action:
          type: string
          example: createCalendarEvent
          description: имя конкретного экрана
        title:
          type: string
          example: Запланировать событие
          description: название функции
        icon:
          type: string
          example: <svg>...</svg>
          description: иконка функции
        description:
          type: string
          example:
            Просмотреть запланированные события в своём календаре
          description: короткое описание функции
        inactive:
          type: boolean
          description: функция ещё не доступна
        favorite:
          type: boolean
          description: функция в избранном у авторизованного пользователя
        weight:
          type: number
          description: вес для сортировки (меньше - выше)
      required:
        - id
        - action
        - title
        - icon
        - weight
    IndexActionFavorites:
      type: object
      properties:
        favorite:
          type: boolean
          description: функция в избранном у авторизованного пользователя
        weight:
          type: number
          description: вес для сортировки (меньше - выше)
    CalendarEvent:
      type: object
      properties:
        id:
          type: string
          description: Base64 urlsafe encoded string
        subject:
          type: string
        start:
          type: string
          description: ISO Date Time
        end:
          type: string
          description: ISO Date Time
        location:
          type: string
        skype_call:
          type: boolean
      required:
        - subject
        - start
        - end
    CalendarEventFull:
      allOf:
        - $ref: '#/components/schemas/CalendarEvent'
        - type: object
          properties:
            text_body:
              type: string
            organizer:
              $ref: '#/components/schemas/EmployeeInfo'
            required_attendees:
              type: array
              items: 
                $ref: '#/components/schemas/EmployeeInfo'
            optional_attendees:
              type: array
              items: 
                $ref: '#/components/schemas/EmployeeInfo'
            importance:
              type: string
            is_all_day:
              type: boolean
            is_cancelled:
              type: boolean
            is_draft:
              type: boolean
            is_from_me:
              type: boolean
            is_meeting:
              type: boolean
            is_online_meeting:
              type: boolean
            is_recurring:
              type: boolean
            is_response_requested:
              type: boolean
            is_submitted:
              type: boolean
            has_attachment:
              type: boolean
    CalendarEventCreateInfo:
      type: object
      properties:
        subject:
          type: string
        start:
          type: string
          description: ISO Date Time
        end:
          type: string
          description: ISO Date Time
        location:
          type: string
        text_body:
          type: string
        skype_call:
          type: boolean
        required_attendees:
          type: array
          items: 
            type: string
        optional_attendees:
          type: array
          items: 
            type: string
        importance:
          type: string
        is_all_day:
          type: boolean
        is_cancelled:
          type: boolean
        is_draft:
          type: boolean
        is_from_me:
          type: boolean
        is_meeting:
          type: boolean
        is_online_meeting:
          type: boolean
        is_recurring:
          type: boolean
        is_response_requested:
          type: boolean
        is_submitted:
          type: boolean
        has_attachment:
          type: boolean
      required:
        - subject
        - start
        - end
    CalendarEventRequestErrors:
      type: object
      properties:
        _global:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        start:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        end:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        mailbox:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
    CalendarEventDataErrors:
      type: object
      properties:
        _global:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        subject:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        start:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        end:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        location:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        skype_call:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        text_body:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        organizer:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        required_attendees:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        optional_attendees:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        importance:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        is_all_day:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        is_cancelled:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        is_draft:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        is_from_me:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        is_meeting:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        is_online_meeting:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        is_recurring:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        is_response_requested:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
        is_submitted:
          type: array
          items: 
            $ref: '#/components/schemas/ErrorMessage'
    CalendarMonth:
      type: array
      items:
        type: object
    EmployeeInfo:
      type: object
      properties:
        mailbox:
          type: string
          description: user`s email
        full_name:
          type: string
        position:
          type: string
        image:
          type: string
          description: Base64 encoded image
      required:
        - mailbox
    EmployeeFavorites:
      type: object
      properties:
        favorite:
          type: boolean
          description: сотрудник в избранном у авторизованного пользователя
        weight:
          type: number
          description: вес для сортировки (меньше - выше)
    Image:
      type: object
      properties:
        url: 
          type: string
        title:
          type: string
      required:
        - url
    Building:
      type: object
      properties:
        id: 
          type: integer
          example: 1
        address:
          type: string
          example: Москва, Оружейный, 41
        stages:
          type: array
          items: 
            type: string
          example: ["4", "5", "6", "7", "8", "9", "10"]
        longitude:
          type: number
        latitude:
          type: number
      required:
        - address
        - stages
    MeetingRoom:
      type: object
      properties:
        id: 
          type: integer
        title:
          type: string
        city:
          type: string
        address:
          type: string
        room_number:
          type: string
        stage:
          type: string
        photos:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        marker_board:
          type: boolean
        marker_wall:
          type: boolean
        hdmi:
          type: boolean
        video_conference_number:
          type: string
          description: no parameter if not available
        audio_conference:
          type: boolean
    MeetingRoomFull:
      allOf:
        - $ref: '#/components/schemas/MeetingRoom'
        - type: object
          properties:
            building:
              $ref: '#/components/schemas/Building'
            mailbox:
              type: string
              example: room@megafon.ru
            location:
              type: string
              description: human-readable description how to find room
              example: 
                Подняться на 10 этаж на лифте в башне А и повернуть направо. 
                Пройти несколько метров - переговорка будет по левую руку
    IdRequestGUID:
      type: object
      properties:
        guid: 
          type: string
          description: ID request identifier
          example: 63d075c4-be88-40c9-b174-bdb29509ad86
    IdRequestStatus:
      type: object
      properties:
        status:
          type: string
          description: request processing status
          enum: [in_progress, ready, error]
        id: 
          type: string
          description: ID request identifier
          example: "3443575345"
        error: 
          type: string
          description: error details
          example: "Нет связи со смежной системой"
      required:
        - status