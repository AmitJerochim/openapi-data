openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Storyous/api-menu/0.0.1
  - description: SwaggerHub API Auto Mocking
    url: https://api.storyous.com/menu
info:
  description: Menu API test
  version: "0.0.2"
  title: Menu API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /{menuId}:
    parameters:
      - in: path
        name: menuId
        required: true
        description: merchantId for Storyous purposes
        schema:
          type: string
          example: "5e3d601403f2e10032ac0000"
    get:
      description:
        Enpdoint allows to read all the menu.
      parameters:
        - in: query
          name: placeId
          description: data for one place will be available in the placeValues field. Only products relevant for the place will be returned.
          required: false
          schema:
            type: string
            example: "5e3d601403f2e10032ac0000"
        - in: query
          name: categoryId
          description: (for loading a category) or null for top level
          schema:
            type: string
            example: "c:sdfsdffdgdfg"
        - in: query
          name: depth
          schema:
            type: number
            example: -1
        - in: query
          name: includeRemoved
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: all the menu content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '400':
          description: bad input parameter
components:
  schemas:
    Menu:
      type: object
      required: 
        - menuId
        - items
        - additionCategories
      properties:
        menuId:
          type: string
          example: "5e3d601403f2e10032ac0000"
          description: The merchantId for Storyous purposes
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        virtualProducts:
          type: array
          items:
            $ref: '#/components/schemas/VirtualProduct'
        additionCategories:
          type: array
          items:
            $ref: '#/components/schemas/AdditionCategory'
    Item:
      oneOf:
        - $ref: '#/components/schemas/Category'
        - $ref: '#/components/schemas/Product'
    Category:
      type: object
      required: 
        - type
        - categoryId
        - name
        - items
      properties:
        categoryId:
          type: string
          example: "c:Gj0jhf"
        name:
          type: string
          example: 'Coffee'
        posName:
          type: string
          example: 'Coffee'
        color:
          type: string
          example: '#34495E'
        icon:
          type: string
          example: "25"
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    Product:
      type: object
      required:
        - productId
        - name
        - measure
        - isPriceVariable
        - description
      description: "PlaceValues is present if placeId specified by query parameter."
      properties:
        productId:
          type: string
          example: "p:HDjbfs"
        name:
          type: string
          example: "Mushrooms fries"
        ean:
          type: string
          example: "09789687476"
        measure:
          type: string
          example: "pcs"
        isPriceVariable:
          type: boolean
          example: true
        description:
          type: string
          nullable: true
          example: "Very tasty!!!"
        labels:
          type: array
          items:
            type: string
        imageUrl:
          type: string
          nullable: true
          example: "https://admin.storyous.com/superImage.png"
        placesValues:
          type: object
          description: "Present unless placeId specified by query parameter. placeId are used as keys."
          additionalProperties:
            $ref: '#/components/schemas/PlaceValues'
        placeValues:
          $ref: '#/components/schemas/PlaceValues'            
    PlaceValues:
      type: object
      required: 
        - showInPos
        - vatRate
        - vatId
        - integrationData
        - priceLevels
      properties:
        showInPos: 
          type: boolean
          example: true
        vatRate: 
          type: number
          example: 0.21
        vatId: 
          type: number
          example: 1
        integrationData:
          type: array
          items:
            type: object
        printerIds:
          type: array
          items:
            type: string
            example: "aaaa601403f2e10032ac65432"
        priceLevels:
          type: object
          required: 
            - default
          description: "Allways contains key default"
          additionalProperties:
            $ref: '#/components/schemas/PriceLevel'
        additionCategoryIds:
          type: array
          items:
            type: string
            example: "aaaa601403f2e10032ac1111"
    PriceLevel:
      type: object
      required: 
        - price
      properties:
        price:
          type: number
          example: 399.99
    VirtualProduct:
      type: object
      required:
        - type
        - productId
        - name
        - measure
        - vatRate
        - vatId
      description: "PlaceValues is present if placeId specified by query parameter."
      properties:
        productId:
          type: string
          example: "p:HDjbfs"
        name:
          type: string
          example: "My virtua product"
        type:
          type: string
          example: "loyaltyStamps"
        measure:
          type: string
          example: "pcs"
        vatRate:
          type: number
          example: 0.21
        vatId:
          type: number
    AdditionCategory:
      type: object
      required: 
        - additionCategoryId
        - title
        - additions
      properties:
        additionCategoryId:
          type: string
          example: "aaaa601403f2e10032ac1111"
        title:
          type: string
          example: "Pizza additions"
        min:
          type: number
          example: 1
        max:
          type: number
          example: 5
        additions:
          type: array
          items:
            $ref: "#/components/schemas/Addition"
    Addition:
      type: object
      required: 
        - additionId
        - productId
        - additionPrice
        - subtractionPrice
        - vatRate
        - title
        - measure
        - vatId
      properties:
        additionId:
          type: string
          example: "aaaa601403f2e10032ac1464"
        productId:
          type: string
          example: "p:765764"
        additionPrice:
          type: number
          example: 3.15
        subtractionPrice:
          type: number
          example: 0
        vatRate:
          type: number
          example: 0.21
        vatId:
          type: number
          example: 1
        title:
          type: string
          example: "Extra cheese"
        measure:
          type: string
          example: "pcs"
