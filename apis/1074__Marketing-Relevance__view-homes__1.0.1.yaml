openapi: 3.0.0
info:
  description: ''
  version: "1.0.1"
  title: View Homes
  contact:
    email: support@mrelevance.com
    name: Marketing Relevance
    url: 'https://marketingrelevance.com/'
tags:
  - name: Region
    description: Division
  - name: Community
    description: Subdivision
  - name: Plan
    description: 'Home Design'
  - name: Spec
    description: 'property'
security:
  - APIKeyHeader: []
paths:
  /regions:
    get:
      tags:
        - Region
      parameters:
        - in: query
          name: include
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - location
                - parent
                - media
                - video
                - communities
                - plans
                - specs
        - in: query
          name: filter
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              status:
                type: string
                example: Active
      responses:
        '200':
          description: A list of regions
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 0
                  locale:
                    type: string
                    example: en
                  message:
                    type: string
                    example: OK
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items: 
                          $ref: '#/components/schemas/Region'
                      links:
                        type: object
                        properties:
                          first:
                            type: string
                            format: uri
                            example: https://viewhomes.test/api/public/v1/regions?page[number]=1
                          last:
                            type: string
                            format: uri
                            example: https://viewhomes.test/api/public/v1/regions?page[number]=5
                          prev:
                            type: string
                            format: uri
                            nullable: true
                            example: https://viewhomes.test/api/public/v1/regions?page[number]=2
                          next:
                            type: string
                            format: uri
                            nullable: true
                            example: https://viewhomes.test/api/public/v1/regions?page[number]=3
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 2
                          from:
                            type: integer
                            example: 31
                          path:
                            type: string
                            format: uri
                            example: https://viewhomes.test/api/public/v1/regions
                          per_page:
                            type: integer
                            example: 30
                          to:
                            type: integer
                            example: 60
                          total:
                            type: integer
                            example: 142
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  '/regions/{UUID}':
    get:
      tags:
        - Region
      summary: ''
      description: ''
      parameters:
        - in: path
          name: UUID
          description: ''
          required: true
          schema:
            type: string
            format: uuid
            example: e1ba6047-3298-4b83-a781-0bebbee0ee1d
        - in: query
          name: include
          schema:
            type: array
            items:
              type: string
              enum:
                - location
                - plans
                - specs
                - communities
                - communities.location
                - communities.galleries
                - communities.galleries.media
                - communities.galleries.videos
                - communities.media
                - communities.videos
                - parent
                - media
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Region'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /communities:
    get:
      tags:
        - Community
      summary: ''
      description: ''
      parameters:
        - in: query
          name: include
          description: ''
          schema:
            type: array
            items:
              type: string
              enum:
                - location
                - plans
                - specs
                - specs.plan
                - spec.plan.parent
                - lots
                - media
                - videos
                - galleries
                - galleries.media
                - galleries.videos
        - in: query
          name: filter
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              status:
                type: string
                example: Active
              type:
                type: string
                example: Single Family Home
        - in: query
          name: sort
          description: Sort by property (prepend '-' to sort in descending order).
          schema:
            type: string
            enum:
              - name
              - name-
              - price_min
              - -price_min
              - price_max
              - -price_max
              - sqft_min
              - -sqft_min
              - sqft_max
              - -sqft_max
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 0
                  locale:
                    type: string
                    example: en
                  message:
                    type: string
                    example: OK
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Community'
                      links:
                        type: object
                        properties:
                          first:
                            type: string
                            format: uri
                          last:
                            type: string
                            format: uri
                          next:
                            type: string
                            nullable: true
                            format: uri
                          prev:
                            type: string
                            nullable: true
                            format: uri
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                          from:
                            type: integer
                          last_page:
                            type: integer
                          path:
                            type: string
                            format: uri
                          per_page:
                            type: integer
                            example: 30
                          to:
                            type: integer
                          total:
                            type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
  '/communities/{UUID}':
    get:
      tags:
        - Community
      summary: ''
      description: ''
      parameters:
        - in: path
          name: UUID
          description: ''
          required: true
          schema:
            type: string
            format: uuid
            example: c1e54626-1882-40fd-b6a2-635c0fe3cb7a
        - in: query
          name: include
          schema:
            type: array
            items:
              type: string
              enum:
                - location
                - agents
                - agents.avatar
                - plans
                - plans.parent
                - specs
                - specs.plan
                - specs.plan.parent
                - lots
                - media
                - videos
                - galleries
                - galleries.media
                - galleries.videos
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 0
                  locale:
                    type: string
                    example: en
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: '#/components/schemas/Community'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /communities/{UUID}/plans:
    get:
      tags:
        - Community
      summary: 'Community Plans'
      description: 'All plans for a given community. Paginated with 30 results per page.'
      parameters:
        - in: path
          name: UUID
          description: Community UUID
          required: true
          schema:
            type: string
            format: uuid
            example: c1e54626-1882-40fd-b6a2-635c0fe3cb7a
        - in: query
          name: include
          description: ''
          schema:
            type: array
            items:
              type: string
              enum:
                - media
                - videos
                - galleries
                - parent
                - parent.media
                - parent.videos
                - parent.galleries
        - in: query
          name: sort
          description: 'Prepend "-" to sort in descending order e.g. -name'
          schema:
            type: string
            enum:
              - name
              - price_min
              - price_max
              - stories
              - baths_min
              - baths_max
              - beds_min
              - beds_max
              - created_at
              - updated_at
      responses:
        '200':
          description: 'An array of plan objects for the given community UUID.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 0
                  locale:
                    type: string
                    example: en
                  message:
                    type: string
                    example: OK
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Plan'
                      links:
                        type: object
                        properties:
                          first:
                            type: string
                            format: uri
                          last:
                            type: string
                            format: uri
                          prev:
                            type: string
                            format: uri
                            nullable: true
                          next:
                            type: string
                            format: uri
                            nullable: true
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                          last_page:
                            type: integer
                          path:
                            type: string
                            format: uri
                            example: https://viewhomes.test/api/public/v1/communities/c1e54626-1882-40fd-b6a2-635c0fe3cb7a/plans
                          per_page:
                            type: integer
                          to:
                            type: integer
                          total:
                            type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
  /communities/{UUID}/plans/{planUUID}:
    get:
      tags:
        - Community
      summary: 'Community Plans'
      description: ''
      parameters:
        - in: path
          name: UUID
          description: Community UUID
          required: true
          schema:
            type: string
            format: uuid
            example: c1e54626-1882-40fd-b6a2-635c0fe3cb7a
        - in: path
          name: planUUID
          description: Plan UUID
          required: true
          schema:
            type: string
            format: uuid
            example: 7e424fb2-ffe8-46ad-9918-a1f386a450fc
        - in: query
          name: include
          description: ''
          schema:
            type: array
            items:
              type: string
              enum:
                - media
                - videos
                - galleries
                - parent
                - parent.media
                - parent.videos
                - parent.galleries
      responses:
        '200':
          description: 'A plan record.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 0
                  locale:
                    type: string
                    example: en
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: '#/components/schemas/Plan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    
  /plans:
    get:
      tags:
        - Plan
      summary: ''
      description: 'Retrieve Master Plans'
      parameters:
        - in: query
          name: include
          schema:
            type: array
            items:
              type: string
              enum:
                - media
                - videos
                - galleries
                - children.media
                - children.videos
                - children.galleries
        - in: query
          name: sort
          description: 'Prepend "-" to sort in descending order e.g. -name'
          schema:
            type: string
            enum:
              - name
              - price_min
              - price_max
              - stories
              - baths_min
              - baths_max
              - beds_min
              - beds_max
              - created_at
              - updated_at
        - in: query
          name: filter
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              status:
                type: string
                example: Active
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: integer
                  locale:
                    type: string
                  message:
                    type: string
                    example: OK
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/MasterPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /plans/{UUID}:
    get:
      tags:
        - Plan
      summary: 'Retrieve Master/Community Plan'
      description: ''
      parameters:
        - in: path
          name: UUID
          description: 'Plan UUID'
          required: true
          schema:
            type: string
            format: uuid
            example: f0b3375b-fe4d-422b-85cb-3d286274bbf2
        - in: query
          name: include
          description: ''
          schema:
            type: string
            enum:
              - children
              - parent
              - community
              - specs
              - galleries
              - galleries.media
              - galleries.videos
              - media
              - videos
      responses:
        '200':
          description: 'A plan record'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: integer
                  locale:
                    type: string
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: '#/components/schemas/Plan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /specs:
    get:
      tags:
        - Spec
      summary: ''
      description: ''
      parameters:
        - in: query
          name: include
          schema:
            type: array
            items:
              type: string
              enum:
                - community
                - plan
                - plan.parent
                - plan.parent.media
                - plan.parent.videos
                - plan.parent.galleries
                - lot
                - location
                - media
                - videos
                - galleries
        - in: query
          name: sort
          description: Prepend "-" to sort in descending order e.g. -name
          schema:
            type: string
            enum:
              - name
              - price
              - original_price
              - sqft
              - stories
              - baths
              - half_baths
              - beds
        - in: query
          name: filter
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              status:
                type: string
                example: Active
              type:
                type: string
                example: Single Family Home
              region:
                type: string
                format: uuid
              community:
                type: string
                format: uuid
      responses:
        '200':
          description: A spec record.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: integer
                  locale:
                    type: string
                  message:
                    type: string
                    example: OK
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Spec'
                      links:
                        type: object
                        properties:
                          first:
                            type: string
                            format: uri
                            example: https://viewhomes.test/api/public/v1/specs?page%5Bnumber%5D=1
                          last:
                            type: string
                            format: uri
                            example: https://viewhomes.test/api/public/v1/specs?page%5Bnumber%5D=11
                          prev:
                            type: string
                            format: uri
                            nullable: true
                          next:
                            type: string
                            format: uri
                            nullable: true
                            example: https://viewhomes.test/api/public/v1/specs?page%5Bnumber%5D=2
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                          from:
                            type: integer
                          last_page:
                            type: integer
                          path:
                            type: string
                            format: uri
                            example: https://viewhomes.test/api/public/v1/specs
                          per_page:
                            type: integer
                            example: 30
                          to:
                            type: integer
                          total:
                            type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
  /specs/{UUID}:
    get:
      tags:
        - Spec
      parameters:
        - in: path
          name: UUID
          description: 'Spec UUID'
          required: true
          schema:
            type: string
            format: uuid
            example: b2f94a2f-42a8-4b9b-8e56-ea3ef54987f2
        - in: query
          name: include
          schema:
            type: array
            items:
              type: string
              enum:
                - community
                - plan
                - plan.parent
                - lot
                - location
                - media
                - videos
                - galleries
      responses:
        '200':
          description: A spec record
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: integer
                  locale:
                    type: string
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: '#/components/schemas/Spec'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
servers:
  - url: 'https://yourviewhome.com/api/public/v1'
components:
  securitySchemes:
    APIKeyHeader:
      type: apiKey
      in: header
      name: X-Authorization
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        code:
          type: integer
        locale:
          type: string
        message:
          type: string
        data:
          type: object
          nullable: true
    Region:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uuid:
          type: string
          format: uuid
          example: e1ba6047-3298-4b83-a781-0bebbee0ee1d
        name:
          type: string
          example: Colorado Springs
        description:
          type: string
          example: '<h1>Colorado Springs!</h1>'
        permalink:
          type: string
          example: colorado-springs
        phone:
          type: string
          example: '+17193829433'
        fax:
          type: string
          example: '+17193829488'
        metadata:
          type: object
          nullable: true
        created_at:
          type: string
          example: '2018-09-27T10:45:56+00:00'
        updated_at:
          type: string
          example: '2018-09-27T10:45:56+00:00'
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        videos:
          type: array
          items:
            $ref: '#/components/schemas/Video'
        location:
          type: object
        communities:
          type: array
          items:
            $ref: '#/components/schemas/Community'
        specs:
          type: array
          items:
            $ref: '#/components/schemas/Spec'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    Community:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uuid:
          type: string
          format: uuid
          example: c1e54626-1882-40fd-b6a2-635c0fe3cb7a
        name:
          type: string
          example: Broadmoor View
        permalink:
          type: string
          example: broadmoor-view
        status:
          type: string
          example: Active
        type:
          type: string
          example: Single Family Home
        description:
          type: string
          nullable: true
          example: "<p>Broadmoor View by Aspen View Homes is now open, with prices starting in the low $300s. Our model home is located at 1401 Grand Overlook Street.</p>\r\n\r\n<p>\r\n\t<br>\r\n</p>\r\n\r\n<h3 style=\"text-align: center;\">Take a Tour of the Model Here!</h3>\r\n\r\n<p>\r\n\t<br>\r\n</p>\r\n\r\n<p><span class=\"fr-video fr-dvb fr-draggable\" contenteditable=\"false\" draggable=\"true\"><iframe width=\"853\" height=\"480\" src=\"https://my.matterport.com/show/?m=WTVYEJS1DaP\" frameborder=\"0\" allowfullscreen=\"\"></iframe></span></p>\r\n\r\n<p>*Representative video. Actual home, options and selection vary per community and per city. See sales professional for details.</p>\r\n\r\n<p style=\"text-align: center;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n\t<a href=\"https://www.youtube.com/playlist?list=PLFCxa2qJQUrz2sZXmeLN3illqjFJayhT0\" rel=\"noopener noreferrer\" target=\"_blank\"><img src=\"/storage/app/medialibrary/public/5cd/497/fb1/5cd497fb1d5f3999480655.png\" style=\"width: 139px;\" class=\"fr-fic fr-dib\"></a></p>\r\n\r\n<p>\r\n\t<br>\r\n</p>"
        phone:
          type: string
          nullable: true
          example: '+17194450130'
        fax:
          type: string
          nullable: true
          example: '+17194450130'
        price_min:
          type: integer
          example: 300000
        price_max:
          type: integer
          example: 0
        sqft_min:
          type: integer
          example: 1744
        sqft_max:
          type: integer
          example: 3523
        metadata:
          type: object
          nullable: true
        hours:
          type: string
          nullable: true
        incentives:
          type: string
          nullable: true
        created_at:
          type: string
          example: '2018-09-27T10:57:52+00:00'
        updated_at:
          type: string
          example: '2019-05-09T21:14:57+00:00'
        agents:
          $ref: '#/components/schemas/Profile'
        location:
          $ref: '#/components/schemas/Location'
        lots:
          type: array
          items:
            $ref: '#/components/schemas/Lot'
        specs:
          type: array
          items:
            $ref: '#/components/schemas/Spec'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    Location:
      type: object
      properties:
        id:
          type: integer
          example: 7
        name:
          type: string
          example: Broadmoor View
        lat:
          type: number
          format: float
          example: 38.807582
        lng:
          type: number
          format: float
          example: -104.790164
        full_address:
          type: string
          example: '1401 Grand Overlook St, Colorado Springs, Colorado 80910, USA'
        address_1:
          type: string
          example: 1401 Grand Overlook Street
        address_2:
          type: string
          example: null
        city:
          type: string
          example: Colorado Springs
        county:
          type: string
          example: El Paso County
        directions:
          type: string
          example: '<p>From Hwy 24, take S. Union to the south, turn right on Monterey Rd, follow signs to the model home.</p>'
        created_at:
          type: string
          example: '2018-09-27T10:57:13+00:00'
        updated_at:
          type: string
          example: '2018-12-05T16:22:40+00:00'
        state:
          $ref: '#/components/schemas/State'
        country:
          $ref: '#/components/schemas/Country'
    State:
      type: object
      properties:
        id:
          type: integer
          example: 7
        name:
          type: string
          example: Colorado
        code:
          type: string
          description: State Code (2 Letter)
          example: CO
    Country:
      type: object
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: United States
        code:
          type: string
          description: Country Code (2 Letter)
          example: US
    MasterPlan:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
          format: uuid
        name:
          type: string
        permalink:
          type: string
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        status:
          type: string
        price_min:
          type: number
          format: float
        price_max:
          type: number
          format: float
        sqft_min:
          type: integer
        sqft_max:
          type: integer
        stories:
          type: integer
        baths_min:
          type: integer
        baths_max:
          type: integer
        half_baths_min:
          type: integer
        half_baths_max:
          type: integer
        beds_min:
          type: integer
        beds_max:
          type: integer
        garage_spaces_min:
          type: integer
        garage_spaces_max:
          type: integer
        has_basement:
          type: boolean
        master_bed_location:
          type: string
          nullable: true
          enum:
            - Up
            - Down
        likes:
          type: integer
        metadata:
          type: object
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2018-09-27T13:07:14+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2018-09-27T13:07:14+00:00'
        children:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    Plan:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
          format: uuid
        name:
          type: string
        permalink:
          type: string
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        status:
          type: string
        price_min:
          type: number
          format: float
          nullable: true
        price_max:
          type: number
          format: float
          nullable: true
        sqft_min:
          type: integer
          nullable: true
        sqft_max:
          type: integer
          nullable: true
        stories:
          type: integer
          nullable: true
        baths_min:
          type: integer
          nullable: true
        baths_max:
          type: integer
          nullable: true
        half_baths_min:
          type: integer
          nullable: true
        half_baths_max:
          type: integer
          nullable: true
        beds_min:
          type: integer
          nullable: true
        beds_max:
          type: integer
          nullable: true
        garage_spaces_min:
          type: number
          format: float
          nullable: true
        garage_spaces_max:
          type: number
          format: float
          nullable: true
        has_basement:
          type: boolean
        master_bed_location:
          type: string
          nullable: true
          enum:
            - Up
            - Down
        likes:
          type: integer
        metadata:
          type: object
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2018-09-27T13:07:14+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2018-09-27T13:07:14+00:00'
        parent:
          description: Master Plan
          type: object
    Lot:
      type: object
      properties:
        id:
          type: integer
          example: 443
        uuid:
          type: string
          example: 1def0651-e766-4dd6-a42f-6200ffa43362
        name:
          type: string
          example: Broadmoor View Lot 52 Block 0
        number:
          type: string
          example: '52'
        block_number:
          type: string
          nullable: true
          example: '0'
        status:
          type: string
          example: Closed
        description:
          type: string
          nullable: true
          example: null
        metadata:
          type: object
          nullable: true
        created_at:
          type: string
          example: '2018-09-27T17:08:40+00:00'
        updated_at:
          type: string
          example: '2018-09-27T17:08:40+00:00'
    Spec:
      type: object
      properties:
        id:
          type: integer
          example: '1,'
        uuid:
          type: string
          example: b2f94a2f-42a8-4b9b-8e56-ea3ef54987f2
        name:
          type: string
          example: 1668 Derbyshire St.
        is_featured:
          type: boolean
          example: false
        permalink:
          type: string
          example: 1668-derbyshire-st
        description:
          type: string
        type:
          type: string
          example: Single Family Home
        is_model:
          type: boolean
          example: false
        status:
          type: string
          example: Closed
        price:
          type: number
          format: float
          example: 372772.93
        original_price:
          type: number
          format: float
          example: 2340
        sqft:
          type: integer
          example: 1000
        stories:
          type: number
          format: float
          example: 1
        baths:
          type: integer
          example: 3
        half_baths:
          type: integer
          example: 0
        beds:
          type: integer
          example: 5
        garage:
          type: number
          format: float
          example: 2.5
        has_basement:
          type: boolean
        headline:
          type: string
        is_quick_move_in_home:
          type: boolean
          example: false
        basement_type:
          type: string
        metadata:
          type: array
          items: {}
        created_at:
          type: string
          example: '2018-09-27T17:08:52+00:00'
        updated_at:
          type: string
          example: '2018-09-27T17:08:52+00:00'
        location:
          $ref: '#/components/schemas/Location'
        community:
          $ref: '#/components/schemas/Community'
        plan:
          $ref: '#/components/schemas/Plan'
        lot:
          $ref: '#/components/schemas/Lot'
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        permalink:
          type: string
        type:
          type: string
          nullable: true
    Gallery:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
        permalink:
          type: string
        description:
          type: string
          nullable: true
        created_at:
          type: string
          example: '2018-12-14T21:21:23+00:00'
        updated_at:
          type: string
          example: '2018-12-14T21:21:23+00:00'
        sort_order:
          type: integer
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        videos:
          type: array
          items:
            $ref: '#/components/schemas/Video'
    Media:
      type: object
      properties:
        id:
          type: integer
        caption:
          type: string
        alt_text:
          type: string
        description:
          type: string
        disk_name:
          type: string
        file_name:
          type: string
        file_size:
          type: integer
        content_type:
          type: string
        is_public:
          type: boolean
        url:
          type: string
        created_at:
          type: string
          pattern: >-
            ^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\.[0-9]+)?(Z)?$
          example: '2018-12-14T21:21:23+00:00'
        updated_at:
          type: string
          example: '2018-12-14T21:21:23+00:00'
        sort_order:
          type: integer
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Video:
      type: object
      properties:
        id:
          type: integer
          example: 212
        name:
          type: integer
          example: Shiloh Mesa Community
        permalink:
          type: string
          example: shiloh-mesa-community
        description:
          type: string
          nullable: true
          example: '<p>Shiloh Mesa Community</p>'
        url:
          type: string
          format: uri
          example: https://www.youtube.com/watch?v=oTZ84U-K_5k
        created_at:
          type: string
          example: '2018-11-27T14:33:58+00:00'
        updated_at:
          type: string
          example: '2018-11-27T14:33:58+00:00'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Profile:
      type: object
      properties:
        id:
          type: integer
          example: 10
        permalink:
          type: string
          example: karen-young
        name:
          type: string
          example: Karen Young
        email:
          type: string
          format: email
          nullable: true
          example: 'KarenCYoung@jourrapide.com'
        phone:
          type: string
          nullable: true
          example: '+12534047235'
        position:
          type: string
          nullable: true
          example: 'Sales Specialist'
        bio:
          type: string
          nullable: true
        detailed_bio:
          type: string
          nullable: true
        linkedin_username:
          type: string
          nullable: true
          example: Ficeive
        facebook_username:
          type: string
          nullable: true
          example: Ficeive
        twitter_username:
          type: string
          nullable: true
          example: Ficeive
        instagram_username:
          type: string
          nullable: true
          example: Ficeive
        created_at:
          type: string
          example: '2019-02-20T00:54:06+00:00'
        updated_at:
          type: string
          example: '2019-02-20T00:54:06+00:00'
        avatar:
          $ref: '#/components/schemas/Media'