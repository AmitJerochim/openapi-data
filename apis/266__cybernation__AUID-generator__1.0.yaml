
  "openapi": "3.0.0",
  "info": {
    "title": "Arrival Unique Identifier Generator",
    "description": "Service for identifying all entities in the Arrival universe",
    "contact": {
      "name": "Vladimir Polyakov",
      "email": "polyakov@arrival.com",
      "url": "https://github.com/vlpolyakov"
    },
    "version": "1.0"
  },
  "servers": [{
    "url": "https://auid.cybernation.com/v1",
    "description": "Production server"
  }],
  "paths": {
    "/": {
      "post": {
        "tags": ["AUID Generator"],
        "summary": "Generate Arrival Unique Identifier",
        "description": "Interface generates AUID using extended 256 bit format algorithm with base64 encoding.",
        "operationId": "generate-auid",
        "parameters": [{
          "name": "Date",
          "in": "header",
          "description": "The date and time that the request was originated. The format is defined by [Section 7.1.1.1 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-7.1.1.1).<br/>**NOTE:** That's the only place where we don't use [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) for date-time value, just because we can't and have to be compliant with the orthodox HTTP standard.",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "User-Agent",
          "in": "header",
          "description": "The identification string of user agent (browser, application, etc). The format is defined by [Section 5.5.3 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-5.5.3).",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "X-CorrelationID",
          "in": "header",
          "description": "Header is used for tracebility between the service that executes this method and AUID generator service. Specifying this header into request client will get the same value into response. All logs inside AUID generator service will contain this header value.",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string",
            "maxLength": 36
          }
        }, {
          "name": "Accept-Language",
          "in": "header",
          "description": "List of acceptable human languages for response. The format is defined by [Section 5.3.5 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-5.3.5).",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "description": "Meta information about the service that generates AUID.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{
                    "type": "object",
                    "required": ["tenant"],
                    "properties": {
                      "tenant": {
                        "type": "string",
                        "maxLength": 1024,
                        "default": "arrival"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Source"
                  },
                  {
                    "type": "object",
                    "required": ["model"],
                    "properties": {
                      "model": {
                        "type": "string",
                        "maxLength": 1024,
                        "description": "The type of entity from the source."
                      },
                      "key": {
                        "type": "string",
                        "maxLength": 128,
                        "description": "The natural key from the source."
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-CorrelationID": {
                "description": "Header is used for tracebility between the service that executes this method and AUID generator service. Specifying this header into request client will get the same value into response. All logs inside AUID generator service will contain this header value.",
                "required": false,
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{
                    "$ref": "#/components/schemas/Response"
                  }, {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "object",
                        "properties": {
                          "auid": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }]
                }
              }
            }
          }
        }
      }
    },
    "/batch": {
      "post": {
        "tags": ["AUID Generator"],
        "summary": "Generate a batch with Arrival Unique Identifiers",
        "description": "Interface generates AUID batch using extended 256 bit format algorithm with base64 encoding.",
        "operationId": "generate-auid-batch",
        "parameters": [{
          "name": "Date",
          "in": "header",
          "description": "The date and time that the request was originated. The format is defined by [Section 7.1.1.1 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-7.1.1.1).<br/>**NOTE:** That's the only place where we don't use [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) for date-time value, just because we can't and have to be compliant with the orthodox HTTP standard.",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "User-Agent",
          "in": "header",
          "description": "The identification string of user agent (browser, application, etc). The format is defined by [Section 5.5.3 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-5.5.3).",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "X-CorrelationID",
          "in": "header",
          "description": "Header is used for tracebility between the service that executes this method and AUID generator service. Specifying this header into request client will get the same value into response. All logs inside AUID generator service will contain this header value.",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string",
            "maxLength": 36
          }
        }, {
          "name": "Accept-Language",
          "in": "header",
          "description": "List of acceptable human languages for response. The format is defined by [Section 5.3.5 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-5.3.5).",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "description": "Meta information about the service that generates AUID.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{
                    "type": "object",
                    "required": ["tenant"],
                    "properties": {
                      "tenant": {
                        "type": "string",
                        "maxLength": 1024,
                        "default": "arrival"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Source"
                  },
                  {
                    "type": "object",
                    "required": ["model"],
                    "properties": {
                      "model": {
                        "type": "string",
                        "maxLength": 1024,
                        "description": "The type of entity from the source."
                      },
                      "keys": {
                        "type": "array",
                        "description": "The set of unique natural keys from the source.",
                        "items": {
                          "type": "string",
                          "maxLength": 128
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-CorrelationID": {
                "description": "Header is used for tracebility between the service that executes this method and AUID generator service. Specifying this header into request client will get the same value into response. All logs inside AUID generator service will contain this header value.",
                "required": false,
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "array",
                          "items": {
                            "oneOf": [{
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "auid": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/{auid}": {
      "get": {
        "tags": ["AUID Generator"],
        "summary": "Get meta information by auid",
        "description": "Get meta information about the AUID source.",
        "operationId": "get-auid-meta",
        "parameters": [{
          "name": "auid",
          "in": "path",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string",
            "maxLength": 128
          }
        }, {
          "name": "Date",
          "in": "header",
          "description": "The date and time that the request was originated. The format is defined by [Section 7.1.1.1 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-7.1.1.1).<br/>**NOTE:** That's the only place where we don't use [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) for date-time value, just because we can't and have to be compliant with the orthodox HTTP standard.",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "User-Agent",
          "in": "header",
          "description": "The identification string of user agent (browser, application, etc). The format is defined by [Section 5.5.3 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-5.5.3).",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "X-CorrelationID",
          "in": "header",
          "description": "Header is used for tracebility between the service that executes this method and AUID generator service. Specifying this header into request client will get the same value into response. All logs inside AUID generator service will contain this header value.",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string",
            "maxLength": 36
          }
        }, {
          "name": "Accept-Language",
          "in": "header",
          "description": "List of acceptable human languages for response. The format is defined by [Section 5.3.5 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-5.3.5).",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-CorrelationID": {
                "description": "Header is used for tracebility between the service that executes this method and AUID generator service. Specifying this header into request client will get the same value into response. All logs inside AUID generator service will contain this header value.",
                "required": false,
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{
                    "$ref": "#/components/schemas/Response"
                  }, {
                    "type": "object",
                    "properties": {
                      "result": {
                        "allOf": [{
                            "type": "object",
                            "properties": {
                              "tenant": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "$ref": "#/components/schemas/Source"
                          },
                          {
                            "type": "object",
                            "required": ["model"],
                            "properties": {
                              "model": {
                                "type": "string",
                                "description": "The type of entity from the source."
                              },
                              "key": {
                                "type": "string",
                                "description": "The natural key from the source."
                              }
                            }
                          }
                        ]
                      }
                    }
                  }]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Source": {
        "required": ["instance", "name", "type", "version"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the source like 'system', 'database', 'file-system', etc.",
            "default": "system"
          },
          "name": {
            "type": "string",
            "description": "The name of the source."
          },
          "version": {
            "type": "string",
            "description": "The version of the source."
          },
          "instance": {
            "type": "string",
            "description": "Specific instance of the source."
          },
          "vcs": {
            "$ref": "#/components/schemas/VCS"
          }
        }
      },
      "VCS": {
        "required": ["author", "codebase", "commit"],
        "type": "object",
        "properties": {
          "codebase": {
            "type": "string"
          },
          "commit": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "Alert": {
        "required": ["code", "level", "message", "timestamp"],
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "description": "Alert level.",
            "enum": ["fatal", "error", "warn", "info", "debug", "trace"]
          },
          "code": {
            "minimum": 0,
            "type": "integer",
            "description": "Alert code."
          },
          "timestamp": {
            "type": "string",
            "description": "Alert timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format (yyyy-MM-dd'T'HH:mm:ss.SSSZ).",
            "format": "date-time"
          },
          "element": {
            "type": "string",
            "description": "Target element the alert is related to."
          },
          "message": {
            "type": "string",
            "description": "Message text."
          },
          "link": {
            "type": "string",
            "description": "Alert reference link.",
            "format": "uri"
          },
          "trace": {
            "type": "string",
            "description": "Alert Id in trace log.",
            "format": "uuid"
          }
        }
      },
      "Response": {
        "required": ["code", "locale", "rqid", "status", "timestamp"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status.",
            "enum": ["ok", "fail"]
          },
          "code": {
            "minimum": 0,
            "type": "integer",
            "description": "Response code."
          },
          "timestamp": {
            "type": "string",
            "description": "Response timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format (yyyy-MM-dd'T'HH:mm:ss.SSSZ).",
            "format": "date-time"
          },
          "rqid": {
            "type": "string",
            "description": "Request Id."
          },
          "locale": {
            "type": "string",
            "description": "Response locale as [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) in format specified by [RFC 5646](https://tools.ietf.org/html/rfc5646) (language-TERRITORY)."
          },
          "alerts": {
            "type": "array",
            "description": "The alerts issued with the response.",
            "items": {
              "$ref": "#/components/schemas/Alert"
            }
          }
        }
      }
    }
  }
}