openapi: 3.0.1
info:
  title: Swych Global B2B API(sandbox)
  description: "Global B2B API.\nAPI endpoint and basic models are listed.\n"
  version: '1.0'
servers:
  - url: https://api.swychover.io/sandbox
paths:
  '/api/v1/b2b/{accountId}/balance':
    get:
      summary: get balance
      tags:
        - B2B APIs
      description: "Call this API to retrieve B2B user's account balance.\n"
      operationId: get-api-v1-b2b-accountid-balance
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            enum:
              - '7705833523009415'
            type: string
        - name: subId
          in: query
          description: sub account id
          schema:
            type: integer
        - name: Authorization
          in: header
          description: 'OAuth 2.0 access token obtained from Authentication API. the client uses the "Bearer" authentication scheme to transmit the access token which defined by HTTP/1.1 [RFC2617]'
          required: true
          schema:
            type: string
        - name: device_id
          in: header
          description: device Id
          schema:
            type: string
        - name: latitude
          in: header
          schema:
            type: string
        - name: longitude
          in: header
          schema:
            type: string
        - name: client_ip
          in: header
          description: IP address of client
          schema:
            type: string
        - name: clientId
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
        - name: apiKey
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
      responses:
        '200':
          description: "Successful response\n<style>\n  table {\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid;\n    padding: 10px;\n    text-align: left;\n  }\n</style>\n<br><h3>Status codes & status messages</h3>\n<table style=\"width:100%\">\n  <tr>\n    <th>Status Code</th>\n    <th>Message</th> \n  </tr>\n  <tr>\n    <td>16010001</td>\n    <td>One or more required fileds not provided.</td>\n  </tr>\n  <tr>\n    <td>16010002</td>\n    <td>Account not found.</td>\n  </tr>\n  <tr>\n    <td>16010600</td>\n    <td>Successfully check balance.</td>\n  </tr>\n  <tr>\n    <td>16010601</td>\n    <td>Failed to check balance.</td>\n  </tr>\n</table>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-CheckBalance'
  '/api/v1/b2b/{accountId}/catalog':
    get:
      summary: get catalog
      description: "Retrieve brand catalog for the given B2B user\n"
      tags:
        - B2B APIs
      operationId: get-api-v1-b2b-accountid-catalog
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            enum:
              - '7705833523009415'
            type: string
        - name: pageNo
          in: query
          description: page number
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Size of page
          schema:
            type: integer
        - name: countryCode
          in: query
          description: ISO 3166-1 alpha-3 codes
          schema:
            type: string
        - name: subId
          in: query
          description: sub account id(optional)
          schema:
            type: integer
        - name: Authorization
          in: header
          description: 'OAuth 2.0 access token obtained from Authentication API. the client uses the "Bearer" authentication scheme to transmit the access token which defined by HTTP/1.1 [RFC2617]'
          required: true
          schema:
            type: string
        - name: device_id
          in: header
          description: device Id
          schema:
            type: string
        - name: latitude
          in: header
          schema:
            type: string
        - name: longitude
          in: header
          schema:
            type: string
        - name: client_ip
          in: header
          description: IP address of client
          schema:
            type: string
        - name: clientId
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
        - name: apiKey
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
      responses:
        '200':
          description: "Successful response\n<style>\n  table {\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid;\n    padding: 10px;\n    text-align: left;\n  }\n</style>\n<br><h3>Status codes & status messages</h3>\n<table style=\"width:100%\">\n  <tr>\n    <th>Status Code</th>\n    <th>Message</th> \n  </tr>\n  <tr>\n    <td>16010001</td>\n    <td>One or more required fileds not provided.</td>\n  </tr>\n  <tr>\n    <td>16010002</td>\n    <td>Account not found.</td>\n  </tr>\n  <tr>\n    <td>16010800</td>\n    <td>Successfully retrieve brand catalog.</td>\n  </tr>\n  <tr>\n    <td>16010801</td>\n    <td>Failed to retrieve brand catalog.</td>\n  </tr>\n</table>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-GetCatelog'
              example:
                categoryList:
                  - 1 - Sports and Outdoors
                  - 2 - Online
                  - 3 - Clothing
                  - 4 - Entertainment
                  - 5 - Travel
                  - 6 - Restaurants and Dining
                  - '7 - Home Improvement '
                  - 8 - Electronics
                  - 9 - Health and Beauty
                  - 10 - Specialty
                  - 11 - Craft and Hobbies
                  - 20 - SpecificCardCategory
                catalog:
                  - brandId: '2'
                    brandName: Adidas
                    brandTC: url
                    brandDisclaimer: url
                    brandRedemptionInstruction: url
                    products:
                      - productId: '2020-02-01T00:00:00.0000000+00:00'
                        productName: $100
                        productType: '0'
                        amount: '100.0'
                        minimumAmount: '100.0'
                        maximumAmount: '100.0'
                        currencySymbol: $
                    brandImage: url
                    denominationType: '0'
                    denominationMin: '10.0'
                    denominationMax: '500.0'
                    canSendToFriend: true
                    canSelfGifting: true
                    canSwych: true
                    canRedeem: true
                    canRegift: true
                    canCashout: false
                    categories:
                      - 3
                      - 20
                    countryCode: USA
                    currency: USD
                    currencySymbol: $
                    claimURL: url
                    availability: 1
                success: true
                message: Successfully retrieve brand catalog.
                statusCode: 16010800
  '/api/v1/b2b/order':
    put:
      summary: order
      description: "This API should be used to order one or more gift vouchers from Swych platform. Swych platform will wait for order confirmation before sending out gift vouchers to the recipient. <br>\nThe API can work in single gift card mode or bulk delivery mode. In single gift card mode, recipientPhoneNumber and recipientEmail are required. In bulk delivery mode, csvFileContent is required and recipientPhoneNumber and recipientEmail fields will be ignored.<br>\n\n"
      tags:
        - B2B APIs
      operationId: put-api-v1-b2b-order
      parameters:
        - name: Authorization
          in: header
          description: 'OAuth 2.0 access token obtained from Authentication API. the client uses the "Bearer" authentication scheme to transmit the access token which defined by HTTP/1.1 [RFC2617]'
          required: true
          schema:
            type: string
        - name: device_id
          in: header
          description: device Id
          schema:
            type: string
        - name: latitude
          in: header
          schema:
            type: string
        - name: longitude
          in: header
          schema:
            type: string
        - name: client_ip
          in: header
          description: IP address of client
          schema:
            type: string
        - name: clientId
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
        - name: apiKey
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
      requestBody:
        description: "The order to create.\n<style>\n  table {\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid;\n    padding: 10px;\n    text-align: left;\n  }\n</style>\n<br><h3>Parameters</h3>\n<table style=\"width:100%\">\n  <tr>\n    <th>Name</th>\n    <th>Type</th> \n    <th>Required</th>\n    <th>Description</th> \n  </tr>\n\n<tr>\n    <td width=\"20%\">accountId</td>\n    <td width=\"10%\">string</td> \n    <td width=\"10%\">yes</td>\n    <td width=\"60%\">B2B user account id</td> \n  </tr>\n<tr>\n    <td width=\"20%\">subId</td>\n    <td width=\"10%\">int</td> \n    <td width=\"10%\">no</td>\n    <td width=\"60%\">Sub account id(Optional)</td> \n  </tr>\n  <tr>\n    <td>brandId</td>\n    <td>string</td> \n    <td>yes</td>\n    <td>Id of gift card B2B user wants to send out</td> \n  </tr>\n  <tr>\n    <td>productId</td>\n    <td>string</td> \n    <td>yes</td>\n    <td>ProductId of denomination</td> \n  </tr>\n  <tr>\n    <td>amount</td>\n    <td>int</td> \n    <td>yes</td>\n    <td>loaded amount of gift card or vouche</td> \n  </tr>\n<tr>\n    <td>senderFirstName</td>\n    <td>string</td> \n    <td>no</td>\n    <td>(optional)sender first name</td> \n  </tr>\n<tr>\n    <td>senderLastName</td>\n    <td>string</td> \n    <td>no</td>\n    <td>(optional)sender last name</td> \n  </tr>\n  <tr>\n    <td>senderEmail</td>\n    <td>string</td> \n    <td>no</td>\n    <td>(optional)sender email</td> \n  </tr>\n  <tr>\n    <td>senderPhone</td>\n    <td>string</td> \n    <td>no</td>\n    <td>(optional)sender phone number(including country code), numeric only</td> \n  </tr>\n<tr>\n    <td>recipientFirstName</td>\n    <td>string</td> \n    <td>No</td>\n    <td>(optional)recipient first name</td> \n  </tr>\n<tr>\n    <td>recipientLastName</td>\n    <td>string</td> \n    <td>No</td>\n    <td>(optional)recipient last name</td> \n  </tr>\n  <tr>\n    <td>recipientEmail</td>\n    <td>string</td> \n    <td>yes</td>\n    <td>recipient email</td> \n  </tr>\n  <tr>\n    <td>recipientPhoneNumber</td>\n    <td>string</td> \n    <td>yes</td>\n    <td>recipient phone number(including country code), numeric only</td> \n  </tr>\n  <tr>\n    <td>notificationDeliveryMethod</td>\n    <td>int</td> \n    <td>yes</td>\n    <td>0 - All, 1 - SMS, 2 - Email</td> \n  </tr>\n  <tr>\n    <td>giftDeliveryMode</td>\n    <td>int</td> \n    <td>yes</td>\n    <td>1 - SwychApp, 2 - Short redemption Link, 3  - Gift card certificate, 4 - Gift card plain text. If Gift card certificate is chosen, Swych server will claim the gift card directly from processor, then return the gift card link in the response. Note that some gift cards doesn't support this mode.</td> \n  </tr>\n  <tr>\n    <td>swychable</td>\n    <td>bool</td> \n    <td>yes</td>\n    <td>if recipient can swych the gift card to other.</td> \n  </tr>\n  <tr>\n    <td>message</td>\n    <td>string</td> \n    <td>no</td>\n    <td>Message to end user</td> \n  </tr>\n  <tr>\n    <td>imageURL</td>\n    <td>string</td> \n    <td>no</td>\n    <td>Url of image attached to the gift being sent</td> \n  </tr>\n  <tr>\n    <td>csvContent</td>\n    <td>string</td> \n    <td>no</td>\n    <td>Base64 encoded CSV file content which contains all recipient informaiton. The CSV file should be in format of first name, last name, phone number and email.</td> \n  </tr>\n  <tr>\n    <td>batchId</td>\n    <td>string</td> \n    <td>no</td>\n    <td>Id of batch. This will be used in bulk delivery mode</td> \n  </tr>\n  <tr>\n    <td>accessCode</td>\n    <td>string</td> \n    <td>no</td>\n    <td>access code to confirm order later. If not provided, server will generate one in response</td> \n  </tr>\n  <tr>\n    <td>deliverGiftTo</td>\n    <td>int</td> \n    <td>no</td>\n    <td>(Optional): 1 - Recipient (End user), 2 - B2B Client</td> \n  </tr>\n\n\n</table>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-PlaceOrder'
      responses:
        '200':
          description: "Successful response\n<br><h3>Status codes & status messages</h3>\n<table style=\"width:100%\">\n  <tr>\n    <th>Status Code</th>\n    <th>Notes</th> \n  </tr>\n<tr>\n    <td>16010001</td>\n    <td>One or more parameters in accountId/brandId/productId/amount/giftdeliveryMode/recipientPhone/recipientEmail are missing or invalid</td>\n  </tr>\n  <tr>\n    <td>16010002</td>\n    <td>AccountId and ClientId not match</td>\n  </tr>\n  <tr>\n    <td>16010900</td>\n    <td>Successfully place order.</td>\n  </tr>\n  <tr>\n    <td>16010901</td>\n    <td>Failed to place order because of some unexpected errors.</td>\n  </tr>\n  <tr>\n    <td>16010902</td>\n    <td>Inadequate balance to place order.</td>\n  </tr>\n  <tr>\n    <td>16010903</td>\n    <td>The chosen giftDeliveryMode is not allowed for this brand</td>\n  </tr>\n  <tr>\n    <td>16010904</td>\n    <td>Invalid CSV format.</td>\n  </tr>\n  \n</table>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-Order'
    post:
      summary: order confirm
      description: "B2B customer confirms the purchase to Swych platform. Swych platform sends out the purchased voucher/gift to end user.\nNote that orders will expire (usually in 15 mins) after they were initiated. Please confirm your orders before their expiry.\nIf using bulk delivery, server will not return transaction detail in response due to asynchronous communication. Therefore users should call order detail API to retrieve transactions."
      tags:
        - B2B APIs
      operationId: post-api-v1-b2b-order
      parameters:
        - name: Authorization
          in: header
          description: 'OAuth 2.0 access token obtained from Authentication API. the client uses the "Bearer" authentication scheme to transmit the access token which defined by HTTP/1.1 [RFC2617]'
          required: true
          schema:
            type: string
        - name: device_id
          in: header
          description: device Id
          schema:
            type: string
        - name: latitude
          in: header
          schema:
            type: string
        - name: longitude
          in: header
          schema:
            type: string
        - name: client_ip
          in: header
          description: IP address of client
          schema:
            type: string
        - name: clientId
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
        - name: apiKey
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
      requestBody:
        description: "The order to confirm.\n\n<style>\n  table {\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid;\n    padding: 10px;\n    text-align: left;\n  }\n</style>\n<br><h3>Parameters</h3>\n<table style=\"width:100%\">\n  <tr>\n    <th>Name</th>\n    <th>Type</th> \n    <th>Required</th>\n    <th>Description</th> \n  </tr>\n\n<tr>\n    <td width=\"20%\">accountId</td>\n    <td width=\"10%\">string</td> \n    <td width=\"10%\">yes</td>\n    <td width=\"60%\">B2B user account id</td> \n  </tr>\n  <tr>\n    <td>orderId</td>\n    <td>string</td> \n    <td>yes</td>\n    <td>Order ID from the Order API response</td> \n  </tr>\n  <tr>\n    <td>accessCode</td>\n    <td>string</td> \n    <td>conditional</td>\n    <td>Required in gift delivery mode 3 or 4</td> \n  </tr>\n  <tr>\n    <td>subId</td>\n    <td>int</td> \n    <td>optional</td>\n    <td>Sub account id (Not Implemented Yet)</td> \n  </tr>\n\n</table>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-orderConfirm'
      responses:
        '200':
          description: "Successful response. \nNote that \"Giftcard\" object in response body will be returned only if gift delivery mode is 4.\n<br><h3>Status codes & status messages</h3>\n<table style=\"width:100%\">\n  <tr>\n    <th>Status Code</th>\n    <th>Notes</th> \n  </tr>\n  <tr>\n    <td>16010001</td>\n    <td>accountId or orderId is missing or invalid</td>\n  </tr>\n  <tr>\n    <td>16010002</td>\n    <td>accountId and clientId not match</td>\n  </tr>\n  <tr>\n    <td>16011000</td>\n    <td>Successfully confirm order.</td>\n  </tr>\n  <tr>\n    <td>16011001</td>\n    <td>Failed to confirm order due to some unexpected errors.</td>\n  </tr>\n  <tr>\n    <td>16011002</td>\n    <td>Order not found or expired.</td>\n  </tr>\n  <tr>\n    <td>16011003</td>\n    <td>Access code incorrect.</td>\n  </tr>\n  <tr>\n    <td>16011004</td>\n    <td>Problems encountered while caling gift card processor. (Highly possible the gift card is out of stock)</td>\n  </tr>\n</table>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-OrderConfirm'
  '/api/v1/b2b/{accountId}/history':
    get:
      summary: retrieve history
      description: "Retrieve history of the specified `account`\n"
      tags:
        - B2B APIs
      operationId: get-api-v1-b2b-accountid-history-startdate-startdate-enddate-enddate
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            enum:
              - '7705833523009415'
            type: string
        - name: startDate
          in: query
          description: 'start date, in format yyyyMMdd, e.g. 20190101'
          required: true
          schema:
            enum:
              - 20190101
            type: integer
        - name: endDate
          in: query
          description: 'end date, in format yyyyMMdd'
          required: true
          schema:
            enum:
              - 20190601
            type: integer
        - name: pageNo
          in: query
          description: page number
          schema:
            enum:
              - 1
            type: integer
        - name: pageSize
          in: query
          description: Size of page
          schema:
            enum:
              - 5
            type: integer
        - name: subId
          in: query
          description: sub account id(optional)
          schema:
            type: integer
        - name: Authorization
          in: header
          description: 'OAuth 2.0 access token obtained from Authentication API. the client uses the "Bearer" authentication scheme to transmit the access token which defined by HTTP/1.1 [RFC2617]'
          required: true
          schema:
            type: string
        - name: device_id
          in: header
          description: device Id
          schema:
            type: string
        - name: latitude
          in: header
          schema:
            type: string
        - name: longitude
          in: header
          schema:
            type: string
        - name: client_ip
          in: header
          description: IP address of client
          schema:
            type: string
        - name: clientId
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
        - name: apiKey
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
      responses:
        '200':
          description: "Successful response\n<style>\n  table {\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid;\n    padding: 10px;\n    text-align: left;\n  }\n</style>\n<br><h3>Status codes & status messages</h3>\n<table style=\"width:100%\">\n  <tr>\n    <th>Status Code</th>\n    <th>Message</th> \n  </tr>\n<tr>\n    <td>16010001</td>\n    <td>One or more required fileds not provided.</td>\n  </tr>\n  <tr>\n    <td>16010002</td>\n    <td>Account not found.</td>\n  </tr>\n  <tr>\n    <td>16011100</td>\n    <td>Successfully retrieve history.</td>\n  </tr>\n  <tr>\n    <td>16011101</td>\n    <td>Failed to retrieve history.</td>\n  </tr>\n  <tr>\n    <td>16011102</td>\n    <td>Invalid start date or end date.</td>\n  </tr>\n</table>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-RetrieveHistory'
              example:
                statusCode: 16011100
                statusMessage: Successfully retrieve history.
                transactions:
                  - transactionId: A1B2C3
                    parentTransactionId: 1A2B3C
                    transactionDate: '20190115'
                    redeemOrSaveDate: '20190115'
                    transactionType: 0
                    amount: '100'
                    recipientPhoneNumber: '+11234567889'
                    recipientEmail: joe@bestdeal.com
                    recipientName: Joe Doe
                    recipientSwychId: '1234567890'
                    status: 0
                    brand:
                      brandId: '2'
                      brandName: Adidas
                      currency: USD
                      brandTC: https://swychdoc.com/tc/1.html
                      brandDisclaimer: https://swychdoc.com/disclaimer/1.html
                      brandRedemptionInstruction: https://swychdoc.com/ri/1.html
                      products:
                        - productId: '2020-02-01T00:00:00.0000000+00:00'
                          productName: $100
                          productType: '0'
                          amount: '100'
                          minimumAmount: '0'
                          maximumAmount: '0'
                          currencySymbol: $
                      brandImage: https://swychdoc.com/brand/img/1.jpg
                      canSendToFriend: true
                      canSelfGifting: true
                      canSwych: true
                      canRedeem: true
                      canRegift: true
                      canCashout: true
                      countryCode: '1'
                      claimURL: https://goswych.com/claim/A1B2C3
                    payments: { }
                    messageFromSender:
                      message: Best wishes to you
                      imageUrl: https://swychdoc.com/img/order/1.jpg
                      videoUrl: https://swychdoc.com/video/order/1.mp4
                    senderPhoneNumber: '+11234556789'
                    senderEmail: jack@bestdeal.com
                    senderName: Jack Shepherd
                    senderSwychId: '2134567890'
                    statusDisplay: Redeemed
                    previousPaymentType: { }
                    orderId: buyonline001
                    showAttachment: true
                    foreignCurrency: CAD
                    foreignAmount: 100
                    DeliveryType: 0
                    SubId: 0
  '/api/v1/b2b/{accountId}/order':
    get:
      summary: get order details
      description: "Retrieve the order details for a given **order ID**\n"
      tags:
        - B2B APIs
      operationId: get-api-v1-b2b-accountid-order-orderid-orderid
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            enum:
              - '7705833523009415'
            type: string
        - name: orderId
          in: query
          description: Order ID from the Order API response
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'OAuth 2.0 access token obtained from Authentication API. the client uses the "Bearer" authentication scheme to transmit the access token which defined by HTTP/1.1 [RFC2617]'
          required: true
          schema:
            type: string
        - name: device_id
          in: header
          description: device Id
          schema:
            type: string
        - name: latitude
          in: header
          schema:
            type: string
        - name: longitude
          in: header
          schema:
            type: string
        - name: client_ip
          in: header
          description: IP address of client
          schema:
            type: string
        - name: clientId
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
        - name: apiKey
          in: header
          required: true
          schema:
            enum:
              - swych_b2b
            type: string
      responses:
        '200':
          description: "Successful response\n<style>\n  table {\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid;\n    padding: 10px;\n    text-align: left;\n  }\n</style>\n<br><h3>Status codes & status messages</h3>\n<table style=\"width:100%\">\n  <tr>\n    <th>Status Code</th>\n    <th>Message</th> \n  </tr>\n<tr>\n    <td>16010001</td>\n    <td>One or more required fileds not provided.</td>\n  </tr>\n  <tr>\n    <td>16010002</td>\n    <td>Account not found.</td>\n  </tr>\n  <tr>\n    <td>16011200</td>\n    <td>Successfully retrieve transaction details.</td>\n  </tr>\n  <tr>\n    <td>16011201</td>\n    <td>Failed to retrieve transaction details.</td>\n  </tr>\n  <tr>\n    <td>16011202</td>\n    <td>Transaction not found.</td>\n  </tr>\n</table>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-OrderDetail'
              example:
                statusCode: 16011200
                statusMessage: Successfully retrieve transaction details.
                transactions:
                  - transactionId: A1B2C3
                    parentTransactionId: 1A2B3C
                    transactionDate: '20190115'
                    redeemOrSaveDate: '20190115'
                    transactionType: 0
                    amount: '100'
                    recipientPhoneNumber: '+11234567889'
                    recipientEmail: joe@bestdeal.com
                    recipientName: Joe Doe
                    recipientSwychId: '1234567890'
                    status: 0
                    brand:
                      brandId: '2'
                      brandName: Adidas
                      currency: USD
                      brandTC: https://swychdoc.com/tc/1.html
                      brandDisclaimer: https://swychdoc.com/disclaimer/1.html
                      brandRedemptionInstruction: https://swychdoc.com/ri/1.html
                      products:
                        - productId: '2020-02-01T00:00:00.0000000+00:00'
                          productName: $100
                          productType: '0'
                          amount: '100'
                          minimumAmount: '0'
                          maximumAmount: '0'
                          currencySymbol: $
                      brandImage: https://swychdoc.com/brand/img/1.jpg
                      canSendToFriend: true
                      canSelfGifting: true
                      canSwych: true
                      canRedeem: true
                      canRegift: true
                      canCashout: true
                      countryCode: '1'
                      claimURL: https://goswych.com/claim/A1B2C3
                    payments: { }
                    messageFromSender:
                      message: Best wishes to you
                      imageUrl: https://swychdoc.com/img/order/1.jpg
                      videoUrl: https://swychdoc.com/video/order/1.mp4
                    senderPhoneNumber: '+11234556789'
                    senderEmail: jack@bestdeal.com
                    senderName: Jack Shepherd
                    senderSwychId: '2134567890'
                    statusDisplay: Redeemed
                    previousPaymentType: { }
                    orderId: buyonline001
                    showAttachment: true
                    foreignCurrency: CAD
                    foreignAmount: 100
                    DeliveryType: 0
  /oauth2/token:
    post:
      summary: Authentication API
      description: "Grant Access Token<br>\nPlease contact Swych team to apply for client_id, client_secret, resource before testing this API.<br>\n"
      tags:
        - Authentication
      operationId: access-token
      requestBody:
        description: ''
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: 'Specifies the requested grant type. In a Client Credentials Grant flow, the value must be client_credentials.'
                  example: 'client_credentials'
                client_id:
                  type: string
                  description: 'Specifies the Authentication client id'
                  example: '56a28836-6743-4249-b22b-5e1a224b1693'
                client_secret:
                  type: string
                  description: 'Specifies the Authentication secret key'
                  example: '6hU2O@4]e-QIssTkYoiJ7?e6keKqkL*Y'
                resource:
                  type: string
                  description: 'Specifies the Authentication App ID URI'
                  example: '3a8271ef-ef89-445c-bca2-a0a66d1afc52'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-GrantToken'
              example:
                token_type: Bearer
                expires_in: '3600'
                ext_expires_in: '3600'
                expires_on: '1557328406'
                not_before: '1557324506'
                resource: resource-id
                access_token: token
  /api/v1/b2b/suggestedRate:
    post:
      summary: suggested rate
      description: suggested rate
      operationId: suggested-rate
      parameters:
        - name: Authorization
          in: header
          description: 'OAuth 2.0 access token obtained from Authentication API. the client uses the "Bearer" authentication scheme to transmit the access token which defined by HTTP/1.1 [RFC2617]'
          required: true
          schema:
            type: string
        - name: device_id
          in: header
          description: device Id
          schema:
            type: string
        - name: latitude
          in: header
          schema:
            type: string
        - name: longitude
          in: header
          schema:
            type: string
        - name: client_ip
          in: header
          description: IP address of client
          schema:
            type: string
        - name: clientId
          in: header
          required: true
          schema:
            type: string
        - name: apiKey
          in: header
          required: true
          schema:
            type: string
      requestBody:
        description: get suggested exchange rate between "sourceCurrency" and "targetCurrency"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-SuggestedRate'
      responses:
        '200':
          description: "<style>\n  table {\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid;\n    padding: 10px;\n    text-align: left;\n  }\n</style>\n<br><h3>Status codes & status messages</h3>\n<table style=\"width:100%\">\n  <tr>\n    <th>Status Code</th>\n    <th>Message</th> \n  </tr>\n  <tr>\n    <td>16010001</td>\n    <td>One or more required fileds not provided.</td>\n  </tr>\n  <tr>\n    <td>16011300</td>\n    <td>Successfully get exchange rate.</td>\n  </tr>\n  <tr>\n    <td>16011301</td>\n    <td>Currently cannot get suggested rate between these two currency.</td>\n  </tr>\n  <tr>\n    <td>16011302</td>\n    <td>Invalid currency code.</td>\n  </tr>\n</table>"
          content:
            application/json:
              example:
                suggestedRate: 0.014344
                sourceCurrency: INR
                targetCurrency: USD
                success: true
                message: 
                statusCode: 0
components:
  schemas:
    Account:
      properties:
        accountId:
          type: string
          description: B2B user account id
        companyName:
          type: string
          description: B2B user company name
          example: BestDeal
        companyEmail:
          type: string
          description: 'email of B2B user account, Swych will send notification, alert to this email, for example, low balance alert.'
          example: info@bestDeal.com
        companyPhone:
          type: string
          description: main phone number of B2B user
          example: '+18907651234'
        companyLogo:
          type: string
          description: URL of logo of company
          example: https://goswych.com/image/image1.jpg
        status:
          type: integer
          description: 'Status of account, 0 - Pending, 1 - Active, 2 - Inactive….'
          example: 0
        contactName:
          type: string
          description: Name of B2B user main contact
          example: John Doe
        contactPhone:
          type: string
          example: '+18905671234'
        contactEmail:
          type: string
          example: johndoe@bestdeal.com
        lowBalanceThreshold:
          type: integer
          description: 'Low balance alert threshold for user''s account. Once user''s account balance falls below the threshold, An alert email will be sent out automatically. Low balance alert email template will be used.  NOTE, if lowBalanceThreshold is ZERO, it means the alert is disabled.'
          example: 10000
        allowedDeliveryMethod:
          type: integer
          description: 'Allowed devlivery methods of the user, it can be combination of methods.  Possible delivery methods please check Delivery Methods in "Static Data" section'
          example: 0
        emailDeliveryTemplateName:
          type: string
          description: 'Name of email delivery template. The template files (HTML, XML) will be store on server.'
          example: etemplate001
        smsDeliveryTemplateName:
          type: string
          description: 'Name of SMS delivery template, similar as email template name.'
          example: stemplate001
        accountReplenishmentMethod:
          type: integer
          description: 'method of account replenishment, possible multiple methods, check Static Data section'
          example: 0
        defaultVoucherLinkExpiry:
          type: integer
          description: 'Default expiry (Days) of voucher/Gift link, e.g. 30 days, 60 days, 180 days. This is default value, Voucher/Gift link expiry still can be specified when sending out.'
          example: 180
      description: B2B user's account
    Brand:
      properties:
        brandId:
          type: string
          description: Id of brand
          example: '2'
        brandName:
          type: string
          description: Name of brand
          example: Adidas
        currency:
          type: string
          description: 'Curreny code of product, ISO-4217, http://www.iotafinance.com/en/ISO-4217-Currency-Codes.html'
          example: USD
        brandTC:
          type: string
          description: URL of the T&C of the brand
          example: https://swychdoc.com/tc/1.html
        brandDisclaimer:
          type: string
          description: URL of disclaimer of brand
          example: https://swychdoc.com/disclaimer/1.html
        brandRedemptionInstruction:
          type: string
          description: URL of redemption instruction of brand
          example: https://swychdoc.com/ri/1.html
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: Products of brand
        brandImage:
          type: string
          description: URL of brand image
          example: https://swychdoc.com/brand/img/1.jpg
        denominationType:
          type: integer
          description: '0 - Fixed, 1 - Range'
          example: '0'
        denominationMin:
          type: number
          description: Minimum amount of denomination range.
          format: decimal
          example: '10'
        denominationMax:
          type: number
          description: Maximum amount of denomination range.
          format: decimal
          example: '500'
        canSendToFriend:
          type: boolean
          description: the brand can be sent to friend or not
          example: true
        canSelfGifting:
          type: boolean
          description: the brand can be purchased for self-use
          example: true
        canSwych:
          type: boolean
          description: gift card sent with this brand can be swyched to other brand(s)
          example: true
        canRedeem:
          type: boolean
          description: 'the brand can be redeemed i.e., this is a retailer issued card'
          example: true
        canRegift:
          type: boolean
          description: the brand can be regifted to others
          example: true
        canCashout:
          type: boolean
          description: the brand can be cashed out
          example: true
        countryCode:
          type: string
          description: ISO-3166-1 (Alpha-3)
          example: '1'
        claimURL:
          type: string
          example: https://goswych.com/claim/A1B2C3
        giftcardType:
          type: integer
          description: '1- Branded Gift Card, 2/3 - Category Card'
          example: 1
      description: Brand information
    Product:
      properties:
        productId:
          type: string
          description: Id of product (format should be brandId - product Id)
          example: '2-1'
        productName:
          type: string
          description: 'Name of product, for example $100'
          example: $100
        productType:
          type: integer
          description: '0 - Fixed, 1 - Range'
          example: '0'
        amount:
          type: number
          description: Amount of product
          format: decimal
          example: '100'
        minimumAmount:
          type: number
          description: Minimum amount of range.
          format: decimal
          example: '100'
        maximumAmount:
          type: number
          description: Maximum amount of range.
          format: decimal
          example: '100'
        currencySymbol:
          type: string
          description: 'Symbol of Currency, iSO- 4217, http://www.iotafinance.com/en/ISO-4217-Currency-Codes.html'
          example: $
    Transaction:
      properties:
        transactionId:
          type: string
          description: Id of transaction
          example: A1B2C3
        parentTransactionId:
          type: string
          description: Id of parent transaction
          example: 1A2B3C
        transactionDate:
          type: string
          description: Date of transaction
          example: '20190115'
        redeemOrSaveDate:
          type: string
          description: Date of Redemption or Save
          example: '20190115'
        transactionType:
          type: integer
          description: 'type of transaction (0-Unknown, 1-Gift sent out, 2-Gift received, 4-Gift Saved, 8-Redeemed as Cash, 16-Redeemed as Gift card, 32-Redeemed as Merchant, 64-SwychGiftCard, 128-Paid, 256-Regift)'
          example: 0
        amount:
          type: string
          description: Amount of transaction
          example: '100'
        recipientPhoneNumber:
          type: string
          description: Phone number of recipient
          example: '+11234567889'
        recipientEmail:
          type: string
          description: Email of recipient
          example: joe@bestdeal.com
        recipientName:
          type: string
          description: Name of recipient
          example: Joe Doe
        recipientSwychId:
          type: string
          description: SwychId of recipient
          example: '1234567890'
        status:
          type: integer
          description: Status of transaction (Check Static data Secion)
          example: 0
        brand:
          $ref: '#/components/schemas/Brand'
        payments:
          type: object
          description: Payments information
        messageFromSender:
          $ref: '#/components/schemas/SwychSentMessage'
        senderPhoneNumber:
          type: string
          description: Phone number of sender
          example: '+11234556789'
        senderEmail:
          type: string
          description: Email of sender
          example: jack@bestdeal.com
        senderName:
          type: string
          description: Name of sender
          example: Jack Shepherd
        senderSwychId:
          type: string
          description: SwychId of sender
          example: '2134567890'
        statusDisplay:
          type: string
          description: Status for display
          example: Redeemed
        previousPaymentType:
          type: object
        orderId:
          type: string
          description: Order Id of transaction
          example: buyonline001
        showAttachment:
          type: boolean
          example: true
        foreignCurrency:
          type: string
          example: CAD
        foreignAmount:
          type: number
          format: double
          example: 100
        DeliveryType:
          type: integer
          description: '0 - Regular, 3 - Copy Link (like Amazon)'
          example: 0
        SubId:
          type: integer
          description: (Optional)subId of sub account
          example: 0
    Giftcard:
      properties:
        giftCardId:
          type: string
          description: swych gift card ID
        giftCardNumber:
          type: string
          description: gift card number
        imageUrl:
          type: string
          description: url of gift card image
        giftPIN:
          type: string
          description: PIN of gift card
        retailer:
          type: string
          description: gift card retailer
        barcodeValue:
          type: string
          description: ''
        barcodeUrl:
          type: string
          description: url of the bar code
        giftCardUrl:
          type: string
          description: certificate url of the gift card
    SwychSentMessage:
      properties:
        message:
          type: string
          description: Message from sender
          example: Best wishes to you
        imageUrl:
          type: string
          description: URL of the image that the sender attached
          example: https://swychdoc.com/img/order/1.jpg
        videoUrl:
          type: string
          description: URL of the video that the sender attached
          example: https://swychdoc.com/video/order/1.mp4
    Request-GrantToken:
      required:
        - grant_type
        - client_id
        - client_secret
        - resource
      type: object
      properties:
        grant_type:
          type: string
          description: 'Specifies the requested grant type. In a Client Credentials Grant flow, the value must be client_credentials.'
          example: client_credentials
        client_id:
          type: string
          description: Specifies the Azure AD client id of the calling web service.
          example: '{client_id}'
        client_secret:
          type: string
          description: Enter a key registered for the calling web service or daemon application in Azure AD.
          example: '{client_secret}'
        resource:
          type: string
          description: Enter the App ID URI of the receiving web service.
          example: '{resource}'
    Request-UpdateAccount:
      required:
        - accountId
        - companyName
        - companyEmail
        - lowBalanceThreshold
        - allowedDeliveryMethod
        - accountReplenishmentMethod
        - defaultVoucherLinkExpiry
      type: object
      properties:
        accountId:
          type: string
        companyName:
          type: string
          description: B2B user company name
          example: BestDeal
        companyEmail:
          type: string
          description: 'email of B2B user account, Swych will send notification, alert to this email, for example, low balance alert.'
          example: info@bestDeal.com
        companyPhone:
          type: string
          description: main phone number of B2B user
          example: '+18907651234'
        companyLogo:
          type: string
          description: company Logo image (RAW data)
          example: https://goswych.com/image/image1.jpg
        contactName:
          type: string
          description: Name of B2B user main contact
          example: John Doe
        contactPhone:
          type: string
          example: '+18905671234'
        contactEmail:
          type: string
          example: johndoe@bestdeal.com
        lowBalanceThreshold:
          type: integer
          description: 'Low balance alert threshold for user''s account. Once user''s account balance decreases below than the threshold, an alert email will be sent out automatically. Low balance alert email tempate will be used.  NOTE, if lowBalanceThreshold is ZERO, it means the low balance alert is disabled.'
          example: 10000
        allowedDeliveryMethod:
          type: integer
          description: 'Allowed delivery methods of the user, it can be a combination of methods.  Possible delivery methods please check Delivery Methods in "Static Data" section'
          example: 0
        emailDeliveryTemplateName:
          type: string
          description: 'Name of email delivery template. The template files (HTML, XML) will be stored on server.'
          example: etemplate001
        smsDeliveryTemplateName:
          type: string
          description: 'Name of SMS delivery template, similar to email template name.'
          example: stemplate001
        accountReplenishmentMethod:
          type: integer
          description: 'method of account replenishment, possible multiple methods, check Static Data section'
          example: 0
        defaultVoucherLinkExpiry:
          type: integer
          description: 'Default expiry (Days) of voucher/Gift link, e.g. 30 days, 60 days, 180 days. This is default value, Voucher/Gift link expiry still can be specified when sending out.'
          example: 180
    Request-PlaceOrder:
      required:
        - brandId
        - productId
        - amount
        - recipientPhoneNumber
        - recipientEmail
        - notificationDeliveryMethod
        - giftDeliveryMethod
        - swychable
        - accountId
      type: object
      properties:
        accountId:
          type: string
        subId:
          type: integer
        brandId:
          type: string
          description: Id of gift card B2B user wants to send out
        productId:
          type: string
          description: ProductId of denomination
        amount:
          type: integer
          description: loaded amount of gift card or voucher
        message:
          type: string
          description: Message to end user
        imageURL:
          type: string
          description: Url of image attached to the gift being sent
        senderFirstName:
          type: string
          description: sender first name
        senderLastName:
          type: string
          description: sender last name
        senderPhone:
          type: string
          description: sender phone number
        senderEmail:
          type: string
          description: sender email
        recipientFirstName:
          type: string
          description: recipient first name
        recipientLastName:
          type: string
          description: recipient last name
        recipientPhoneNumber:
          type: string
          description: recipient phone number
        recipientEmail:
          type: string
          description: recipient email
        csvContent:
          type: string
          description: 'Base64 encoded CSV file content which contains all recipient informaiton. The CSV file should be in format of first name, last name, phone number and email.'
          example: "(before encoding)First Name,Last Name,Phone Number,Email\r\nAAA,BBB,123,AAA@email.com\r\nCCC,DDD,456,BBB@email.com\r\n"
        notificationDeliveryMethod:
          type: integer
          example: 1
        giftDeliveryMode:
          type: integer
          description: '1 - SwychApp, 2 - Short redemption Link, 3 Gift card certificate. If Gift card certificate is chosen, Swych server will claim the gift card directly from processor, then return the gift card link in the response.'
          example: 1
        batchId:
          type: string
          description: Id of batch. This will be used in bulk delivery mode
        swychable:
          type: boolean
          description: if recipient can swych the gift card to other.
        accessCode:
          type: string
          description: access code to confirm order later
        deliverGiftTo:
          type: integer
          description: '(Optional): 1 - Recipient (End user), 2 - B2B Client'
          example: 2
    Request-orderConfirm:
      required:
        - orderId
        - accountId
      type: object
      properties:
        accountId:
          type: string
        subId:
          type: integer
        orderId:
          type: string
          description: Order ID from the Order API response
        accessCode:
          type: string
          description: Access Code from order API (with gift delivery mode 3 or 4 only)
    Request-SuggestedRate:
      type: object
      properties:
        sourceCurrency:
          type: string
          description: ''
          example: INR
        targetCurrency:
          type: string
          description: ''
          example: USD
    Response-GrantToken:
      type: object
      properties:
        token_type:
          type: string
          description: Indicates the token type value. The only type that Azure AD supports is Bearer.
          example: Bearer
        expires_in:
          type: string
          description: How long the access token is valid (in seconds).
          example: '3600'
        ext_expires_in:
          type: string
          description: ''
          example: '3600'
        expires_on:
          type: string
          description: The time when the access token expires. The date is represented as the number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time. This value is used to determine the lifetime of cached tokens.
          example: '1557328406'
        not_before:
          type: string
          description: The time from which the access token becomes usable. The date is represented as the number of seconds from 1970-01-01T0:0:0Z UTC until time of validity for the token.
          example: '1557324506'
        resource:
          type: string
          description: The App ID URI of the receiving web service.
          example: resource-id
        access_token:
          type: string
          description: 'The requested access token as a signed JSON Web Token (JWT). The app can use this token to authenticate to the secured resource, such as a web API.'
          example: token
    Response-CheckBalance:
      type: object
      properties:
        statusCode:
          type: integer
          description: error code from Swych
          example: 16010600
        message:
          type: string
          description: Detailed response message.
          example: Successfully check balance.
        balance:
          type: number
          description: current balance
          format: decimal
          example: 1000
        availableBalance:
          type: number
          description: 'current available balance, equal or less than current balance'
          format: decimal
          example: 900
        success:
          type: boolean
          description: success flag
          example: true
    Response-GetCatelog:
      type: object
      properties:
        statusCode:
          type: integer
          description: error code from Swych
          example: 16010800
        message:
          type: string
          description: Detailed response message.
          example: Successfully retrieve brand catalog.
        success:
          type: boolean
          description: success flag
          example: true
        categoryList:
          type: array
          items:
            type: string
          description: Available category from Swych
          example:
            - 1 - Sports and Outdoors
            - 2 - Online
            - 3 - Clothing
            - 4 - Entertainment
            - 5 - Travel
            - 6 - Restaurants and Dining
            - '7 - Home Improvement '
            - 8 - Electronics
            - 9 - Health and Beauty
            - 10 - Specialty
            - 11 - Craft and Hobbies
            - 20 - SpecificCardCategory
        catalog:
          $ref: '#/components/schemas/Brand'
    Response-Order:
      type: object
      properties:
        statusCode:
          type: integer
          description: error code from Swych
          example: 16010900
        message:
          type: string
          description: Detailed response message.
          example: Successfully place order.
        success:
          type: boolean
          description: success flag
          example: true
        orderId:
          type: string
          description: Id of the order user submitted
        accessCode:
          type: string
          description: access code to confirm order later
    Response-OrderConfirm:
      type: object
      properties:
        statusCode:
          type: integer
          description: error code from Swych
          example: 16011000
        message:
          type: string
          description: Detailed response message.
          example: Successfully confirm order.
        success:
          type: boolean
          description: success flag
          example: true
        balance:
          type: number
          description: account balance after deducting the order amount
        transaction:
          $ref: '#/components/schemas/Transaction'
        Giftcard:
          $ref: '#/components/schemas/Giftcard'
    Response-OrderDetail:
      type: object
      properties:
        statusCode:
          type: integer
          description: error code from Swych
          example: 16011200
        message:
          type: string
          description: Detailed response message.
          example: Successfully retrieve transaction details.
        success:
          type: boolean
          description: success flag
          example: true
        transactions:
          $ref: '#/components/schemas/Transaction'
    Response-RetrieveHistory:
      type: object
      properties:
        statusCode:
          type: integer
          description: error code from Swych
          example: 16011100
        message:
          type: string
          description: Detailed response message.
          example: Successfully retrieve history.
        success:
          type: boolean
          description: success flag
          example: true
        transactions:
          $ref: '#/components/schemas/Transaction'
    FormData:
      type: object
      properties:
        grant_type:
          type: string
          description: 'Specifies the requested grant type. In a Client Credentials Grant flow, the value must be client_credentials.'
          example: client_credentials
        client_id:
          type: string
          description: 'Specifies the Azure AD client id of the calling web service, which is the Application ID of the client applicaiton.'
          example: client_id
        client_secret:
          type: string
          description: Enter a key registered for the calling web service or daemon application in Azure AD.
          example: client_secret
        resource:
          type: string
          description: 'Enter the App ID URI of the receiving web service. '
          example: resource_id
      example: 'grant_type=client_credentials&client_id={client_id}&client_secret={client_secret}&resource={resource}'
    Body: { }
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
tags:
  - name: Authentication
    description: "Grant Access Token"
  - name: B2B APIs
    description: ""
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]