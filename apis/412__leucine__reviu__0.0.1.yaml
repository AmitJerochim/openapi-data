---
openapi: 3.0.0
info:
  version: 0.0.1
  title: REVIU
  description: These API's that uses REVIU as a platform.

tags:
  - name: Master
    description: Master data that will be constant for REVIU across organizations.
  - name: Quantity
    description: Quantity
  - name: Vendor
    description: Vendor information
  - name: Specification
    description: Specifications
  - name: Inspection Characteristic
    description: Inspection Characteristics
  - name: Grade
    description: Grades
  - name: Area
    description: area
  - name: Equipment
    description: equipment
  - name: Equipment Group
    description: Equipment Group
  - name: Packaging Material
    description: packaging material
  - name: Process Parameter
    description: process parameter
  - name: Manufacturing Stage
    description: manufacturing stage
  - name: Exipient
    description: Exipients
  - name: Utils
    description: Server utilities

paths:
  /ping:
    description: Tests connectivity and version of the service.
    get:
      tags:
        - Utils
      summary: Tests connectivity and version of the service.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: Current server version
                    example:
                      $ref: "#/info/version"
                  epoch:
                    type: integer
                    description: Server epoch time measured in seconds since the Unix
                      epoch.
                    example: 1582579503
                  timestamp:
                    type: string
                    format: date-time
                  response:
                    type: string
                    example: pong
  /metadata:
    description: Metadata of all the schema.
    get:
      tags:
        - Utils
      summary: Metadata of the schema
      responses:
        '200':
          description: OK

# Master 
  /vendor-types:
    get:
      tags:
        - Master
      responses:
        '200':
          description: Returns a list of vendor types.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VendorTypes"
  /specification-categories:
    get:
      tags:
        - Master
      responses:
        '200':
          description: Returns a list of Specification categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SpecificationCategories"
  /formulation-categories:
    get:
      tags:
        - Master
      responses:
        '200':
          description: Returns a list of Formulation categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/FormulationCategories"
  /therapeutic-categories:
    get:
      tags:
        - Master
      responses:
        '200':
          description: Returns a list of Therapeutic categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TherapeuticCategories"
  /pharmacopoeias:
    get:
      tags:
        - Master
      responses:
        '200':
          description: Returns a list of pharmacopoeias.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pharmacopoeias"

# Vendor Endpoints
  /vendors:
    get:
      tags:
        - Vendor
      summary: Fetch a list of vendors
      description: Returns a list of your vendors. The vendors are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the API. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnVendors"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET
          TO FIGURE OUT**'
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of vendor objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VendorsGet"
    post:
      tags:
        - Vendor
      summary: Add vendor(s)
      description: Add vendor(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/VendorsAdd"
        description: Array of vendor(s) details. In case of validation failure, server will return the **`tempId`** that failed the validation. This will help the client to identify the any particular object.
          .
      responses:
        '200':
          description: Returns a vendor objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: vendor
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/VendorsGet"
    put:
      tags:
        - Vendor
      summary: Update vendor(s)
      description: Update the details of an existing vendor. Supply the unique Vendor
        ID from either a vendor creation request or the vendor list, and REVIU will
        return the updated vendor information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/VendorsUpdate"
        description: Array of vendor(s) details.
      responses:
        '200':
          description: Returns a vendor objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: vendor
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/VendorsGet"
  /vendors/{id}:
    get:
      tags:
        - Vendor
      summary: Fetch a vendor
      description: Retrieves the details of an existing vendor. Supply the unique
        Vendor ID from either a vendor creation request or the vendor list, and REVIU
        will return the corresponding vendor information.
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        '200':
          description: Returns a vendor objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: vendor
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/VendorsGet"
    put:
      tags:
        - Vendor
      summary: Update a vendor
      description: Update the details of an existing vendor. Supply the unique Vendor
        ID from either a vendor creation request or the vendor list, and REVIU will
        return the updated vendor information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: vendor
                data:
                  $ref: "#/components/schemas/VendorsUpdate"
        description: The vendor's updated details.
      responses:
        '200':
          description: Returns a vendor objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: vendor
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/VendorsGet"
    delete:
      tags:
        - Vendor
      summary: Delete a vendor
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        '200':
          description: Delete complete

# Inspection Characteristics Endpoints
  /inspection-characteristics:
    get:
      tags:
        - Inspection Characteristic
      summary: Fetch a list of inspection characteristics
      description: Returns a list of your inspection characteristics. The inspection characteristics are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Inspection Characteristics. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnInspectionCharacteristics"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Inspection Characteristic objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/InspectionCharacteristicsGet"
    post:
      tags:
        - Inspection Characteristic
      summary: Add Inspection Characteristic(s)
      description: Add Inspection Characteristic(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/InspectionCharacteristicsAdd"
        description: Array of Inspection Characteristic(s) details.           .
      responses:
        '200':
          description: Returns a inspection characteristics objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: inspection_characteristic
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/InspectionCharacteristicsGet"
    put:
      tags:
        - Inspection Characteristic
      summary: Update Inspection Characteristic(s)
      description: Update the details of an existing Inspection Characteristic.
        Supply the unique Inspection Characteristics ID from either a Inspection Characteristics creation request or the Inspection Characteristics list, and REVIU will return
        the updated Inspection Characteristics information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/InspectionCharacteristicsUpdate"
        description: Array of Inspection Characteristic(s) details.
      responses:
        '200':
          description: Returns a Inspection Characteristic objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: inspection_characteristic
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/InspectionCharacteristicsGet"
  /inspection-characteristics/{id}:
    get:
      tags:
        - Inspection Characteristic
      summary: Fetch a Inspection Characteristic
      description: Retrieves the details of an existing Inspection Characteristic.
        Supply the unique Inspection Characteristic ID from either a Inspection Characteristic creation request or the Inspection Characteristic list, and REVIU will return
        the corresponding Inspection Characteristic information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Inspection Characteristic objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: inspection_characteristic
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/InspectionCharacteristicsGet"
    put:
      tags:
        - Inspection Characteristic
      summary: Update a Inspection Characteristic
      description: Update the details of an existing Inspection Characteristic.
        Supply the unique Inspection Characteristic ID from either a Inspection Characteristic creation request or the Inspection Characteristic list, and REVIU will return
        the updated Inspection Characteristic information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: inspection_characteristic
                data:
                  $ref: "#/components/schemas/InspectionCharacteristicsUpdate"
        description: The Inspection Characteristic's updated details.
      responses:
        '200':
          description: Returns a Inspection Characteristic objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: inspection_characteristic
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/InspectionCharacteristicsGet"
    delete:
      tags:
        - Inspection Characteristic
      summary: Delete an inspection characteristic
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Specifications Endpoints
  /specifications:
    get:
      tags:
        - Specification
      summary: Fetch a list of Specifications
      description: Returns a list of your specifications. The specifications are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the specifications. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnSpecifications"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Specifications objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SpecificationsGet"
    post:
      tags:
        - Specification
      summary: Add Specification(s)
      description: Add Specification(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/SpecificationsAdd"
        description: Array of Specification(s) details.           .
      responses:
        '200':
          description: Returns a Specification objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: specification
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/SpecificationsGet"
    put:
      tags:
        - Specification
      summary: Update Specification(s)
      description: Update the details of an existing Specifications.
        Supply the unique Specifications ID from either a Specifications creation request or the Specifications list, and REVIU will return
        the updated Specifications information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/SpecificationsUpdate"
        description: Array of Specifications(s) details.
      responses:
        '200':
          description: Returns a Specifications objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: specification
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/SpecificationsGet"
  /specifications/{id}:
    get:
      tags:
        - Specification
      summary: Fetch a Specifications
      description: Retrieves the details of an existing Specifications.
        Supply the unique Specifications ID from either a Specifications creation request or the Specifications list, and REVIU will return
        the corresponding Specifications information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Specifications objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: specification
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/SpecificationsGet"
    put:
      tags:
        - Specification
      summary: Update a Specification(s)
      description: Update the details of an existing Specifications.
        Supply the unique Specifications ID from either a Specifications creation request or the Specifications list, and REVIU will return
        the updated Specifications information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: specification
                data:
                  $ref: "#/components/schemas/SpecificationsUpdate"
        description: The Specifications's updated details.
      responses:
        '200':
          description: Returns a Specifications objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: specification
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/SpecificationsGet"
    delete:
      tags:
        - Specification
      summary: Delete an Specifications
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Exipients Endpoints
  /exipients:
    get:
      tags:
        - Exipient
      summary: Fetch a list of Exipients
      description: Returns a list of your Exipients. The Exipients are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Exipients. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnExipients"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Exipients objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ExipientsGet"
    post:
      tags:
        - Exipient
      summary: Add Exipient(s)
      description: Add Exipient(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/ExipientsAdd"
        description: Array of Exipient(s) details.           .
      responses:
        '200':
          description: Returns a Exipients objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: exipient
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ExipientsGet"
    put:
      tags:
        - Exipient
      summary: Update Exipients(s)
      description: Update the details of an existing Exipients.
        Supply the unique Exipients ID from either a Exipients creation request or the Exipients list, and REVIU will return
        the updated Exipients information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/ExipientsUpdate"
        description: Array of Exipient(s) details.
      responses:
        '200':
          description: Returns a Exipients objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: exipient
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ExipientsGet"
  /exipients/{id}:
    get:
      tags:
        - Exipient
      summary: Fetch a Exipients
      description: Retrieves the details of an existing Exipients.
        Supply the unique Exipients ID from either a Exipients creation request or the Exipients list, and REVIU will return
        the corresponding Exipients information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Exipients objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: exipient
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ExipientsGet"
    put:
      tags:
        - Exipient
      summary: Update a Exipients
      description: Update the details of an existing Exipients.
        Supply the unique Exipients ID from either a Exipients creation request or the Exipients list, and REVIU will return
        the updated Exipients information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: exipient
                data:
                  $ref: "#/components/schemas/ExipientsUpdate"
        description: The Exipients's updated details.
      responses:
        '200':
          description: Returns a Exipients objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: exipient
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ExipientsGet"
    delete:
      tags:
        - Exipient
      summary: Delete an Exipient
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Packaging Materials Endpoints
  /packaging-materials:
    get:
      tags:
        - Packaging Material
      summary: Fetch a list of Packaging Materials
      description: Returns a list of your Packaging Materials. The Packaging Materials are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Packaging Materials. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnPackagingMaterials"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Packaging Materials objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackagingMaterialsGet"
    post:
      tags:
        - Packaging Material
      summary: Add Packaging Material(s)
      description: Add Packaging Material(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/PackagingMaterialsAdd"
        description: Array of Packaging Material(s) details.           .
      responses:
        '200':
          description: Returns a Packaging Materials objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: packaging_material
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/PackagingMaterialsGet"
    put:
      tags:
        - Packaging Material
      summary: Update Packaging Materials(s)
      description: Update the details of an existing Packaging Materials.
        Supply the unique Packaging Materials ID from either a Packaging Materials creation request or the Packaging Materials list, and REVIU will return
        the updated Packaging Materials information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/PackagingMaterialsUpdate"
        description: Array of Packaging Material(s) details.
      responses:
        '200':
          description: Returns a Packaging Materials objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: packaging_material
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/PackagingMaterialsGet"
  /packaging-materials/{id}:
    get:
      tags:
        - Packaging Material
      summary: Fetch a Packaging Materials
      description: Retrieves the details of an existing Packaging Materials.
        Supply the unique Packaging Materials ID from either a Packaging Materials creation request or the Packaging Materials list, and REVIU will return
        the corresponding Packaging Materials information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Packaging Materials objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: packaging_material
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/PackagingMaterialsGet"
    put:
      tags:
        - Packaging Material
      summary: Update a Packaging Materials
      description: Update the details of an existing Packaging Materials.
        Supply the unique Packaging Materials ID from either a Packaging Materials creation request or the Packaging Materials list, and REVIU will return
        the updated Packaging Materials information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: packaging_material
                data:
                  $ref: "#/components/schemas/PackagingMaterialsUpdate"
        description: The Packaging Materials's updated details.
      responses:
        '200':
          description: Returns a Packaging Materials objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: packaging_material
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/PackagingMaterialsGet"
    delete:
      tags:
        - Packaging Material
      summary: Delete an Packaging Material
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Process Parameters Endpoints
  /process-parameters:
    get:
      tags:
        - Process Parameter
      summary: Fetch a list of Process Parameters
      description: Returns a list of your Process Parameters. The Process Parameters are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Process Parameters. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnProcessParameters"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Process Parameters objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProcessParametersGet"
    post:
      tags:
        - Process Parameter
      summary: Add Process Parameter(s)
      description: Add Process Parameter(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/ProcessParametersAdd"
        description: Array of Process Parameter(s) details.           .
      responses:
        '200':
          description: Returns a Process Parameters objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: process_parameter
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ProcessParametersGet"
    put:
      tags:
        - Process Parameter
      summary: Update Process Parameters(s)
      description: Update the details of an existing Process Parameters.
        Supply the unique Process Parameters ID from either a Process Parameters creation request or the Process Parameters list, and REVIU will return
        the updated Process Parameters information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/ProcessParametersUpdate"
        description: Array of Process Parameter(s) details.
      responses:
        '200':
          description: Returns a Process Parameters objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: process_parameter
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ProcessParametersGet"
  /process-parameters/{id}:
    get:
      tags:
        - Process Parameter
      summary: Fetch a Process Parameters
      description: Retrieves the details of an existing Process Parameters.
        Supply the unique Process Parameters ID from either a Process Parameters creation request or the Process Parameters list, and REVIU will return
        the corresponding Process Parameters information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Process Parameters objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: process_parameter
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ProcessParametersGet"
    put:
      tags:
        - Process Parameter
      summary: Update a Process Parameters
      description: Update the details of an existing Process Parameters.
        Supply the unique Process Parameters ID from either a Process Parameters creation request or the Process Parameters list, and REVIU will return
        the updated Process Parameters information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: process_parameter
                data:
                  $ref: "#/components/schemas/ProcessParametersUpdate"
        description: The Process Parameters's updated details.
      responses:
        '200':
          description: Returns a Process Parameters objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: process_parameter
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ProcessParametersGet"
    delete:
      tags:
        - Process Parameter
      summary: Delete an Process Parameter
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Manufacturing Stages Endpoints
  /manufacturing-stages:
    get:
      tags:
        - Manufacturing Stage
      summary: Fetch a list of Manufacturing Stages
      description: Returns a list of your Manufacturing Stages. The Manufacturing Stages are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Manufacturing Stages. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnManufacturingStages"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Manufacturing Stages objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ManufacturingStagesGet"
    post:
      tags:
        - Manufacturing Stage
      summary: Add Manufacturing Stage(s)
      description: Add Manufacturing Stage(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/ManufacturingStagesAdd"
        description: Array of Manufacturing Stage(s) details.           .
      responses:
        '200':
          description: Returns a Manufacturing Stages objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: manufacturing_stage
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ManufacturingStagesGet"
    put:
      tags:
        - Manufacturing Stage
      summary: Update Manufacturing Stages(s)
      description: Update the details of an existing Manufacturing Stages.
        Supply the unique Manufacturing Stages ID from either a Manufacturing Stages creation request or the Manufacturing Stages list, and REVIU will return
        the updated Manufacturing Stages information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/ManufacturingStagesUpdate"
        description: Array of Manufacturing Stage(s) details.
      responses:
        '200':
          description: Returns a Manufacturing Stages objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: manufacturing_stage
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ManufacturingStagesGet"
  /manufacturing-stages/{id}:
    get:
      tags:
        - Manufacturing Stage
      summary: Fetch a Manufacturing Stages
      description: Retrieves the details of an existing Manufacturing Stages.
        Supply the unique Manufacturing Stages ID from either a Manufacturing Stages creation request or the Manufacturing Stages list, and REVIU will return
        the corresponding Manufacturing Stages information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Manufacturing Stages objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: manufacturing_stage
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ManufacturingStagesGet"
    put:
      tags:
        - Manufacturing Stage
      summary: Update a Manufacturing Stages
      description: Update the details of an existing Manufacturing Stages.
        Supply the unique Manufacturing Stages ID from either a Manufacturing Stages creation request or the Manufacturing Stages list, and REVIU will return
        the updated Manufacturing Stages information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: manufacturing_stage
                data:
                  $ref: "#/components/schemas/ManufacturingStagesUpdate"
        description: The Manufacturing Stages's updated details.
      responses:
        '200':
          description: Returns a Manufacturing Stages objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: manufacturing_stage
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/ManufacturingStagesGet"
    delete:
      tags:
        - Manufacturing Stage
      summary: Delete an Manufacturing Stage
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Grades Endpoints
  /grades:
    get:
      tags:
        - Grade
      summary: Fetch a list of Grades
      description: Returns a list of your Grades. The Grades are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Grades. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnGrades"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Grades objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/GradesGet"
    post:
      tags:
        - Grade
      summary: Add Grade(s)
      description: Add Grade(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/GradesAdd"
        description: Array of Grade(s) details.           .
      responses:
        '200':
          description: Returns a Grades objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: grade
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/GradesGet"
    put:
      tags:
        - Grade
      summary: Update Grades(s)
      description: Update the details of an existing Grades.
        Supply the unique Grades ID from either a Grades creation request or the Grades list, and REVIU will return
        the updated Grades information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/GradesUpdate"
        description: Array of Grade(s) details.
      responses:
        '200':
          description: Returns a Grades objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: grade
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/GradesGet"
  /grades/{id}:
    get:
      tags:
        - Grade
      summary: Fetch a Grades
      description: Retrieves the details of an existing Grades.
        Supply the unique Grades ID from either a Grades creation request or the Grades list, and REVIU will return
        the corresponding Grades information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Grades objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: grade
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/GradesGet"
    put:
      tags:
        - Grade
      summary: Update a Grades
      description: Update the details of an existing Grades.
        Supply the unique Grades ID from either a Grades creation request or the Grades list, and REVIU will return
        the updated Grades information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: grade
                data:
                  $ref: "#/components/schemas/GradesUpdate"
        description: The Grades's updated details.
      responses:
        '200':
          description: Returns a Grades objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: grade
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/GradesGet"
    delete:
      tags:
        - Grade
      summary: Delete an Grade
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Areas Endpoints
  /areas:
    get:
      tags:
        - Area
      summary: Fetch a list of Areas
      description: Returns a list of your Areas. The Areas are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Areas. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnAreas"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Areas objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AreasGet"
    post:
      tags:
        - Area
      summary: Add Area(s)
      description: Add Area(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/AreasAdd"
        description: Array of Area(s) details.           .
      responses:
        '200':
          description: Returns a Areas objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: area
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/AreasGet"
    put:
      tags:
        - Area
      summary: Update Areas(s)
      description: Update the details of an existing Areas.
        Supply the unique Areas ID from either a Areas creation request or the Areas list, and REVIU will return
        the updated Areas information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/AreasUpdate"
        description: Array of Area(s) details.
      responses:
        '200':
          description: Returns a Areas objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: area
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/AreasGet"
  /areas/{id}:
    get:
      tags:
        - Area
      summary: Fetch a Areas
      description: Retrieves the details of an existing Areas.
        Supply the unique Areas ID from either a Areas creation request or the Areas list, and REVIU will return
        the corresponding Areas information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Areas objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: area
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/AreasGet"
    put:
      tags:
        - Area
      summary: Update a Areas
      description: Update the details of an existing Areas.
        Supply the unique Areas ID from either a Areas creation request or the Areas list, and REVIU will return
        the updated Areas information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: area
                data:
                  $ref: "#/components/schemas/AreasUpdate"
        description: The Areas's updated details.
      responses:
        '200':
          description: Returns a Areas objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: area
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/AreasGet"
    delete:
      tags:
        - Area
      summary: Delete an Area
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Quantity Endpoints
  /quantities:
    get:
      tags:
        - Quantity
      summary: Fetch a list of Quantity
      description: Returns a list of your Quantity. The Quantity are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Quantity. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnQuantities"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Quantity objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/QuantitiesGet"
    post:
      tags:
        - Quantity
      summary: Add Quantit(y)(ies)
      description: Add Quantit(y)(ies)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/QuantitiesAdd"
        description: Array of Quantit(y)(ies) details.           .
      responses:
        '200':
          description: Returns a Quantity objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: quantity
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/QuantitiesGet"
    put:
      tags:
        - Quantity
      summary: Update Quantity(s)
      description: Update the details of an existing Quantity.
        Supply the unique Quantity ID from either a Quantity creation request or the Quantity list, and REVIU will return
        the updated Quantity information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/QuantitiesUpdate"
        description: Array of Quantit(y)(ies) details.
      responses:
        '200':
          description: Returns a Quantity objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: quantity
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/QuantitiesGet"
  /quantities/{id}:
    get:
      tags:
        - Quantity
      summary: Fetch a Quantity
      description: Retrieves the details of an existing Quantity.
        Supply the unique Quantity ID from either a Quantity creation request or the Quantity list, and REVIU will return
        the corresponding Quantity information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Quantity objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: quantity
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/QuantitiesGet"
    put:
      tags:
        - Quantity
      summary: Update a Quantity
      description: Update the details of an existing Quantity.
        Supply the unique Quantity ID from either a Quantity creation request or the Quantity list, and REVIU will return
        the updated Quantity information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: quantity
                data:
                  $ref: "#/components/schemas/QuantitiesUpdate"
        description: The Quantity's updated details.
      responses:
        '200':
          description: Returns a Quantity objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: quantity
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/QuantitiesGet"
    delete:
      tags:
        - Quantity
      summary: Delete an Quantity
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Equipments Endpoints
  /equipments:
    get:
      tags:
        - Equipment
      summary: Fetch a list of Equipments
      description: Returns a list of your Equipments. The Equipments are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Equipments. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnEquipments"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Equipments objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/EquipmentsGet"
    post:
      tags:
        - Equipment
      summary: Add Equipment(s)
      description: Add Equipment(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/EquipmentsAdd"
        description: Array of Equipment(s) details.           .
      responses:
        '200':
          description: Returns a Equipments objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: equipment
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/EquipmentsGet"
    put:
      tags:
        - Equipment
      summary: Update Equipments(s)
      description: Update the details of an existing Equipments.
        Supply the unique Equipments ID from either a Equipments creation request or the Equipments list, and REVIU will return
        the updated Equipments information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/EquipmentsUpdate"
        description: Array of Equipment(s) details.
      responses:
        '200':
          description: Returns a Equipments objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: equipment
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/EquipmentsGet"
  /equipments/{id}:
    get:
      tags:
        - Equipment
      summary: Fetch a Equipments
      description: Retrieves the details of an existing Equipments.
        Supply the unique Equipments ID from either a Equipments creation request or the Equipments list, and REVIU will return
        the corresponding Equipments information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Equipments objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: equipment
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/EquipmentsGet"
    put:
      tags:
        - Equipment
      summary: Update a Equipments
      description: Update the details of an existing Equipments.
        Supply the unique Equipments ID from either a Equipments creation request or the Equipments list, and REVIU will return
        the updated Equipments information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: equipment
                data:
                  $ref: "#/components/schemas/EquipmentsUpdate"
        description: The Equipments's updated details.
      responses:
        '200':
          description: Returns a Equipments objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: equipment
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/EquipmentsGet"
    delete:
      tags:
        - Equipment
      summary: Delete an Equipment
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete

# Equipment Groups Endpoints
  /equipment-groups:
    get:
      tags:
        - Equipment Group
      summary: Fetch a list of Equipment Groups
      description: Returns a list of your Equipment Groups. The Equipment Groups are returned based on the sort array (passed in query parameters).
      parameters:
        - $ref: "#/components/parameters/facility"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: fields
          in: query
          description: Limiting which fields are returned by the Equipment Groups. The ability to
            select and chose returned fields. <br> &nbsp;&nbsp;&nbsp;&nbsp; e.g *fields*=**_id_**&*fields*=**_name_**
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ColumnEquipmentGroups"
            minItems: 1
        - name: sort
          in: query
          description: |
            Ability to sort the fields. Sort order:
             * `asc` - Ascending, from A to Z or from smallest to largest
             * `desc` - Descending, from Z to A or from largest to smallest <br><br>
             e.g *sort[__id__]*=**_asc_**&*sort[__name__]*=**_desc_**
          required: false
          schema:
            type: object
            minItems: 1
        - name: filters
          in: query
          description: 'Ability to filter the fields based on conditions. <br> **YET TO FIGURE OUT**    '
          required: false
          schema:
            type: object
            minItems: 1
      responses:
        '200':
          description: Returns a list of Equipment Groups objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: list
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/EquipmentGroupsGet"
    post:
      tags:
        - Equipment Group
      summary: Add Equipment Group(s)
      description: Add Equipment Group(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/EquipmentGroupsAdd"
        description: Array of Equipment Group(s) details.           .
      responses:
        '200':
          description: Returns a Equipment Groups objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: equipment_group
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/EquipmentGroupsGet"
    put:
      tags:
        - Equipment Group
      summary: Update Equipment Groups(s)
      description: Update the details of an existing Equipment Groups.
        Supply the unique Equipment Groups ID from either a Equipment Groups creation request or the Equipment Groups list, and REVIU will return
        the updated Equipment Groups information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: list
                  description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/EquipmentGroupsUpdate"
        description: Array of Equipment Group(s) details.
      responses:
        '200':
          description: Returns a Equipment Groups objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: equipment_group
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/EquipmentGroupsGet"
  /equipment-groups/{id}:
    get:
      tags:
        - Equipment Group
      summary: Fetch a Equipment Groups
      description: Retrieves the details of an existing Equipment Groups.
        Supply the unique Equipment Groups ID from either a Equipment Groups creation request or the Equipment Groups list, and REVIU will return
        the corresponding Equipment Groups information.
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Returns a Equipment Groups objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: equipment_group
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/EquipmentGroupsGet"
    put:
      tags:
        - Equipment Group
      summary: Update a Equipment Groups
      description: Update the details of an existing Equipment Groups.
        Supply the unique Equipment Groups ID from either a Equipment Groups creation request or the Equipment Groups list, and REVIU will return
        the updated Equipment Groups information.
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  example: equipment_group
                data:
                  $ref: "#/components/schemas/EquipmentGroupsUpdate"
        description: The Equipment Groups's updated details.
      responses:
        '200':
          description: Returns a Equipment Groups objects if a valid identifier was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: equipment_group
                    description: String representing the object’s type. Objects of the same type share the same value. <br> Always has the value list.
                  data:
                    $ref: "#/components/schemas/EquipmentGroupsGet"
    delete:
      tags:
        - Equipment Group
      summary: Delete an Equipment Group
      parameters:
        - $ref: "#/components/parameters/idUUID"
      responses:
        '200':
          description: Delete complete



components:
  headers:
    X-RateLimit-Limit:
      schema:
        type: integer
      description: Request limit per hour.
    X-RateLimit-Remaining:
      schema:
        type: integer
      description: The number of requests left for the time window.
    X-RateLimit-Reset:
      schema:
        type: string
        format: date-time
      description: The UTC date/time at which the current rate limit window resets.
  responses:
    NotFound:
      description: The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: No valid API key provided.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    BadRequest:
      description: The request was unacceptable, often due to missing a required parameter.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    RequestFailed:
      description: The parameters were valid but the request failed.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Forbidden:
      description: The API key doesn't have permissions to perform the request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    TooManyRequests:
      description: Too many requests hit the API too quickly. We recommend an exponential
        backoff of your requests.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ServerError:
      description: Something went wrong on REVIU's end. (These are rare.)
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  parameters:
    offset:
      name: offset
      in: query
      description: Number of items to skip before returning the results.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    limit:
      name: limit
      in: query
      description: Maximum number of items to return.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
    facility:
      name: facility
      in: query
      description: Unique identifier of the Facility
      required: true
      schema:
        type: string
        format: uuid
    id:
      name: id
      in: path
      description: Unique identifier of the object.
      required: true
      schema:
        type: integer
        format: int64
    idUUID:
      name: id
      in: path
      description: Unique identifier of the object.
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        object:
          type: string
          example: error
        code:
          type: integer
          description: For some errors that could be handled programmatically, a short
            string indicating the [error code](https://localhost/docs/error-codes.html)
            reported.
        message:
          type: string
          description: A human-readable message providing more details about the error.
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: integer
              field:
                type: string
              message:
                type: string

# Master data
    VendorTypes:
      type: object
      required:
        - name
      description: Types of vendors
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: vendor_type
        name:
          type: string
          enum:
            - raw_material_supplier
            - packaging_material
            - service_provider
    SpecificationCategories:
      type: object
      required:
        - name
      description: Categories of specifications
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: specification_category
        name:
          type: string
          enum:
            - api
            - excipient
            - packaging_material
            - in_process_checks
            - bfg
            - fg
            - finished_product
    FormulationCategories:
      type: object
      required:
        - name
      description: Categories of formulations
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: formulation_category
        name:
          type: string
          enum:
            - tablets
            - capsules
            - eye_drops
            - injectables
    TherapeuticCategories:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: therapeutic_category
        name:
          type: string
          enum:
            - antihyperuricemic
            - anesthetic
            - antiviral_drug
    Pharmacopoeias:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: pharmacopoeia
        name:
          type: string
          enum:
            - european_pharmacopoeia
    Markets:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: market
        name:
          type: string
          enum:
            - belarus
            - vietnam
       
# Organization Related Schema
    Organizations:
      type: object
      required:
        - name
      description: Organization object allows you to manage the organization. The API allows you to create, delete and update your organization and its settings. You can retrieve individual organization as well as a list of all your organizations.
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
          example: 1
        object:
          type: string
          readOnly: true
          example: organization
        name:
          type: string
          description: Name of the organization

# Facility Related Schema
    FacilityGroups:
      type: object
      required:
        - name
      description: Pending
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
          example: 1
        object:
          type: string
          readOnly: true
          example: facility_group
        name:
          type: string
          description: Name of the Facility Group
        organization:
          $ref: '#/components/schemas/Organizations'

# Facility Related Schema
    Facilities:
      type: object
      required:
        - name
      description: Pending
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: facility
        name:
          type: string
          description: Name of the Facility
        facility_group:
          $ref: '#/components/schemas/FacilityGroups'
        organization:
          $ref: '#/components/schemas/Organizations'

# Vendor Related Schemas
    ColumnVendors:
      type: string
      enum:
        - id
        - name
        - code
        - address
        - vendor_types
        - agreement_details
        - agreement_start
        - agreement_due
        - modified_at

    VendorsGet:
      type: object
      required:
        - code
        - name
        - vendor_types
        - organization
      description: Vendor object allows you to manage the vendor. The API allows you
        to create, delete and update your vendor. You can retrieve individual vendor
        as well as a list of all your vendor vendors.
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: vendor
        code:
          type: string
          description: Identifier for a Vendor and can’t be same for two Vendors.
            Unique within an organization.
          example: VNDR1212
        name:
          type: string
          description: General Name of the Vendor
          example: Biotika A.S
        address:
          type: string
          description: Registered Address of the Vendor
          example: 'APICCL Plot Number 121, Ring Road, Industrial Area, Near Kothur,
            City: Hyderabad, Country: India'
        vendor_types:
          type: array
          items:
            $ref: "#/components/schemas/VendorTypes"
        agreement_details:
          type: string
          description: Some description on the Vendor that describes/provides more
            information on the agreement
        agreement_start:
          type: string
          format: date
          description: When was the Agreement started on
        agreement_due:
          type: string
          format: date
          description: When was the Agreement due for renewal
        modified_at:
          type: integer
          description: Data and time (in epoch) when the entity was last modified
            at
          example: 1582579503

    VendorsSlim:
      type: object
      required:
        - code
        - name
        - vendor_types
        - organization
      description: Vendor object allows you to manage the vendor. The API allows you
        to create, delete and update your vendor. You can retrieve individual vendor
        as well as a list of all your vendor vendors.
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: vendor
        code:
          type: string
          description: Identifier for a Vendor and can’t be same for two Vendors.
            Unique within an organization.
          example: VNDR1212
        name:
          type: string
          description: General Name of the Vendor
          example: Biotika A.S
        address:
          type: string
          description: Registered Address of the Vendor
          example: 'APICCL Plot Number 121, Ring Road, Industrial Area, Near Kothur, City: Hyderabad, Country: India'
        vendor_types:
          type: array
          items:
            $ref: "#/components/schemas/VendorTypes/properties/id"
        agreement_details:
          type: string
          description: Some description on the Vendor that describes/provides more
            information on the agreement
        agreement_start:
          type: string
          format: date
          description: When was the Agreement started on
        agreement_due:
          type: string
          format: date
          description: When was the Agreement due for renewal
        modified_at:
          type: integer
          description: Data and time (in epoch) when the entity was last modified
            at
          example: 1582579503

    VendorsAdd:
      type: object
      required:
        - object
        - tempId
        - code
        - name
        - vendor_types
      description: Vendor object allows you to manage the vendor. The API allows you
        to create, delete and update your vendor. You can retrieve individual vendor
        as well as a list of all your vendor vendors.
      properties:
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: vendor
        code:
          type: string
          description: Identifier for a Vendor and can’t be same for two Vendors.
            Unique within an organization.
          example: VNDR1212
        name:
          type: string
          description: General Name of the Vendor
          example: Biotika A.S
        address:
          type: string
          description: Registered Address of the Vendor
          example: 'APICCL Plot Number 121, Ring Road, Industrial Area, Near Kothur,
            City: Hyderabad, Country: India'
        vendor_types:
          type: array
          items:
            $ref: '#/components/schemas/VendorTypes/properties/id'
        agreement_details:
          type: string
          description: Some description on the Vendor that describes/provides more
            information on the agreement
        agreement_start:
          type: string
          format: date
          description: When was the Agreement started on
          example: '2019-04-02T00:00:00.000Z'
        agreement_due:
          type: string
          format: date
          description: When was the Agreement due for renewal
          example: '2020-04-01T00:00:00.000Z'

    VendorsUpdate:
      type: object
      required:
        - object
        - id
        - code
        - name
        - vendor_types
      description: Vendor object allows you to manage the vendor. The API allows you
        to create, delete and update your vendor. You can retrieve individual vendor
        as well as a list of all your vendor vendors.
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: vendor
        code:
          type: string
          description: Identifier for a Vendor and can’t be same for two Vendors.
            Unique within an organization.
          example: VNDR1212
        name:
          type: string
          description: General Name of the Vendor
          example: Biotika A.S
        address:
          type: string
          description: Registered Address of the Vendor
          example: 'APICCL Plot Number 121, Ring Road, Industrial Area, Near Kothur, City: Hyderabad, Country: India'
        vendor_types:
          type: array
          items:
            $ref: '#/components/schemas/VendorTypes/properties/id'
        agreement_details:
          type: string
          description: Some description on the Vendor that describes/provides more
            information on the agreement
        agreement_start:
          type: string
          format: date
          description: When was the Agreement started on
          example: '2019-04-02T00:00:00.000Z'
        agreement_due:
          type: string
          format: date
          description: When was the Agreement due for renewal
          example: '2020-04-01T00:00:00.000Z'

# Inspection Characteristics related schema.
    ColumnInspectionCharacteristics:
      type: string
      enum:
        - id
        - name
        - description
        - type
        - applicable_to
        -
    InspectionCharacteristicsGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: inspection_characteristic
        name:
          type: string
          example: 'Retention on US Std. Sieve #16'
        description:
          type: string
          example: Used to qualify the fineness of the material when it is in the powder form.
        type:
          type: string
          enum:
            - quantitative
            - qualitative
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/SpecificationCategories"

    InspectionCharacteristicsSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: inspection_characteristic
        name:
          type: string
          example: 'Retention on US Std. Sieve #16'
        description:
          type: string
          example: Used to qualify the fineness of the material when it is in the powder form.
        type:
          type: string
          enum:
            - quantitative
            - qualitative
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/SpecificationCategories/properties/id"

    InspectionCharacteristicsAdd:
      type: object
      required:
        - facility
      description: ''
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: 'inspection_characteristic'
        name:
          type: string
          description: A general name for an Inspection Characteristic
          example: 'Retention on US Std. Sieve #16'
        description:
          type: string
          example: 'Used to qualify the fineness of the material when it is in the powder form.'
        type:
          type: string
          enum:
            - quantitative
            - qualitative
        applicable_to:
          type: array
          items:
            $ref: '#/components/schemas/SpecificationCategories/properties/id'

    InspectionCharacteristicsUpdate:
      type: object
      required:
        - id
      description: ''
      properties:
        id:
          type: string
          format: uuid
          description: Unique Id of the object.
        object:
          type: string
          readOnly: true
          example: 'inspection_characteristic'
        name:
          type: string
          description: A general name for an Inspection Characteristic
          example: 'Retention on US Std. Sieve #16'
        description:
          type: string
          example: 'Used to qualify the fineness of the material when it is in the powder form.'
        type:
          type: string
          enum:
            - quantitative
            - qualitative
        applicable_to:
          type: array
          items:
            $ref: '#/components/schemas/SpecificationCategories/properties/id'

# Specification related schema.
    ColumnSpecifications:
      type: string
      enum:
        - id
        - code
        - applicable_to
        - inspected_entity
        - effective_date
        - characteristic
        - control_criteria

    SpecificationsGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: specification
        code:
          type: string
          description: A unique identifier for a Specification.
          example: QC/SPC/FP/4450
        applicable_to:
          $ref: "#/components/schemas/SpecificationCategories"
        inspected_entity:
          type: object
          oneOf:
            - $ref: '#/components/schemas/APIGet'
          discriminator:
            propertyName: specification_categories
        #           TODO Add other reference for Excipient / Packaging Material /  In Process Checks / BFG / FG
        effective_date:
          type: string
          format: date
        inspection_characteristics:
          $ref: '#/components/schemas/InspectionCharacteristicsSlim'
        lower_limit:
          type: number
        upper_limit:
          type: number

    SpecificationsSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: specification
        code:
          type: string
          description: A unique identifier for a Specification.
          example: QC/SPC/FP/4450
        applicable_to:
          $ref: "#/components/schemas/SpecificationCategories/properties/id"
        inspected_entity:
          type: object
          oneOf:
            - $ref: '#/components/schemas/APISlim/properties/id'
          discriminator:
            propertyName: specification_categories
        #           TODO Add other reference for Excipient / Packaging Material /  In Process Checks / BFG / FG
        effective_date:
          type: string
          format: date
        inspection_characteristics:
          $ref: '#/components/schemas/InspectionCharacteristicsSlim/properties/id'
        lower_limit:
          type: number
        upper_limit:
          type: number

    SpecificationsAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: specification
        code:
          type: string
          description: A unique identifier for a Specification.
          example: QC/SPC/FP/4450
        applicable_to:
          $ref: "#/components/schemas/SpecificationCategories/properties/id"
        inspected_entity:
          type: object
          oneOf:
            - $ref: '#/components/schemas/APISlim/properties/id'
          discriminator:
            propertyName: specification_categories
        #           TODO Add other reference for Excipient / Packaging Material /  In Process Checks / BFG / FG
        effective_date:
          type: string
          format: date
        inspection_characteristics:
          $ref: '#/components/schemas/InspectionCharacteristicsSlim/properties/id'
        lower_limit:
          type: number
        upper_limit:
          type: number

    SpecificationsUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique Id of the object.
        object:
          type: string
          readOnly: true
          example: specification
        code:
          type: string
          description: A unique identifier for a Specification.
          example: QC/SPC/FP/4450
        applicable_to:
          $ref: "#/components/schemas/SpecificationCategories/properties/id"
        inspected_entity:
          type: object
          oneOf:
            - $ref: '#/components/schemas/APISlim/properties/id'
          discriminator:
            propertyName: specification_categories
        #           TODO Add other reference for Excipient / Packaging Material /  In Process Checks / BFG / FG
        effective_date:
          type: string
          format: date
        inspection_characteristics:
          $ref: '#/components/schemas/InspectionCharacteristicsSlim/properties/id'
        lower_limit:
          type: number
        upper_limit:
          type: number

# Exipient Related Schemas
    ColumnExipients:
      type: string
      enum:
        - id
        - code
        - name
        - pharmacopoeia
        - manufacturer
        - supplier
        - specifications

    ExipientsGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: exipient
        code:
          type: string
          description: This is a unique identifier for an Excipient.
          example: RND1231
        name:
          type: string
          description: A general name for the Excipient
          example: Basic Butylated Methacrylate Copolymer - Ph. Eur
        pharmacopoeia:
          $ref: "#/components/schemas/Pharmacopoeias"
        manufacturer:
          $ref: "#/components/schemas/VendorsSlim"
        supplier:
          $ref: "#/components/schemas/VendorsSlim"
        specifications:
          $ref: "#/components/schemas/SpecificationsSlim"

    ExipientsSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: exipient
        code:
          type: string
          description: This is a unique identifier for an Excipient.
          example: RND1231
        name:
          type: string
          description: A general name for the Excipient
          example: Basic Butylated Methacrylate Copolymer - Ph. Eur
        pharmacopoeia:
          $ref: "#/components/schemas/Pharmacopoeias/properties/id"
        manufacturer:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        supplier:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        specifications:
          $ref: "#/components/schemas/SpecificationsSlim/properties/id"

    ExipientsAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: exipient
        code:
          type: string
          description: This is a unique identifier for an Excipient.
          example: RND1231
        name:
          type: string
          description: A general name for the Excipient
          example: Basic Butylated Methacrylate Copolymer - Ph. Eur
        pharmacopoeia:
          $ref: "#/components/schemas/Pharmacopoeias/properties/id"
        manufacturer:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        supplier:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        specifications:
          $ref: "#/components/schemas/SpecificationsSlim/properties/id"

    ExipientsUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: exipient
        code:
          type: string
          description: This is a unique identifier for an Excipient.
          example: RND1231
        name:
          type: string
          description: A general name for the Excipient
          example: Basic Butylated Methacrylate Copolymer - Ph. Eur
        pharmacopoeia:
          $ref: "#/components/schemas/Pharmacopoeias/properties/id"
        manufacturer:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        supplier:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        specification:
          $ref: "#/components/schemas/SpecificationsSlim/properties/id"

# Packaging Material Related Schemas
    ColumnPackagingMaterials:
      type: string
      enum:
        - id
        - code
        - name
        - type
        - manufacturer
        - supplier
        - specifications

    PackagingMaterialsGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: packaging_material
        code:
          type: string
          description: A unique identifier for a Packaging Material.
          example: RND1231
        name:
          type: string
          description: A general name for the Packaging Material
          example: Basic Butylated Methacrylate Copolymer - Ph. Eur
        type:
          type: string
          enum:
            - primary
            - secondary
          example:
            primary
        manufacturer:
          $ref: "#/components/schemas/VendorsSlim"
        supplier:
          $ref: "#/components/schemas/VendorsSlim"
        specifications:
          $ref: "#/components/schemas/SpecificationsSlim"

    PackagingMaterialsSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: packaging_material
        code:
          type: string
          description: This is a unique identifier for Packaging Material.
          example: RND1231
        name:
          type: string
          description: A general name for the Excipient
          example: Basic Butylated Methacrylate Copolymer - Ph. Eur
        type:
          type: string
          enum:
            - primary
            - secondary
          example:
            primary
        manufacturer:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        supplier:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        specifications:
          $ref: "#/components/schemas/SpecificationsSlim/properties/id"

    PackagingMaterialsAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: packaging_material
        code:
          type: string
          description: This is a unique identifier for a Packaging Material.
          example: RND1231
        name:
          type: string
          description: A general name for the Excipient
          example: Basic Butylated Methacrylate Copolymer - Ph. Eur
        type:
          type: string
          enum:
            - primary
            - secondary
          example:
            primary
        manufacturer:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        supplier:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        specifications:
          $ref: "#/components/schemas/SpecificationsSlim/properties/id"

    PackagingMaterialsUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: packaging_material
        code:
          type: string
          description: This is a unique identifier for a Packaging Material.
          example: RND1231
        name:
          type: string
          description: A general name for the Excipient
          example: Basic Butylated Methacrylate Copolymer - Ph. Eur
        type:
          type: string
          enum:
            - primary
            - secondary
          example:
            primary
        manufacturer:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        supplier:
          $ref: "#/components/schemas/VendorsSlim/properties/id"
        specification:
          $ref: "#/components/schemas/SpecificationsSlim/properties/id"

# Process Parameter Related Schemas
    ColumnProcessParameters:
      type: string
      enum:
        - id
        - name
        - description
        - applicable_to

    ProcessParametersGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: process_parameter
        name:
          type: string
          description: A general name for the Process Parameter
          example: Sieve Size
        description:
          type: string
          description: A general description on the Process Parameter
          example: Some description comes here that explains what this is
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/FormulationCategories"

    ProcessParametersSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: process_parameter
        name:
          type: string
          description: A general name for the Process Parameter
          example: Sieve Size
        description:
          type: string
          description: A general description on the Process Parameter
          example: Some description comes here that explains what this is
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/FormulationCategories/properties/id"

    ProcessParametersAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: process_parameter
        name:
          type: string
          description: A general name for the Process Parameter
          example: Sieve Size
        description:
          type: string
          description: A general description on the Process Parameter
          example: Some description comes here that explains what this is
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/FormulationCategories/properties/id"

    ProcessParametersUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: process_parameter
        name:
          type: string
          description: A general name for the Process Parameter
          example: Sieve Size
        description:
          type: string
          description: A general description on the Process Parameter
          example: Some description comes here that explains what this is
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/FormulationCategories/properties/id"

# Manufacturing Stage Related Schemas
    ColumnManufacturingStages:
      type: string
      enum:
        - id
        - name
        - description
        - applicable_to
        - parameter

    ManufacturingStagesGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: manufacturing_stage
        name:
          type: string
          description: A general name for the Manufacturing Stage
          example: Blending & Lubrication
        description:
          type: string
          description: A general description on the Manufacturing Stage
          example: Raw material is lubricated and then blended
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/FormulationCategories"
        parameter:
          $ref: "#/components/schemas/ProcessParametersSlim"

    ManufacturingStagesSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: manufacturing_stage
        name:
          type: string
          description: A general name for the Manufacturing Stage
          example: Blending & Lubrication
        description:
          type: string
          description: A general description on the Manufacturing Stage
          example: Raw material is lubricated and then blended
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/FormulationCategories/properties/id"
        parameter:
          $ref: "#/components/schemas/ProcessParametersSlim/properties/id"

    ManufacturingStagesAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: manufacturing_stage
        name:
          type: string
          description: A general name for the Manufacturing Stage
          example: Blending & Lubrication
        description:
          type: string
          description: A general description on the Manufacturing Stage
          example: Raw material is lubricated and then blended
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/FormulationCategories/properties/id"
        parameter:
          $ref: "#/components/schemas/ProcessParametersSlim/properties/id"

    ManufacturingStagesUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: manufacturing_stage
        name:
          type: string
          description: A general name for the Manufacturing Stage
          example: Blending & Lubrication
        description:
          type: string
          description: A general description on the Manufacturing Stage
          example: Raw material is lubricated and then blended
        applicable_to:
          type: array
          items:
            $ref: "#/components/schemas/FormulationCategories/properties/id"
        parameter:
          $ref: "#/components/schemas/ProcessParametersSlim/properties/id"

# Grade Related Schemas
    ColumnGrades:
      type: string
      enum:
        - id
        - name
        - description

    GradesGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: grade
        name:
          type: string
          description: A general name for the Grade
          example: Grade A
        description:
          type: string
          description: A general description on the Grade
          example: Some description comes here that explains what this is

    GradesSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: grade
        name:
          type: string
          description: A general name for the Grade
          example: Grade A
        description:
          type: string
          description: A general description on the Grade
          example: Some description comes here that explains what this is

    GradesAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: grade
        name:
          type: string
          description: A general name for the Grade
          example: Grade A
        description:
          type: string
          description: A general description on the Grade
          example: Some description comes here that explains what this is

    GradesUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: grade
        name:
          type: string
          description: A general name for the Grade
          example: Grade A
        description:
          type: string
          description: A general description on the Grade
          example: Some description comes here that explains what this is

# Area Related Schemas
    ColumnAreas:
      type: string
      enum:
        - id
        - code
        - name
        - grade

    AreasGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: area
        code:
          type: string
          description: This is a unique identifier for an Area.
          example: AR001
        name:
          type: string
          description: A general name for the Area
          example: Granulation-II
        grade:
          $ref: "#/components/schemas/GradesGet"

    AreasSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: area
        code:
          type: string
          description: This is a unique identifier for an Area.
          example: AR001
        name:
          type: string
          description: A general name for the Area
          example: Granulation-II
        grade:
          $ref: "#/components/schemas/GradesSlim/properties/id"

    AreasAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: area
        code:
          type: string
          description: This is a unique identifier for an Area.
          example: AR001
        name:
          type: string
          description: A general name for the Area
          example: Granulation-II
        grade:
          $ref: "#/components/schemas/GradesSlim/properties/id"

    AreasUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: area
        code:
          type: string
          description: This is a unique identifier for an Area.
          example: AR001
        name:
          type: string
          description: A general name for the Area
          example: Granulation-II
        grade:
          $ref: "#/components/schemas/GradesSlim/properties/id"

# Quantity Related Schemas
    ColumnQuantities:
      type: string
      enum:
        - id
        - category
        - name

    QuantitiesGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: quantity
        name:
          type: string
          description: A general name for the Quantity
          example: mg
        category:
          type: string
          enum:
            - mass
            - volume
            - currency
            - area
            - concentration
            - duration
            - custom

    QuantitiesSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: quantity
        name:
          type: string
          description: A general name for the Quantity
          example: mg
        category:
          type: string
          enum:
            - mass
            - volume
            - currency
            - area
            - concentration
            - custom

    QuantitiesAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: quantity
        name:
          type: string
          description: A general name for the Quantity
          example: mg
        category:
          type: string
          enum:
            - mass
            - volume
            - currency
            - area
            - concentration
            - custom

    QuantitiesUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: quantity
        name:
          type: string
          description: A general name for the Quantity
          example: mg
        category:
          type: string
          enum:
            - mass
            - volume
            - currency
            - area
            - concentration
            - custom

# Equipment Related Schemas
    ColumnEquipments:
      type: string
      enum:
        - id
        - code
        - name
        - make
        - model
        - capacity
        - qualification_frequency_quantity
        - qualification_frequency
        - qualification_status
        - area

    EquipmentsGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: equipment
        code:
          type: string
          description: This is a unique identifier for an Equipment.
          example: CH/CE/T84
        name:
          type: string
          description: A general name for the Equipment
          example: Vibratory Sifter
        make:
          type: string
          example: Tapasya
        model:
          type: string
          example: XT112
        capacity:
          type: string
          example: 500 kg/hour
        qualification_frequency_quantity:
          $ref: "#/components/schemas/QuantitiesGet"
        qualification_frequency:
          type: number
          description: A frequency at which an Equipment is to be re-qualified
          example: 2
        qualification_status:
          type: string
          enum:
            - qualify
            - all_good
            - due
            - qualification_missed
        area:
          $ref: "#/components/schemas/AreasSlim"

    EquipmentsSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: equipment
        code:
          type: string
          description: This is a unique identifier for an Equipment.
          example: CH/CE/T84
        name:
          type: string
          description: A general name for the Equipment
          example: Vibratory Sifter
        make:
          type: string
          example: Tapasya
        model:
          type: string
          example: XT112
        capacity:
          type: string
          example: 500 kg/hour
        qualification_frequency_quantity:
          $ref: "#/components/schemas/QuantitiesSlim/properties/id"
        qualification_frequency:
          type: number
          description: A frequency at which an Equipment is to be re-qualified
          example: 2
        qualification_status:
          type: string
          enum:
            - qualify
            - all_good
            - due
            - qualification_missed
        area:
          $ref: "#/components/schemas/AreasSlim/properties/id"

    EquipmentsAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: equipment
        code:
          type: string
          description: This is a unique identifier for an Equipment.
          example: CH/CE/T84
        name:
          type: string
          description: A general name for the Equipment
          example: Vibratory Sifter
        make:
          type: string
          example: Tapasya
        model:
          type: string
          example: XT112
        capacity:
          type: string
          example: 500 kg/hour
        qualification_frequency_quantity:
          $ref: "#/components/schemas/QuantitiesSlim/properties/id"
        qualification_frequency:
          type: number
          description: A frequency at which an Equipment is to be re-qualified
          example: 2
        qualification_status:
          type: string
          enum:
            - qualify
            - all_good
            - due
            - qualification_missed
        area:
          $ref: "#/components/schemas/AreasSlim/properties/id"

    EquipmentsUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: equipment
        code:
          type: string
          description: This is a unique identifier for an Equipment.
          example: CH/CE/T84
        name:
          type: string
          description: A general name for the Equipment
          example: Vibratory Sifter
        make:
          type: string
          example: Tapasya
        model:
          type: string
          example: XT112
        capacity:
          type: string
          example: 500 kg/hour
        qualification_frequency_quantity:
          $ref: "#/components/schemas/QuantitiesSlim/properties/id"
        qualification_frequency:
          type: number
          description: A frequency at which an Equipment is to be re-qualified
          example: 2
        qualification_status:
          type: string
          enum:
            - qualify
            - all_good
            - due
            - qualification_missed
        area:
          $ref: "#/components/schemas/AreasSlim/properties/id"

# Equipment Group Related Schemas
    ColumnEquipmentGroups:
      type: string
      enum:
        - id
        - code
        - name
        - equipment

    EquipmentGroupsGet:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: equipment_group
        code:
          type: string
          description: A general name for the Equipment Group
          example: VSG-II
        name:
          type: string
          description: A general name for the Equipment Group
          example: Vibratory Sifters
        equipment:
          type: array
          items:
            $ref: "#/components/schemas/EquipmentsSlim"

    EquipmentGroupsSlim:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: equipment_group
        code:
          type: string
          description: A general name for the Equipment Group
          example: VSG-II
        name:
          type: string
          description: A general name for the Equipment Group
          example: Vibratory Sifters
        equipment:
          type: array
          items:
            $ref: "#/components/schemas/EquipmentsSlim/properties/id"

    EquipmentGroupsAdd:
      type: object
      required:
        - facility
      properties:
        facility:
          $ref: '#/components/schemas/Facilities/properties/id'
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object.
        object:
          type: string
          readOnly: true
          example: equipment_group
        code:
          type: string
          description: A general name for the Equipment Group
          example: VSG-II
        name:
          type: string
          description: A general name for the Equipment Group
          example: Vibratory Sifters
        equipment:
          type: array
          items:
            $ref: "#/components/schemas/EquipmentsSlim/properties/id"

    EquipmentGroupsUpdate:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: equipment_group
        code:
          type: string
          description: A general name for the Equipment Group
          example: VSG-II
        name:
          type: string
          description: A general name for the Equipment Group
          example: Vibratory Sifters
        equipment:
          type: array
          items:
            $ref: "#/components/schemas/EquipmentsSlim/properties/id"





# API Related Schemas

    ColumnAPI:
      type: string
      enum:
        - id
        - code
        - name
        - therapeutic_categories
        - pharmacopoeias
        - specifications
    APIGet:
      type: object
      required:
        - code
        - name
      description: Pending...
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: api
        code:
          type: string
          description: Identifier for a API and can’t be same for two APIs. Unique
            within an organization.
          example: APL11XTY
        name:
          type: string
          description: General Name of the API
          example: Febuxostat
        therapeutic_category:
          $ref: "#/components/schemas/TherapeuticCategories"
        pharmacopoeia:
          $ref: "#/components/schemas/Pharmacopoeias"
        specification:
          $ref: "#/components/schemas/SpecificationsGet"
    APISlim:
      type: object
      required:
        - code
        - name
      description: Pending...
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: api
        code:
          type: string
          description: Identifier for a API and can’t be same for two APIs. Unique
            within an organization.
          example: APL11XTY
        name:
          type: string
          description: General Name of the API
          example: Febuxostat
        therapeutic_category:
          $ref: "#/components/schemas/TherapeuticCategories"
        pharmacopoeia:
          $ref: "#/components/schemas/Pharmacopoeias"
        specification:
          $ref: "#/components/schemas/SpecificationsGet"
    APIPut:
      type: object
      required:
        - object
        - code
        - name
        - vendor_types
      description: Pending...
      properties:
        tempId:
          type: string
          format: uuid
          description: Temporary Id for the object. Used during bulk insert.
        id:
          type: string
          format: uuid
          description: Unique identifier of the object.
        object:
          type: string
          readOnly: true
          example: api
        code:
          type: string
          description: Identifier for a API and can’t be same for two APIs. Unique
            within an organization.
          example: APL11XTY
        name:
          type: string
          description: General Name of the API
          example: Febuxostat
        therapeutic_category:
          $ref: '#/components/schemas/TherapeuticCategories/properties/id'
        pharmacopoeia:
          $ref: '#/components/schemas/Pharmacopoeias/properties/id'
        specification:
          $ref: '#/components/schemas/SpecificationsSlim/properties/id'


servers:
  - url: http://localhost:9090/{version}
    description: localhost server
    variables:
      version:
        enum:
          - v1
        default: v1